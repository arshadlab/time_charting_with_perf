<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1382" onload="init(evt)" viewBox="0 0 1200 1382" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1382.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1365" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1365" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (3,225,905 samples, 0.01%)</title><rect x="829.7" y="901" width="0.1" height="15.0" fill="rgb(237,225,50)" rx="2" ry="2" />
<text  x="832.69" y="911.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_331 (16,438,007 samples, 0.06%)</title><rect x="241.8" y="901" width="0.8" height="15.0" fill="rgb(219,175,40)" rx="2" ry="2" />
<text  x="244.83" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,646 samples, 0.01%)</title><rect x="724.0" y="901" width="0.1" height="15.0" fill="rgb(216,214,11)" rx="2" ry="2" />
<text  x="727.02" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetParent (3,128,536 samples, 0.01%)</title><rect x="781.0" y="997" width="0.2" height="15.0" fill="rgb(253,65,14)" rx="2" ry="2" />
<text  x="784.04" y="1007.5" ></text>
</g>
<g >
<title>boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo_ros2_control::GazeboRosControlPrivate&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo_ros2_control::GazeboRosControlPrivate*&gt; &gt; &gt;::operator (89,242,212 samples, 0.35%)</title><rect x="773.6" y="981" width="4.1" height="15.0" fill="rgb(235,181,0)" rx="2" ry="2" />
<text  x="776.55" y="991.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (5,754,403 samples, 0.02%)</title><rect x="60.6" y="1173" width="0.2" height="15.0" fill="rgb(209,114,3)" rx="2" ry="2" />
<text  x="63.58" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,150,199 samples, 0.01%)</title><rect x="13.5" y="1269" width="0.1" height="15.0" fill="rgb(236,179,49)" rx="2" ry="2" />
<text  x="16.45" y="1279.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt;*, geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt;*, std::allocator&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; (6,094,437 samples, 0.02%)</title><rect x="694.4" y="837" width="0.3" height="15.0" fill="rgb(207,2,7)" rx="2" ry="2" />
<text  x="697.43" y="847.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;::count (3,789,332 samples, 0.01%)</title><rect x="843.7" y="1141" width="0.2" height="15.0" fill="rgb(222,191,38)" rx="2" ry="2" />
<text  x="846.72" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (4,495,038 samples, 0.02%)</title><rect x="794.5" y="869" width="0.2" height="15.0" fill="rgb(240,160,30)" rx="2" ry="2" />
<text  x="797.53" y="879.5" ></text>
</g>
<g >
<title>[libgazebo_msgs.so.11.10.1] (2,223,915 samples, 0.01%)</title><rect x="758.1" y="1029" width="0.1" height="15.0" fill="rgb(216,142,4)" rx="2" ry="2" />
<text  x="761.09" y="1039.5" ></text>
</g>
<g >
<title>dxGeom::recomputeAABB (36,546,048 samples, 0.14%)</title><rect x="241.2" y="965" width="1.7" height="15.0" fill="rgb(207,88,5)" rx="2" ry="2" />
<text  x="244.18" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (9,818,000 samples, 0.04%)</title><rect x="801.6" y="901" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="804.59" y="911.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (3,916,316 samples, 0.02%)</title><rect x="606.4" y="773" width="0.2" height="15.0" fill="rgb(228,20,40)" rx="2" ry="2" />
<text  x="609.42" y="783.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::mutable_orientation (16,996,519 samples, 0.07%)</title><rect x="758.2" y="1029" width="0.8" height="15.0" fill="rgb(218,153,47)" rx="2" ry="2" />
<text  x="761.20" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,190,889 samples, 0.01%)</title><rect x="616.9" y="901" width="0.1" height="15.0" fill="rgb(222,77,3)" rx="2" ry="2" />
<text  x="619.85" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::vector (10,481,472 samples, 0.04%)</title><rect x="688.0" y="885" width="0.5" height="15.0" fill="rgb(248,111,54)" rx="2" ry="2" />
<text  x="691.04" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4,094,207 samples, 0.02%)</title><rect x="757.6" y="933" width="0.2" height="15.0" fill="rgb(211,199,10)" rx="2" ry="2" />
<text  x="760.61" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,032,103 samples, 0.02%)</title><rect x="831.1" y="1045" width="0.3" height="15.0" fill="rgb(249,59,39)" rx="2" ry="2" />
<text  x="834.09" y="1055.5" ></text>
</g>
<g >
<title>sCylinderTrimeshColliderData::_InitCylinderTrimeshData (13,668,619 samples, 0.05%)</title><rect x="254.6" y="981" width="0.6" height="15.0" fill="rgb(237,0,21)" rx="2" ry="2" />
<text  x="257.61" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,762,331 samples, 0.01%)</title><rect x="1174.1" y="1141" width="0.2" height="15.0" fill="rgb(222,49,7)" rx="2" ry="2" />
<text  x="1177.14" y="1151.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (3,180,400 samples, 0.01%)</title><rect x="132.5" y="1253" width="0.1" height="15.0" fill="rgb(212,143,3)" rx="2" ry="2" />
<text  x="135.46" y="1263.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo::ServerPrivate*, std::default_delete&lt;gazebo::ServerPrivate&gt; &gt; (2,168,010 samples, 0.01%)</title><rect x="906.8" y="1189" width="0.1" height="15.0" fill="rgb(209,222,1)" rx="2" ry="2" />
<text  x="909.78" y="1199.5" ></text>
</g>
<g >
<title>gazebo::transport::ConnectionManager::RunUpdate (793,522,822 samples, 3.13%)</title><rect x="51.1" y="1205" width="37.0" height="15.0" fill="rgb(220,188,34)" rx="2" ry="2" />
<text  x="54.10" y="1215.5" >gaz..</text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::~Vector3 (3,569,920 samples, 0.01%)</title><rect x="582.6" y="805" width="0.2" height="15.0" fill="rgb(230,141,13)" rx="2" ry="2" />
<text  x="585.63" y="815.5" ></text>
</g>
<g >
<title>_dl_update_slotinfo (4,117,900 samples, 0.02%)</title><rect x="919.8" y="1301" width="0.2" height="15.0" fill="rgb(208,146,7)" rx="2" ry="2" />
<text  x="922.85" y="1311.5" ></text>
</g>
<g >
<title>rcl_publish (4,068,586 samples, 0.02%)</title><rect x="22.5" y="997" width="0.2" height="15.0" fill="rgb(253,219,0)" rx="2" ry="2" />
<text  x="25.55" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (91,182,571 samples, 0.36%)</title><rect x="882.3" y="741" width="4.3" height="15.0" fill="rgb(218,183,23)" rx="2" ry="2" />
<text  x="885.32" y="751.5" ></text>
</g>
<g >
<title>gazebo::common::Time::MSleep (16,821,365 samples, 0.07%)</title><rect x="205.3" y="1077" width="0.8" height="15.0" fill="rgb(250,57,26)" rx="2" ry="2" />
<text  x="208.33" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::_M_erase (7,442,632 samples, 0.03%)</title><rect x="75.8" y="1125" width="0.3" height="15.0" fill="rgb(214,179,10)" rx="2" ry="2" />
<text  x="78.76" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,165,751 samples, 0.02%)</title><rect x="520.9" y="821" width="0.3" height="15.0" fill="rgb(235,189,2)" rx="2" ry="2" />
<text  x="523.90" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,609,313 samples, 0.07%)</title><rect x="462.3" y="869" width="0.9" height="15.0" fill="rgb(235,205,51)" rx="2" ry="2" />
<text  x="465.32" y="879.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::HasConnections (8,366,511 samples, 0.03%)</title><rect x="903.4" y="1221" width="0.4" height="15.0" fill="rgb(242,61,53)" rx="2" ry="2" />
<text  x="906.40" y="1231.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11,011,941 samples, 0.04%)</title><rect x="1183.0" y="1285" width="0.5" height="15.0" fill="rgb(215,81,8)" rx="2" ry="2" />
<text  x="1185.97" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (6,113,139 samples, 0.02%)</title><rect x="595.3" y="773" width="0.3" height="15.0" fill="rgb(213,193,29)" rx="2" ry="2" />
<text  x="598.28" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_realloc_insert&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; const&amp;&gt; (24,483,823 samples, 0.10%)</title><rect x="596.7" y="789" width="1.1" height="15.0" fill="rgb(223,150,38)" rx="2" ry="2" />
<text  x="599.69" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (6,387,070 samples, 0.03%)</title><rect x="827.5" y="1029" width="0.3" height="15.0" fill="rgb(235,53,2)" rx="2" ry="2" />
<text  x="830.52" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,992,783 samples, 0.02%)</title><rect x="707.3" y="853" width="0.3" height="15.0" fill="rgb(224,41,39)" rx="2" ry="2" />
<text  x="710.29" y="863.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (554,651,533 samples, 2.19%)</title><rect x="793.5" y="1221" width="25.8" height="15.0" fill="rgb(205,140,41)" rx="2" ry="2" />
<text  x="796.52" y="1231.5" >s..</text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (30,055,718 samples, 0.12%)</title><rect x="656.5" y="869" width="1.4" height="15.0" fill="rgb(238,117,14)" rx="2" ry="2" />
<text  x="659.54" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo_ros2_control::GazeboSystemPrivate, std::default_delete&lt;gazebo_ros2_control::GazeboSystemPrivate&gt; &gt;::get (6,145,690 samples, 0.02%)</title><rect x="519.2" y="837" width="0.3" height="15.0" fill="rgb(240,105,48)" rx="2" ry="2" />
<text  x="522.22" y="847.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::lock (3,923,638 samples, 0.02%)</title><rect x="721.5" y="853" width="0.2" height="15.0" fill="rgb(230,120,34)" rx="2" ry="2" />
<text  x="724.48" y="863.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (7,634,787 samples, 0.03%)</title><rect x="792.8" y="1013" width="0.3" height="15.0" fill="rgb(247,95,21)" rx="2" ry="2" />
<text  x="795.78" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1045" width="0.4" height="15.0" fill="rgb(205,111,32)" rx="2" ry="2" />
<text  x="1181.27" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (3,381,009 samples, 0.01%)</title><rect x="47.9" y="1189" width="0.1" height="15.0" fill="rgb(222,62,39)" rx="2" ry="2" />
<text  x="50.88" y="1199.5" ></text>
</g>
<g >
<title>dxGeom::computePosr (26,822,136 samples, 0.11%)</title><rect x="241.6" y="933" width="1.3" height="15.0" fill="rgb(225,135,4)" rx="2" ry="2" />
<text  x="244.64" y="943.5" ></text>
</g>
<g >
<title>dMultiplyHelper1_331 (4,063,499 samples, 0.02%)</title><rect x="36.6" y="933" width="0.2" height="15.0" fill="rgb(236,48,31)" rx="2" ry="2" />
<text  x="39.61" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,733,516 samples, 0.05%)</title><rect x="722.4" y="725" width="0.5" height="15.0" fill="rgb(247,148,41)" rx="2" ry="2" />
<text  x="725.35" y="735.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4,345,558 samples, 0.02%)</title><rect x="812.0" y="949" width="0.2" height="15.0" fill="rgb(253,54,25)" rx="2" ry="2" />
<text  x="814.98" y="959.5" ></text>
</g>
<g >
<title>[libgazebo_transport.so.11.10.1] (3,076,936 samples, 0.01%)</title><rect x="48.8" y="1205" width="0.1" height="15.0" fill="rgb(224,56,29)" rx="2" ry="2" />
<text  x="51.76" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,172,459 samples, 0.01%)</title><rect x="690.6" y="773" width="0.1" height="15.0" fill="rgb(206,74,17)" rx="2" ry="2" />
<text  x="693.63" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::internal::CachedSize::Set (4,383,489 samples, 0.02%)</title><rect x="162.9" y="1141" width="0.2" height="15.0" fill="rgb(239,202,45)" rx="2" ry="2" />
<text  x="165.93" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (160,335,832 samples, 0.63%)</title><rect x="699.4" y="853" width="7.4" height="15.0" fill="rgb(241,55,4)" rx="2" ry="2" />
<text  x="702.35" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,363,069 samples, 0.03%)</title><rect x="40.1" y="1029" width="0.3" height="15.0" fill="rgb(228,103,1)" rx="2" ry="2" />
<text  x="43.09" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="917" width="0.2" height="15.0" fill="rgb(229,169,17)" rx="2" ry="2" />
<text  x="823.95" y="927.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo::physics::WorldPrivate*, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt; (3,599,293 samples, 0.01%)</title><rect x="547.9" y="693" width="0.1" height="15.0" fill="rgb(220,84,11)" rx="2" ry="2" />
<text  x="550.85" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo_ros2_control::GazeboSystemPrivate, std::default_delete&lt;gazebo_ros2_control::GazeboSystemPrivate&gt; &gt;::_M_ptr (4,069,602 samples, 0.02%)</title><rect x="519.2" y="821" width="0.2" height="15.0" fill="rgb(222,173,5)" rx="2" ry="2" />
<text  x="522.22" y="831.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::find_waitable_ptrs_if&lt;rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (9,247,408 samples, 0.04%)</title><rect x="198.6" y="1061" width="0.4" height="15.0" fill="rgb(244,152,21)" rx="2" ry="2" />
<text  x="201.58" y="1071.5" ></text>
</g>
<g >
<title>dMultiply0_331 (4,378,770 samples, 0.02%)</title><rect x="440.1" y="949" width="0.2" height="15.0" fill="rgb(243,210,41)" rx="2" ry="2" />
<text  x="443.08" y="959.5" ></text>
</g>
<g >
<title>gazebo::msgs::IMU::CopyFrom (12,506,984 samples, 0.05%)</title><rect x="30.8" y="1125" width="0.6" height="15.0" fill="rgb(226,0,9)" rx="2" ry="2" />
<text  x="33.77" y="1135.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::get (16,853,251 samples, 0.07%)</title><rect x="895.3" y="1205" width="0.7" height="15.0" fill="rgb(225,3,5)" rx="2" ry="2" />
<text  x="898.25" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_client_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_client_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_client_t const&gt; &gt; &gt; &gt;::base (5,007,693 samples, 0.02%)</title><rect x="200.7" y="1029" width="0.2" height="15.0" fill="rgb(221,77,46)" rx="2" ry="2" />
<text  x="203.66" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,363,069 samples, 0.03%)</title><rect x="40.1" y="1093" width="0.3" height="15.0" fill="rgb(219,76,19)" rx="2" ry="2" />
<text  x="43.09" y="1103.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5,626,484 samples, 0.02%)</title><rect x="677.7" y="837" width="0.3" height="15.0" fill="rgb(223,139,25)" rx="2" ry="2" />
<text  x="680.75" y="847.5" ></text>
</g>
<g >
<title>validate_msg_decoding (4,323,999 samples, 0.02%)</title><rect x="1183.7" y="1285" width="0.2" height="15.0" fill="rgb(205,210,43)" rx="2" ry="2" />
<text  x="1186.70" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,575,197 samples, 0.01%)</title><rect x="776.5" y="917" width="0.2" height="15.0" fill="rgb(209,55,21)" rx="2" ry="2" />
<text  x="779.54" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,421,589 samples, 0.10%)</title><rect x="56.3" y="245" width="1.2" height="15.0" fill="rgb(224,24,4)" rx="2" ry="2" />
<text  x="59.27" y="255.5" ></text>
</g>
<g >
<title>rmw_publish (9,568,051 samples, 0.04%)</title><rect x="140.4" y="1269" width="0.4" height="15.0" fill="rgb(251,108,30)" rx="2" ry="2" />
<text  x="143.40" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (100,330,797 samples, 0.40%)</title><rect x="881.9" y="773" width="4.7" height="15.0" fill="rgb(217,24,43)" rx="2" ry="2" />
<text  x="884.90" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,221,319 samples, 0.04%)</title><rect x="842.1" y="1109" width="0.4" height="15.0" fill="rgb(206,184,49)" rx="2" ry="2" />
<text  x="845.05" y="1119.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_erase (2,379,565 samples, 0.01%)</title><rect x="769.5" y="997" width="0.1" height="15.0" fill="rgb(231,157,50)" rx="2" ry="2" />
<text  x="772.50" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::max_size (4,027,667 samples, 0.02%)</title><rect x="693.1" y="853" width="0.2" height="15.0" fill="rgb(213,220,35)" rx="2" ry="2" />
<text  x="696.12" y="863.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::unique_lock (12,835,543 samples, 0.05%)</title><rect x="899.6" y="1173" width="0.6" height="15.0" fill="rgb(212,211,5)" rx="2" ry="2" />
<text  x="902.57" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,515,845 samples, 0.02%)</title><rect x="73.8" y="869" width="0.2" height="15.0" fill="rgb(237,95,13)" rx="2" ry="2" />
<text  x="76.78" y="879.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;sensor_msgs::msg::JointState_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::publish (58,107,531 samples, 0.23%)</title><rect x="851.6" y="1141" width="2.7" height="15.0" fill="rgb(226,19,48)" rx="2" ry="2" />
<text  x="854.56" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (2,240,107 samples, 0.01%)</title><rect x="521.8" y="853" width="0.1" height="15.0" fill="rgb(228,182,22)" rx="2" ry="2" />
<text  x="524.76" y="863.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMaybeMessage&lt;gazebo::msgs::Vector3d&gt; (4,310,267 samples, 0.02%)</title><rect x="753.2" y="885" width="0.2" height="15.0" fill="rgb(239,157,21)" rx="2" ry="2" />
<text  x="756.23" y="895.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_133 (5,976,866 samples, 0.02%)</title><rect x="243.3" y="885" width="0.2" height="15.0" fill="rgb(205,203,37)" rx="2" ry="2" />
<text  x="246.27" y="895.5" ></text>
</g>
<g >
<title>[libgazebo.so.11.10.1] (2,279,568 samples, 0.01%)</title><rect x="204.2" y="1061" width="0.1" height="15.0" fill="rgb(228,220,23)" rx="2" ry="2" />
<text  x="207.20" y="1071.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::SetWorldPose (3,128,536 samples, 0.01%)</title><rect x="781.0" y="1045" width="0.2" height="15.0" fill="rgb(252,217,47)" rx="2" ry="2" />
<text  x="784.04" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (114,071,725 samples, 0.45%)</title><rect x="881.6" y="853" width="5.4" height="15.0" fill="rgb(206,118,42)" rx="2" ry="2" />
<text  x="884.64" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (34,784,725 samples, 0.14%)</title><rect x="1187.7" y="1045" width="1.6" height="15.0" fill="rgb(240,102,28)" rx="2" ry="2" />
<text  x="1190.67" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (7,825,559 samples, 0.03%)</title><rect x="643.2" y="901" width="0.3" height="15.0" fill="rgb(208,139,54)" rx="2" ry="2" />
<text  x="646.17" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEHingeJoint::GetVelocity (5,748,522 samples, 0.02%)</title><rect x="472.1" y="853" width="0.3" height="15.0" fill="rgb(243,213,26)" rx="2" ry="2" />
<text  x="475.12" y="863.5" ></text>
</g>
<g >
<title>gazebo::Master::RunOnce (24,110,490 samples, 0.10%)</title><rect x="204.2" y="1077" width="1.1" height="15.0" fill="rgb(217,107,50)" rx="2" ry="2" />
<text  x="207.20" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (57,608,920 samples, 0.23%)</title><rect x="15.3" y="1045" width="2.6" height="15.0" fill="rgb(239,133,8)" rx="2" ry="2" />
<text  x="18.26" y="1055.5" ></text>
</g>
<g >
<title>gazebo::msgs::Time::Clear (2,159,705 samples, 0.01%)</title><rect x="771.6" y="1029" width="0.1" height="15.0" fill="rgb(215,158,44)" rx="2" ry="2" />
<text  x="774.64" y="1039.5" ></text>
</g>
<g >
<title>gazebo::common::Time::Time (4,373,417 samples, 0.02%)</title><rect x="893.7" y="1221" width="0.2" height="15.0" fill="rgb(208,25,20)" rx="2" ry="2" />
<text  x="896.66" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (35,975,354 samples, 0.14%)</title><rect x="1170.1" y="1157" width="1.7" height="15.0" fill="rgb(230,12,38)" rx="2" ry="2" />
<text  x="1173.13" y="1167.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::Add&lt;google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::TypeHandler&gt; (6,964,964 samples, 0.03%)</title><rect x="754.8" y="1013" width="0.3" height="15.0" fill="rgb(208,54,43)" rx="2" ry="2" />
<text  x="757.77" y="1023.5" ></text>
</g>
<g >
<title>boost::pthread::pthread_mutex_scoped_lock::~pthread_mutex_scoped_lock (4,838,386 samples, 0.02%)</title><rect x="765.5" y="981" width="0.3" height="15.0" fill="rgb(252,124,1)" rx="2" ry="2" />
<text  x="768.53" y="991.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator- (8,969,198 samples, 0.04%)</title><rect x="43.0" y="1125" width="0.4" height="15.0" fill="rgb(232,43,8)" rx="2" ry="2" />
<text  x="45.97" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,847,722 samples, 0.03%)</title><rect x="931.5" y="1253" width="0.4" height="15.0" fill="rgb(207,130,44)" rx="2" ry="2" />
<text  x="934.53" y="1263.5" ></text>
</g>
<g >
<title>dCalcVectorCross3 (2,199,122 samples, 0.01%)</title><rect x="249.2" y="933" width="0.1" height="15.0" fill="rgb(246,143,12)" rx="2" ry="2" />
<text  x="252.18" y="943.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (5,355,806 samples, 0.02%)</title><rect x="142.5" y="1253" width="0.2" height="15.0" fill="rgb(221,23,3)" rx="2" ry="2" />
<text  x="145.48" y="1263.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::recursive_mutex&gt;::lock_guard (3,952,588 samples, 0.02%)</title><rect x="220.5" y="997" width="0.2" height="15.0" fill="rgb(210,217,25)" rx="2" ry="2" />
<text  x="223.48" y="1007.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::PublishData (99,786,972 samples, 0.39%)</title><rect x="719.2" y="917" width="4.6" height="15.0" fill="rgb(206,43,4)" rx="2" ry="2" />
<text  x="722.18" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (62,938,586 samples, 0.25%)</title><rect x="454.8" y="965" width="2.9" height="15.0" fill="rgb(224,75,16)" rx="2" ry="2" />
<text  x="457.76" y="975.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::unique_lock (8,425,146 samples, 0.03%)</title><rect x="563.6" y="821" width="0.4" height="15.0" fill="rgb(241,103,30)" rx="2" ry="2" />
<text  x="566.64" y="831.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (4,063,499 samples, 0.02%)</title><rect x="36.6" y="901" width="0.2" height="15.0" fill="rgb(235,67,51)" rx="2" ry="2" />
<text  x="39.61" y="911.5" ></text>
</g>
<g >
<title>boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Publisher*&gt;, boost::arg&lt;1&gt; &gt;::operator (13,929,078 samples, 0.05%)</title><rect x="13.7" y="821" width="0.7" height="15.0" fill="rgb(213,112,36)" rx="2" ry="2" />
<text  x="16.71" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,149,834 samples, 0.01%)</title><rect x="481.0" y="789" width="0.1" height="15.0" fill="rgb(251,28,29)" rx="2" ry="2" />
<text  x="483.98" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,816,086 samples, 0.02%)</title><rect x="43.4" y="1013" width="0.3" height="15.0" fill="rgb(211,61,15)" rx="2" ry="2" />
<text  x="46.39" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,305,251 samples, 0.01%)</title><rect x="126.3" y="1173" width="0.1" height="15.0" fill="rgb(206,96,46)" rx="2" ry="2" />
<text  x="129.28" y="1183.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*&gt; (4,212,343 samples, 0.02%)</title><rect x="593.4" y="725" width="0.2" height="15.0" fill="rgb(238,223,11)" rx="2" ry="2" />
<text  x="596.40" y="735.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;*&gt; (16,365,091 samples, 0.06%)</title><rect x="678.0" y="869" width="0.8" height="15.0" fill="rgb(245,103,50)" rx="2" ry="2" />
<text  x="681.01" y="879.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::HasType (2,152,514 samples, 0.01%)</title><rect x="219.0" y="1013" width="0.1" height="15.0" fill="rgb(209,192,45)" rx="2" ry="2" />
<text  x="221.97" y="1023.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;void  (14,513,037 samples, 0.06%)</title><rect x="621.8" y="981" width="0.7" height="15.0" fill="rgb(243,146,39)" rx="2" ry="2" />
<text  x="624.83" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator= (8,517,870 samples, 0.03%)</title><rect x="828.0" y="1125" width="0.4" height="15.0" fill="rgb(233,65,44)" rx="2" ry="2" />
<text  x="830.99" y="1135.5" ></text>
</g>
<g >
<title>getHingeAngle (9,919,562 samples, 0.04%)</title><rect x="579.3" y="757" width="0.4" height="15.0" fill="rgb(225,175,14)" rx="2" ry="2" />
<text  x="582.29" y="767.5" ></text>
</g>
<g >
<title>[libgazebo_ros_factory.so] (5,874,904 samples, 0.02%)</title><rect x="662.3" y="853" width="0.3" height="15.0" fill="rgb(228,42,35)" rx="2" ry="2" />
<text  x="665.33" y="863.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::SubscriptionBase&gt;::shared_ptr (4,775,011 samples, 0.02%)</title><rect x="791.8" y="933" width="0.2" height="15.0" fill="rgb(247,37,20)" rx="2" ry="2" />
<text  x="794.78" y="943.5" ></text>
</g>
<g >
<title>dInternalHandleAutoDisabling (11,996,634 samples, 0.05%)</title><rect x="450.7" y="981" width="0.5" height="15.0" fill="rgb(241,33,29)" rx="2" ry="2" />
<text  x="453.65" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt; &gt;::base (6,115,032 samples, 0.02%)</title><rect x="650.2" y="901" width="0.3" height="15.0" fill="rgb(237,124,28)" rx="2" ry="2" />
<text  x="653.19" y="911.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, gazebo::common::UpdateInfo const&amp;, false&gt;::_M_head (5,879,819 samples, 0.02%)</title><rect x="625.5" y="885" width="0.3" height="15.0" fill="rgb(232,194,54)" rx="2" ry="2" />
<text  x="628.55" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt;::construct&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt; const&amp;&gt; (2,251,837 samples, 0.01%)</title><rect x="597.0" y="757" width="0.1" height="15.0" fill="rgb(211,70,46)" rx="2" ry="2" />
<text  x="599.96" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,440,838 samples, 0.02%)</title><rect x="510.9" y="837" width="0.3" height="15.0" fill="rgb(219,143,4)" rx="2" ry="2" />
<text  x="513.91" y="847.5" ></text>
</g>
<g >
<title>__dynamic_cast (3,767,954 samples, 0.01%)</title><rect x="145.1" y="1285" width="0.1" height="15.0" fill="rgb(250,180,43)" rx="2" ry="2" />
<text  x="148.05" y="1295.5" ></text>
</g>
<g >
<title>boost::unordered::unordered_set&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt;::insert (4,234,238 samples, 0.02%)</title><rect x="722.9" y="853" width="0.2" height="15.0" fill="rgb(238,216,46)" rx="2" ry="2" />
<text  x="725.94" y="863.5" ></text>
</g>
<g >
<title>sdf::v9::Param::Get&lt;unsigned int&gt; (19,426,309 samples, 0.08%)</title><rect x="44.8" y="1061" width="0.9" height="15.0" fill="rgb(209,169,28)" rx="2" ry="2" />
<text  x="47.75" y="1071.5" ></text>
</g>
<g >
<title>std::variant&lt;bool, char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, unsigned long, unsigned int, double, float, sdf::v9::Time, ignition::math::v6::Angle, ignition::math::v6::Color, ignition::math::v6::Vector2&lt;int&gt;, ignition::math::v6::Vector2&lt;double&gt;, ignition::math::v6::Vector3&lt;double&gt;, ignition::math::v6::Quaternion&lt;double&gt;, ignition::math::v6::Pose3&lt;double&gt; &gt;::index (3,903,482 samples, 0.02%)</title><rect x="29.8" y="1029" width="0.2" height="15.0" fill="rgb(245,199,21)" rx="2" ry="2" />
<text  x="32.81" y="1039.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (29,549,893 samples, 0.12%)</title><rect x="135.5" y="1269" width="1.3" height="15.0" fill="rgb(240,148,34)" rx="2" ry="2" />
<text  x="138.47" y="1279.5" ></text>
</g>
<g >
<title>rcl_service_get_rmw_handle (6,130,779 samples, 0.02%)</title><rect x="807.1" y="1029" width="0.3" height="15.0" fill="rgb(225,198,5)" rx="2" ry="2" />
<text  x="810.06" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,957,656 samples, 0.05%)</title><rect x="185.7" y="997" width="0.6" height="15.0" fill="rgb(220,50,33)" rx="2" ry="2" />
<text  x="188.65" y="1007.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::CoordPositionAdd (4,333,304 samples, 0.02%)</title><rect x="526.6" y="789" width="0.2" height="15.0" fill="rgb(210,161,21)" rx="2" ry="2" />
<text  x="529.57" y="799.5" ></text>
</g>
<g >
<title>gazebo_msgs::msg::LinkStates_&lt;std::allocator&lt;void&gt; &gt;::~LinkStates_ (14,454,657 samples, 0.06%)</title><rect x="688.5" y="901" width="0.7" height="15.0" fill="rgb(222,64,13)" rx="2" ry="2" />
<text  x="691.53" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,838,386 samples, 0.02%)</title><rect x="765.5" y="837" width="0.3" height="15.0" fill="rgb(212,123,54)" rx="2" ry="2" />
<text  x="768.53" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::vector (29,199,164 samples, 0.12%)</title><rect x="654.1" y="885" width="1.4" height="15.0" fill="rgb(227,105,42)" rx="2" ry="2" />
<text  x="657.10" y="895.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_executable (41,718,802 samples, 0.16%)</title><rect x="791.2" y="1045" width="1.9" height="15.0" fill="rgb(232,120,11)" rx="2" ry="2" />
<text  x="794.19" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,865,199 samples, 0.01%)</title><rect x="32.8" y="965" width="0.2" height="15.0" fill="rgb(249,155,13)" rx="2" ry="2" />
<text  x="35.84" y="975.5" ></text>
</g>
<g >
<title>joint_trajectory_controller::JointTrajectoryController::resize_joint_trajectory_point (30,437,232 samples, 0.12%)</title><rect x="506.1" y="885" width="1.4" height="15.0" fill="rgb(216,136,0)" rx="2" ry="2" />
<text  x="509.09" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,500,806 samples, 0.10%)</title><rect x="707.8" y="885" width="1.1" height="15.0" fill="rgb(215,198,35)" rx="2" ry="2" />
<text  x="710.76" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::InertialPrivate, std::default_delete&lt;gazebo::physics::InertialPrivate&gt; &gt;::_M_ptr (3,830,992 samples, 0.02%)</title><rect x="555.5" y="693" width="0.2" height="15.0" fill="rgb(213,6,53)" rx="2" ry="2" />
<text  x="558.48" y="703.5" ></text>
</g>
<g >
<title>gazebo::physics::World::_AddDirty (41,022,172 samples, 0.16%)</title><rect x="444.1" y="917" width="1.9" height="15.0" fill="rgb(246,205,43)" rx="2" ry="2" />
<text  x="447.09" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,762,010 samples, 0.02%)</title><rect x="72.1" y="1061" width="0.2" height="15.0" fill="rgb(230,25,31)" rx="2" ry="2" />
<text  x="75.06" y="1071.5" ></text>
</g>
<g >
<title>gazebo::physics::Model::GetLink (19,825,985 samples, 0.08%)</title><rect x="686.8" y="885" width="1.0" height="15.0" fill="rgb(254,90,51)" rx="2" ry="2" />
<text  x="689.84" y="895.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (4,009,638 samples, 0.02%)</title><rect x="481.4" y="981" width="0.1" height="15.0" fill="rgb(247,47,52)" rx="2" ry="2" />
<text  x="484.36" y="991.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt;::operator[] (7,107,550 samples, 0.03%)</title><rect x="773.7" y="885" width="0.3" height="15.0" fill="rgb(205,188,30)" rx="2" ry="2" />
<text  x="776.65" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,762,010 samples, 0.02%)</title><rect x="72.1" y="997" width="0.2" height="15.0" fill="rgb(245,199,32)" rx="2" ry="2" />
<text  x="75.06" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_S_key (7,661,437 samples, 0.03%)</title><rect x="545.4" y="709" width="0.3" height="15.0" fill="rgb(212,167,53)" rx="2" ry="2" />
<text  x="548.39" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,245,627 samples, 0.02%)</title><rect x="615.6" y="885" width="0.3" height="15.0" fill="rgb(254,207,4)" rx="2" ry="2" />
<text  x="618.62" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,157,037 samples, 0.01%)</title><rect x="746.1" y="1029" width="0.1" height="15.0" fill="rgb(211,172,8)" rx="2" ry="2" />
<text  x="749.09" y="1039.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Inertial&gt;::get (3,848,886 samples, 0.02%)</title><rect x="443.0" y="901" width="0.1" height="15.0" fill="rgb(223,145,49)" rx="2" ry="2" />
<text  x="445.96" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,210,290 samples, 0.01%)</title><rect x="855.7" y="1061" width="0.1" height="15.0" fill="rgb(228,145,48)" rx="2" ry="2" />
<text  x="858.73" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,243,763 samples, 0.02%)</title><rect x="666.7" y="757" width="0.2" height="15.0" fill="rgb(239,60,21)" rx="2" ry="2" />
<text  x="669.74" y="767.5" ></text>
</g>
<g >
<title>SingletonT&lt;gazebo::sensors::SensorManager&gt;::Instance (3,738,853 samples, 0.01%)</title><rect x="890.4" y="1253" width="0.2" height="15.0" fill="rgb(206,25,34)" rx="2" ry="2" />
<text  x="893.38" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,067,856 samples, 0.02%)</title><rect x="578.4" y="533" width="0.1" height="15.0" fill="rgb(233,92,28)" rx="2" ry="2" />
<text  x="581.35" y="543.5" ></text>
</g>
<g >
<title>gazebo::common::Time::operator+ (4,096,869 samples, 0.02%)</title><rect x="745.7" y="1077" width="0.2" height="15.0" fill="rgb(250,69,5)" rx="2" ry="2" />
<text  x="748.72" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,928,290 samples, 0.01%)</title><rect x="1185.4" y="1237" width="0.1" height="15.0" fill="rgb(234,171,50)" rx="2" ry="2" />
<text  x="1188.38" y="1247.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (5,687,656 samples, 0.02%)</title><rect x="512.9" y="805" width="0.2" height="15.0" fill="rgb(237,4,22)" rx="2" ry="2" />
<text  x="515.88" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,151,257 samples, 0.01%)</title><rect x="864.0" y="1029" width="0.1" height="15.0" fill="rgb(226,20,24)" rx="2" ry="2" />
<text  x="866.98" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,457,632 samples, 0.10%)</title><rect x="210.3" y="997" width="1.1" height="15.0" fill="rgb(233,11,47)" rx="2" ry="2" />
<text  x="213.29" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (167,223,291 samples, 0.66%)</title><rect x="570.8" y="709" width="7.7" height="15.0" fill="rgb(246,155,16)" rx="2" ry="2" />
<text  x="573.76" y="719.5" ></text>
</g>
<g >
<title>drm_crtc_handle_vblank (2,205,749 samples, 0.01%)</title><rect x="1155.0" y="981" width="0.1" height="15.0" fill="rgb(244,134,5)" rx="2" ry="2" />
<text  x="1157.99" y="991.5" ></text>
</g>
<g >
<title>dCalcVectorDot3_41 (4,063,499 samples, 0.02%)</title><rect x="36.6" y="917" width="0.2" height="15.0" fill="rgb(205,82,31)" rx="2" ry="2" />
<text  x="39.61" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::max_size (4,383,489 samples, 0.02%)</title><rect x="85.6" y="1061" width="0.2" height="15.0" fill="rgb(254,175,11)" rx="2" ry="2" />
<text  x="88.64" y="1071.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::empty (3,962,572 samples, 0.02%)</title><rect x="76.1" y="1157" width="0.2" height="15.0" fill="rgb(231,195,16)" rx="2" ry="2" />
<text  x="79.10" y="1167.5" ></text>
</g>
<g >
<title>boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::sensors::SensorManager::SensorContainer*&gt; &gt;::operator (657,730,845 samples, 2.60%)</title><rect x="17.9" y="1253" width="30.7" height="15.0" fill="rgb(231,100,7)" rx="2" ry="2" />
<text  x="20.95" y="1263.5" >bo..</text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (3,932,805 samples, 0.02%)</title><rect x="596.4" y="693" width="0.2" height="15.0" fill="rgb(247,167,5)" rx="2" ry="2" />
<text  x="599.42" y="703.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEMultiRayShape::UpdateCallback (44,600,969 samples, 0.18%)</title><rect x="36.1" y="997" width="2.0" height="15.0" fill="rgb(220,179,22)" rx="2" ry="2" />
<text  x="39.05" y="1007.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;std_msgs::msg::Bool_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::do_inter_process_publish (2,213,530 samples, 0.01%)</title><rect x="666.9" y="885" width="0.1" height="15.0" fill="rgb(215,83,28)" rx="2" ry="2" />
<text  x="669.93" y="895.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op_base&lt;boost::asio::const_buffers_1&gt;::do_perform (92,542,284 samples, 0.37%)</title><rect x="54.7" y="949" width="4.3" height="15.0" fill="rgb(241,112,53)" rx="2" ry="2" />
<text  x="57.65" y="959.5" ></text>
</g>
<g >
<title>std::get_if&lt;unsigned int, bool, char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, unsigned long, unsigned int, double, float, sdf::v9::Time, ignition::math::v6::Angle, ignition::math::v6::Color, ignition::math::v6::Vector2&lt;int&gt;, ignition::math::v6::Vector2&lt;double&gt;, ignition::math::v6::Vector3&lt;double&gt;, ignition::math::v6::Quaternion&lt;double&gt;, ignition::math::v6::Pose3&lt;double&gt; &gt; (9,043,456 samples, 0.04%)</title><rect x="44.8" y="1045" width="0.4" height="15.0" fill="rgb(252,127,31)" rx="2" ry="2" />
<text  x="47.75" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,635,319 samples, 0.12%)</title><rect x="740.1" y="901" width="1.4" height="15.0" fill="rgb(230,5,29)" rx="2" ry="2" />
<text  x="743.07" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,646 samples, 0.01%)</title><rect x="724.0" y="757" width="0.1" height="15.0" fill="rgb(206,184,3)" rx="2" ry="2" />
<text  x="727.02" y="767.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_subscription_t const,  (5,003,063 samples, 0.02%)</title><rect x="804.5" y="1013" width="0.2" height="15.0" fill="rgb(253,12,33)" rx="2" ry="2" />
<text  x="807.51" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19,502,067 samples, 0.08%)</title><rect x="853.4" y="1013" width="0.9" height="15.0" fill="rgb(222,122,53)" rx="2" ry="2" />
<text  x="856.36" y="1023.5" ></text>
</g>
<g >
<title>sCylinderTrimeshColliderData::TestOneTriangleVsCylinder (25,291,757 samples, 0.10%)</title><rect x="253.4" y="965" width="1.2" height="15.0" fill="rgb(219,93,5)" rx="2" ry="2" />
<text  x="256.43" y="975.5" ></text>
</g>
<g >
<title>__atan2 (2,159,062 samples, 0.01%)</title><rect x="579.3" y="741" width="0.1" height="15.0" fill="rgb(210,40,52)" rx="2" ry="2" />
<text  x="582.29" y="751.5" ></text>
</g>
<g >
<title>gazebo::physics::ODELink::WorldLinearVel (35,167,110 samples, 0.14%)</title><rect x="683.3" y="885" width="1.7" height="15.0" fill="rgb(235,12,6)" rx="2" ry="2" />
<text  x="686.32" y="895.5" ></text>
</g>
<g >
<title>gazebo::msgs::Quaternion::ByteSizeLong (4,383,489 samples, 0.02%)</title><rect x="162.9" y="1173" width="0.2" height="15.0" fill="rgb(252,128,28)" rx="2" ry="2" />
<text  x="165.93" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt; &gt; &gt;::end (2,164,431 samples, 0.01%)</title><rect x="559.1" y="757" width="0.1" height="15.0" fill="rgb(229,149,3)" rx="2" ry="2" />
<text  x="562.08" y="767.5" ></text>
</g>
<g >
<title>ode::quickstep::PGS_LCP (3,523,819,039 samples, 13.91%)</title><rect x="274.9" y="965" width="164.1" height="15.0" fill="rgb(221,136,19)" rx="2" ry="2" />
<text  x="277.90" y="975.5" >ode::quickstep::PGS_LCP</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (3,840,601 samples, 0.02%)</title><rect x="687.8" y="869" width="0.1" height="15.0" fill="rgb(220,72,36)" rx="2" ry="2" />
<text  x="690.76" y="879.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (6,101,434 samples, 0.02%)</title><rect x="815.7" y="997" width="0.3" height="15.0" fill="rgb(212,175,47)" rx="2" ry="2" />
<text  x="818.70" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,597,363 samples, 0.01%)</title><rect x="86.1" y="1109" width="0.2" height="15.0" fill="rgb(234,164,52)" rx="2" ry="2" />
<text  x="89.09" y="1119.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (9,247,408 samples, 0.04%)</title><rect x="198.6" y="981" width="0.4" height="15.0" fill="rgb(221,51,36)" rx="2" ry="2" />
<text  x="201.58" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (81,162,592 samples, 0.32%)</title><rect x="1185.5" y="1173" width="3.8" height="15.0" fill="rgb(235,116,3)" rx="2" ry="2" />
<text  x="1188.51" y="1183.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (7,963,559 samples, 0.03%)</title><rect x="522.1" y="821" width="0.4" height="15.0" fill="rgb(253,18,7)" rx="2" ry="2" />
<text  x="525.13" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (41,959,832 samples, 0.17%)</title><rect x="1169.8" y="1189" width="2.0" height="15.0" fill="rgb(217,106,16)" rx="2" ry="2" />
<text  x="1172.85" y="1199.5" ></text>
</g>
<g >
<title>[[uprobes]] (4,050,759 samples, 0.02%)</title><rect x="679.5" y="885" width="0.2" height="15.0" fill="rgb(230,181,6)" rx="2" ry="2" />
<text  x="682.50" y="895.5" ></text>
</g>
<g >
<title>dxGeom::recomputeAABB (24,008,001 samples, 0.09%)</title><rect x="243.0" y="949" width="1.1" height="15.0" fill="rgb(241,215,46)" rx="2" ry="2" />
<text  x="245.98" y="959.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (4,904,998 samples, 0.02%)</title><rect x="75.9" y="1061" width="0.2" height="15.0" fill="rgb(218,201,27)" rx="2" ry="2" />
<text  x="78.87" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,213,530 samples, 0.01%)</title><rect x="666.9" y="853" width="0.1" height="15.0" fill="rgb(242,42,16)" rx="2" ry="2" />
<text  x="669.93" y="863.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::Publish&lt;gazebo::msgs::Contacts&gt; (83,832,527 samples, 0.33%)</title><rect x="213.2" y="1029" width="3.9" height="15.0" fill="rgb(234,54,36)" rx="2" ry="2" />
<text  x="216.22" y="1039.5" ></text>
</g>
<g >
<title>[[uprobes]] (9,316,648 samples, 0.04%)</title><rect x="22.4" y="1013" width="0.5" height="15.0" fill="rgb(220,70,14)" rx="2" ry="2" />
<text  x="25.42" y="1023.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::GetParentJointsLinks (17,787,656 samples, 0.07%)</title><rect x="592.0" y="773" width="0.8" height="15.0" fill="rgb(223,39,40)" rx="2" ry="2" />
<text  x="595.00" y="783.5" ></text>
</g>
<g >
<title>gazebo::msgs::Diagnostics::set_has_real_time (2,154,523 samples, 0.01%)</title><rect x="724.1" y="901" width="0.1" height="15.0" fill="rgb(241,44,15)" rx="2" ry="2" />
<text  x="727.12" y="911.5" ></text>
</g>
<g >
<title>[libgazebo_sensors.so.11.10.1] (5,919,794 samples, 0.02%)</title><rect x="897.3" y="1237" width="0.3" height="15.0" fill="rgb(232,24,43)" rx="2" ry="2" />
<text  x="900.28" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,596,349 samples, 0.01%)</title><rect x="220.3" y="853" width="0.2" height="15.0" fill="rgb(241,222,24)" rx="2" ry="2" />
<text  x="223.31" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (81,413,008 samples, 0.32%)</title><rect x="882.8" y="645" width="3.8" height="15.0" fill="rgb(223,170,2)" rx="2" ry="2" />
<text  x="885.78" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,865,199 samples, 0.01%)</title><rect x="32.8" y="1093" width="0.2" height="15.0" fill="rgb(236,224,38)" rx="2" ry="2" />
<text  x="35.84" y="1103.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (6,194,974 samples, 0.02%)</title><rect x="543.1" y="741" width="0.3" height="15.0" fill="rgb(229,1,26)" rx="2" ry="2" />
<text  x="546.12" y="751.5" ></text>
</g>
<g >
<title>boost::enable_shared_from_this&lt;gazebo::physics::Base&gt;::shared_from_this (4,283,058 samples, 0.02%)</title><rect x="223.7" y="981" width="0.2" height="15.0" fill="rgb(253,4,7)" rx="2" ry="2" />
<text  x="226.68" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,987,034 samples, 0.02%)</title><rect x="1182.7" y="949" width="0.3" height="15.0" fill="rgb(231,216,0)" rx="2" ry="2" />
<text  x="1185.69" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,697,692 samples, 0.04%)</title><rect x="853.8" y="949" width="0.5" height="15.0" fill="rgb(241,100,4)" rx="2" ry="2" />
<text  x="856.77" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="901" width="0.1" height="15.0" fill="rgb(218,141,27)" rx="2" ry="2" />
<text  x="839.31" y="911.5" ></text>
</g>
<g >
<title>_int_free (54,436,091 samples, 0.21%)</title><rect x="154.3" y="1285" width="2.5" height="15.0" fill="rgb(243,227,38)" rx="2" ry="2" />
<text  x="157.30" y="1295.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (3,923,638 samples, 0.02%)</title><rect x="721.5" y="837" width="0.2" height="15.0" fill="rgb(222,112,2)" rx="2" ry="2" />
<text  x="724.48" y="847.5" ></text>
</g>
<g >
<title>gazebo_ros::Convert&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt; (16,610,518 samples, 0.07%)</title><rect x="689.7" y="901" width="0.7" height="15.0" fill="rgb(208,36,27)" rx="2" ry="2" />
<text  x="692.66" y="911.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::CoordRotationSub (16,776,340 samples, 0.07%)</title><rect x="762.2" y="1013" width="0.7" height="15.0" fill="rgb(245,90,32)" rx="2" ry="2" />
<text  x="765.16" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,421,589 samples, 0.10%)</title><rect x="56.3" y="277" width="1.2" height="15.0" fill="rgb(213,107,46)" rx="2" ry="2" />
<text  x="59.27" y="287.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (554,651,533 samples, 2.19%)</title><rect x="793.5" y="1157" width="25.8" height="15.0" fill="rgb(252,144,10)" rx="2" ry="2" />
<text  x="796.52" y="1167.5" >s..</text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_S_relocate (6,237,325 samples, 0.02%)</title><rect x="597.4" y="773" width="0.3" height="15.0" fill="rgb(235,116,29)" rx="2" ry="2" />
<text  x="600.37" y="783.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (2,173,576 samples, 0.01%)</title><rect x="226.0" y="933" width="0.1" height="15.0" fill="rgb(240,54,54)" rx="2" ry="2" />
<text  x="229.01" y="943.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMaybeMessage&lt;gazebo::msgs::Quaternion&gt; (8,185,638 samples, 0.03%)</title><rect x="758.6" y="997" width="0.4" height="15.0" fill="rgb(229,114,18)" rx="2" ry="2" />
<text  x="761.61" y="1007.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (22,498,650 samples, 0.09%)</title><rect x="549.2" y="725" width="1.0" height="15.0" fill="rgb(215,210,7)" rx="2" ry="2" />
<text  x="552.16" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,305,251 samples, 0.01%)</title><rect x="126.3" y="1189" width="0.1" height="15.0" fill="rgb(226,68,35)" rx="2" ry="2" />
<text  x="129.28" y="1199.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::begin (2,519,689 samples, 0.01%)</title><rect x="82.1" y="1141" width="0.1" height="15.0" fill="rgb(218,52,16)" rx="2" ry="2" />
<text  x="85.10" y="1151.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*&gt; (4,212,343 samples, 0.02%)</title><rect x="593.4" y="741" width="0.2" height="15.0" fill="rgb(237,166,54)" rx="2" ry="2" />
<text  x="596.40" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (68,041,388 samples, 0.27%)</title><rect x="914.6" y="1141" width="3.1" height="15.0" fill="rgb(253,198,2)" rx="2" ry="2" />
<text  x="917.56" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,032,103 samples, 0.02%)</title><rect x="831.1" y="1061" width="0.3" height="15.0" fill="rgb(212,73,25)" rx="2" ry="2" />
<text  x="834.09" y="1071.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::CreateMaybeMessage&lt;gazebo::msgs::Vector3d&gt; (5,302,558 samples, 0.02%)</title><rect x="26.9" y="1109" width="0.3" height="15.0" fill="rgb(252,109,22)" rx="2" ry="2" />
<text  x="29.94" y="1119.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (8,867,101 samples, 0.03%)</title><rect x="137.2" y="1253" width="0.4" height="15.0" fill="rgb(216,61,37)" rx="2" ry="2" />
<text  x="140.18" y="1263.5" ></text>
</g>
<g >
<title>gazebo_ros::GazeboRosStatePrivate::OnUpdate (21,921,171 samples, 0.09%)</title><rect x="779.1" y="917" width="1.0" height="15.0" fill="rgb(221,136,34)" rx="2" ry="2" />
<text  x="782.11" y="927.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator int (34,048,161 samples, 0.13%)</title><rect x="861.9" y="1157" width="1.6" height="15.0" fill="rgb(254,13,15)" rx="2" ry="2" />
<text  x="864.89" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,205,483 samples, 0.10%)</title><rect x="16.8" y="901" width="1.1" height="15.0" fill="rgb(239,70,54)" rx="2" ry="2" />
<text  x="19.77" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::FindAllConnectedLinksHelper (7,733,449 samples, 0.03%)</title><rect x="775.3" y="757" width="0.3" height="15.0" fill="rgb(228,181,24)" rx="2" ry="2" />
<text  x="778.26" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,291,598 samples, 0.04%)</title><rect x="789.1" y="997" width="0.5" height="15.0" fill="rgb(236,16,8)" rx="2" ry="2" />
<text  x="792.09" y="1007.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::allocator (2,410,805 samples, 0.01%)</title><rect x="778.5" y="885" width="0.2" height="15.0" fill="rgb(253,101,7)" rx="2" ry="2" />
<text  x="781.55" y="895.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (12,067,708 samples, 0.05%)</title><rect x="12.9" y="1285" width="0.6" height="15.0" fill="rgb(235,54,28)" rx="2" ry="2" />
<text  x="15.89" y="1295.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3,821,084 samples, 0.02%)</title><rect x="500.4" y="821" width="0.2" height="15.0" fill="rgb(205,203,38)" rx="2" ry="2" />
<text  x="503.41" y="831.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::~Vector3 (2,307,024 samples, 0.01%)</title><rect x="606.8" y="789" width="0.1" height="15.0" fill="rgb(224,118,48)" rx="2" ry="2" />
<text  x="609.78" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,354,767 samples, 0.12%)</title><rect x="1187.9" y="1029" width="1.4" height="15.0" fill="rgb(215,134,4)" rx="2" ry="2" />
<text  x="1190.92" y="1039.5" ></text>
</g>
<g >
<title>std::_Mu&lt;gazebo::physics::Link*, false, false&gt;::operator (2,652,862 samples, 0.01%)</title><rect x="780.5" y="965" width="0.2" height="15.0" fill="rgb(232,212,1)" rx="2" ry="2" />
<text  x="783.55" y="975.5" ></text>
</g>
<g >
<title>boost::strict_get&lt;std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::PointCloud_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::PointCloud2_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::Range_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt; &gt; (3,946,163 samples, 0.02%)</title><rect x="73.3" y="1029" width="0.1" height="15.0" fill="rgb(244,187,19)" rx="2" ry="2" />
<text  x="76.27" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (71,546,800 samples, 0.28%)</title><rect x="734.3" y="933" width="3.3" height="15.0" fill="rgb(244,209,50)" rx="2" ry="2" />
<text  x="737.27" y="943.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (20,830,968 samples, 0.08%)</title><rect x="13.6" y="1093" width="0.9" height="15.0" fill="rgb(220,156,54)" rx="2" ry="2" />
<text  x="16.55" y="1103.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::node_interfaces::NodeBaseInterface&gt;::~shared_ptr (6,172,642 samples, 0.02%)</title><rect x="818.7" y="1077" width="0.3" height="15.0" fill="rgb(251,54,29)" rx="2" ry="2" />
<text  x="821.72" y="1087.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rcl_subscription_t const&gt;::shared_ptr (5,003,063 samples, 0.02%)</title><rect x="804.5" y="1029" width="0.2" height="15.0" fill="rgb(206,81,6)" rx="2" ry="2" />
<text  x="807.51" y="1039.5" ></text>
</g>
<g >
<title>main (387,936,503 samples, 1.53%)</title><rect x="889.5" y="1285" width="18.1" height="15.0" fill="rgb(211,51,8)" rx="2" ry="2" />
<text  x="892.49" y="1295.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,101,875 samples, 0.03%)</title><rect x="195.4" y="1029" width="0.4" height="15.0" fill="rgb(239,160,0)" rx="2" ry="2" />
<text  x="198.43" y="1039.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, gazebo::physics::LinkPrivate*, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::_M_head (4,103,928 samples, 0.02%)</title><rect x="587.5" y="645" width="0.2" height="15.0" fill="rgb(216,164,42)" rx="2" ry="2" />
<text  x="590.48" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="965" width="0.1" height="15.0" fill="rgb(222,88,40)" rx="2" ry="2" />
<text  x="848.06" y="975.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::WorldCoGPose (6,139,236 samples, 0.02%)</title><rect x="527.6" y="821" width="0.3" height="15.0" fill="rgb(215,172,28)" rx="2" ry="2" />
<text  x="530.60" y="831.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::SetWorldPose (7,788,287 samples, 0.03%)</title><rect x="777.3" y="805" width="0.4" height="15.0" fill="rgb(214,84,44)" rx="2" ry="2" />
<text  x="780.35" y="815.5" ></text>
</g>
<g >
<title>dxSimpleSpace::collide2 (7,986,629 samples, 0.03%)</title><rect x="238.9" y="869" width="0.3" height="15.0" fill="rgb(226,207,2)" rx="2" ry="2" />
<text  x="241.85" y="879.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEMultiRayShape::UpdateCallback (22,258,059 samples, 0.09%)</title><rect x="37.1" y="917" width="1.0" height="15.0" fill="rgb(211,109,5)" rx="2" ry="2" />
<text  x="40.10" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,362,860 samples, 0.04%)</title><rect x="614.5" y="901" width="0.4" height="15.0" fill="rgb(244,194,12)" rx="2" ry="2" />
<text  x="617.45" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetChild (13,892,277 samples, 0.05%)</title><rect x="681.5" y="901" width="0.7" height="15.0" fill="rgb(218,164,44)" rx="2" ry="2" />
<text  x="684.55" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::ODESliderJoint::SetVelocity (17,634,942 samples, 0.07%)</title><rect x="717.7" y="901" width="0.8" height="15.0" fill="rgb(250,51,51)" rx="2" ry="2" />
<text  x="720.66" y="911.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (3,134,847 samples, 0.01%)</title><rect x="81.2" y="1061" width="0.2" height="15.0" fill="rgb(214,102,21)" rx="2" ry="2" />
<text  x="84.24" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,894,582 samples, 0.07%)</title><rect x="538.2" y="757" width="0.9" height="15.0" fill="rgb(236,207,24)" rx="2" ry="2" />
<text  x="541.24" y="767.5" ></text>
</g>
<g >
<title>ode::quickstep::sum6 (39,984,537 samples, 0.16%)</title><rect x="784.9" y="933" width="1.8" height="15.0" fill="rgb(239,50,24)" rx="2" ry="2" />
<text  x="787.86" y="943.5" ></text>
</g>
<g >
<title>gazebo::physics::World::RealTime (15,969,913 samples, 0.06%)</title><rect x="742.3" y="1045" width="0.7" height="15.0" fill="rgb(209,180,40)" rx="2" ry="2" />
<text  x="745.29" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_Vector_base (7,368,669 samples, 0.03%)</title><rect x="824.5" y="1109" width="0.3" height="15.0" fill="rgb(217,111,2)" rx="2" ry="2" />
<text  x="827.48" y="1119.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, 0ul&gt; (5,472,598 samples, 0.02%)</title><rect x="80.1" y="997" width="0.3" height="15.0" fill="rgb(221,178,34)" rx="2" ry="2" />
<text  x="83.13" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::get (8,385,512 samples, 0.03%)</title><rect x="723.4" y="885" width="0.4" height="15.0" fill="rgb(219,143,14)" rx="2" ry="2" />
<text  x="726.44" y="895.5" ></text>
</g>
<g >
<title>__gthread_recursive_mutex_lock (4,288,700 samples, 0.02%)</title><rect x="544.3" y="725" width="0.2" height="15.0" fill="rgb(220,119,25)" rx="2" ry="2" />
<text  x="547.25" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (41,197,619 samples, 0.16%)</title><rect x="667.9" y="901" width="1.9" height="15.0" fill="rgb(233,85,31)" rx="2" ry="2" />
<text  x="670.88" y="911.5" ></text>
</g>
<g >
<title>ipt_do_table (6,396,115 samples, 0.03%)</title><rect x="887.1" y="1061" width="0.3" height="15.0" fill="rgb(212,138,32)" rx="2" ry="2" />
<text  x="890.14" y="1071.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (3,727,724 samples, 0.01%)</title><rect x="833.0" y="1141" width="0.2" height="15.0" fill="rgb(233,77,43)" rx="2" ry="2" />
<text  x="836.00" y="1151.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (82,914,669 samples, 0.33%)</title><rect x="789.7" y="1253" width="3.8" height="15.0" fill="rgb(215,66,18)" rx="2" ry="2" />
<text  x="792.65" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,829,890 samples, 0.02%)</title><rect x="854.8" y="1013" width="0.2" height="15.0" fill="rgb(238,105,28)" rx="2" ry="2" />
<text  x="857.78" y="1023.5" ></text>
</g>
<g >
<title>joint_trajectory_controller::Trajectory::sample (115,346,679 samples, 0.46%)</title><rect x="508.0" y="885" width="5.3" height="15.0" fill="rgb(225,215,41)" rx="2" ry="2" />
<text  x="510.96" y="895.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (24,340,621 samples, 0.10%)</title><rect x="59.1" y="1141" width="1.2" height="15.0" fill="rgb(234,181,37)" rx="2" ry="2" />
<text  x="62.14" y="1151.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (2,439,912 samples, 0.01%)</title><rect x="553.8" y="677" width="0.1" height="15.0" fill="rgb(211,17,32)" rx="2" ry="2" />
<text  x="556.79" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,446 samples, 0.01%)</title><rect x="681.0" y="805" width="0.1" height="15.0" fill="rgb(205,203,48)" rx="2" ry="2" />
<text  x="683.97" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (355,396,914 samples, 1.40%)</title><rect x="872.7" y="1189" width="16.5" height="15.0" fill="rgb(252,39,39)" rx="2" ry="2" />
<text  x="875.69" y="1199.5" ></text>
</g>
<g >
<title>__sqrt (4,119,444 samples, 0.02%)</title><rect x="427.3" y="949" width="0.2" height="15.0" fill="rgb(240,45,12)" rx="2" ry="2" />
<text  x="430.28" y="959.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::RotateVector (23,642,075 samples, 0.09%)</title><rect x="446.0" y="917" width="1.1" height="15.0" fill="rgb(213,8,34)" rx="2" ry="2" />
<text  x="449.00" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,243,735 samples, 0.01%)</title><rect x="266.8" y="917" width="0.1" height="15.0" fill="rgb(214,221,8)" rx="2" ry="2" />
<text  x="269.79" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,227,017 samples, 0.02%)</title><rect x="478.2" y="629" width="0.2" height="15.0" fill="rgb(245,202,5)" rx="2" ry="2" />
<text  x="481.16" y="639.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_service (12,564,770 samples, 0.05%)</title><rect x="794.2" y="1061" width="0.5" height="15.0" fill="rgb(246,27,23)" rx="2" ry="2" />
<text  x="797.16" y="1071.5" ></text>
</g>
<g >
<title>boost::get&lt;std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::PointCloud_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::PointCloud2_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::Range_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt; &gt; (3,946,163 samples, 0.02%)</title><rect x="73.3" y="1045" width="0.1" height="15.0" fill="rgb(227,127,30)" rx="2" ry="2" />
<text  x="76.27" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true, true&gt;::_Node_iterator (6,123,090 samples, 0.02%)</title><rect x="670.1" y="885" width="0.3" height="15.0" fill="rgb(223,143,36)" rx="2" ry="2" />
<text  x="673.07" y="895.5" ></text>
</g>
<g >
<title>dxJointContact::getInfo2 (30,135,538 samples, 0.12%)</title><rect x="269.2" y="965" width="1.4" height="15.0" fill="rgb(222,30,4)" rx="2" ry="2" />
<text  x="272.24" y="975.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::_Placeholder&lt;1&gt;&gt; (6,196,319 samples, 0.02%)</title><rect x="626.2" y="949" width="0.3" height="15.0" fill="rgb(218,200,26)" rx="2" ry="2" />
<text  x="629.23" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,573,524 samples, 0.01%)</title><rect x="214.6" y="693" width="0.1" height="15.0" fill="rgb(207,121,28)" rx="2" ry="2" />
<text  x="217.61" y="703.5" ></text>
</g>
<g >
<title>controller_manager::ControllerSpec::~ControllerSpec (5,959,533 samples, 0.02%)</title><rect x="523.0" y="901" width="0.2" height="15.0" fill="rgb(228,136,10)" rx="2" ry="2" />
<text  x="525.96" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::MoveFrame (249,188,893 samples, 0.98%)</title><rect x="598.0" y="821" width="11.6" height="15.0" fill="rgb(232,38,4)" rx="2" ry="2" />
<text  x="601.01" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,838,386 samples, 0.02%)</title><rect x="765.5" y="853" width="0.3" height="15.0" fill="rgb(245,131,24)" rx="2" ry="2" />
<text  x="768.53" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; const&amp;&gt; (18,629,383 samples, 0.07%)</title><rect x="692.9" y="885" width="0.9" height="15.0" fill="rgb(218,117,20)" rx="2" ry="2" />
<text  x="695.92" y="895.5" ></text>
</g>
<g >
<title>std::_List_node&lt;gazebo::physics::Entity*&gt;::_M_valptr (3,937,436 samples, 0.02%)</title><rect x="744.1" y="1029" width="0.2" height="15.0" fill="rgb(217,153,31)" rx="2" ry="2" />
<text  x="747.08" y="1039.5" ></text>
</g>
<g >
<title>[libgazebo_transport.so.11.10.1] (2,605,039 samples, 0.01%)</title><rect x="79.3" y="1125" width="0.1" height="15.0" fill="rgb(244,94,27)" rx="2" ry="2" />
<text  x="82.33" y="1135.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt; &gt;::~shared_ptr (7,017,392 samples, 0.03%)</title><rect x="790.9" y="805" width="0.3" height="15.0" fill="rgb(248,167,53)" rx="2" ry="2" />
<text  x="793.86" y="815.5" ></text>
</g>
<g >
<title>std::forward&lt;void  (4,660,333 samples, 0.02%)</title><rect x="32.5" y="1077" width="0.2" height="15.0" fill="rgb(232,146,48)" rx="2" ry="2" />
<text  x="35.47" y="1087.5" ></text>
</g>
<g >
<title>dMultiply0_333 (10,881,805 samples, 0.04%)</title><rect x="267.0" y="965" width="0.5" height="15.0" fill="rgb(246,61,23)" rx="2" ry="2" />
<text  x="269.99" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="1013" width="0.1" height="15.0" fill="rgb(239,152,34)" rx="2" ry="2" />
<text  x="848.06" y="1023.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (2,595,338 samples, 0.01%)</title><rect x="848.1" y="1093" width="0.1" height="15.0" fill="rgb(244,94,18)" rx="2" ry="2" />
<text  x="851.11" y="1103.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; const*, std::vector&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt;, control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;*&gt; (44,668,268 samples, 0.18%)</title><rect x="825.7" y="1077" width="2.1" height="15.0" fill="rgb(232,196,18)" rx="2" ry="2" />
<text  x="828.74" y="1087.5" ></text>
</g>
<g >
<title>gazebo_ros::Convert&lt;geometry_msgs::msg::Quaternion_&lt;std::allocator&lt;void&gt; &gt; &gt; (4,080,894 samples, 0.02%)</title><rect x="690.0" y="885" width="0.1" height="15.0" fill="rgb(234,99,54)" rx="2" ry="2" />
<text  x="692.96" y="895.5" ></text>
</g>
<g >
<title>gazebo::physics::World::Update (10,291,598 samples, 0.04%)</title><rect x="789.1" y="1077" width="0.5" height="15.0" fill="rgb(220,220,10)" rx="2" ry="2" />
<text  x="792.09" y="1087.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (46,932,256 samples, 0.19%)</title><rect x="1175.0" y="1301" width="2.2" height="15.0" fill="rgb(250,207,47)" rx="2" ry="2" />
<text  x="1178.01" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,329,161 samples, 0.02%)</title><rect x="462.8" y="805" width="0.3" height="15.0" fill="rgb(206,51,24)" rx="2" ry="2" />
<text  x="465.79" y="815.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::front (3,644,236 samples, 0.01%)</title><rect x="87.9" y="1189" width="0.2" height="15.0" fill="rgb(246,116,36)" rx="2" ry="2" />
<text  x="90.89" y="1199.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (11,975,983 samples, 0.05%)</title><rect x="657.4" y="853" width="0.5" height="15.0" fill="rgb(227,115,32)" rx="2" ry="2" />
<text  x="660.39" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,225,905 samples, 0.01%)</title><rect x="829.7" y="1093" width="0.1" height="15.0" fill="rgb(209,63,33)" rx="2" ry="2" />
<text  x="832.69" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (39,915,891 samples, 0.16%)</title><rect x="739.6" y="933" width="1.9" height="15.0" fill="rgb(232,160,22)" rx="2" ry="2" />
<text  x="742.60" y="943.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rclcpp::executors::MultiThreadedExecutor*, std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt;, std::allocator&lt;std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::hash&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (8,176,813 samples, 0.03%)</title><rect x="793.1" y="997" width="0.4" height="15.0" fill="rgb(222,43,39)" rx="2" ry="2" />
<text  x="796.13" y="1007.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator= (2,188,137 samples, 0.01%)</title><rect x="665.0" y="901" width="0.1" height="15.0" fill="rgb(252,125,8)" rx="2" ry="2" />
<text  x="668.04" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (92,542,284 samples, 0.37%)</title><rect x="54.7" y="869" width="4.3" height="15.0" fill="rgb(241,126,46)" rx="2" ry="2" />
<text  x="57.65" y="879.5" ></text>
</g>
<g >
<title>std::operator!= (5,587,673 samples, 0.02%)</title><rect x="802.7" y="1013" width="0.3" height="15.0" fill="rgb(254,131,8)" rx="2" ry="2" />
<text  x="805.70" y="1023.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (6,921,260 samples, 0.03%)</title><rect x="560.1" y="725" width="0.3" height="15.0" fill="rgb(243,56,51)" rx="2" ry="2" />
<text  x="563.10" y="735.5" ></text>
</g>
<g >
<title>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::sensors::ImuSensor, boost::shared_ptr&lt;gazebo::msgs::LinkData const&gt; const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::sensors::ImuSensor*&gt;, boost::arg&lt;1&gt; &gt; &gt;, void, boost::shared_ptr&lt;gazebo::msgs::LinkData const&gt; const&amp;&gt;::invoke (29,322,656 samples, 0.12%)</title><rect x="74.2" y="1125" width="1.4" height="15.0" fill="rgb(229,153,16)" rx="2" ry="2" />
<text  x="77.22" y="1135.5" ></text>
</g>
<g >
<title>[libgazebo_common.so.11.10.1] (4,195,428 samples, 0.02%)</title><rect x="514.7" y="821" width="0.2" height="15.0" fill="rgb(241,74,12)" rx="2" ry="2" />
<text  x="517.69" y="831.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::do_inter_process_publish (6,789,330 samples, 0.03%)</title><rect x="841.3" y="1141" width="0.3" height="15.0" fill="rgb(215,112,30)" rx="2" ry="2" />
<text  x="844.33" y="1151.5" ></text>
</g>
<g >
<title>gazebo::msgs::LaserScan::add_intensities (6,888,175 samples, 0.03%)</title><rect x="34.4" y="1157" width="0.3" height="15.0" fill="rgb(248,161,32)" rx="2" ry="2" />
<text  x="37.38" y="1167.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator== (10,366,652 samples, 0.04%)</title><rect x="261.2" y="997" width="0.5" height="15.0" fill="rgb(235,124,21)" rx="2" ry="2" />
<text  x="264.18" y="1007.5" ></text>
</g>
<g >
<title>boost::_mfi::mf0&lt;void, gazebo::transport::ConnectionManager&gt;::operator (858,181,318 samples, 3.39%)</title><rect x="48.6" y="1237" width="39.9" height="15.0" fill="rgb(234,138,24)" rx="2" ry="2" />
<text  x="51.58" y="1247.5" >boo..</text>
</g>
<g >
<title>boost::shared_ptr&lt;google::protobuf::Message&gt;::operator= (24,252,778 samples, 0.10%)</title><rect x="765.8" y="997" width="1.1" height="15.0" fill="rgb(227,93,0)" rx="2" ry="2" />
<text  x="768.76" y="1007.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (3,931,963 samples, 0.02%)</title><rect x="219.2" y="965" width="0.1" height="15.0" fill="rgb(220,71,2)" rx="2" ry="2" />
<text  x="222.16" y="975.5" ></text>
</g>
<g >
<title>[libgazebo_rendering.so.11.10.1] (8,380,776 samples, 0.03%)</title><rect x="30.0" y="1061" width="0.4" height="15.0" fill="rgb(223,43,32)" rx="2" ry="2" />
<text  x="33.00" y="1071.5" ></text>
</g>
<g >
<title>boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::transport::ConnectionManager*&gt; &gt;::operator (858,181,318 samples, 3.39%)</title><rect x="48.6" y="1253" width="39.9" height="15.0" fill="rgb(223,225,2)" rx="2" ry="2" />
<text  x="51.58" y="1263.5" >boo..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (164,385,321 samples, 0.65%)</title><rect x="699.2" y="885" width="7.6" height="15.0" fill="rgb(209,139,54)" rx="2" ry="2" />
<text  x="702.17" y="895.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (2,154,982 samples, 0.01%)</title><rect x="620.4" y="885" width="0.1" height="15.0" fill="rgb(232,107,38)" rx="2" ry="2" />
<text  x="623.39" y="895.5" ></text>
</g>
<g >
<title>gazebo::msgs::Contacts::CopyFrom (3,789,347 samples, 0.01%)</title><rect x="214.0" y="997" width="0.2" height="15.0" fill="rgb(240,190,41)" rx="2" ry="2" />
<text  x="216.99" y="1007.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::swap (4,115,023 samples, 0.02%)</title><rect x="219.5" y="981" width="0.2" height="15.0" fill="rgb(239,39,9)" rx="2" ry="2" />
<text  x="222.54" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,388,879 samples, 0.06%)</title><rect x="379.6" y="773" width="0.7" height="15.0" fill="rgb(237,51,23)" rx="2" ry="2" />
<text  x="382.61" y="783.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::PosesStamped (43,628,361 samples, 0.17%)</title><rect x="752.4" y="1045" width="2.1" height="15.0" fill="rgb(240,76,52)" rx="2" ry="2" />
<text  x="755.45" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,421,589 samples, 0.10%)</title><rect x="56.3" y="293" width="1.2" height="15.0" fill="rgb(254,214,41)" rx="2" ry="2" />
<text  x="59.27" y="303.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::unique_lock (4,009,638 samples, 0.02%)</title><rect x="481.4" y="1013" width="0.1" height="15.0" fill="rgb(240,195,15)" rx="2" ry="2" />
<text  x="484.36" y="1023.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::shared_ptr&lt;realtime_tools::RealtimeServerGoalHandle&lt;control_msgs::action::FollowJointTrajectory&gt; &gt; &gt; (9,779,170 samples, 0.04%)</title><rect x="187.8" y="1013" width="0.5" height="15.0" fill="rgb(247,54,34)" rx="2" ry="2" />
<text  x="190.81" y="1023.5" ></text>
</g>
<g >
<title>rclcpp::TimeSource::clock_cb (18,349,954 samples, 0.07%)</title><rect x="798.0" y="853" width="0.9" height="15.0" fill="rgb(229,124,6)" rx="2" ry="2" />
<text  x="801.00" y="863.5" ></text>
</g>
<g >
<title>gazebo::common::Time::~Time (5,175,536 samples, 0.02%)</title><rect x="907.2" y="1269" width="0.3" height="15.0" fill="rgb(214,10,4)" rx="2" ry="2" />
<text  x="910.22" y="1279.5" ></text>
</g>
<g >
<title>rclcpp::executors::MultiThreadedExecutor::run (82,914,669 samples, 0.33%)</title><rect x="789.7" y="1061" width="3.8" height="15.0" fill="rgb(244,32,49)" rx="2" ry="2" />
<text  x="792.65" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;unsigned int&gt; &gt;::allocate (2,340,679 samples, 0.01%)</title><rect x="83.6" y="1077" width="0.1" height="15.0" fill="rgb(251,24,39)" rx="2" ry="2" />
<text  x="86.61" y="1087.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;rclcpp::ServiceBase&gt;::lock (14,626,038 samples, 0.06%)</title><rect x="810.3" y="997" width="0.7" height="15.0" fill="rgb(238,91,16)" rx="2" ry="2" />
<text  x="813.32" y="1007.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom&lt;google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::TypeHandler&gt; (41,457,249 samples, 0.16%)</title><rect x="752.5" y="997" width="2.0" height="15.0" fill="rgb(253,43,40)" rx="2" ry="2" />
<text  x="755.55" y="1007.5" ></text>
</g>
<g >
<title>gazebo::transport::Connection::IsOpen (38,509,388 samples, 0.15%)</title><rect x="52.5" y="1189" width="1.8" height="15.0" fill="rgb(240,52,42)" rx="2" ry="2" />
<text  x="55.49" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,623,992 samples, 0.01%)</title><rect x="615.5" y="821" width="0.1" height="15.0" fill="rgb(229,26,28)" rx="2" ry="2" />
<text  x="618.46" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt;::push_back (6,217,256 samples, 0.02%)</title><rect x="811.7" y="981" width="0.3" height="15.0" fill="rgb(209,16,22)" rx="2" ry="2" />
<text  x="814.69" y="991.5" ></text>
</g>
<g >
<title>std::function&lt;void  (154,657,197 samples, 0.61%)</title><rect x="773.5" y="1013" width="7.2" height="15.0" fill="rgb(230,152,36)" rx="2" ry="2" />
<text  x="776.47" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,434,575 samples, 0.02%)</title><rect x="54.0" y="1109" width="0.3" height="15.0" fill="rgb(251,130,12)" rx="2" ry="2" />
<text  x="57.03" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (207,648,136 samples, 0.82%)</title><rect x="166.0" y="1221" width="9.7" height="15.0" fill="rgb(240,131,21)" rx="2" ry="2" />
<text  x="169.04" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (54,890,148 samples, 0.22%)</title><rect x="475.8" y="917" width="2.6" height="15.0" fill="rgb(213,174,17)" rx="2" ry="2" />
<text  x="478.80" y="927.5" ></text>
</g>
<g >
<title>sTrimeshBoxColliderData::SetupInitialContext (4,293,531 samples, 0.02%)</title><rect x="248.2" y="981" width="0.2" height="15.0" fill="rgb(230,10,12)" rx="2" ry="2" />
<text  x="251.16" y="991.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::CoordPositionAdd (3,274,399 samples, 0.01%)</title><rect x="32.7" y="1141" width="0.1" height="15.0" fill="rgb(218,64,48)" rx="2" ry="2" />
<text  x="35.68" y="1151.5" ></text>
</g>
<g >
<title>boost::asio::async_result&lt;gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (100,583,021 samples, 0.40%)</title><rect x="54.3" y="1141" width="4.7" height="15.0" fill="rgb(229,164,15)" rx="2" ry="2" />
<text  x="57.28" y="1151.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (82,914,669 samples, 0.33%)</title><rect x="789.7" y="1173" width="3.8" height="15.0" fill="rgb(215,76,36)" rx="2" ry="2" />
<text  x="792.65" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,210,290 samples, 0.01%)</title><rect x="855.7" y="1045" width="0.1" height="15.0" fill="rgb(229,66,16)" rx="2" ry="2" />
<text  x="858.73" y="1055.5" ></text>
</g>
<g >
<title>__tls_get_addr (2,251,443 samples, 0.01%)</title><rect x="918.8" y="1301" width="0.1" height="15.0" fill="rgb(217,148,18)" rx="2" ry="2" />
<text  x="921.84" y="1311.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt; &gt; &gt; (12,649,606 samples, 0.05%)</title><rect x="805.3" y="997" width="0.6" height="15.0" fill="rgb(232,219,51)" rx="2" ry="2" />
<text  x="808.32" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7,227,653 samples, 0.03%)</title><rect x="827.2" y="933" width="0.3" height="15.0" fill="rgb(206,140,54)" rx="2" ry="2" />
<text  x="830.18" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,770,981 samples, 0.01%)</title><rect x="493.5" y="869" width="0.2" height="15.0" fill="rgb(215,143,27)" rx="2" ry="2" />
<text  x="496.50" y="879.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Axis (7,895,190 samples, 0.03%)</title><rect x="581.4" y="773" width="0.4" height="15.0" fill="rgb(248,162,42)" rx="2" ry="2" />
<text  x="584.41" y="783.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4,775,011 samples, 0.02%)</title><rect x="791.8" y="901" width="0.2" height="15.0" fill="rgb(219,190,41)" rx="2" ry="2" />
<text  x="794.78" y="911.5" ></text>
</g>
<g >
<title>boost::detail::thread_data&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo::transport::ConnectionManager&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::transport::ConnectionManager*&gt; &gt; &gt; &gt;::run (858,181,318 samples, 3.39%)</title><rect x="48.6" y="1285" width="39.9" height="15.0" fill="rgb(221,99,40)" rx="2" ry="2" />
<text  x="51.58" y="1295.5" >boo..</text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_Alloc_node::operator (3,789,885 samples, 0.01%)</title><rect x="224.5" y="933" width="0.2" height="15.0" fill="rgb(211,195,52)" rx="2" ry="2" />
<text  x="227.48" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="885" width="0.1" height="15.0" fill="rgb(214,170,23)" rx="2" ry="2" />
<text  x="839.31" y="895.5" ></text>
</g>
<g >
<title>Opcode::RayCollider::_SegmentStab (31,056,180 samples, 0.12%)</title><rect x="120.0" y="1253" width="1.4" height="15.0" fill="rgb(206,130,8)" rx="2" ry="2" />
<text  x="122.99" y="1263.5" ></text>
</g>
<g >
<title>ignition::math::v6::Angle::Angle (4,309,553 samples, 0.02%)</title><rect x="724.4" y="917" width="0.2" height="15.0" fill="rgb(210,7,37)" rx="2" ry="2" />
<text  x="727.41" y="927.5" ></text>
</g>
<g >
<title>nf_conntrack_in (21,522,794 samples, 0.08%)</title><rect x="887.9" y="1045" width="1.0" height="15.0" fill="rgb(212,42,33)" rx="2" ry="2" />
<text  x="890.93" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (2,517,758 samples, 0.01%)</title><rect x="828.6" y="1029" width="0.1" height="15.0" fill="rgb(219,205,48)" rx="2" ry="2" />
<text  x="831.63" y="1039.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, gazebo::physics::WorldPrivate*, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::_M_head (2,185,099 samples, 0.01%)</title><rect x="561.6" y="709" width="0.1" height="15.0" fill="rgb(236,166,33)" rx="2" ry="2" />
<text  x="564.59" y="719.5" ></text>
</g>
<g >
<title>[libgazebo_ros_joint_state_publisher.so] (2,198,021 samples, 0.01%)</title><rect x="489.9" y="997" width="0.1" height="15.0" fill="rgb(208,150,31)" rx="2" ry="2" />
<text  x="492.91" y="1007.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Vector3 (4,242,033 samples, 0.02%)</title><rect x="609.1" y="773" width="0.2" height="15.0" fill="rgb(223,59,7)" rx="2" ry="2" />
<text  x="612.14" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,152,963 samples, 0.06%)</title><rect x="116.7" y="1221" width="0.7" height="15.0" fill="rgb(217,181,34)" rx="2" ry="2" />
<text  x="119.71" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,754,759 samples, 0.02%)</title><rect x="73.4" y="997" width="0.3" height="15.0" fill="rgb(213,84,24)" rx="2" ry="2" />
<text  x="76.45" y="1007.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (3,763,080 samples, 0.01%)</title><rect x="560.2" y="709" width="0.2" height="15.0" fill="rgb(241,50,9)" rx="2" ry="2" />
<text  x="563.24" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,762,331 samples, 0.01%)</title><rect x="1174.1" y="1237" width="0.2" height="15.0" fill="rgb(227,217,39)" rx="2" ry="2" />
<text  x="1177.14" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_insert_&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const&amp;, std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_Alloc_node&gt; (3,789,885 samples, 0.01%)</title><rect x="224.5" y="949" width="0.2" height="15.0" fill="rgb(224,228,42)" rx="2" ry="2" />
<text  x="227.48" y="959.5" ></text>
</g>
<g >
<title>gazebo::common::Time::operator- (2,207,781 samples, 0.01%)</title><rect x="482.2" y="997" width="0.1" height="15.0" fill="rgb(213,226,51)" rx="2" ry="2" />
<text  x="485.19" y="1007.5" ></text>
</g>
<g >
<title>sCylinderBoxData::_cldInitCylinderBox (3,806,770 samples, 0.02%)</title><rect x="251.5" y="965" width="0.2" height="15.0" fill="rgb(222,5,10)" rx="2" ry="2" />
<text  x="254.52" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3,381,009 samples, 0.01%)</title><rect x="20.0" y="1141" width="0.1" height="15.0" fill="rgb(208,47,15)" rx="2" ry="2" />
<text  x="22.96" y="1151.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (18,349,954 samples, 0.07%)</title><rect x="798.0" y="901" width="0.9" height="15.0" fill="rgb(221,192,15)" rx="2" ry="2" />
<text  x="801.00" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (57,608,920 samples, 0.23%)</title><rect x="15.3" y="1077" width="2.6" height="15.0" fill="rgb(242,206,22)" rx="2" ry="2" />
<text  x="18.26" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (155,690,442 samples, 0.61%)</title><rect x="168.5" y="1093" width="7.2" height="15.0" fill="rgb(233,68,20)" rx="2" ry="2" />
<text  x="171.46" y="1103.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (6,623,057 samples, 0.03%)</title><rect x="33.0" y="1141" width="0.3" height="15.0" fill="rgb(230,92,17)" rx="2" ry="2" />
<text  x="35.97" y="1151.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (8,198,888 samples, 0.03%)</title><rect x="227.1" y="965" width="0.3" height="15.0" fill="rgb(254,83,52)" rx="2" ry="2" />
<text  x="230.05" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,151,257 samples, 0.01%)</title><rect x="864.0" y="1125" width="0.1" height="15.0" fill="rgb(213,199,10)" rx="2" ry="2" />
<text  x="866.98" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (4,109,885 samples, 0.02%)</title><rect x="495.1" y="805" width="0.2" height="15.0" fill="rgb(211,150,14)" rx="2" ry="2" />
<text  x="498.14" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,288,003 samples, 0.03%)</title><rect x="706.9" y="917" width="0.4" height="15.0" fill="rgb(237,155,24)" rx="2" ry="2" />
<text  x="709.91" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,604,577 samples, 0.01%)</title><rect x="840.5" y="1013" width="0.2" height="15.0" fill="rgb(218,209,41)" rx="2" ry="2" />
<text  x="843.51" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,918,687 samples, 0.02%)</title><rect x="620.7" y="869" width="0.2" height="15.0" fill="rgb(211,68,17)" rx="2" ry="2" />
<text  x="623.69" y="879.5" ></text>
</g>
<g >
<title>gazebo::physics::Inertial::CoG (8,399,883 samples, 0.03%)</title><rect x="686.4" y="853" width="0.4" height="15.0" fill="rgb(232,74,43)" rx="2" ry="2" />
<text  x="689.36" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,291,093 samples, 0.01%)</title><rect x="521.1" y="677" width="0.1" height="15.0" fill="rgb(218,169,31)" rx="2" ry="2" />
<text  x="524.08" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (87,526,544 samples, 0.35%)</title><rect x="733.5" y="1013" width="4.1" height="15.0" fill="rgb(238,171,38)" rx="2" ry="2" />
<text  x="736.53" y="1023.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rcl_service_t const&gt;::~shared_ptr (6,536,713 samples, 0.03%)</title><rect x="196.1" y="1013" width="0.3" height="15.0" fill="rgb(229,32,0)" rx="2" ry="2" />
<text  x="199.12" y="1023.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::InertialPrivate, std::default_delete&lt;gazebo::physics::InertialPrivate&gt; &gt;::operator (7,966,785 samples, 0.03%)</title><rect x="555.4" y="725" width="0.4" height="15.0" fill="rgb(237,37,36)" rx="2" ry="2" />
<text  x="558.39" y="735.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::release (2,171,526 samples, 0.01%)</title><rect x="591.0" y="725" width="0.1" height="15.0" fill="rgb(219,183,14)" rx="2" ry="2" />
<text  x="593.99" y="735.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::bidirectional_iterator_tag&gt;::__copy_m&lt;std::_List_iterator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt;, std::back_insert_iterator&lt;std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; (8,775,095 samples, 0.03%)</title><rect x="84.5" y="1093" width="0.4" height="15.0" fill="rgb(229,162,41)" rx="2" ry="2" />
<text  x="87.48" y="1103.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::RotateVector (6,139,236 samples, 0.02%)</title><rect x="527.6" y="805" width="0.3" height="15.0" fill="rgb(214,159,48)" rx="2" ry="2" />
<text  x="530.60" y="815.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (3,334,647 samples, 0.01%)</title><rect x="20.4" y="1125" width="0.1" height="15.0" fill="rgb(228,69,20)" rx="2" ry="2" />
<text  x="23.39" y="1135.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;hardware_interface::SystemInterface, std::default_delete&lt;hardware_interface::SystemInterface&gt; &gt;::get (7,815,709 samples, 0.03%)</title><rect x="519.6" y="853" width="0.4" height="15.0" fill="rgb(252,165,2)" rx="2" ry="2" />
<text  x="522.61" y="863.5" ></text>
</g>
<g >
<title>std::mutex::unlock (5,625,442 samples, 0.02%)</title><rect x="843.3" y="1125" width="0.2" height="15.0" fill="rgb(206,89,35)" rx="2" ry="2" />
<text  x="846.28" y="1135.5" ></text>
</g>
<g >
<title>__strlen_avx2 (6,148,402 samples, 0.02%)</title><rect x="152.6" y="1285" width="0.3" height="15.0" fill="rgb(245,188,36)" rx="2" ry="2" />
<text  x="155.59" y="1295.5" ></text>
</g>
<g >
<title>dJointAttach (3,962,373 samples, 0.02%)</title><rect x="229.7" y="1029" width="0.1" height="15.0" fill="rgb(235,172,12)" rx="2" ry="2" />
<text  x="232.66" y="1039.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::~shared_ptr (5,985,092 samples, 0.02%)</title><rect x="610.5" y="741" width="0.2" height="15.0" fill="rgb(230,110,15)" rx="2" ry="2" />
<text  x="613.46" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;gazebo::physics::Entity*, std::allocator&lt;gazebo::physics::Entity*&gt; &gt;::_M_put_node (6,528,496 samples, 0.03%)</title><rect x="744.5" y="1013" width="0.3" height="15.0" fill="rgb(222,121,52)" rx="2" ry="2" />
<text  x="747.46" y="1023.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (3,381,009 samples, 0.01%)</title><rect x="30.6" y="1125" width="0.2" height="15.0" fill="rgb(235,129,14)" rx="2" ry="2" />
<text  x="33.61" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,448,629 samples, 0.11%)</title><rect x="577.2" y="581" width="1.3" height="15.0" fill="rgb(249,151,14)" rx="2" ry="2" />
<text  x="580.22" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (71,974,121 samples, 0.28%)</title><rect x="1151.6" y="1013" width="3.4" height="15.0" fill="rgb(213,66,46)" rx="2" ry="2" />
<text  x="1154.64" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;gazebo::physics::Entity*&gt; &gt; &gt;::deallocate (6,528,496 samples, 0.03%)</title><rect x="744.5" y="997" width="0.3" height="15.0" fill="rgb(254,210,0)" rx="2" ry="2" />
<text  x="747.46" y="1007.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::_M_ptr (6,271,662 samples, 0.02%)</title><rect x="640.2" y="869" width="0.3" height="15.0" fill="rgb(212,137,40)" rx="2" ry="2" />
<text  x="643.17" y="879.5" ></text>
</g>
<g >
<title>dGeomMoved (2,741,870 samples, 0.01%)</title><rect x="787.2" y="933" width="0.2" height="15.0" fill="rgb(247,79,52)" rx="2" ry="2" />
<text  x="790.25" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,151,257 samples, 0.01%)</title><rect x="864.0" y="1109" width="0.1" height="15.0" fill="rgb(234,55,23)" rx="2" ry="2" />
<text  x="866.98" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (78,516,493 samples, 0.31%)</title><rect x="882.9" y="629" width="3.7" height="15.0" fill="rgb(226,229,54)" rx="2" ry="2" />
<text  x="885.91" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (9,568,562 samples, 0.04%)</title><rect x="496.3" y="853" width="0.4" height="15.0" fill="rgb(248,195,25)" rx="2" ry="2" />
<text  x="499.25" y="863.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator+= (3,474,511 samples, 0.01%)</title><rect x="530.6" y="821" width="0.1" height="15.0" fill="rgb(210,8,18)" rx="2" ry="2" />
<text  x="533.57" y="831.5" ></text>
</g>
<g >
<title>gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (17,469,504 samples, 0.07%)</title><rect x="13.7" y="981" width="0.8" height="15.0" fill="rgb(218,177,9)" rx="2" ry="2" />
<text  x="16.71" y="991.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;hardware_interface::ResourceStorage, std::default_delete&lt;hardware_interface::ResourceStorage&gt; &gt;::operator (8,073,023 samples, 0.03%)</title><rect x="520.0" y="885" width="0.3" height="15.0" fill="rgb(210,41,26)" rx="2" ry="2" />
<text  x="522.97" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,575,197 samples, 0.01%)</title><rect x="776.5" y="885" width="0.2" height="15.0" fill="rgb(228,160,43)" rx="2" ry="2" />
<text  x="779.54" y="895.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::Destroy&lt;google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::TypeHandler&gt; (48,055,424 samples, 0.19%)</title><rect x="755.7" y="1013" width="2.3" height="15.0" fill="rgb(246,163,45)" rx="2" ry="2" />
<text  x="758.75" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,532,725 samples, 0.03%)</title><rect x="865.0" y="1141" width="0.4" height="15.0" fill="rgb(209,90,45)" rx="2" ry="2" />
<text  x="868.01" y="1151.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (3,848,659 samples, 0.02%)</title><rect x="29.6" y="1045" width="0.2" height="15.0" fill="rgb(234,146,32)" rx="2" ry="2" />
<text  x="32.63" y="1055.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Inverse (6,327,928 samples, 0.02%)</title><rect x="762.3" y="997" width="0.2" height="15.0" fill="rgb(209,37,1)" rx="2" ry="2" />
<text  x="765.25" y="1007.5" ></text>
</g>
<g >
<title>gazebo::physics::World::PublishModelPose (18,955,238 samples, 0.07%)</title><rect x="224.2" y="997" width="0.9" height="15.0" fill="rgb(235,211,4)" rx="2" ry="2" />
<text  x="227.18" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (78,784,650 samples, 0.31%)</title><rect x="1185.6" y="1093" width="3.7" height="15.0" fill="rgb(217,77,51)" rx="2" ry="2" />
<text  x="1188.62" y="1103.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_client_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_client_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_client_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;decltype (5,007,693 samples, 0.02%)</title><rect x="200.7" y="1045" width="0.2" height="15.0" fill="rgb(213,175,54)" rx="2" ry="2" />
<text  x="203.66" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;::~list (2,537,634 samples, 0.01%)</title><rect x="75.8" y="1029" width="0.1" height="15.0" fill="rgb(212,165,52)" rx="2" ry="2" />
<text  x="78.76" y="1039.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3,274,399 samples, 0.01%)</title><rect x="25.7" y="1157" width="0.2" height="15.0" fill="rgb(244,103,8)" rx="2" ry="2" />
<text  x="28.74" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,281,711 samples, 0.01%)</title><rect x="841.9" y="1013" width="0.2" height="15.0" fill="rgb(214,180,5)" rx="2" ry="2" />
<text  x="844.95" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,762,010 samples, 0.02%)</title><rect x="72.1" y="1093" width="0.2" height="15.0" fill="rgb(240,53,21)" rx="2" ry="2" />
<text  x="75.06" y="1103.5" ></text>
</g>
<g >
<title>drm_handle_vblank (2,205,749 samples, 0.01%)</title><rect x="1155.0" y="965" width="0.1" height="15.0" fill="rgb(238,5,37)" rx="2" ry="2" />
<text  x="1157.99" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;hardware_interface::SystemInterface, std::default_delete&lt;hardware_interface::SystemInterface&gt; &gt;::get (8,032,602 samples, 0.03%)</title><rect x="613.1" y="853" width="0.3" height="15.0" fill="rgb(215,89,12)" rx="2" ry="2" />
<text  x="616.07" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;::_S_key (4,203,405 samples, 0.02%)</title><rect x="215.3" y="917" width="0.2" height="15.0" fill="rgb(221,16,4)" rx="2" ry="2" />
<text  x="218.31" y="927.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena (3,922,629 samples, 0.02%)</title><rect x="764.5" y="837" width="0.2" height="15.0" fill="rgb(252,180,40)" rx="2" ry="2" />
<text  x="767.51" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="949" width="0.2" height="15.0" fill="rgb(248,96,4)" rx="2" ry="2" />
<text  x="849.22" y="959.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (3,602,555 samples, 0.01%)</title><rect x="49.3" y="1173" width="0.1" height="15.0" fill="rgb(252,123,33)" rx="2" ry="2" />
<text  x="52.27" y="1183.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (27,231,381 samples, 0.11%)</title><rect x="866.2" y="1301" width="1.3" height="15.0" fill="rgb(212,173,47)" rx="2" ry="2" />
<text  x="869.21" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,850,278 samples, 0.02%)</title><rect x="832.5" y="949" width="0.2" height="15.0" fill="rgb(236,43,46)" rx="2" ry="2" />
<text  x="835.51" y="959.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::set_has_orientation (2,238,041 samples, 0.01%)</title><rect x="758.2" y="1013" width="0.1" height="15.0" fill="rgb(216,57,21)" rx="2" ry="2" />
<text  x="761.20" y="1023.5" ></text>
</g>
<g >
<title>gazebo::msgs::Set (5,974,402 samples, 0.02%)</title><rect x="719.9" y="901" width="0.3" height="15.0" fill="rgb(217,15,8)" rx="2" ry="2" />
<text  x="722.94" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;gazebo::sensors::Sensor&gt;, std::allocator&lt;std::shared_ptr&lt;gazebo::sensors::Sensor&gt; &gt; &gt;::empty (3,457,696 samples, 0.01%)</title><rect x="904.3" y="1221" width="0.1" height="15.0" fill="rgb(236,144,2)" rx="2" ry="2" />
<text  x="907.28" y="1231.5" ></text>
</g>
<g >
<title>gazebo::sensors::ImuSensor::UpdateImpl (194,380,698 samples, 0.77%)</title><rect x="25.3" y="1173" width="9.1" height="15.0" fill="rgb(240,186,0)" rx="2" ry="2" />
<text  x="28.33" y="1183.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_get_node (6,339,691 samples, 0.03%)</title><rect x="546.8" y="677" width="0.3" height="15.0" fill="rgb(225,138,1)" rx="2" ry="2" />
<text  x="549.79" y="687.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray&lt;gazebo::msgs::Quaternion&gt; (2,734,777 samples, 0.01%)</title><rect x="1159.5" y="1237" width="0.1" height="15.0" fill="rgb(217,41,28)" rx="2" ry="2" />
<text  x="1162.50" y="1247.5" ></text>
</g>
<g >
<title>dMultiply0_331 (3,999,934 samples, 0.02%)</title><rect x="580.1" y="757" width="0.2" height="15.0" fill="rgb(218,29,7)" rx="2" ry="2" />
<text  x="583.11" y="767.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::Waitable&gt;::shared_ptr (7,634,787 samples, 0.03%)</title><rect x="792.8" y="965" width="0.3" height="15.0" fill="rgb(221,101,44)" rx="2" ry="2" />
<text  x="795.78" y="975.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::Publish&lt;gazebo::msgs::LinkData&gt; (36,170,042 samples, 0.14%)</title><rect x="721.7" y="901" width="1.6" height="15.0" fill="rgb(246,113,10)" rx="2" ry="2" />
<text  x="724.66" y="911.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (21,019,410 samples, 0.08%)</title><rect x="811.0" y="997" width="1.0" height="15.0" fill="rgb(223,57,4)" rx="2" ry="2" />
<text  x="814.00" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo_ros2_control::GazeboSystemPrivate, std::default_delete&lt;gazebo_ros2_control::GazeboSystemPrivate&gt; &gt;::operator (3,764,565 samples, 0.01%)</title><rect x="612.9" y="869" width="0.2" height="15.0" fill="rgb(219,21,12)" rx="2" ry="2" />
<text  x="615.90" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_append (15,624,164 samples, 0.06%)</title><rect x="506.5" y="853" width="0.7" height="15.0" fill="rgb(220,107,12)" rx="2" ry="2" />
<text  x="509.48" y="863.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*&gt; (3,587,396 samples, 0.01%)</title><rect x="588.6" y="709" width="0.2" height="15.0" fill="rgb(219,27,21)" rx="2" ry="2" />
<text  x="591.64" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt;::emplace_back&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; (6,217,256 samples, 0.02%)</title><rect x="811.7" y="965" width="0.3" height="15.0" fill="rgb(225,162,50)" rx="2" ry="2" />
<text  x="814.69" y="975.5" ></text>
</g>
<g >
<title>rclcpp::Node::get_clock (4,270,931 samples, 0.02%)</title><rect x="497.1" y="885" width="0.2" height="15.0" fill="rgb(226,88,13)" rx="2" ry="2" />
<text  x="500.09" y="895.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::ParentWorldPose (10,204,747 samples, 0.04%)</title><rect x="526.5" y="821" width="0.5" height="15.0" fill="rgb(247,146,18)" rx="2" ry="2" />
<text  x="529.48" y="831.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::SetVelocityMaximal (2,745,270 samples, 0.01%)</title><rect x="777.2" y="837" width="0.1" height="15.0" fill="rgb(254,125,36)" rx="2" ry="2" />
<text  x="780.22" y="847.5" ></text>
</g>
<g >
<title>Opcode::RayCollider::~RayCollider (31,056,180 samples, 0.12%)</title><rect x="120.0" y="1285" width="1.4" height="15.0" fill="rgb(248,53,38)" rx="2" ry="2" />
<text  x="122.99" y="1295.5" ></text>
</g>
<g >
<title>collideAABBs (101,842,439 samples, 0.40%)</title><rect x="235.3" y="933" width="4.8" height="15.0" fill="rgb(249,49,39)" rx="2" ry="2" />
<text  x="238.31" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (88,733,113 samples, 0.35%)</title><rect x="600.5" y="789" width="4.2" height="15.0" fill="rgb(222,228,0)" rx="2" ry="2" />
<text  x="603.53" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,596,349 samples, 0.01%)</title><rect x="220.3" y="805" width="0.2" height="15.0" fill="rgb(230,173,50)" rx="2" ry="2" />
<text  x="223.31" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,381,905 samples, 0.02%)</title><rect x="796.0" y="933" width="0.3" height="15.0" fill="rgb(211,130,9)" rx="2" ry="2" />
<text  x="799.01" y="943.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::get (6,271,662 samples, 0.02%)</title><rect x="640.2" y="885" width="0.3" height="15.0" fill="rgb(241,55,4)" rx="2" ry="2" />
<text  x="643.17" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (47,267,486 samples, 0.19%)</title><rect x="739.3" y="965" width="2.2" height="15.0" fill="rgb(213,67,52)" rx="2" ry="2" />
<text  x="742.25" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="1077" width="0.2" height="15.0" fill="rgb(248,100,27)" rx="2" ry="2" />
<text  x="849.22" y="1087.5" ></text>
</g>
<g >
<title>[libcontroller_manager.so] (4,936,731 samples, 0.02%)</title><rect x="847.7" y="1109" width="0.3" height="15.0" fill="rgb(224,219,7)" rx="2" ry="2" />
<text  x="850.74" y="1119.5" ></text>
</g>
<g >
<title>std::_List_const_iterator&lt;std::weak_ptr&lt;rclcpp::node_interfaces::NodeBaseInterface&gt; &gt;::operator* (9,247,408 samples, 0.04%)</title><rect x="189.0" y="1045" width="0.4" height="15.0" fill="rgb(207,188,46)" rx="2" ry="2" />
<text  x="191.98" y="1055.5" ></text>
</g>
<g >
<title>controller_manager::ControllerManager::update (62,135,874 samples, 0.25%)</title><rect x="520.7" y="917" width="2.9" height="15.0" fill="rgb(223,130,27)" rx="2" ry="2" />
<text  x="523.72" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, int&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::_M_begin (6,508,847 samples, 0.03%)</title><rect x="86.4" y="1109" width="0.3" height="15.0" fill="rgb(241,192,5)" rx="2" ry="2" />
<text  x="89.38" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,421,589 samples, 0.10%)</title><rect x="56.3" y="309" width="1.2" height="15.0" fill="rgb(234,144,24)" rx="2" ry="2" />
<text  x="59.27" y="319.5" ></text>
</g>
<g >
<title>gazebo::common::Time::operator&lt; (3,640,791 samples, 0.01%)</title><rect x="205.9" y="1029" width="0.2" height="15.0" fill="rgb(219,44,30)" rx="2" ry="2" />
<text  x="208.94" y="1039.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo_plugins::GazeboRosVacuumGripperPrivate*, std::_Placeholder&lt;1&gt; &gt; (8,107,401 samples, 0.03%)</title><rect x="726.0" y="949" width="0.4" height="15.0" fill="rgb(238,97,35)" rx="2" ry="2" />
<text  x="728.99" y="959.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::size (3,134,847 samples, 0.01%)</title><rect x="81.2" y="1045" width="0.2" height="15.0" fill="rgb(216,86,9)" rx="2" ry="2" />
<text  x="84.24" y="1055.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (3,999,934 samples, 0.02%)</title><rect x="580.1" y="709" width="0.2" height="15.0" fill="rgb(247,48,44)" rx="2" ry="2" />
<text  x="583.11" y="719.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (4,976,503 samples, 0.02%)</title><rect x="861.2" y="1125" width="0.2" height="15.0" fill="rgb(213,148,22)" rx="2" ry="2" />
<text  x="864.17" y="1135.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (25,964,662 samples, 0.10%)</title><rect x="501.1" y="837" width="1.2" height="15.0" fill="rgb(218,144,1)" rx="2" ry="2" />
<text  x="504.13" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,652,014 samples, 0.04%)</title><rect x="722.4" y="661" width="0.5" height="15.0" fill="rgb(224,173,0)" rx="2" ry="2" />
<text  x="725.45" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,377,139 samples, 0.03%)</title><rect x="214.4" y="805" width="0.3" height="15.0" fill="rgb(252,101,35)" rx="2" ry="2" />
<text  x="217.43" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,522,477,095 samples, 17.85%)</title><rect x="944.5" y="1189" width="210.6" height="15.0" fill="rgb(206,123,14)" rx="2" ry="2" />
<text  x="947.51" y="1199.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>boost::detail::sp_counted_impl_p&lt;google::protobuf::Message&gt;::dispose (2,537,634 samples, 0.01%)</title><rect x="75.8" y="901" width="0.1" height="15.0" fill="rgb(221,189,30)" rx="2" ry="2" />
<text  x="78.76" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (46,015,110 samples, 0.18%)</title><rect x="602.5" y="661" width="2.2" height="15.0" fill="rgb(241,76,11)" rx="2" ry="2" />
<text  x="605.52" y="671.5" ></text>
</g>
<g >
<title>std::function&lt;void  (12,564,770 samples, 0.05%)</title><rect x="794.2" y="1029" width="0.5" height="15.0" fill="rgb(243,22,54)" rx="2" ry="2" />
<text  x="797.16" y="1039.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;rclcpp::SubscriptionBase&gt;::lock (4,775,011 samples, 0.02%)</title><rect x="791.8" y="949" width="0.2" height="15.0" fill="rgb(224,96,35)" rx="2" ry="2" />
<text  x="794.78" y="959.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, std::_List_iterator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt;, std::back_insert_iterator&lt;std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; (8,775,095 samples, 0.03%)</title><rect x="84.5" y="1125" width="0.4" height="15.0" fill="rgb(247,118,13)" rx="2" ry="2" />
<text  x="87.48" y="1135.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (82,914,669 samples, 0.33%)</title><rect x="789.7" y="1125" width="3.8" height="15.0" fill="rgb(231,32,46)" rx="2" ry="2" />
<text  x="792.65" y="1135.5" ></text>
</g>
<g >
<title>std::mutex::try_lock (3,956,579 samples, 0.02%)</title><rect x="858.6" y="1141" width="0.2" height="15.0" fill="rgb(253,112,45)" rx="2" ry="2" />
<text  x="861.58" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,282,220 samples, 0.03%)</title><rect x="618.1" y="885" width="0.3" height="15.0" fill="rgb(237,151,8)" rx="2" ry="2" />
<text  x="621.05" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,032,103 samples, 0.02%)</title><rect x="831.1" y="1109" width="0.3" height="15.0" fill="rgb(234,179,30)" rx="2" ry="2" />
<text  x="834.09" y="1119.5" ></text>
</g>
<g >
<title>gazebo::msgs::Time::ByteSizeLong (2,665,526 samples, 0.01%)</title><rect x="163.9" y="1205" width="0.1" height="15.0" fill="rgb(206,160,49)" rx="2" ry="2" />
<text  x="166.90" y="1215.5" ></text>
</g>
<g >
<title>dQueryBTLPotentialCollisionTriangles (3,940,641 samples, 0.02%)</title><rect x="248.0" y="981" width="0.2" height="15.0" fill="rgb(224,142,46)" rx="2" ry="2" />
<text  x="250.98" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,643,431,721 samples, 18.33%)</title><rect x="938.9" y="1237" width="216.2" height="15.0" fill="rgb(228,95,54)" rx="2" ry="2" />
<text  x="941.87" y="1247.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>gazebo::msgs::Vector3d::SetCachedSize (9,942,903 samples, 0.04%)</title><rect x="163.4" y="1157" width="0.5" height="15.0" fill="rgb(248,3,20)" rx="2" ry="2" />
<text  x="166.43" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,847,722 samples, 0.03%)</title><rect x="931.5" y="1221" width="0.4" height="15.0" fill="rgb(222,3,12)" rx="2" ry="2" />
<text  x="934.53" y="1231.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Entity&gt;::operator= (6,153,881 samples, 0.02%)</title><rect x="222.1" y="1013" width="0.3" height="15.0" fill="rgb(207,39,19)" rx="2" ry="2" />
<text  x="225.15" y="1023.5" ></text>
</g>
<g >
<title>gazebo::msgs::Vector3d::MergeFrom (2,165,682 samples, 0.01%)</title><rect x="753.7" y="917" width="0.1" height="15.0" fill="rgb(220,63,47)" rx="2" ry="2" />
<text  x="756.71" y="927.5" ></text>
</g>
<g >
<title>gazebo::event::EventT&lt;void  (75,068,030 samples, 0.30%)</title><rect x="21.0" y="1157" width="3.5" height="15.0" fill="rgb(220,39,46)" rx="2" ry="2" />
<text  x="23.99" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,074,627 samples, 0.02%)</title><rect x="538.8" y="725" width="0.3" height="15.0" fill="rgb(242,111,11)" rx="2" ry="2" />
<text  x="541.79" y="735.5" ></text>
</g>
<g >
<title>std::set&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::insert (20,032,379 samples, 0.08%)</title><rect x="220.7" y="997" width="0.9" height="15.0" fill="rgb(221,214,51)" rx="2" ry="2" />
<text  x="223.66" y="1007.5" ></text>
</g>
<g >
<title>gazebo::common::Time::Time (2,207,781 samples, 0.01%)</title><rect x="482.2" y="981" width="0.1" height="15.0" fill="rgb(206,35,40)" rx="2" ry="2" />
<text  x="485.19" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,152,963 samples, 0.06%)</title><rect x="116.7" y="1237" width="0.7" height="15.0" fill="rgb(231,8,47)" rx="2" ry="2" />
<text  x="119.71" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,850,278 samples, 0.02%)</title><rect x="832.5" y="981" width="0.2" height="15.0" fill="rgb(253,103,43)" rx="2" ry="2" />
<text  x="835.51" y="991.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::GetParentModel (15,187,791 samples, 0.06%)</title><rect x="223.5" y="997" width="0.7" height="15.0" fill="rgb(207,164,17)" rx="2" ry="2" />
<text  x="226.48" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,865,199 samples, 0.01%)</title><rect x="32.8" y="981" width="0.2" height="15.0" fill="rgb(216,132,20)" rx="2" ry="2" />
<text  x="35.84" y="991.5" ></text>
</g>
<g >
<title>dxProcessIslands (4,036,318,144 samples, 15.93%)</title><rect x="261.7" y="1013" width="188.0" height="15.0" fill="rgb(223,75,33)" rx="2" ry="2" />
<text  x="264.74" y="1023.5" >dxProcessIslands</text>
</g>
<g >
<title>std::__cxx11::list&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_create_node&lt;unsigned int const&amp;&gt; (5,623,817 samples, 0.02%)</title><rect x="83.6" y="1109" width="0.3" height="15.0" fill="rgb(248,161,54)" rx="2" ry="2" />
<text  x="86.61" y="1119.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::FindAllConnectedLinksHelper (9,599,356 samples, 0.04%)</title><rect x="775.3" y="773" width="0.4" height="15.0" fill="rgb(224,52,15)" rx="2" ry="2" />
<text  x="778.26" y="783.5" ></text>
</g>
<g >
<title>dVector3Dot (4,205,366 samples, 0.02%)</title><rect x="253.9" y="917" width="0.2" height="15.0" fill="rgb(218,87,2)" rx="2" ry="2" />
<text  x="256.90" y="927.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::CoordPositionSub (22,381,390 samples, 0.09%)</title><rect x="607.0" y="789" width="1.0" height="15.0" fill="rgb(220,168,36)" rx="2" ry="2" />
<text  x="609.98" y="799.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo::sensors::RaySensorPrivate*, std::default_delete&lt;gazebo::sensors::RaySensorPrivate&gt; &gt; (3,143,021 samples, 0.01%)</title><rect x="46.6" y="1061" width="0.1" height="15.0" fill="rgb(253,37,2)" rx="2" ry="2" />
<text  x="49.58" y="1071.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;rcl_service_t const&gt;&amp;&gt; (7,561,150 samples, 0.03%)</title><rect x="809.5" y="965" width="0.4" height="15.0" fill="rgb(235,21,21)" rx="2" ry="2" />
<text  x="812.53" y="975.5" ></text>
</g>
<g >
<title>SingletonT&lt;gazebo::sensors::SensorManager&gt;::GetInstance (6,777,859 samples, 0.03%)</title><rect x="897.0" y="1221" width="0.3" height="15.0" fill="rgb(252,0,5)" rx="2" ry="2" />
<text  x="899.97" y="1231.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; (2,537,634 samples, 0.01%)</title><rect x="75.8" y="1077" width="0.1" height="15.0" fill="rgb(232,215,9)" rx="2" ry="2" />
<text  x="78.76" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,992,783 samples, 0.02%)</title><rect x="707.3" y="837" width="0.3" height="15.0" fill="rgb(227,218,46)" rx="2" ry="2" />
<text  x="710.29" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,154,483 samples, 0.01%)</title><rect x="724.5" y="885" width="0.1" height="15.0" fill="rgb(241,229,22)" rx="2" ry="2" />
<text  x="727.51" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt;::new_allocator (2,241,455 samples, 0.01%)</title><rect x="769.6" y="997" width="0.1" height="15.0" fill="rgb(248,170,48)" rx="2" ry="2" />
<text  x="772.61" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,082,207 samples, 0.10%)</title><rect x="716.2" y="725" width="1.1" height="15.0" fill="rgb(209,141,15)" rx="2" ry="2" />
<text  x="719.18" y="735.5" ></text>
</g>
<g >
<title>std::operator!=&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3,274,399 samples, 0.01%)</title><rect x="32.3" y="1125" width="0.2" height="15.0" fill="rgb(216,24,0)" rx="2" ry="2" />
<text  x="35.31" y="1135.5" ></text>
</g>
<g >
<title>SingletonT&lt;gazebo::util::LogPlay&gt;::GetInstance (4,003,993 samples, 0.02%)</title><rect x="742.4" y="1013" width="0.2" height="15.0" fill="rgb(237,185,22)" rx="2" ry="2" />
<text  x="745.39" y="1023.5" ></text>
</g>
<g >
<title>std::forward&lt;gazebo::common::UpdateInfo const&amp;&gt; (5,978,165 samples, 0.02%)</title><rect x="727.6" y="965" width="0.3" height="15.0" fill="rgb(246,127,12)" rx="2" ry="2" />
<text  x="730.58" y="975.5" ></text>
</g>
<g >
<title>_dl_update_slotinfo (19,323,694 samples, 0.08%)</title><rect x="153.4" y="1285" width="0.9" height="15.0" fill="rgb(228,39,6)" rx="2" ry="2" />
<text  x="156.40" y="1295.5" ></text>
</g>
<g >
<title>boost::relaxed_get&lt;std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::PointCloud_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::PointCloud2_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::Range_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt; &gt; (3,946,163 samples, 0.02%)</title><rect x="73.3" y="1013" width="0.1" height="15.0" fill="rgb(213,209,18)" rx="2" ry="2" />
<text  x="76.27" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,172,459 samples, 0.01%)</title><rect x="690.6" y="757" width="0.1" height="15.0" fill="rgb(205,15,0)" rx="2" ry="2" />
<text  x="693.63" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_M_check_len (4,027,667 samples, 0.02%)</title><rect x="693.1" y="869" width="0.2" height="15.0" fill="rgb(243,223,44)" rx="2" ry="2" />
<text  x="696.12" y="879.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (8,188,645 samples, 0.03%)</title><rect x="756.8" y="933" width="0.3" height="15.0" fill="rgb(224,220,1)" rx="2" ry="2" />
<text  x="759.76" y="943.5" ></text>
</g>
<g >
<title>gazebo::physics::Model::Update (124,349,297 samples, 0.49%)</title><rect x="731.8" y="1045" width="5.8" height="15.0" fill="rgb(226,143,49)" rx="2" ry="2" />
<text  x="734.81" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,071,908 samples, 0.06%)</title><rect x="709.0" y="885" width="0.7" height="15.0" fill="rgb(229,86,12)" rx="2" ry="2" />
<text  x="712.04" y="895.5" ></text>
</g>
<g >
<title>dMultiply0_331 (4,381,989 samples, 0.02%)</title><rect x="266.8" y="965" width="0.2" height="15.0" fill="rgb(212,80,51)" rx="2" ry="2" />
<text  x="269.79" y="975.5" ></text>
</g>
<g >
<title>gazebo::physics::World::Models (10,481,472 samples, 0.04%)</title><rect x="688.0" y="901" width="0.5" height="15.0" fill="rgb(243,15,12)" rx="2" ry="2" />
<text  x="691.04" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::Model::WorldAngularVel (18,204,552 samples, 0.07%)</title><rect x="685.0" y="901" width="0.8" height="15.0" fill="rgb(206,70,4)" rx="2" ry="2" />
<text  x="687.96" y="911.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (5,976,866 samples, 0.02%)</title><rect x="243.3" y="837" width="0.2" height="15.0" fill="rgb(226,167,6)" rx="2" ry="2" />
<text  x="246.27" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,269,837 samples, 0.01%)</title><rect x="871.9" y="1157" width="0.1" height="15.0" fill="rgb(212,169,36)" rx="2" ry="2" />
<text  x="874.86" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="1061" width="0.2" height="15.0" fill="rgb(233,189,34)" rx="2" ry="2" />
<text  x="823.95" y="1071.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (22,498,650 samples, 0.09%)</title><rect x="549.2" y="741" width="1.0" height="15.0" fill="rgb(206,115,20)" rx="2" ry="2" />
<text  x="552.16" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,434,575 samples, 0.02%)</title><rect x="54.0" y="1077" width="0.3" height="15.0" fill="rgb(215,61,30)" rx="2" ry="2" />
<text  x="57.03" y="1087.5" ></text>
</g>
<g >
<title>std::get_if&lt;2ul, bool, char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, unsigned long, unsigned int, double, float, sdf::v9::Time, ignition::math::v6::Angle, ignition::math::v6::Color, ignition::math::v6::Vector2&lt;int&gt;, ignition::math::v6::Vector2&lt;double&gt;, ignition::math::v6::Vector3&lt;double&gt;, ignition::math::v6::Quaternion&lt;double&gt;, ignition::math::v6::Pose3&lt;double&gt; &gt; (4,861,997 samples, 0.02%)</title><rect x="19.7" y="1109" width="0.3" height="15.0" fill="rgb(254,42,13)" rx="2" ry="2" />
<text  x="22.73" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int const, int&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned int const&amp;&gt;, std::tuple&lt;&gt; &gt; (13,726,977 samples, 0.05%)</title><rect x="85.0" y="1061" width="0.6" height="15.0" fill="rgb(212,136,44)" rx="2" ry="2" />
<text  x="88.00" y="1071.5" ></text>
</g>
<g >
<title>gazebo::physics::World::ModelUpdateSingleLoop (20,907,395 samples, 0.08%)</title><rect x="788.0" y="1045" width="1.0" height="15.0" fill="rgb(246,191,7)" rx="2" ry="2" />
<text  x="791.01" y="1055.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (3,673,663 samples, 0.01%)</title><rect x="512.9" y="773" width="0.1" height="15.0" fill="rgb(224,58,37)" rx="2" ry="2" />
<text  x="515.88" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,440,838 samples, 0.02%)</title><rect x="510.9" y="773" width="0.3" height="15.0" fill="rgb(205,102,36)" rx="2" ry="2" />
<text  x="513.91" y="783.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Z (4,023,066 samples, 0.02%)</title><rect x="41.3" y="1125" width="0.2" height="15.0" fill="rgb(244,91,0)" rx="2" ry="2" />
<text  x="44.30" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,762,010 samples, 0.02%)</title><rect x="72.1" y="1045" width="0.2" height="15.0" fill="rgb(233,109,24)" rx="2" ry="2" />
<text  x="75.06" y="1055.5" ></text>
</g>
<g >
<title>getHingeAngleFromRelativeQuat (2,457,342 samples, 0.01%)</title><rect x="782.9" y="933" width="0.1" height="15.0" fill="rgb(246,78,13)" rx="2" ry="2" />
<text  x="785.93" y="943.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (554,651,533 samples, 2.19%)</title><rect x="793.5" y="1125" width="25.8" height="15.0" fill="rgb(228,138,51)" rx="2" ry="2" />
<text  x="796.52" y="1135.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;gazebo::sensors::Sensor&gt; const*, std::vector&lt;std::shared_ptr&lt;gazebo::sensors::Sensor&gt;, std::allocator&lt;std::shared_ptr&lt;gazebo::sensors::Sensor&gt; &gt; &gt; &gt;::__normal_iterator (3,457,696 samples, 0.01%)</title><rect x="904.3" y="1205" width="0.1" height="15.0" fill="rgb(254,94,42)" rx="2" ry="2" />
<text  x="907.28" y="1215.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (2,430,732 samples, 0.01%)</title><rect x="546.8" y="645" width="0.1" height="15.0" fill="rgb(250,14,49)" rx="2" ry="2" />
<text  x="549.79" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::weak_ptr&lt;rclcpp::node_interfaces::NodeBaseInterface&gt; &gt;::_M_addr (9,247,408 samples, 0.04%)</title><rect x="189.0" y="1013" width="0.4" height="15.0" fill="rgb(226,7,28)" rx="2" ry="2" />
<text  x="191.98" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,149,834 samples, 0.01%)</title><rect x="481.0" y="773" width="0.1" height="15.0" fill="rgb(233,168,11)" rx="2" ry="2" />
<text  x="483.98" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13,356,989 samples, 0.05%)</title><rect x="708.3" y="821" width="0.6" height="15.0" fill="rgb(228,11,28)" rx="2" ry="2" />
<text  x="711.32" y="831.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Quaternion (4,264,740 samples, 0.02%)</title><rect x="762.3" y="981" width="0.2" height="15.0" fill="rgb(232,198,10)" rx="2" ry="2" />
<text  x="765.35" y="991.5" ></text>
</g>
<g >
<title>boost::asio::detail::call_stack&lt;boost::asio::detail::thread_context, boost::asio::detail::thread_info_base&gt;::top (2,286,334 samples, 0.01%)</title><rect x="54.3" y="901" width="0.1" height="15.0" fill="rgb(234,188,39)" rx="2" ry="2" />
<text  x="57.28" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,112,625 samples, 0.04%)</title><rect x="538.6" y="741" width="0.5" height="15.0" fill="rgb(219,224,11)" rx="2" ry="2" />
<text  x="541.60" y="751.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (8,922,802 samples, 0.04%)</title><rect x="197.0" y="965" width="0.4" height="15.0" fill="rgb(230,128,40)" rx="2" ry="2" />
<text  x="199.95" y="975.5" ></text>
</g>
<g >
<title>[libjoint_trajectory_controller.so] (5,148,179 samples, 0.02%)</title><rect x="839.2" y="1141" width="0.2" height="15.0" fill="rgb(245,139,2)" rx="2" ry="2" />
<text  x="842.18" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,291,598 samples, 0.04%)</title><rect x="789.1" y="1045" width="0.5" height="15.0" fill="rgb(248,168,54)" rx="2" ry="2" />
<text  x="792.09" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,624,031 samples, 0.01%)</title><rect x="22.7" y="949" width="0.2" height="15.0" fill="rgb(251,110,41)" rx="2" ry="2" />
<text  x="25.74" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::max_size (5,785,601 samples, 0.02%)</title><rect x="506.9" y="837" width="0.3" height="15.0" fill="rgb(217,141,12)" rx="2" ry="2" />
<text  x="509.94" y="847.5" ></text>
</g>
<g >
<title>[libgazebo_common.so.11.10.1] (3,875,336 samples, 0.02%)</title><rect x="506.5" y="837" width="0.2" height="15.0" fill="rgb(243,134,3)" rx="2" ry="2" />
<text  x="509.48" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,318,641 samples, 0.01%)</title><rect x="272.5" y="869" width="0.1" height="15.0" fill="rgb(220,92,7)" rx="2" ry="2" />
<text  x="275.50" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt;::_M_erase_at_end (12,627,182 samples, 0.05%)</title><rect x="816.8" y="997" width="0.6" height="15.0" fill="rgb(211,181,15)" rx="2" ry="2" />
<text  x="819.83" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,958,587 samples, 0.02%)</title><rect x="851.4" y="1125" width="0.2" height="15.0" fill="rgb(226,68,6)" rx="2" ry="2" />
<text  x="854.38" y="1135.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;*, control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; (8,474,606 samples, 0.03%)</title><rect x="828.6" y="1109" width="0.3" height="15.0" fill="rgb(215,160,32)" rx="2" ry="2" />
<text  x="831.55" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,225,905 samples, 0.01%)</title><rect x="829.7" y="1045" width="0.1" height="15.0" fill="rgb(231,57,29)" rx="2" ry="2" />
<text  x="832.69" y="1055.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;rclcpp::node_interfaces::NodeBaseInterface&gt;::lock (5,937,575 samples, 0.02%)</title><rect x="812.6" y="1029" width="0.3" height="15.0" fill="rgb(242,70,22)" rx="2" ry="2" />
<text  x="815.58" y="1039.5" ></text>
</g>
<g >
<title>[libgazebo_common.so.11.10.1] (7,209,037 samples, 0.03%)</title><rect x="748.9" y="1061" width="0.3" height="15.0" fill="rgb(240,166,33)" rx="2" ry="2" />
<text  x="751.91" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,190,889 samples, 0.01%)</title><rect x="616.9" y="853" width="0.1" height="15.0" fill="rgb(240,102,16)" rx="2" ry="2" />
<text  x="619.85" y="863.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::unique_lock (4,539,696 samples, 0.02%)</title><rect x="47.1" y="1189" width="0.2" height="15.0" fill="rgb(209,51,16)" rx="2" ry="2" />
<text  x="50.08" y="1199.5" ></text>
</g>
<g >
<title>gazebo::physics::worlds_running (26,788,009 samples, 0.11%)</title><rect x="894.9" y="1253" width="1.3" height="15.0" fill="rgb(212,68,36)" rx="2" ry="2" />
<text  x="897.93" y="1263.5" ></text>
</g>
<g >
<title>gazebo::msgs::Quaternion::Quaternion (8,185,638 samples, 0.03%)</title><rect x="758.6" y="981" width="0.4" height="15.0" fill="rgb(212,125,7)" rx="2" ry="2" />
<text  x="761.61" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,221,319 samples, 0.04%)</title><rect x="842.1" y="1045" width="0.4" height="15.0" fill="rgb(254,53,27)" rx="2" ry="2" />
<text  x="845.05" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,464,817 samples, 0.02%)</title><rect x="854.1" y="901" width="0.2" height="15.0" fill="rgb(245,61,1)" rx="2" ry="2" />
<text  x="857.06" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::GetChildJointsLinks (20,563,960 samples, 0.08%)</title><rect x="593.7" y="789" width="0.9" height="15.0" fill="rgb(212,197,20)" rx="2" ry="2" />
<text  x="596.69" y="799.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (4,947,258 samples, 0.02%)</title><rect x="782.4" y="949" width="0.3" height="15.0" fill="rgb(232,208,30)" rx="2" ry="2" />
<text  x="785.44" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,067,708 samples, 0.05%)</title><rect x="12.9" y="1125" width="0.6" height="15.0" fill="rgb(219,142,32)" rx="2" ry="2" />
<text  x="15.89" y="1135.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt; &gt;,  (4,531,445 samples, 0.02%)</title><rect x="798.6" y="757" width="0.2" height="15.0" fill="rgb(250,38,35)" rx="2" ry="2" />
<text  x="801.59" y="767.5" ></text>
</g>
<g >
<title>sTrimeshBoxColliderData::_cldClipping (11,927,350 samples, 0.05%)</title><rect x="248.4" y="949" width="0.6" height="15.0" fill="rgb(238,46,2)" rx="2" ry="2" />
<text  x="251.45" y="959.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (152,813,187 samples, 0.60%)</title><rect x="773.6" y="997" width="7.1" height="15.0" fill="rgb(239,186,38)" rx="2" ry="2" />
<text  x="776.55" y="1007.5" ></text>
</g>
<g >
<title>std::function&lt;void  (5,172,401,286 samples, 20.42%)</title><rect x="489.3" y="1013" width="240.9" height="15.0" fill="rgb(229,118,39)" rx="2" ry="2" />
<text  x="492.27" y="1023.5" >std::function&lt;void </text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::size (4,293,664 samples, 0.02%)</title><rect x="516.8" y="901" width="0.2" height="15.0" fill="rgb(218,213,43)" rx="2" ry="2" />
<text  x="519.79" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (46,367,145 samples, 0.18%)</title><rect x="55.5" y="581" width="2.2" height="15.0" fill="rgb(242,24,4)" rx="2" ry="2" />
<text  x="58.49" y="591.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (8,833,426 samples, 0.03%)</title><rect x="452.1" y="1061" width="0.4" height="15.0" fill="rgb(253,29,8)" rx="2" ry="2" />
<text  x="455.13" y="1071.5" ></text>
</g>
<g >
<title>boost::function1&lt;void, unsigned int&gt;::get_vtable (9,248,753 samples, 0.04%)</title><rect x="79.4" y="1125" width="0.5" height="15.0" fill="rgb(244,55,18)" rx="2" ry="2" />
<text  x="82.45" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (4,828,765 samples, 0.02%)</title><rect x="857.6" y="1125" width="0.2" height="15.0" fill="rgb(252,76,29)" rx="2" ry="2" />
<text  x="860.56" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,172,459 samples, 0.01%)</title><rect x="690.6" y="741" width="0.1" height="15.0" fill="rgb(249,18,41)" rx="2" ry="2" />
<text  x="693.63" y="751.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (4,146,063 samples, 0.02%)</title><rect x="857.9" y="1141" width="0.2" height="15.0" fill="rgb(237,110,15)" rx="2" ry="2" />
<text  x="860.86" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="1045" width="0.1" height="15.0" fill="rgb(233,50,21)" rx="2" ry="2" />
<text  x="848.06" y="1055.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (63,570,975 samples, 0.25%)</title><rect x="777.7" y="981" width="3.0" height="15.0" fill="rgb(209,104,30)" rx="2" ry="2" />
<text  x="780.71" y="991.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::set&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::hash (7,978,995 samples, 0.03%)</title><rect x="215.7" y="933" width="0.4" height="15.0" fill="rgb(242,19,26)" rx="2" ry="2" />
<text  x="218.71" y="943.5" ></text>
</g>
<g >
<title>boost::dynamic_pointer_cast&lt;gazebo::physics::Model, gazebo::physics::Base&gt; (3,931,963 samples, 0.02%)</title><rect x="219.2" y="997" width="0.1" height="15.0" fill="rgb(221,218,23)" rx="2" ry="2" />
<text  x="222.16" y="1007.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::PublishPose (3,128,536 samples, 0.01%)</title><rect x="781.0" y="1029" width="0.2" height="15.0" fill="rgb(240,124,1)" rx="2" ry="2" />
<text  x="784.04" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;gazebo::msgs::Wrench, std::allocator&lt;gazebo::msgs::Wrench&gt; &gt;::end (6,086,659 samples, 0.02%)</title><rect x="640.9" y="885" width="0.3" height="15.0" fill="rgb(228,91,8)" rx="2" ry="2" />
<text  x="643.95" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,515,845 samples, 0.02%)</title><rect x="73.8" y="965" width="0.2" height="15.0" fill="rgb(221,148,8)" rx="2" ry="2" />
<text  x="76.78" y="975.5" ></text>
</g>
<g >
<title>std::_Construct&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt; const&amp;&gt; (6,465,663 samples, 0.03%)</title><rect x="688.1" y="821" width="0.3" height="15.0" fill="rgb(229,140,14)" rx="2" ry="2" />
<text  x="691.13" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (140,071,035 samples, 0.55%)</title><rect x="880.6" y="933" width="6.5" height="15.0" fill="rgb(224,206,45)" rx="2" ry="2" />
<text  x="883.62" y="943.5" ></text>
</g>
<g >
<title>dxJointFixed::getInfo2 (12,356,448 samples, 0.05%)</title><rect x="270.6" y="965" width="0.6" height="15.0" fill="rgb(238,55,32)" rx="2" ry="2" />
<text  x="273.65" y="975.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_133 (2,185,004 samples, 0.01%)</title><rect x="268.7" y="965" width="0.1" height="15.0" fill="rgb(224,127,13)" rx="2" ry="2" />
<text  x="271.70" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,952,475,837 samples, 15.60%)</title><rect x="971.1" y="1093" width="184.0" height="15.0" fill="rgb(237,68,23)" rx="2" ry="2" />
<text  x="974.06" y="1103.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, gazebo_ros2_control::GazeboRosControlPlugin::Load (368,172,242 samples, 1.45%)</title><rect x="186.9" y="1173" width="17.1" height="15.0" fill="rgb(243,105,39)" rx="2" ry="2" />
<text  x="189.89" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,071,908 samples, 0.06%)</title><rect x="709.0" y="901" width="0.7" height="15.0" fill="rgb(228,42,34)" rx="2" ry="2" />
<text  x="712.04" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (33,819,950 samples, 0.13%)</title><rect x="715.7" y="789" width="1.6" height="15.0" fill="rgb(224,213,43)" rx="2" ry="2" />
<text  x="718.73" y="799.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rcl_service_t const&gt;::shared_ptr (6,912,390 samples, 0.03%)</title><rect x="195.0" y="1061" width="0.3" height="15.0" fill="rgb(205,172,40)" rx="2" ry="2" />
<text  x="197.96" y="1071.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::event::EventT&lt;void  (2,161,699 samples, 0.01%)</title><rect x="780.7" y="1013" width="0.1" height="15.0" fill="rgb(210,196,52)" rx="2" ry="2" />
<text  x="783.67" y="1023.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (7,301,618 samples, 0.03%)</title><rect x="57.7" y="581" width="0.4" height="15.0" fill="rgb(245,136,32)" rx="2" ry="2" />
<text  x="60.74" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (63,852,517 samples, 0.25%)</title><rect x="460.2" y="997" width="3.0" height="15.0" fill="rgb(233,16,18)" rx="2" ry="2" />
<text  x="463.21" y="1007.5" ></text>
</g>
<g >
<title>ignition::math::v6::equal&lt;double&gt; (5,859,710 samples, 0.02%)</title><rect x="607.4" y="757" width="0.2" height="15.0" fill="rgb(245,199,43)" rx="2" ry="2" />
<text  x="610.38" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,597,363 samples, 0.01%)</title><rect x="86.1" y="1013" width="0.2" height="15.0" fill="rgb(245,109,38)" rx="2" ry="2" />
<text  x="89.09" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,227,017 samples, 0.02%)</title><rect x="478.2" y="597" width="0.2" height="15.0" fill="rgb(232,180,8)" rx="2" ry="2" />
<text  x="481.16" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (76,502,253 samples, 0.30%)</title><rect x="883.0" y="597" width="3.6" height="15.0" fill="rgb(207,177,39)" rx="2" ry="2" />
<text  x="886.01" y="607.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::find_subscription_ptrs_if&lt;rclcpp::memory_strategy::MemoryStrategy::get_subscription_by_handle (10,093,779 samples, 0.04%)</title><rect x="791.5" y="981" width="0.5" height="15.0" fill="rgb(218,116,53)" rx="2" ry="2" />
<text  x="794.53" y="991.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (2,210,290 samples, 0.01%)</title><rect x="855.7" y="1125" width="0.1" height="15.0" fill="rgb(211,151,17)" rx="2" ry="2" />
<text  x="858.73" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,157,582 samples, 0.01%)</title><rect x="458.0" y="885" width="0.1" height="15.0" fill="rgb(221,29,40)" rx="2" ry="2" />
<text  x="460.96" y="895.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo_ros2_control::GazeboSystemPrivate*, std::default_delete&lt;gazebo_ros2_control::GazeboSystemPrivate&gt; &gt; (4,069,602 samples, 0.02%)</title><rect x="519.2" y="789" width="0.2" height="15.0" fill="rgb(240,209,27)" rx="2" ry="2" />
<text  x="522.22" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (34,290,963 samples, 0.14%)</title><rect x="56.1" y="405" width="1.6" height="15.0" fill="rgb(205,167,16)" rx="2" ry="2" />
<text  x="59.05" y="415.5" ></text>
</g>
<g >
<title>rmw_publish (6,526,646 samples, 0.03%)</title><rect x="830.0" y="1109" width="0.3" height="15.0" fill="rgb(216,96,6)" rx="2" ry="2" />
<text  x="832.99" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="1077" width="0.2" height="15.0" fill="rgb(230,75,50)" rx="2" ry="2" />
<text  x="823.95" y="1087.5" ></text>
</g>
<g >
<title>gazebo::msgs::IMU::MergeFrom (12,506,984 samples, 0.05%)</title><rect x="30.8" y="1109" width="0.6" height="15.0" fill="rgb(239,210,19)" rx="2" ry="2" />
<text  x="33.77" y="1119.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Vector3 (3,859,336 samples, 0.02%)</title><rect x="761.9" y="1013" width="0.2" height="15.0" fill="rgb(223,142,16)" rx="2" ry="2" />
<text  x="764.88" y="1023.5" ></text>
</g>
<g >
<title>[[uprobes]] (16,816,282 samples, 0.07%)</title><rect x="776.9" y="933" width="0.8" height="15.0" fill="rgb(237,87,37)" rx="2" ry="2" />
<text  x="779.93" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::capacity (2,663,401 samples, 0.01%)</title><rect x="856.5" y="1109" width="0.1" height="15.0" fill="rgb(230,149,5)" rx="2" ry="2" />
<text  x="859.45" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::push_back (20,164,903 samples, 0.08%)</title><rect x="82.9" y="1141" width="1.0" height="15.0" fill="rgb(248,87,36)" rx="2" ry="2" />
<text  x="85.93" y="1151.5" ></text>
</g>
<g >
<title>dxStepBody (171,170,189 samples, 0.68%)</title><rect x="440.6" y="949" width="8.0" height="15.0" fill="rgb(228,121,19)" rx="2" ry="2" />
<text  x="443.61" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_client_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_client_t const&gt; &gt; &gt;::end (8,376,914 samples, 0.03%)</title><rect x="808.7" y="1029" width="0.4" height="15.0" fill="rgb(235,65,6)" rx="2" ry="2" />
<text  x="811.70" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (14,148,842 samples, 0.06%)</title><rect x="1178.0" y="1301" width="0.7" height="15.0" fill="rgb(205,199,27)" rx="2" ry="2" />
<text  x="1181.02" y="1311.5" ></text>
</g>
<g >
<title>rclcpp::Time::~Time (2,220,285 samples, 0.01%)</title><rect x="513.9" y="885" width="0.1" height="15.0" fill="rgb(209,80,32)" rx="2" ry="2" />
<text  x="516.86" y="895.5" ></text>
</g>
<g >
<title>__gthread_active_p (6,494,257 samples, 0.03%)</title><rect x="854.7" y="1109" width="0.3" height="15.0" fill="rgb(227,14,0)" rx="2" ry="2" />
<text  x="857.65" y="1119.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo_ros2_control::GazeboSystemPrivate, std::default_delete&lt;gazebo_ros2_control::GazeboSystemPrivate&gt; &gt;::_M_ptr (14,382,637 samples, 0.06%)</title><rect x="611.7" y="821" width="0.7" height="15.0" fill="rgb(231,111,51)" rx="2" ry="2" />
<text  x="614.69" y="831.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (2,173,900 samples, 0.01%)</title><rect x="680.7" y="901" width="0.1" height="15.0" fill="rgb(236,94,24)" rx="2" ry="2" />
<text  x="683.71" y="911.5" ></text>
</g>
<g >
<title>dSpaceCollide2 (80,172,377 samples, 0.32%)</title><rect x="35.3" y="1125" width="3.7" height="15.0" fill="rgb(231,184,21)" rx="2" ry="2" />
<text  x="38.26" y="1135.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (52,617,338 samples, 0.21%)</title><rect x="147.8" y="1285" width="2.4" height="15.0" fill="rgb(253,173,23)" rx="2" ry="2" />
<text  x="150.76" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,179,357 samples, 0.02%)</title><rect x="889.2" y="1205" width="0.3" height="15.0" fill="rgb(234,125,44)" rx="2" ry="2" />
<text  x="892.25" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,574 samples, 0.12%)</title><rect x="145.5" y="1269" width="1.4" height="15.0" fill="rgb(254,143,8)" rx="2" ry="2" />
<text  x="148.53" y="1279.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (7,677,951 samples, 0.03%)</title><rect x="768.7" y="949" width="0.4" height="15.0" fill="rgb(214,59,48)" rx="2" ry="2" />
<text  x="771.74" y="959.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::SetNoArena (2,159,047 samples, 0.01%)</title><rect x="752.3" y="1029" width="0.1" height="15.0" fill="rgb(253,116,33)" rx="2" ry="2" />
<text  x="755.35" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (6,912,390 samples, 0.03%)</title><rect x="195.0" y="997" width="0.3" height="15.0" fill="rgb(241,175,31)" rx="2" ry="2" />
<text  x="197.96" y="1007.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;::_S_buffer_size (3,134,847 samples, 0.01%)</title><rect x="81.2" y="1029" width="0.2" height="15.0" fill="rgb(208,146,49)" rx="2" ry="2" />
<text  x="84.24" y="1039.5" ></text>
</g>
<g >
<title>__dynamic_cast (3,946,163 samples, 0.02%)</title><rect x="74.0" y="1141" width="0.2" height="15.0" fill="rgb(211,133,33)" rx="2" ry="2" />
<text  x="77.03" y="1151.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (21,253,786 samples, 0.08%)</title><rect x="187.3" y="1045" width="1.0" height="15.0" fill="rgb(247,28,33)" rx="2" ry="2" />
<text  x="190.28" y="1055.5" ></text>
</g>
<g >
<title>dxHashSpace::cleanGeoms (4,727,184 samples, 0.02%)</title><rect x="781.6" y="997" width="0.2" height="15.0" fill="rgb(243,15,44)" rx="2" ry="2" />
<text  x="784.57" y="1007.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_331 (4,108,094 samples, 0.02%)</title><rect x="472.4" y="789" width="0.2" height="15.0" fill="rgb(235,98,3)" rx="2" ry="2" />
<text  x="475.39" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::event::EventT&lt;void  (10,073,533 samples, 0.04%)</title><rect x="730.7" y="981" width="0.4" height="15.0" fill="rgb(233,67,29)" rx="2" ry="2" />
<text  x="733.65" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,150,199 samples, 0.01%)</title><rect x="13.5" y="1173" width="0.1" height="15.0" fill="rgb(241,223,33)" rx="2" ry="2" />
<text  x="16.45" y="1183.5" ></text>
</g>
<g >
<title>dSpaceCollide2 (8,088,297 samples, 0.03%)</title><rect x="781.2" y="965" width="0.4" height="15.0" fill="rgb(238,166,40)" rx="2" ry="2" />
<text  x="784.19" y="975.5" ></text>
</g>
<g >
<title>dMultiply0_333 (5,976,866 samples, 0.02%)</title><rect x="243.3" y="901" width="0.2" height="15.0" fill="rgb(211,93,24)" rx="2" ry="2" />
<text  x="246.27" y="911.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (4,163,368 samples, 0.02%)</title><rect x="226.2" y="965" width="0.2" height="15.0" fill="rgb(219,93,53)" rx="2" ry="2" />
<text  x="229.20" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,388,879 samples, 0.06%)</title><rect x="379.6" y="757" width="0.7" height="15.0" fill="rgb(240,210,39)" rx="2" ry="2" />
<text  x="382.61" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,910,423 samples, 0.01%)</title><rect x="779.1" y="885" width="0.1" height="15.0" fill="rgb(246,152,47)" rx="2" ry="2" />
<text  x="782.11" y="895.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (5,472,598 samples, 0.02%)</title><rect x="80.1" y="1045" width="0.3" height="15.0" fill="rgb(233,52,32)" rx="2" ry="2" />
<text  x="83.13" y="1055.5" ></text>
</g>
<g >
<title>[libgazebo_sensors.so.11.10.1] (4,089,171 samples, 0.02%)</title><rect x="212.7" y="1013" width="0.2" height="15.0" fill="rgb(232,122,17)" rx="2" ry="2" />
<text  x="215.66" y="1023.5" ></text>
</g>
<g >
<title>all (25,335,556,290 samples, 100%)</title><rect x="10.0" y="1333" width="1180.0" height="15.0" fill="rgb(219,204,21)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (140,071,035 samples, 0.55%)</title><rect x="880.6" y="949" width="6.5" height="15.0" fill="rgb(215,206,4)" rx="2" ry="2" />
<text  x="883.62" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (3,540,426 samples, 0.01%)</title><rect x="14.4" y="853" width="0.1" height="15.0" fill="rgb(227,48,2)" rx="2" ry="2" />
<text  x="17.36" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37,935,199 samples, 0.15%)</title><rect x="55.9" y="485" width="1.8" height="15.0" fill="rgb(229,155,5)" rx="2" ry="2" />
<text  x="58.88" y="495.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (10,681,560 samples, 0.04%)</title><rect x="729.2" y="965" width="0.5" height="15.0" fill="rgb(254,84,34)" rx="2" ry="2" />
<text  x="732.18" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,914,347 samples, 0.05%)</title><rect x="886.0" y="549" width="0.6" height="15.0" fill="rgb(232,113,16)" rx="2" ry="2" />
<text  x="888.97" y="559.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2,894,351 samples, 0.01%)</title><rect x="840.0" y="1077" width="0.1" height="15.0" fill="rgb(238,55,7)" rx="2" ry="2" />
<text  x="842.96" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,152,963 samples, 0.06%)</title><rect x="116.7" y="1189" width="0.7" height="15.0" fill="rgb(242,174,1)" rx="2" ry="2" />
<text  x="119.71" y="1199.5" ></text>
</g>
<g >
<title>[librclcpp.so] (5,061,714 samples, 0.02%)</title><rect x="800.7" y="1029" width="0.3" height="15.0" fill="rgb(218,6,47)" rx="2" ry="2" />
<text  x="803.73" y="1039.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::mutable_linear_velocity (5,302,558 samples, 0.02%)</title><rect x="26.9" y="1125" width="0.3" height="15.0" fill="rgb(240,4,29)" rx="2" ry="2" />
<text  x="29.94" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,381,905 samples, 0.02%)</title><rect x="796.0" y="885" width="0.3" height="15.0" fill="rgb(224,211,37)" rx="2" ry="2" />
<text  x="799.01" y="895.5" ></text>
</g>
<g >
<title>sdf::v9::Element::Get&lt;unsigned int&gt; (19,426,309 samples, 0.08%)</title><rect x="44.8" y="1093" width="0.9" height="15.0" fill="rgb(227,208,1)" rx="2" ry="2" />
<text  x="47.75" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,060,062 samples, 0.12%)</title><rect x="479.7" y="949" width="1.4" height="15.0" fill="rgb(254,148,6)" rx="2" ry="2" />
<text  x="482.68" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,515,845 samples, 0.02%)</title><rect x="73.8" y="949" width="0.2" height="15.0" fill="rgb(207,174,23)" rx="2" ry="2" />
<text  x="76.78" y="959.5" ></text>
</g>
<g >
<title>dSpaceCollide (301,185,606 samples, 1.19%)</title><rect x="230.5" y="1029" width="14.0" height="15.0" fill="rgb(207,131,19)" rx="2" ry="2" />
<text  x="233.52" y="1039.5" ></text>
</g>
<g >
<title>control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt;::operator= (26,580,429 samples, 0.10%)</title><rect x="839.8" y="1141" width="1.2" height="15.0" fill="rgb(218,63,53)" rx="2" ry="2" />
<text  x="842.77" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,100,153 samples, 0.10%)</title><rect x="705.7" y="773" width="1.1" height="15.0" fill="rgb(223,202,30)" rx="2" ry="2" />
<text  x="708.65" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,889,694 samples, 0.06%)</title><rect x="458.1" y="1013" width="0.7" height="15.0" fill="rgb(254,81,35)" rx="2" ry="2" />
<text  x="461.06" y="1023.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (3,985,156 samples, 0.02%)</title><rect x="228.6" y="949" width="0.2" height="15.0" fill="rgb(221,61,13)" rx="2" ry="2" />
<text  x="231.65" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,221,319 samples, 0.04%)</title><rect x="842.1" y="1061" width="0.4" height="15.0" fill="rgb(253,170,38)" rx="2" ry="2" />
<text  x="845.05" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,019,378 samples, 0.02%)</title><rect x="717.1" y="693" width="0.2" height="15.0" fill="rgb(236,206,13)" rx="2" ry="2" />
<text  x="720.12" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,602,555 samples, 0.01%)</title><rect x="49.3" y="1093" width="0.1" height="15.0" fill="rgb(240,165,29)" rx="2" ry="2" />
<text  x="52.27" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_realloc_insert&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (3,828,230 samples, 0.02%)</title><rect x="589.5" y="709" width="0.2" height="15.0" fill="rgb(207,11,39)" rx="2" ry="2" />
<text  x="592.52" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,221,319 samples, 0.04%)</title><rect x="842.1" y="1029" width="0.4" height="15.0" fill="rgb(216,173,43)" rx="2" ry="2" />
<text  x="845.05" y="1039.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (26,223,569 samples, 0.10%)</title><rect x="11.3" y="1285" width="1.2" height="15.0" fill="rgb(219,198,14)" rx="2" ry="2" />
<text  x="14.32" y="1295.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Collision&gt;::operator (2,213,783 samples, 0.01%)</title><rect x="548.8" y="773" width="0.1" height="15.0" fill="rgb(251,125,28)" rx="2" ry="2" />
<text  x="551.77" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (5,472,598 samples, 0.02%)</title><rect x="80.1" y="1093" width="0.3" height="15.0" fill="rgb(230,125,16)" rx="2" ry="2" />
<text  x="83.13" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;gazebo::msgs::ServerControl, std::allocator&lt;gazebo::msgs::ServerControl&gt; &gt;::clear (9,795,453 samples, 0.04%)</title><rect x="905.2" y="1253" width="0.5" height="15.0" fill="rgb(212,210,41)" rx="2" ry="2" />
<text  x="908.24" y="1263.5" ></text>
</g>
<g >
<title>__pthread_mutex_trylock (3,080,981 samples, 0.01%)</title><rect x="843.0" y="1109" width="0.2" height="15.0" fill="rgb(239,14,47)" rx="2" ry="2" />
<text  x="846.02" y="1119.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::bidirectional_iterator_tag&gt;::__copy_m&lt;std::_List_iterator&lt;gazebo::msgs::Light&gt;, std::back_insert_iterator&lt;std::__cxx11::list&lt;gazebo::msgs::Light, std::allocator&lt;gazebo::msgs::Light&gt; &gt; &gt; &gt; (2,170,625 samples, 0.01%)</title><rect x="763.0" y="997" width="0.1" height="15.0" fill="rgb(245,207,18)" rx="2" ry="2" />
<text  x="766.03" y="1007.5" ></text>
</g>
<g >
<title>gazebo::sensors::SensorManager::SensorContainer::Update (603,247,085 samples, 2.38%)</title><rect x="19.0" y="1205" width="28.1" height="15.0" fill="rgb(226,93,18)" rx="2" ry="2" />
<text  x="21.99" y="1215.5" >g..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (63,492,105 samples, 0.25%)</title><rect x="601.7" y="709" width="3.0" height="15.0" fill="rgb(227,4,44)" rx="2" ry="2" />
<text  x="604.71" y="719.5" ></text>
</g>
<g >
<title>gazebo_ros::Executor::run (82,914,669 samples, 0.33%)</title><rect x="789.7" y="1269" width="3.8" height="15.0" fill="rgb(214,165,43)" rx="2" ry="2" />
<text  x="792.65" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,322,197 samples, 0.05%)</title><rect x="462.5" y="837" width="0.6" height="15.0" fill="rgb(227,15,17)" rx="2" ry="2" />
<text  x="465.52" y="847.5" ></text>
</g>
<g >
<title>dBodyGetRelPointVel (6,216,133 samples, 0.02%)</title><rect x="528.3" y="805" width="0.2" height="15.0" fill="rgb(242,186,15)" rx="2" ry="2" />
<text  x="531.26" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,744,160 samples, 0.03%)</title><rect x="852.0" y="1061" width="0.4" height="15.0" fill="rgb(245,39,16)" rx="2" ry="2" />
<text  x="854.99" y="1071.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, double const*, double*&gt; (2,383,998 samples, 0.01%)</title><rect x="826.8" y="917" width="0.1" height="15.0" fill="rgb(237,155,43)" rx="2" ry="2" />
<text  x="829.80" y="927.5" ></text>
</g>
<g >
<title>gazebo::util::LogPlay::IsOpen (4,100,764 samples, 0.02%)</title><rect x="772.6" y="1029" width="0.2" height="15.0" fill="rgb(230,47,16)" rx="2" ry="2" />
<text  x="775.57" y="1039.5" ></text>
</g>
<g >
<title>nn_xpack_addmsg (2,497,065 samples, 0.01%)</title><rect x="140.3" y="1269" width="0.1" height="15.0" fill="rgb(234,14,38)" rx="2" ry="2" />
<text  x="143.28" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (73,890,903 samples, 0.29%)</title><rect x="172.3" y="1061" width="3.4" height="15.0" fill="rgb(254,221,37)" rx="2" ry="2" />
<text  x="175.26" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,381,123,946 samples, 9.40%)</title><rect x="1044.2" y="1077" width="110.9" height="15.0" fill="rgb(223,183,12)" rx="2" ry="2" />
<text  x="1047.24" y="1087.5" >[[kernel.kall..</text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::operator= (19,825,985 samples, 0.08%)</title><rect x="686.8" y="869" width="1.0" height="15.0" fill="rgb(247,185,50)" rx="2" ry="2" />
<text  x="689.84" y="879.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;bool, char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, unsigned long, unsigned int, double, float, sdf::v9::Time, ignition::math::v6::Angle, ignition::math::v6::Color, ignition::math::v6::Vector2&lt;int&gt;, ignition::math::v6::Vector2&lt;double&gt;, ignition::math::v6::Vector3&lt;double&gt;, ignition::math::v6::Quaternion&lt;double&gt;, ignition::math::v6::Pose3&lt;double&gt; &gt;&amp;&gt; (4,541,982 samples, 0.02%)</title><rect x="44.8" y="981" width="0.2" height="15.0" fill="rgb(237,151,53)" rx="2" ry="2" />
<text  x="47.75" y="991.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::physics::LinkPrivate*, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt; (4,103,928 samples, 0.02%)</title><rect x="587.5" y="677" width="0.2" height="15.0" fill="rgb(251,219,50)" rx="2" ry="2" />
<text  x="590.48" y="687.5" ></text>
</g>
<g >
<title>boost::function1&lt;void, boost::shared_ptr&lt;gazebo::msgs::LaserScanStamped const&gt; const&amp;&gt;::operator (16,489,393 samples, 0.07%)</title><rect x="73.3" y="1141" width="0.7" height="15.0" fill="rgb(231,184,38)" rx="2" ry="2" />
<text  x="76.27" y="1151.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (21,522,794 samples, 0.08%)</title><rect x="887.9" y="1061" width="1.0" height="15.0" fill="rgb(236,6,34)" rx="2" ry="2" />
<text  x="890.93" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,363,069 samples, 0.03%)</title><rect x="40.1" y="1109" width="0.3" height="15.0" fill="rgb(221,81,32)" rx="2" ry="2" />
<text  x="43.09" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (100,330,797 samples, 0.40%)</title><rect x="881.9" y="805" width="4.7" height="15.0" fill="rgb(227,30,45)" rx="2" ry="2" />
<text  x="884.90" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,484,356 samples, 0.07%)</title><rect x="477.5" y="789" width="0.9" height="15.0" fill="rgb(226,152,15)" rx="2" ry="2" />
<text  x="480.50" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_timer_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_timer_t const&gt; &gt; &gt;::emplace_back&lt;std::shared_ptr&lt;rcl_timer_t const&gt; &gt; (6,912,390 samples, 0.03%)</title><rect x="198.3" y="997" width="0.3" height="15.0" fill="rgb(243,134,21)" rx="2" ry="2" />
<text  x="201.26" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,446 samples, 0.01%)</title><rect x="681.0" y="741" width="0.1" height="15.0" fill="rgb(216,99,4)" rx="2" ry="2" />
<text  x="683.97" y="751.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::unique_lock (13,130,685 samples, 0.05%)</title><rect x="80.6" y="1093" width="0.6" height="15.0" fill="rgb(214,44,25)" rx="2" ry="2" />
<text  x="83.63" y="1103.5" ></text>
</g>
<g >
<title>[[uprobes]] (5,615,703 samples, 0.02%)</title><rect x="788.1" y="1029" width="0.3" height="15.0" fill="rgb(238,121,3)" rx="2" ry="2" />
<text  x="791.11" y="1039.5" ></text>
</g>
<g >
<title>rclcpp::SubscriptionBase::get_subscription_handle (6,778,683 samples, 0.03%)</title><rect x="811.4" y="981" width="0.3" height="15.0" fill="rgb(222,171,2)" rx="2" ry="2" />
<text  x="814.38" y="991.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt; &gt;&gt; (12,939,044 samples, 0.05%)</title><rect x="794.7" y="1013" width="0.6" height="15.0" fill="rgb(231,92,10)" rx="2" ry="2" />
<text  x="797.74" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="981" width="0.2" height="15.0" fill="rgb(243,167,12)" rx="2" ry="2" />
<text  x="849.22" y="991.5" ></text>
</g>
<g >
<title>boost::variant&lt;std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::PointCloud_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::PointCloud2_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::Range_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt; &gt;::apply_visitor&lt;boost::detail::variant::get_visitor&lt;std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt; &gt; &gt; (3,946,163 samples, 0.02%)</title><rect x="73.3" y="981" width="0.1" height="15.0" fill="rgb(246,113,48)" rx="2" ry="2" />
<text  x="76.27" y="991.5" ></text>
</g>
<g >
<title>boost::unordered::unordered_set&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt;::emplace&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; const&amp;&gt; (16,270,847 samples, 0.06%)</title><rect x="215.6" y="965" width="0.8" height="15.0" fill="rgb(251,62,18)" rx="2" ry="2" />
<text  x="218.60" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;::_M_get_node (6,736,317 samples, 0.03%)</title><rect x="84.6" y="1013" width="0.3" height="15.0" fill="rgb(250,137,23)" rx="2" ry="2" />
<text  x="87.58" y="1023.5" ></text>
</g>
<g >
<title>google::protobuf::Message::GetTypeName[abi:cxx11] (4,660,333 samples, 0.02%)</title><rect x="32.5" y="1141" width="0.2" height="15.0" fill="rgb(240,53,29)" rx="2" ry="2" />
<text  x="35.47" y="1151.5" ></text>
</g>
<g >
<title>boost::recursive_mutex::lock (5,189,342 samples, 0.02%)</title><rect x="901.9" y="1205" width="0.2" height="15.0" fill="rgb(219,3,43)" rx="2" ry="2" />
<text  x="904.90" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,150,199 samples, 0.01%)</title><rect x="13.5" y="1157" width="0.1" height="15.0" fill="rgb(222,159,13)" rx="2" ry="2" />
<text  x="16.45" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,205,483 samples, 0.10%)</title><rect x="16.8" y="917" width="1.1" height="15.0" fill="rgb(254,108,11)" rx="2" ry="2" />
<text  x="19.77" y="927.5" ></text>
</g>
<g >
<title>__fmod_finite@GLIBC_2.15 (8,300,174 samples, 0.03%)</title><rect x="271.8" y="917" width="0.3" height="15.0" fill="rgb(229,9,54)" rx="2" ry="2" />
<text  x="274.75" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_S_do_relocate (10,334,307 samples, 0.04%)</title><rect x="693.3" y="853" width="0.5" height="15.0" fill="rgb(248,23,40)" rx="2" ry="2" />
<text  x="696.30" y="863.5" ></text>
</g>
<g >
<title>gazebo::common::Time::Sleep (3,640,791 samples, 0.01%)</title><rect x="205.9" y="1061" width="0.2" height="15.0" fill="rgb(241,167,34)" rx="2" ry="2" />
<text  x="208.94" y="1071.5" ></text>
</g>
<g >
<title>[libgazebo_common.so.11.10.1] (2,364,520 samples, 0.01%)</title><rect x="482.3" y="981" width="0.1" height="15.0" fill="rgb(240,34,16)" rx="2" ry="2" />
<text  x="485.29" y="991.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::IsInitialized (5,515,845 samples, 0.02%)</title><rect x="162.4" y="1253" width="0.2" height="15.0" fill="rgb(213,122,49)" rx="2" ry="2" />
<text  x="165.38" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;std::weak_ptr&lt;rclcpp::SubscriptionBase&gt;, std::allocator&lt;std::weak_ptr&lt;rclcpp::SubscriptionBase&gt; &gt; &gt;::end (7,861,657 samples, 0.03%)</title><rect x="197.9" y="1029" width="0.4" height="15.0" fill="rgb(245,4,0)" rx="2" ry="2" />
<text  x="200.89" y="1039.5" ></text>
</g>
<g >
<title>gazebo::common::Time::Double (4,019,987 samples, 0.02%)</title><rect x="651.7" y="901" width="0.2" height="15.0" fill="rgb(239,123,43)" rx="2" ry="2" />
<text  x="654.70" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;void*&gt;::deallocate (7,330,535 samples, 0.03%)</title><rect x="192.8" y="1045" width="0.4" height="15.0" fill="rgb(225,69,45)" rx="2" ry="2" />
<text  x="195.82" y="1055.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator* (7,972,366 samples, 0.03%)</title><rect x="557.6" y="725" width="0.3" height="15.0" fill="rgb(247,111,8)" rx="2" ry="2" />
<text  x="560.58" y="735.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (2,155,734 samples, 0.01%)</title><rect x="512.8" y="821" width="0.1" height="15.0" fill="rgb(238,57,43)" rx="2" ry="2" />
<text  x="515.78" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::get (2,237,807 samples, 0.01%)</title><rect x="594.0" y="757" width="0.1" height="15.0" fill="rgb(224,81,9)" rx="2" ry="2" />
<text  x="597.03" y="767.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, sdf::v9::ParamPrivate*, std::default_delete&lt;sdf::v9::ParamPrivate&gt; &gt; (6,729,605 samples, 0.03%)</title><rect x="45.3" y="997" width="0.4" height="15.0" fill="rgb(225,193,10)" rx="2" ry="2" />
<text  x="48.34" y="1007.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::start_op (92,542,284 samples, 0.37%)</title><rect x="54.7" y="981" width="4.3" height="15.0" fill="rgb(219,56,39)" rx="2" ry="2" />
<text  x="57.65" y="991.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Set (4,063,130 samples, 0.02%)</title><rect x="447.1" y="917" width="0.2" height="15.0" fill="rgb(219,24,12)" rx="2" ry="2" />
<text  x="450.10" y="927.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (14,144,778 samples, 0.06%)</title><rect x="134.7" y="1269" width="0.7" height="15.0" fill="rgb(224,27,24)" rx="2" ry="2" />
<text  x="137.73" y="1279.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;google::protobuf::Message&gt;::operator= (13,969,894 samples, 0.06%)</title><rect x="31.4" y="1109" width="0.6" height="15.0" fill="rgb(251,178,41)" rx="2" ry="2" />
<text  x="34.35" y="1119.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (20,788,531 samples, 0.08%)</title><rect x="195.8" y="1029" width="0.9" height="15.0" fill="rgb(254,157,22)" rx="2" ry="2" />
<text  x="198.76" y="1039.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt; &gt;,  (7,963,145 samples, 0.03%)</title><rect x="795.0" y="949" width="0.3" height="15.0" fill="rgb(234,191,50)" rx="2" ry="2" />
<text  x="797.97" y="959.5" ></text>
</g>
<g >
<title>gazebo_ros::GazeboRosStatePrivate::OnUpdate (14,694,278 samples, 0.06%)</title><rect x="709.7" y="933" width="0.7" height="15.0" fill="rgb(235,183,35)" rx="2" ry="2" />
<text  x="712.70" y="943.5" ></text>
</g>
<g >
<title>rcl_publish (2,281,711 samples, 0.01%)</title><rect x="841.9" y="1109" width="0.2" height="15.0" fill="rgb(241,98,30)" rx="2" ry="2" />
<text  x="844.95" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,151,257 samples, 0.01%)</title><rect x="864.0" y="1061" width="0.1" height="15.0" fill="rgb(206,98,36)" rx="2" ry="2" />
<text  x="866.98" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,762,331 samples, 0.01%)</title><rect x="1174.1" y="1173" width="0.2" height="15.0" fill="rgb(244,95,51)" rx="2" ry="2" />
<text  x="1177.14" y="1183.5" ></text>
</g>
<g >
<title>std::vector&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt; const&amp;&gt; (10,040,806 samples, 0.04%)</title><rect x="694.2" y="885" width="0.5" height="15.0" fill="rgb(236,15,35)" rx="2" ry="2" />
<text  x="697.25" y="895.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (14,329,695 samples, 0.06%)</title><rect x="241.9" y="869" width="0.7" height="15.0" fill="rgb(234,221,41)" rx="2" ry="2" />
<text  x="244.92" y="879.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::~Vector3 (5,730,398 samples, 0.02%)</title><rect x="24.2" y="1045" width="0.3" height="15.0" fill="rgb(252,2,41)" rx="2" ry="2" />
<text  x="27.22" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,636,810 samples, 0.03%)</title><rect x="615.3" y="853" width="0.3" height="15.0" fill="rgb(213,27,37)" rx="2" ry="2" />
<text  x="618.27" y="863.5" ></text>
</g>
<g >
<title>gazebo::util::LogRecord::Running (13,888,680 samples, 0.05%)</title><rect x="743.4" y="1045" width="0.7" height="15.0" fill="rgb(249,104,48)" rx="2" ry="2" />
<text  x="746.43" y="1055.5" ></text>
</g>
<g >
<title>rclcpp::Logger::~Logger (4,224,317 samples, 0.02%)</title><rect x="496.9" y="885" width="0.2" height="15.0" fill="rgb(237,47,23)" rx="2" ry="2" />
<text  x="499.89" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26,975,610 samples, 0.11%)</title><rect x="1172.9" y="1077" width="1.2" height="15.0" fill="rgb(213,5,23)" rx="2" ry="2" />
<text  x="1175.88" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,326,240 samples, 0.01%)</title><rect x="829.5" y="1093" width="0.1" height="15.0" fill="rgb(211,181,23)" rx="2" ry="2" />
<text  x="832.49" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_check_len (4,285,280 samples, 0.02%)</title><rect x="597.2" y="773" width="0.2" height="15.0" fill="rgb(242,8,50)" rx="2" ry="2" />
<text  x="600.17" y="783.5" ></text>
</g>
<g >
<title>boost::unordered::unordered_set&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt;::insert (3,236,320 samples, 0.01%)</title><rect x="32.2" y="1109" width="0.1" height="15.0" fill="rgb(212,178,44)" rx="2" ry="2" />
<text  x="35.16" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,156,643 samples, 0.01%)</title><rect x="689.4" y="741" width="0.1" height="15.0" fill="rgb(236,66,11)" rx="2" ry="2" />
<text  x="692.38" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21,162,786 samples, 0.08%)</title><rect x="618.5" y="917" width="1.0" height="15.0" fill="rgb(222,191,8)" rx="2" ry="2" />
<text  x="621.53" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,574 samples, 0.12%)</title><rect x="145.5" y="1189" width="1.4" height="15.0" fill="rgb(213,158,32)" rx="2" ry="2" />
<text  x="148.53" y="1199.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_subscription_t const,  (6,101,434 samples, 0.02%)</title><rect x="815.7" y="1029" width="0.3" height="15.0" fill="rgb(220,150,15)" rx="2" ry="2" />
<text  x="818.70" y="1039.5" ></text>
</g>
<g >
<title>dBodySetPosition (2,210,106 samples, 0.01%)</title><rect x="551.2" y="757" width="0.1" height="15.0" fill="rgb(249,76,45)" rx="2" ry="2" />
<text  x="554.22" y="767.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;rcl_service_t const&gt;*&gt; (4,016,876 samples, 0.02%)</title><rect x="202.0" y="997" width="0.2" height="15.0" fill="rgb(211,86,42)" rx="2" ry="2" />
<text  x="204.99" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_S_right (2,379,565 samples, 0.01%)</title><rect x="769.5" y="981" width="0.1" height="15.0" fill="rgb(209,32,0)" rx="2" ry="2" />
<text  x="772.50" y="991.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*&gt; (6,056,415 samples, 0.02%)</title><rect x="677.2" y="869" width="0.3" height="15.0" fill="rgb(232,74,32)" rx="2" ry="2" />
<text  x="680.20" y="879.5" ></text>
</g>
<g >
<title>dBodyIsEnabled (2,179,650 samples, 0.01%)</title><rect x="236.4" y="837" width="0.1" height="15.0" fill="rgb(211,64,35)" rx="2" ry="2" />
<text  x="239.43" y="847.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEJoint::SetPosition (37,143,312 samples, 0.15%)</title><rect x="774.7" y="853" width="1.7" height="15.0" fill="rgb(241,37,0)" rx="2" ry="2" />
<text  x="777.72" y="863.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;controller_manager::ControllerManager,  (7,994,305 samples, 0.03%)</title><rect x="617.2" y="917" width="0.4" height="15.0" fill="rgb(224,9,21)" rx="2" ry="2" />
<text  x="620.24" y="927.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;gazebo::physics::Entity*&gt;::operator* (3,937,436 samples, 0.02%)</title><rect x="744.1" y="1045" width="0.2" height="15.0" fill="rgb(216,95,36)" rx="2" ry="2" />
<text  x="747.08" y="1055.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::PublishPose (72,389,669 samples, 0.29%)</title><rect x="218.4" y="1029" width="3.4" height="15.0" fill="rgb(218,228,51)" rx="2" ry="2" />
<text  x="221.41" y="1039.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (15,510,083 samples, 0.06%)</title><rect x="74.3" y="1013" width="0.7" height="15.0" fill="rgb(244,116,44)" rx="2" ry="2" />
<text  x="77.32" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,889,694 samples, 0.06%)</title><rect x="458.1" y="1029" width="0.7" height="15.0" fill="rgb(228,43,38)" rx="2" ry="2" />
<text  x="461.06" y="1039.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::mutable_position (8,483,526 samples, 0.03%)</title><rect x="753.1" y="917" width="0.4" height="15.0" fill="rgb(216,82,33)" rx="2" ry="2" />
<text  x="756.13" y="927.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (987,863,774 samples, 3.90%)</title><rect x="819.3" y="1285" width="46.1" height="15.0" fill="rgb(221,177,24)" rx="2" ry="2" />
<text  x="822.35" y="1295.5" >std:..</text>
</g>
<g >
<title>rclcpp::Node::get_logger (7,884,396 samples, 0.03%)</title><rect x="497.3" y="885" width="0.4" height="15.0" fill="rgb(206,223,38)" rx="2" ry="2" />
<text  x="500.28" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (5,472,598 samples, 0.02%)</title><rect x="80.1" y="1029" width="0.3" height="15.0" fill="rgb(253,128,3)" rx="2" ry="2" />
<text  x="83.13" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,602,555 samples, 0.01%)</title><rect x="49.3" y="1109" width="0.1" height="15.0" fill="rgb(233,89,13)" rx="2" ry="2" />
<text  x="52.27" y="1119.5" ></text>
</g>
<g >
<title>std::recursive_mutex::lock (4,288,700 samples, 0.02%)</title><rect x="544.3" y="741" width="0.2" height="15.0" fill="rgb(229,4,49)" rx="2" ry="2" />
<text  x="547.25" y="751.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::TimerBase&gt;::shared_ptr (7,190,060 samples, 0.03%)</title><rect x="190.1" y="997" width="0.4" height="15.0" fill="rgb(207,138,29)" rx="2" ry="2" />
<text  x="193.14" y="1007.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (3,063,009 samples, 0.01%)</title><rect x="861.2" y="1093" width="0.1" height="15.0" fill="rgb(211,84,43)" rx="2" ry="2" />
<text  x="864.17" y="1103.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::physics::LinkPrivate*, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt; (6,006,086 samples, 0.02%)</title><rect x="591.2" y="709" width="0.3" height="15.0" fill="rgb(221,63,29)" rx="2" ry="2" />
<text  x="594.19" y="719.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::unique_lock (4,330,544 samples, 0.02%)</title><rect x="620.5" y="917" width="0.2" height="15.0" fill="rgb(210,199,32)" rx="2" ry="2" />
<text  x="623.49" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,673,275,551 samples, 18.45%)</title><rect x="937.5" y="1253" width="217.6" height="15.0" fill="rgb(210,137,5)" rx="2" ry="2" />
<text  x="940.48" y="1263.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Correct (4,075,123 samples, 0.02%)</title><rect x="559.2" y="757" width="0.2" height="15.0" fill="rgb(219,24,38)" rx="2" ry="2" />
<text  x="562.18" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,609,313 samples, 0.07%)</title><rect x="462.3" y="853" width="0.9" height="15.0" fill="rgb(238,110,45)" rx="2" ry="2" />
<text  x="465.32" y="863.5" ></text>
</g>
<g >
<title>dGeomMoved (7,467,840 samples, 0.03%)</title><rect x="39.6" y="1109" width="0.3" height="15.0" fill="rgb(207,174,25)" rx="2" ry="2" />
<text  x="42.56" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,766,416 samples, 0.01%)</title><rect x="856.3" y="821" width="0.1" height="15.0" fill="rgb(221,74,31)" rx="2" ry="2" />
<text  x="859.26" y="831.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::CopyFrom (24,404,641 samples, 0.10%)</title><rect x="764.0" y="1013" width="1.2" height="15.0" fill="rgb(254,124,20)" rx="2" ry="2" />
<text  x="767.03" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (6,283,735 samples, 0.02%)</title><rect x="499.6" y="773" width="0.3" height="15.0" fill="rgb(214,164,20)" rx="2" ry="2" />
<text  x="502.61" y="783.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::~unique_lock (8,058,877 samples, 0.03%)</title><rect x="442.1" y="901" width="0.4" height="15.0" fill="rgb(220,97,11)" rx="2" ry="2" />
<text  x="445.10" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::~vector (6,593,742 samples, 0.03%)</title><rect x="692.1" y="901" width="0.3" height="15.0" fill="rgb(206,111,54)" rx="2" ry="2" />
<text  x="695.14" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,469,993,324 samples, 17.64%)</title><rect x="947.0" y="1173" width="208.1" height="15.0" fill="rgb(227,202,5)" rx="2" ry="2" />
<text  x="949.95" y="1183.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*&gt; (5,830,521 samples, 0.02%)</title><rect x="596.3" y="757" width="0.3" height="15.0" fill="rgb(218,29,0)" rx="2" ry="2" />
<text  x="599.33" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,515,845 samples, 0.02%)</title><rect x="73.8" y="997" width="0.2" height="15.0" fill="rgb(234,214,14)" rx="2" ry="2" />
<text  x="76.78" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (56,935,916 samples, 0.22%)</title><rect x="204.0" y="1125" width="2.7" height="15.0" fill="rgb(215,147,33)" rx="2" ry="2" />
<text  x="207.03" y="1135.5" ></text>
</g>
<g >
<title>gazebo::transport::Node::ProcessPublishers (230,434,387 samples, 0.91%)</title><rect x="76.7" y="1173" width="10.7" height="15.0" fill="rgb(229,204,11)" rx="2" ry="2" />
<text  x="79.68" y="1183.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (2,942,120 samples, 0.01%)</title><rect x="902.6" y="1189" width="0.1" height="15.0" fill="rgb(251,218,21)" rx="2" ry="2" />
<text  x="905.58" y="1199.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (56,935,916 samples, 0.22%)</title><rect x="204.0" y="1205" width="2.7" height="15.0" fill="rgb(241,18,19)" rx="2" ry="2" />
<text  x="207.03" y="1215.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Inverse (4,136,938 samples, 0.02%)</title><rect x="527.6" y="789" width="0.2" height="15.0" fill="rgb(244,134,13)" rx="2" ry="2" />
<text  x="530.60" y="799.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (9,247,408 samples, 0.04%)</title><rect x="198.6" y="965" width="0.4" height="15.0" fill="rgb(235,89,27)" rx="2" ry="2" />
<text  x="201.58" y="975.5" ></text>
</g>
<g >
<title>gazebo::physics::World::SimTime (4,700,640 samples, 0.02%)</title><rect x="18.1" y="1221" width="0.2" height="15.0" fill="rgb(247,185,36)" rx="2" ry="2" />
<text  x="21.07" y="1231.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;realtime_tools::RealtimeServerGoalHandle&lt;control_msgs::action::FollowJointTrajectory&gt; &gt;::shared_ptr (3,792,723 samples, 0.01%)</title><rect x="516.6" y="901" width="0.2" height="15.0" fill="rgb(207,79,16)" rx="2" ry="2" />
<text  x="519.61" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,449,729 samples, 0.02%)</title><rect x="214.5" y="757" width="0.2" height="15.0" fill="rgb(214,192,20)" rx="2" ry="2" />
<text  x="217.52" y="767.5" ></text>
</g>
<g >
<title>controller_manager::ControllerManager::write (3,575,197 samples, 0.01%)</title><rect x="776.5" y="933" width="0.2" height="15.0" fill="rgb(225,104,53)" rx="2" ry="2" />
<text  x="779.54" y="943.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::pair&lt;bool, true&gt; (3,325,405 samples, 0.01%)</title><rect x="20.2" y="1157" width="0.2" height="15.0" fill="rgb(223,10,50)" rx="2" ry="2" />
<text  x="23.24" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,440,838 samples, 0.02%)</title><rect x="510.9" y="757" width="0.3" height="15.0" fill="rgb(230,152,24)" rx="2" ry="2" />
<text  x="513.91" y="767.5" ></text>
</g>
<g >
<title>gazebo::msgs::Quaternion::MergeFrom (3,861,162 samples, 0.02%)</title><rect x="753.5" y="917" width="0.2" height="15.0" fill="rgb(245,37,53)" rx="2" ry="2" />
<text  x="756.53" y="927.5" ></text>
</g>
<g >
<title>[libgazebo_transport.so.11.10.1] (3,530,820 samples, 0.01%)</title><rect x="72.4" y="1141" width="0.1" height="15.0" fill="rgb(225,13,21)" rx="2" ry="2" />
<text  x="75.37" y="1151.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::shared_ptr&lt;gazebo::sensors::Sensor&gt; const*, std::vector&lt;std::shared_ptr&lt;gazebo::sensors::Sensor&gt;, std::allocator&lt;std::shared_ptr&lt;gazebo::sensors::Sensor&gt; &gt; &gt; &gt; (5,510,409 samples, 0.02%)</title><rect x="901.5" y="1221" width="0.3" height="15.0" fill="rgb(223,106,52)" rx="2" ry="2" />
<text  x="904.50" y="1231.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (2,745,270 samples, 0.01%)</title><rect x="777.2" y="741" width="0.1" height="15.0" fill="rgb(214,228,10)" rx="2" ry="2" />
<text  x="780.22" y="751.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;gazebo::physics::Entity*&gt; &gt; &gt;::allocate (12,647,684 samples, 0.05%)</title><rect x="445.2" y="837" width="0.6" height="15.0" fill="rgb(235,120,0)" rx="2" ry="2" />
<text  x="448.22" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="1029" width="0.2" height="15.0" fill="rgb(206,46,34)" rx="2" ry="2" />
<text  x="849.22" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,049,089 samples, 0.06%)</title><rect x="796.6" y="933" width="0.6" height="15.0" fill="rgb(230,36,13)" rx="2" ry="2" />
<text  x="799.57" y="943.5" ></text>
</g>
<g >
<title>[[uprobes]] (6,282,725 samples, 0.02%)</title><rect x="776.9" y="917" width="0.3" height="15.0" fill="rgb(206,80,24)" rx="2" ry="2" />
<text  x="779.93" y="927.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::unique_lock (168,835,923 samples, 0.67%)</title><rect x="64.5" y="1157" width="7.9" height="15.0" fill="rgb(213,206,52)" rx="2" ry="2" />
<text  x="67.51" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,334,647 samples, 0.01%)</title><rect x="150.1" y="1157" width="0.1" height="15.0" fill="rgb(248,35,23)" rx="2" ry="2" />
<text  x="153.06" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,829,890 samples, 0.02%)</title><rect x="854.8" y="1029" width="0.2" height="15.0" fill="rgb(220,221,38)" rx="2" ry="2" />
<text  x="857.78" y="1039.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (8,456,501 samples, 0.03%)</title><rect x="42.3" y="1077" width="0.4" height="15.0" fill="rgb(240,150,12)" rx="2" ry="2" />
<text  x="45.35" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,796,629 samples, 0.06%)</title><rect x="465.8" y="1013" width="0.8" height="15.0" fill="rgb(246,167,17)" rx="2" ry="2" />
<text  x="468.82" y="1023.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::_find_ptrs_if_impl&lt;rclcpp::SubscriptionBase, rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (19,077,570 samples, 0.08%)</title><rect x="197.4" y="1045" width="0.9" height="15.0" fill="rgb(242,111,39)" rx="2" ry="2" />
<text  x="200.37" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,152,963 samples, 0.06%)</title><rect x="116.7" y="1205" width="0.7" height="15.0" fill="rgb(205,59,44)" rx="2" ry="2" />
<text  x="119.71" y="1215.5" ></text>
</g>
<g >
<title>boost::asio::io_context::run (94,393,818 samples, 0.37%)</title><rect x="13.6" y="1221" width="4.3" height="15.0" fill="rgb(231,220,26)" rx="2" ry="2" />
<text  x="16.55" y="1231.5" ></text>
</g>
<g >
<title>rcl_publish (4,177,153 samples, 0.02%)</title><rect x="635.6" y="853" width="0.2" height="15.0" fill="rgb(215,136,54)" rx="2" ry="2" />
<text  x="638.61" y="863.5" ></text>
</g>
<g >
<title>rclcpp::Subscription&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt;, rclcpp::message_memory_strategy::MessageMemoryStrategy&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;::handle_message (41,308,945 samples, 0.16%)</title><rect x="797.7" y="981" width="1.9" height="15.0" fill="rgb(213,202,15)" rx="2" ry="2" />
<text  x="800.68" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::clear (8,198,805 samples, 0.03%)</title><rect x="82.2" y="1141" width="0.4" height="15.0" fill="rgb(235,185,37)" rx="2" ry="2" />
<text  x="85.21" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,291,093 samples, 0.01%)</title><rect x="521.1" y="629" width="0.1" height="15.0" fill="rgb(232,49,16)" rx="2" ry="2" />
<text  x="524.08" y="639.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (10,432,424 samples, 0.04%)</title><rect x="835.4" y="1125" width="0.5" height="15.0" fill="rgb(205,228,45)" rx="2" ry="2" />
<text  x="838.44" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,636,810 samples, 0.03%)</title><rect x="615.3" y="917" width="0.3" height="15.0" fill="rgb(232,71,46)" rx="2" ry="2" />
<text  x="618.27" y="927.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,150,768 samples, 0.01%)</title><rect x="523.0" y="885" width="0.1" height="15.0" fill="rgb(240,39,8)" rx="2" ry="2" />
<text  x="526.05" y="895.5" ></text>
</g>
<g >
<title>gazebo::msgs::Quaternion::SetCachedSize (4,383,489 samples, 0.02%)</title><rect x="162.9" y="1157" width="0.2" height="15.0" fill="rgb(220,125,38)" rx="2" ry="2" />
<text  x="165.93" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,172,459 samples, 0.01%)</title><rect x="690.6" y="837" width="0.1" height="15.0" fill="rgb(246,189,4)" rx="2" ry="2" />
<text  x="693.63" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,882,600 samples, 0.02%)</title><rect x="666.3" y="805" width="0.1" height="15.0" fill="rgb(207,131,14)" rx="2" ry="2" />
<text  x="669.26" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_S_relocate (2,148,434 samples, 0.01%)</title><rect x="590.6" y="725" width="0.1" height="15.0" fill="rgb(226,107,5)" rx="2" ry="2" />
<text  x="593.63" y="735.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; (6,378,473 samples, 0.03%)</title><rect x="588.3" y="645" width="0.3" height="15.0" fill="rgb(216,37,7)" rx="2" ry="2" />
<text  x="591.35" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,952,087 samples, 0.02%)</title><rect x="487.2" y="869" width="0.2" height="15.0" fill="rgb(242,213,30)" rx="2" ry="2" />
<text  x="490.20" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="933" width="0.2" height="15.0" fill="rgb(244,112,29)" rx="2" ry="2" />
<text  x="823.95" y="943.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_331 (3,999,934 samples, 0.02%)</title><rect x="580.1" y="741" width="0.2" height="15.0" fill="rgb(223,215,54)" rx="2" ry="2" />
<text  x="583.11" y="751.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Inverse (10,031,259 samples, 0.04%)</title><rect x="607.2" y="773" width="0.4" height="15.0" fill="rgb(251,61,50)" rx="2" ry="2" />
<text  x="610.18" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::SetNoArena (4,788,510 samples, 0.02%)</title><rect x="27.3" y="1109" width="0.3" height="15.0" fill="rgb(207,197,19)" rx="2" ry="2" />
<text  x="30.34" y="1119.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (15,194,205 samples, 0.06%)</title><rect x="790.5" y="885" width="0.7" height="15.0" fill="rgb(206,132,13)" rx="2" ry="2" />
<text  x="793.48" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,434,575 samples, 0.02%)</title><rect x="54.0" y="1029" width="0.3" height="15.0" fill="rgb(243,33,33)" rx="2" ry="2" />
<text  x="57.03" y="1039.5" ></text>
</g>
<g >
<title>[libgazebo_ros_joint_state_publisher.so] (19,365,444 samples, 0.08%)</title><rect x="850.2" y="1141" width="0.9" height="15.0" fill="rgb(251,190,44)" rx="2" ry="2" />
<text  x="853.25" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,440,838 samples, 0.02%)</title><rect x="510.9" y="661" width="0.3" height="15.0" fill="rgb(252,94,39)" rx="2" ry="2" />
<text  x="513.91" y="671.5" ></text>
</g>
<g >
<title>gazebo_ros::GazeboRosStatePrivate::GetEntityState (8,069,732 samples, 0.03%)</title><rect x="794.2" y="853" width="0.3" height="15.0" fill="rgb(230,143,45)" rx="2" ry="2" />
<text  x="797.16" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (46,367,145 samples, 0.18%)</title><rect x="55.5" y="565" width="2.2" height="15.0" fill="rgb(225,64,49)" rx="2" ry="2" />
<text  x="58.49" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,893,279 samples, 0.04%)</title><rect x="458.3" y="965" width="0.5" height="15.0" fill="rgb(217,43,48)" rx="2" ry="2" />
<text  x="461.34" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (148,063,036 samples, 0.58%)</title><rect x="628.2" y="917" width="6.9" height="15.0" fill="rgb(208,211,41)" rx="2" ry="2" />
<text  x="631.17" y="927.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo_ros2_control::GazeboRosControlPrivate&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo_ros2_control::GazeboRosControlPrivate*&gt; &gt; &gt;*&gt; (2,159,542 samples, 0.01%)</title><rect x="728.8" y="965" width="0.1" height="15.0" fill="rgb(235,189,2)" rx="2" ry="2" />
<text  x="731.79" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,363,069 samples, 0.03%)</title><rect x="40.1" y="981" width="0.3" height="15.0" fill="rgb(223,30,11)" rx="2" ry="2" />
<text  x="43.09" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::Node,  (6,041,754 samples, 0.02%)</title><rect x="495.1" y="853" width="0.2" height="15.0" fill="rgb(234,36,11)" rx="2" ry="2" />
<text  x="498.05" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt;::operator++ (4,239,791 samples, 0.02%)</title><rect x="649.9" y="901" width="0.2" height="15.0" fill="rgb(236,142,15)" rx="2" ry="2" />
<text  x="652.91" y="911.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (9,818,000 samples, 0.04%)</title><rect x="801.6" y="933" width="0.4" height="15.0" fill="rgb(238,49,50)" rx="2" ry="2" />
<text  x="804.59" y="943.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::transport::Connection&gt;::operator (13,203,794 samples, 0.05%)</title><rect x="51.4" y="1189" width="0.7" height="15.0" fill="rgb(221,53,40)" rx="2" ry="2" />
<text  x="54.44" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,628,552 samples, 0.03%)</title><rect x="138.3" y="1109" width="0.3" height="15.0" fill="rgb(253,136,35)" rx="2" ry="2" />
<text  x="141.29" y="1119.5" ></text>
</g>
<g >
<title>std::set&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::insert (60,947,374 samples, 0.24%)</title><rect x="544.7" y="757" width="2.9" height="15.0" fill="rgb(222,134,3)" rx="2" ry="2" />
<text  x="547.73" y="767.5" ></text>
</g>
<g >
<title>std::operator!=&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4,199,882 samples, 0.02%)</title><rect x="216.5" y="997" width="0.2" height="15.0" fill="rgb(218,42,33)" rx="2" ry="2" />
<text  x="219.55" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,574,249 samples, 0.01%)</title><rect x="1154.8" y="933" width="0.2" height="15.0" fill="rgb(246,91,29)" rx="2" ry="2" />
<text  x="1157.83" y="943.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (4,107,868 samples, 0.02%)</title><rect x="756.5" y="933" width="0.2" height="15.0" fill="rgb(219,171,23)" rx="2" ry="2" />
<text  x="759.47" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,918,687 samples, 0.02%)</title><rect x="620.7" y="757" width="0.2" height="15.0" fill="rgb(213,161,51)" rx="2" ry="2" />
<text  x="623.69" y="767.5" ></text>
</g>
<g >
<title>boost::operator!=&lt;gazebo::physics::Inertial&gt; (3,994,709 samples, 0.02%)</title><rect x="552.5" y="741" width="0.2" height="15.0" fill="rgb(217,61,26)" rx="2" ry="2" />
<text  x="555.52" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_get_node (5,623,817 samples, 0.02%)</title><rect x="83.6" y="1093" width="0.3" height="15.0" fill="rgb(239,226,37)" rx="2" ry="2" />
<text  x="86.61" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (51,821,710 samples, 0.20%)</title><rect x="183.9" y="1029" width="2.4" height="15.0" fill="rgb(246,182,30)" rx="2" ry="2" />
<text  x="186.88" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_insert&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const&amp;&gt; (7,677,951 samples, 0.03%)</title><rect x="768.7" y="1029" width="0.4" height="15.0" fill="rgb(238,122,14)" rx="2" ry="2" />
<text  x="771.74" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (196,264,744 samples, 0.77%)</title><rect x="177.1" y="1093" width="9.2" height="15.0" fill="rgb(229,133,3)" rx="2" ry="2" />
<text  x="180.15" y="1103.5" ></text>
</g>
<g >
<title>boost::_bi::list1&lt;boost::_bi::value&lt;gazebo_ros2_control::GazeboRosControlPrivate*&gt; &gt;::operator (89,242,212 samples, 0.35%)</title><rect x="773.6" y="965" width="4.1" height="15.0" fill="rgb(205,166,34)" rx="2" ry="2" />
<text  x="776.55" y="975.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetParent (3,806,906 samples, 0.02%)</title><rect x="540.6" y="773" width="0.2" height="15.0" fill="rgb(210,9,0)" rx="2" ry="2" />
<text  x="543.64" y="783.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (10,262,198 samples, 0.04%)</title><rect x="687.3" y="837" width="0.5" height="15.0" fill="rgb(249,111,8)" rx="2" ry="2" />
<text  x="690.29" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,143,840 samples, 0.05%)</title><rect x="871.4" y="1173" width="0.6" height="15.0" fill="rgb(249,140,30)" rx="2" ry="2" />
<text  x="874.45" y="1183.5" ></text>
</g>
<g >
<title>gazebo::common::Time::Time (3,153,704 samples, 0.01%)</title><rect x="894.3" y="1237" width="0.1" height="15.0" fill="rgb(206,117,13)" rx="2" ry="2" />
<text  x="897.28" y="1247.5" ></text>
</g>
<g >
<title>dxWorldProcessContext::AllocateArray&lt;boost::recursive_mutex&gt; (2,282,624 samples, 0.01%)</title><rect x="429.2" y="949" width="0.1" height="15.0" fill="rgb(236,109,4)" rx="2" ry="2" />
<text  x="432.17" y="959.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::add_handles_to_wait_set (55,648,785 samples, 0.22%)</title><rect x="193.2" y="1077" width="2.6" height="15.0" fill="rgb(248,50,24)" rx="2" ry="2" />
<text  x="196.17" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (360,752,850 samples, 1.42%)</title><rect x="872.4" y="1269" width="16.8" height="15.0" fill="rgb(238,110,0)" rx="2" ry="2" />
<text  x="875.44" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,952,087 samples, 0.02%)</title><rect x="487.2" y="965" width="0.2" height="15.0" fill="rgb(219,86,14)" rx="2" ry="2" />
<text  x="490.20" y="975.5" ></text>
</g>
<g >
<title>[unknown] (47,584,213 samples, 0.19%)</title><rect x="117.8" y="1269" width="2.2" height="15.0" fill="rgb(226,142,0)" rx="2" ry="2" />
<text  x="120.77" y="1279.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;hardware_interface::SystemInterface, std::default_delete&lt;hardware_interface::SystemInterface&gt; &gt;::operator (8,032,602 samples, 0.03%)</title><rect x="613.1" y="869" width="0.3" height="15.0" fill="rgb(244,197,18)" rx="2" ry="2" />
<text  x="616.07" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,052,172 samples, 0.04%)</title><rect x="175.2" y="1013" width="0.5" height="15.0" fill="rgb(254,179,12)" rx="2" ry="2" />
<text  x="178.24" y="1023.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::event::EventT&lt;void  (6,143,041 samples, 0.02%)</title><rect x="731.4" y="965" width="0.3" height="15.0" fill="rgb(205,144,28)" rx="2" ry="2" />
<text  x="734.42" y="975.5" ></text>
</g>
<g >
<title>boost_asio_handler_alloc_helpers::deallocate&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (8,084,108 samples, 0.03%)</title><rect x="14.5" y="1125" width="0.4" height="15.0" fill="rgb(242,181,1)" rx="2" ry="2" />
<text  x="17.52" y="1135.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (27,402,217 samples, 0.11%)</title><rect x="257.9" y="981" width="1.3" height="15.0" fill="rgb(209,47,10)" rx="2" ry="2" />
<text  x="260.93" y="991.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::get_next_subscription (27,274,093 samples, 0.11%)</title><rect x="791.2" y="1013" width="1.3" height="15.0" fill="rgb(235,106,17)" rx="2" ry="2" />
<text  x="794.19" y="1023.5" ></text>
</g>
<g >
<title>boost_asio_handler_alloc_helpers::allocate&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (2,286,334 samples, 0.01%)</title><rect x="54.3" y="965" width="0.1" height="15.0" fill="rgb(226,1,7)" rx="2" ry="2" />
<text  x="57.28" y="975.5" ></text>
</g>
<g >
<title>intersectRectQuad (2,150,187 samples, 0.01%)</title><rect x="250.9" y="965" width="0.1" height="15.0" fill="rgb(218,97,12)" rx="2" ry="2" />
<text  x="253.86" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (4,256,050 samples, 0.02%)</title><rect x="586.1" y="693" width="0.2" height="15.0" fill="rgb(252,215,9)" rx="2" ry="2" />
<text  x="589.09" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,596,349 samples, 0.01%)</title><rect x="220.3" y="869" width="0.2" height="15.0" fill="rgb(211,96,47)" rx="2" ry="2" />
<text  x="223.31" y="879.5" ></text>
</g>
<g >
<title>realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt;::lock (9,578,986 samples, 0.04%)</title><rect x="842.7" y="1141" width="0.5" height="15.0" fill="rgb(240,198,18)" rx="2" ry="2" />
<text  x="845.72" y="1151.5" ></text>
</g>
<g >
<title>[libgazebo_sensors.so.11.10.1] (5,001,329 samples, 0.02%)</title><rect x="891.5" y="1253" width="0.2" height="15.0" fill="rgb(237,119,49)" rx="2" ry="2" />
<text  x="894.50" y="1263.5" ></text>
</g>
<g >
<title>removeJointReferencesFromAttachedBodies (4,144,637 samples, 0.02%)</title><rect x="230.2" y="1013" width="0.2" height="15.0" fill="rgb(205,209,2)" rx="2" ry="2" />
<text  x="233.23" y="1023.5" ></text>
</g>
<g >
<title>ode::quickstep::dot6 (2,152,649 samples, 0.01%)</title><rect x="748.7" y="949" width="0.1" height="15.0" fill="rgb(206,183,41)" rx="2" ry="2" />
<text  x="751.72" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,596,349 samples, 0.01%)</title><rect x="220.3" y="917" width="0.2" height="15.0" fill="rgb(234,119,22)" rx="2" ry="2" />
<text  x="223.31" y="927.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (12,516,779,584 samples, 49.40%)</title><rect x="206.7" y="1253" width="583.0" height="15.0" fill="rgb(221,182,31)" rx="2" ry="2" />
<text  x="209.69" y="1263.5" >[libstdc++.so.6.0.28]</text>
</g>
<g >
<title>PublishPerformanceMetrics (8,395,532 samples, 0.03%)</title><rect x="896.6" y="1237" width="0.4" height="15.0" fill="rgb(251,196,20)" rx="2" ry="2" />
<text  x="899.57" y="1247.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;trajectory_msgs::msg::JointTrajectory_&lt;std::allocator&lt;void&gt; &gt;,  (7,124,512 samples, 0.03%)</title><rect x="511.6" y="869" width="0.3" height="15.0" fill="rgb(237,78,20)" rx="2" ry="2" />
<text  x="514.60" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (9,011,344 samples, 0.04%)</title><rect x="594.2" y="773" width="0.4" height="15.0" fill="rgb(236,198,25)" rx="2" ry="2" />
<text  x="597.23" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,647,255 samples, 0.07%)</title><rect x="706.0" y="709" width="0.8" height="15.0" fill="rgb(225,167,17)" rx="2" ry="2" />
<text  x="708.95" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,446 samples, 0.01%)</title><rect x="681.0" y="773" width="0.1" height="15.0" fill="rgb(207,86,41)" rx="2" ry="2" />
<text  x="683.97" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_create_node&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const&amp;&gt; (6,339,691 samples, 0.03%)</title><rect x="546.8" y="693" width="0.3" height="15.0" fill="rgb(223,129,32)" rx="2" ry="2" />
<text  x="549.79" y="703.5" ></text>
</g>
<g >
<title>[unknown] (164,516,172 samples, 0.65%)</title><rect x="134.7" y="1285" width="7.7" height="15.0" fill="rgb(243,108,38)" rx="2" ry="2" />
<text  x="137.73" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,421,589 samples, 0.10%)</title><rect x="56.3" y="325" width="1.2" height="15.0" fill="rgb(233,30,12)" rx="2" ry="2" />
<text  x="59.27" y="335.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (5,738,107 samples, 0.02%)</title><rect x="798.6" y="773" width="0.3" height="15.0" fill="rgb(206,59,38)" rx="2" ry="2" />
<text  x="801.59" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,362,860 samples, 0.04%)</title><rect x="614.5" y="885" width="0.4" height="15.0" fill="rgb(242,209,13)" rx="2" ry="2" />
<text  x="617.45" y="895.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator= (2,159,161 samples, 0.01%)</title><rect x="446.4" y="901" width="0.1" height="15.0" fill="rgb(217,197,3)" rx="2" ry="2" />
<text  x="449.36" y="911.5" ></text>
</g>
<g >
<title>std::get_if&lt;ignition::math::v6::Vector3&lt;double&gt;, bool, char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, unsigned long, unsigned int, double, float, sdf::v9::Time, ignition::math::v6::Angle, ignition::math::v6::Color, ignition::math::v6::Vector2&lt;int&gt;, ignition::math::v6::Vector2&lt;double&gt;, ignition::math::v6::Vector3&lt;double&gt;, ignition::math::v6::Quaternion&lt;double&gt;, ignition::math::v6::Pose3&lt;double&gt; &gt; (3,903,482 samples, 0.02%)</title><rect x="29.8" y="1061" width="0.2" height="15.0" fill="rgb(209,65,37)" rx="2" ry="2" />
<text  x="32.81" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_deallocate (2,162,662 samples, 0.01%)</title><rect x="692.3" y="885" width="0.1" height="15.0" fill="rgb(224,97,23)" rx="2" ry="2" />
<text  x="695.35" y="895.5" ></text>
</g>
<g >
<title>ode::quickstep::compute_invM_JT (5,057,948 samples, 0.02%)</title><rect x="786.7" y="949" width="0.3" height="15.0" fill="rgb(235,65,3)" rx="2" ry="2" />
<text  x="789.72" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,377,139 samples, 0.03%)</title><rect x="214.4" y="821" width="0.3" height="15.0" fill="rgb(210,169,13)" rx="2" ry="2" />
<text  x="217.43" y="831.5" ></text>
</g>
<g >
<title>[libcontroller_manager.so] (4,135,669 samples, 0.02%)</title><rect x="523.4" y="885" width="0.2" height="15.0" fill="rgb(240,200,42)" rx="2" ry="2" />
<text  x="526.42" y="895.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Vector3 (39,794,011 samples, 0.16%)</title><rect x="656.1" y="885" width="1.8" height="15.0" fill="rgb(221,13,54)" rx="2" ry="2" />
<text  x="659.09" y="895.5" ></text>
</g>
<g >
<title>[unknown] (299,662,593 samples, 1.18%)</title><rect x="103.5" y="1269" width="13.9" height="15.0" fill="rgb(221,228,31)" rx="2" ry="2" />
<text  x="106.46" y="1279.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (3,813,519 samples, 0.02%)</title><rect x="550.6" y="757" width="0.2" height="15.0" fill="rgb(251,78,4)" rx="2" ry="2" />
<text  x="553.61" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,305,043 samples, 0.10%)</title><rect x="22.9" y="997" width="1.1" height="15.0" fill="rgb(247,179,14)" rx="2" ry="2" />
<text  x="25.86" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,992,783 samples, 0.02%)</title><rect x="707.3" y="917" width="0.3" height="15.0" fill="rgb(253,224,36)" rx="2" ry="2" />
<text  x="710.29" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt;::erase (12,627,182 samples, 0.05%)</title><rect x="816.8" y="1029" width="0.6" height="15.0" fill="rgb(253,61,22)" rx="2" ry="2" />
<text  x="819.83" y="1039.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4,495,038 samples, 0.02%)</title><rect x="794.5" y="885" width="0.2" height="15.0" fill="rgb(223,63,21)" rx="2" ry="2" />
<text  x="797.53" y="895.5" ></text>
</g>
<g >
<title>ddsrt_mutex_lock (3,281,146 samples, 0.01%)</title><rect x="1158.9" y="1301" width="0.1" height="15.0" fill="rgb(223,71,22)" rx="2" ry="2" />
<text  x="1161.86" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,415,848 samples, 0.03%)</title><rect x="145.2" y="1157" width="0.3" height="15.0" fill="rgb(215,192,8)" rx="2" ry="2" />
<text  x="148.23" y="1167.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (75,068,030 samples, 0.30%)</title><rect x="21.0" y="1125" width="3.5" height="15.0" fill="rgb(225,173,49)" rx="2" ry="2" />
<text  x="23.99" y="1135.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (15,194,205 samples, 0.06%)</title><rect x="790.5" y="869" width="0.7" height="15.0" fill="rgb(235,18,11)" rx="2" ry="2" />
<text  x="793.48" y="879.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (4,133,986 samples, 0.02%)</title><rect x="214.9" y="949" width="0.2" height="15.0" fill="rgb(226,40,27)" rx="2" ry="2" />
<text  x="217.92" y="959.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_subscription (50,687,162 samples, 0.20%)</title><rect x="797.7" y="997" width="2.3" height="15.0" fill="rgb(220,208,11)" rx="2" ry="2" />
<text  x="800.68" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="949" width="0.2" height="15.0" fill="rgb(213,147,45)" rx="2" ry="2" />
<text  x="823.95" y="959.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::unique_lock (3,303,114 samples, 0.01%)</title><rect x="62.8" y="1173" width="0.2" height="15.0" fill="rgb(217,30,3)" rx="2" ry="2" />
<text  x="65.82" y="1183.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo::common::UpdateInfo const&amp;&gt; (5,879,819 samples, 0.02%)</title><rect x="625.5" y="901" width="0.3" height="15.0" fill="rgb(209,177,14)" rx="2" ry="2" />
<text  x="628.55" y="911.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (8,332,306 samples, 0.03%)</title><rect x="810.6" y="933" width="0.4" height="15.0" fill="rgb(215,102,51)" rx="2" ry="2" />
<text  x="813.61" y="943.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::shared_ptr (4,151,006 samples, 0.02%)</title><rect x="741.7" y="1013" width="0.2" height="15.0" fill="rgb(243,116,46)" rx="2" ry="2" />
<text  x="744.73" y="1023.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::remove_null_handles (63,981,757 samples, 0.25%)</title><rect x="199.6" y="1077" width="3.0" height="15.0" fill="rgb(210,79,37)" rx="2" ry="2" />
<text  x="202.63" y="1087.5" ></text>
</g>
<g >
<title>dSpaceCollide2 (28,712,088 samples, 0.11%)</title><rect x="36.8" y="981" width="1.3" height="15.0" fill="rgb(210,158,4)" rx="2" ry="2" />
<text  x="39.79" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,790,683 samples, 0.03%)</title><rect x="1188.9" y="1013" width="0.4" height="15.0" fill="rgb(242,191,27)" rx="2" ry="2" />
<text  x="1191.88" y="1023.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::unique_lock (3,923,638 samples, 0.02%)</title><rect x="721.5" y="869" width="0.2" height="15.0" fill="rgb(241,188,27)" rx="2" ry="2" />
<text  x="724.48" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_realloc_insert&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (3,804,425 samples, 0.02%)</title><rect x="586.5" y="677" width="0.1" height="15.0" fill="rgb(227,39,9)" rx="2" ry="2" />
<text  x="589.47" y="687.5" ></text>
</g>
<g >
<title>[[uprobes]] (2,150,199 samples, 0.01%)</title><rect x="13.5" y="1301" width="0.1" height="15.0" fill="rgb(233,51,47)" rx="2" ry="2" />
<text  x="16.45" y="1311.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::operator (2,198,049 samples, 0.01%)</title><rect x="789.0" y="1061" width="0.1" height="15.0" fill="rgb(208,0,26)" rx="2" ry="2" />
<text  x="791.99" y="1071.5" ></text>
</g>
<g >
<title>dShortestAngularDistanceUpdate (6,341,589 samples, 0.03%)</title><rect x="471.4" y="805" width="0.3" height="15.0" fill="rgb(252,85,15)" rx="2" ry="2" />
<text  x="474.38" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,697,692 samples, 0.04%)</title><rect x="853.8" y="981" width="0.5" height="15.0" fill="rgb(223,96,40)" rx="2" ry="2" />
<text  x="856.77" y="991.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (4,426,657 samples, 0.02%)</title><rect x="900.2" y="1157" width="0.2" height="15.0" fill="rgb(228,19,17)" rx="2" ry="2" />
<text  x="903.23" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37,935,199 samples, 0.15%)</title><rect x="55.9" y="469" width="1.8" height="15.0" fill="rgb(220,108,14)" rx="2" ry="2" />
<text  x="58.88" y="479.5" ></text>
</g>
<g >
<title>[libgazebo_ros_vacuum_gripper.so] (4,205,925 samples, 0.02%)</title><rect x="726.2" y="917" width="0.2" height="15.0" fill="rgb(206,56,19)" rx="2" ry="2" />
<text  x="729.17" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, int&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::erase[abi:cxx11] (3,402,041 samples, 0.01%)</title><rect x="13.7" y="757" width="0.2" height="15.0" fill="rgb(238,97,25)" rx="2" ry="2" />
<text  x="16.71" y="767.5" ></text>
</g>
<g >
<title>rclcpp::AnyExecutable::AnyExecutable (6,717,612 samples, 0.03%)</title><rect x="793.8" y="1077" width="0.4" height="15.0" fill="rgb(238,102,30)" rx="2" ry="2" />
<text  x="796.84" y="1087.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Vector3 (9,563,639 samples, 0.04%)</title><rect x="556.7" y="725" width="0.4" height="15.0" fill="rgb(229,42,46)" rx="2" ry="2" />
<text  x="559.69" y="735.5" ></text>
</g>
<g >
<title>__pthread_mutex_cond_lock (4,542,012 samples, 0.02%)</title><rect x="147.6" y="1285" width="0.2" height="15.0" fill="rgb(215,196,53)" rx="2" ry="2" />
<text  x="150.55" y="1295.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::GetChildJointsLinks (5,723,840 samples, 0.02%)</title><rect x="587.0" y="741" width="0.3" height="15.0" fill="rgb(232,102,18)" rx="2" ry="2" />
<text  x="590.02" y="751.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::zero (12,633,740 samples, 0.05%)</title><rect x="832.2" y="1141" width="0.5" height="15.0" fill="rgb(243,154,15)" rx="2" ry="2" />
<text  x="835.15" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_S_do_relocate (6,237,325 samples, 0.02%)</title><rect x="597.4" y="757" width="0.3" height="15.0" fill="rgb(247,5,5)" rx="2" ry="2" />
<text  x="600.37" y="767.5" ></text>
</g>
<g >
<title>gazebo::physics::ODESliderJoint::SetForceImpl (6,246,416 samples, 0.02%)</title><rect x="472.8" y="853" width="0.3" height="15.0" fill="rgb(234,105,36)" rx="2" ry="2" />
<text  x="475.76" y="863.5" ></text>
</g>
<g >
<title>google::protobuf::Message::~Message (5,496,168 samples, 0.02%)</title><rect x="772.2" y="981" width="0.3" height="15.0" fill="rgb(206,121,30)" rx="2" ry="2" />
<text  x="775.21" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,890,104 samples, 0.02%)</title><rect x="619.3" y="805" width="0.2" height="15.0" fill="rgb(213,102,23)" rx="2" ry="2" />
<text  x="622.33" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,634,595 samples, 0.02%)</title><rect x="635.3" y="853" width="0.2" height="15.0" fill="rgb(217,20,30)" rx="2" ry="2" />
<text  x="638.25" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,661,405 samples, 0.10%)</title><rect x="736.5" y="885" width="1.1" height="15.0" fill="rgb(216,78,31)" rx="2" ry="2" />
<text  x="739.46" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (105,880,976 samples, 0.42%)</title><rect x="881.6" y="837" width="5.0" height="15.0" fill="rgb(215,14,5)" rx="2" ry="2" />
<text  x="884.64" y="847.5" ></text>
</g>
<g >
<title>hardware_interface::ControllerInfo::ControllerInfo (24,147,272 samples, 0.10%)</title><rect x="521.4" y="885" width="1.1" height="15.0" fill="rgb(211,222,24)" rx="2" ry="2" />
<text  x="524.37" y="895.5" ></text>
</g>
<g >
<title>[libgazebo_ros2_control.so] (8,334,899 samples, 0.03%)</title><rect x="186.9" y="1157" width="0.4" height="15.0" fill="rgb(208,205,52)" rx="2" ry="2" />
<text  x="189.89" y="1167.5" ></text>
</g>
<g >
<title>gazebo::physics::Inertial::CoG (8,447,288 samples, 0.03%)</title><rect x="684.2" y="869" width="0.4" height="15.0" fill="rgb(230,55,21)" rx="2" ry="2" />
<text  x="687.18" y="879.5" ></text>
</g>
<g >
<title>std::_Construct&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt; const&amp;&gt; (22,604,246 samples, 0.09%)</title><rect x="770.0" y="981" width="1.1" height="15.0" fill="rgb(236,81,28)" rx="2" ry="2" />
<text  x="773.00" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;trajectory_msgs::msg::JointTrajectoryPoint_&lt;std::allocator&lt;void&gt; &gt; const*, std::vector&lt;trajectory_msgs::msg::JointTrajectoryPoint_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;trajectory_msgs::msg::JointTrajectoryPoint_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt;::__normal_iterator&lt;trajectory_msgs::msg::JointTrajectoryPoint_&lt;std::allocator&lt;void&gt; &gt;*&gt; (2,234,815 samples, 0.01%)</title><rect x="776.9" y="885" width="0.1" height="15.0" fill="rgb(206,135,7)" rx="2" ry="2" />
<text  x="779.93" y="895.5" ></text>
</g>
<g >
<title>[libgazebo_transport.so.11.10.1] (5,952,317 samples, 0.02%)</title><rect x="86.7" y="1093" width="0.3" height="15.0" fill="rgb(210,99,17)" rx="2" ry="2" />
<text  x="89.68" y="1103.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::PublishImpl (33,954,612 samples, 0.13%)</title><rect x="721.7" y="885" width="1.5" height="15.0" fill="rgb(250,111,14)" rx="2" ry="2" />
<text  x="724.66" y="895.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::publish (22,921,585 samples, 0.09%)</title><rect x="841.6" y="1141" width="1.1" height="15.0" fill="rgb(230,60,35)" rx="2" ry="2" />
<text  x="844.65" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,370,730 samples, 0.04%)</title><rect x="578.1" y="565" width="0.4" height="15.0" fill="rgb(205,224,31)" rx="2" ry="2" />
<text  x="581.06" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (266,776,058 samples, 1.05%)</title><rect x="876.6" y="1077" width="12.4" height="15.0" fill="rgb(236,125,18)" rx="2" ry="2" />
<text  x="879.58" y="1087.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_get_Tp_allocator (3,944,817 samples, 0.02%)</title><rect x="667.6" y="901" width="0.2" height="15.0" fill="rgb(234,6,51)" rx="2" ry="2" />
<text  x="670.60" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,816,086 samples, 0.02%)</title><rect x="43.4" y="1077" width="0.3" height="15.0" fill="rgb(229,150,48)" rx="2" ry="2" />
<text  x="46.39" y="1087.5" ></text>
</g>
<g >
<title>_dCalcVectorCross3 (4,020,462 samples, 0.02%)</title><rect x="270.1" y="949" width="0.2" height="15.0" fill="rgb(211,135,25)" rx="2" ry="2" />
<text  x="273.08" y="959.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::transport::Publication&gt;::operator bool (3,856,841 samples, 0.02%)</title><rect x="898.6" y="1205" width="0.1" height="15.0" fill="rgb(239,167,48)" rx="2" ry="2" />
<text  x="901.57" y="1215.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::X (4,135,809 samples, 0.02%)</title><rect x="581.8" y="773" width="0.2" height="15.0" fill="rgb(253,140,2)" rx="2" ry="2" />
<text  x="584.78" y="783.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2,160,969 samples, 0.01%)</title><rect x="247.6" y="949" width="0.1" height="15.0" fill="rgb(243,165,36)" rx="2" ry="2" />
<text  x="250.59" y="959.5" ></text>
</g>
<g >
<title>gazebo::msgs::Vector3d::Vector3d (2,194,322 samples, 0.01%)</title><rect x="720.2" y="901" width="0.1" height="15.0" fill="rgb(223,149,49)" rx="2" ry="2" />
<text  x="723.22" y="911.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::can_be_taken_from (7,888,579 samples, 0.03%)</title><rect x="800.0" y="1045" width="0.4" height="15.0" fill="rgb(244,211,49)" rx="2" ry="2" />
<text  x="803.04" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,666,978 samples, 0.01%)</title><rect x="23.8" y="885" width="0.2" height="15.0" fill="rgb(237,7,10)" rx="2" ry="2" />
<text  x="26.82" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1189" width="0.1" height="15.0" fill="rgb(210,81,37)" rx="2" ry="2" />
<text  x="135.18" y="1199.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;gazebo_ros2_control::GazeboRosControlPlugin::Load (368,172,242 samples, 1.45%)</title><rect x="186.9" y="1237" width="17.1" height="15.0" fill="rgb(222,34,5)" rx="2" ry="2" />
<text  x="189.89" y="1247.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, int, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::find (3,278,517 samples, 0.01%)</title><rect x="80.0" y="1013" width="0.1" height="15.0" fill="rgb(211,99,30)" rx="2" ry="2" />
<text  x="82.98" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,850,278 samples, 0.02%)</title><rect x="832.5" y="1045" width="0.2" height="15.0" fill="rgb(226,177,42)" rx="2" ry="2" />
<text  x="835.51" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="1061" width="0.1" height="15.0" fill="rgb(213,219,42)" rx="2" ry="2" />
<text  x="848.06" y="1071.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, gazebo_ros::GazeboRosInitPrivate*, std::_Placeholder&lt;1&gt; &gt; (3,633,523 samples, 0.01%)</title><rect x="726.7" y="949" width="0.2" height="15.0" fill="rgb(211,17,14)" rx="2" ry="2" />
<text  x="729.74" y="959.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (79,271,711 samples, 0.31%)</title><rect x="928.2" y="1301" width="3.7" height="15.0" fill="rgb(236,216,39)" rx="2" ry="2" />
<text  x="931.21" y="1311.5" ></text>
</g>
<g >
<title>[libgazebo_ode.so.11.10.1] (2,169,233 samples, 0.01%)</title><rect x="518.7" y="805" width="0.1" height="15.0" fill="rgb(254,88,27)" rx="2" ry="2" />
<text  x="521.69" y="815.5" ></text>
</g>
<g >
<title>[libConveyorBeltPlugin.so] (4,334,781 samples, 0.02%)</title><rect x="622.7" y="965" width="0.2" height="15.0" fill="rgb(219,9,20)" rx="2" ry="2" />
<text  x="625.70" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,375,756 samples, 0.11%)</title><rect x="479.8" y="901" width="1.3" height="15.0" fill="rgb(209,166,17)" rx="2" ry="2" />
<text  x="482.76" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,579,944 samples, 0.03%)</title><rect x="75.2" y="949" width="0.4" height="15.0" fill="rgb(216,125,27)" rx="2" ry="2" />
<text  x="78.18" y="959.5" ></text>
</g>
<g >
<title>dSpaceCollide2 (110,231,128 samples, 0.44%)</title><rect x="234.9" y="965" width="5.2" height="15.0" fill="rgb(234,147,43)" rx="2" ry="2" />
<text  x="237.92" y="975.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::~_Vector_base (4,030,839 samples, 0.02%)</title><rect x="515.2" y="853" width="0.2" height="15.0" fill="rgb(221,123,36)" rx="2" ry="2" />
<text  x="518.18" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,634,833 samples, 0.03%)</title><rect x="796.3" y="869" width="0.3" height="15.0" fill="rgb(233,98,54)" rx="2" ry="2" />
<text  x="799.26" y="879.5" ></text>
</g>
<g >
<title>sCylinderTrimeshColliderData::_cldTestAxis (4,205,366 samples, 0.02%)</title><rect x="253.9" y="933" width="0.2" height="15.0" fill="rgb(235,218,23)" rx="2" ry="2" />
<text  x="256.90" y="943.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, int, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::key_comp (2,537,634 samples, 0.01%)</title><rect x="86.3" y="1125" width="0.1" height="15.0" fill="rgb(242,49,34)" rx="2" ry="2" />
<text  x="89.26" y="1135.5" ></text>
</g>
<g >
<title>boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Publisher*&gt;, boost::arg&lt;1&gt; &gt;::operator (5,433,391 samples, 0.02%)</title><rect x="79.9" y="1061" width="0.2" height="15.0" fill="rgb(243,62,1)" rx="2" ry="2" />
<text  x="82.88" y="1071.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (3,878,186 samples, 0.02%)</title><rect x="755.9" y="981" width="0.2" height="15.0" fill="rgb(247,78,26)" rx="2" ry="2" />
<text  x="758.93" y="991.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (2,168,280 samples, 0.01%)</title><rect x="447.4" y="869" width="0.1" height="15.0" fill="rgb(233,39,24)" rx="2" ry="2" />
<text  x="450.38" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,210,290 samples, 0.01%)</title><rect x="855.7" y="981" width="0.1" height="15.0" fill="rgb(209,91,52)" rx="2" ry="2" />
<text  x="858.73" y="991.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (13,777,972 samples, 0.05%)</title><rect x="196.7" y="981" width="0.7" height="15.0" fill="rgb(224,17,14)" rx="2" ry="2" />
<text  x="199.73" y="991.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator= (4,289,300 samples, 0.02%)</title><rect x="557.9" y="725" width="0.2" height="15.0" fill="rgb(219,153,10)" rx="2" ry="2" />
<text  x="560.95" y="735.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Inertial&gt;::get (3,994,709 samples, 0.02%)</title><rect x="552.5" y="725" width="0.2" height="15.0" fill="rgb(244,182,20)" rx="2" ry="2" />
<text  x="555.52" y="735.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::release (7,567,775 samples, 0.03%)</title><rect x="246.3" y="981" width="0.4" height="15.0" fill="rgb(216,16,52)" rx="2" ry="2" />
<text  x="249.30" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,156,643 samples, 0.01%)</title><rect x="689.4" y="805" width="0.1" height="15.0" fill="rgb(228,61,37)" rx="2" ry="2" />
<text  x="692.38" y="815.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;gazebo::physics::ContactPublisher*, std::allocator&lt;gazebo::physics::ContactPublisher*&gt; &gt;::_Vector_base (4,237,001 samples, 0.02%)</title><rect x="259.5" y="981" width="0.2" height="15.0" fill="rgb(248,23,16)" rx="2" ry="2" />
<text  x="262.49" y="991.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::Update (91,436,944 samples, 0.36%)</title><rect x="469.3" y="1013" width="4.3" height="15.0" fill="rgb(210,166,0)" rx="2" ry="2" />
<text  x="472.35" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,500,806 samples, 0.10%)</title><rect x="707.8" y="853" width="1.1" height="15.0" fill="rgb(227,169,17)" rx="2" ry="2" />
<text  x="710.76" y="863.5" ></text>
</g>
<g >
<title>std::mutex::try_lock (10,151,540 samples, 0.04%)</title><rect x="831.4" y="1125" width="0.4" height="15.0" fill="rgb(225,144,35)" rx="2" ry="2" />
<text  x="834.37" y="1135.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (9,818,000 samples, 0.04%)</title><rect x="801.6" y="917" width="0.4" height="15.0" fill="rgb(211,84,36)" rx="2" ry="2" />
<text  x="804.59" y="927.5" ></text>
</g>
<g >
<title>gazebo::Server::ProcessControlMsgs (23,309,216 samples, 0.09%)</title><rect x="891.7" y="1253" width="1.1" height="15.0" fill="rgb(240,27,1)" rx="2" ry="2" />
<text  x="894.74" y="1263.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (9,051,352 samples, 0.04%)</title><rect x="827.1" y="997" width="0.4" height="15.0" fill="rgb(231,213,16)" rx="2" ry="2" />
<text  x="830.10" y="1007.5" ></text>
</g>
<g >
<title>boost::detail::atomic_decrement (3,906,154 samples, 0.02%)</title><rect x="219.8" y="949" width="0.2" height="15.0" fill="rgb(231,226,2)" rx="2" ry="2" />
<text  x="222.84" y="959.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::unique_lock (3,733,081 samples, 0.01%)</title><rect x="897.6" y="1237" width="0.1" height="15.0" fill="rgb(220,109,5)" rx="2" ry="2" />
<text  x="900.56" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (7,638,281 samples, 0.03%)</title><rect x="591.6" y="757" width="0.3" height="15.0" fill="rgb(229,57,14)" rx="2" ry="2" />
<text  x="594.55" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,838,386 samples, 0.02%)</title><rect x="765.5" y="933" width="0.3" height="15.0" fill="rgb(210,123,47)" rx="2" ry="2" />
<text  x="768.53" y="943.5" ></text>
</g>
<g >
<title>[[uprobes]] (29,286,165 samples, 0.12%)</title><rect x="851.6" y="1125" width="1.3" height="15.0" fill="rgb(213,190,29)" rx="2" ry="2" />
<text  x="854.56" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,762,010 samples, 0.02%)</title><rect x="72.1" y="1029" width="0.2" height="15.0" fill="rgb(219,2,10)" rx="2" ry="2" />
<text  x="75.06" y="1039.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::GetParentJointsLinks (13,558,627 samples, 0.05%)</title><rect x="589.7" y="757" width="0.6" height="15.0" fill="rgb(223,46,13)" rx="2" ry="2" />
<text  x="592.70" y="767.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::GetChildJointsLinks (23,439,935 samples, 0.09%)</title><rect x="590.9" y="773" width="1.1" height="15.0" fill="rgb(205,0,31)" rx="2" ry="2" />
<text  x="593.91" y="783.5" ></text>
</g>
<g >
<title>std::operator!= (17,402,043 samples, 0.07%)</title><rect x="905.7" y="1253" width="0.8" height="15.0" fill="rgb(211,143,12)" rx="2" ry="2" />
<text  x="908.70" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::emplace_back&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (3,955,510 samples, 0.02%)</title><rect x="590.1" y="725" width="0.2" height="15.0" fill="rgb(254,210,20)" rx="2" ry="2" />
<text  x="593.15" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1029" width="0.1" height="15.0" fill="rgb(229,25,39)" rx="2" ry="2" />
<text  x="135.18" y="1039.5" ></text>
</g>
<g >
<title>SingletonT&lt;gazebo::sensors::SensorManager&gt;::Instance (2,624,031 samples, 0.01%)</title><rect x="17.9" y="1221" width="0.2" height="15.0" fill="rgb(218,35,14)" rx="2" ry="2" />
<text  x="20.95" y="1231.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::CreateMaybeMessage&lt;gazebo::msgs::Vector3d&gt; (2,448,873 samples, 0.01%)</title><rect x="722.1" y="821" width="0.2" height="15.0" fill="rgb(205,79,54)" rx="2" ry="2" />
<text  x="725.14" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,185,025 samples, 0.05%)</title><rect x="379.7" y="741" width="0.6" height="15.0" fill="rgb(212,78,25)" rx="2" ry="2" />
<text  x="382.72" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,032,103 samples, 0.02%)</title><rect x="831.1" y="1093" width="0.3" height="15.0" fill="rgb(210,228,13)" rx="2" ry="2" />
<text  x="834.09" y="1103.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::_M_ptr (6,066,141 samples, 0.02%)</title><rect x="895.5" y="1189" width="0.3" height="15.0" fill="rgb(245,19,27)" rx="2" ry="2" />
<text  x="898.54" y="1199.5" ></text>
</g>
<g >
<title>[libjoint_trajectory_controller.so] (25,268,063 samples, 0.10%)</title><rect x="821.1" y="1157" width="1.1" height="15.0" fill="rgb(249,31,10)" rx="2" ry="2" />
<text  x="824.06" y="1167.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;rclcpp::node_interfaces::NodeBaseInterface,  (6,010,464 samples, 0.02%)</title><rect x="803.5" y="997" width="0.3" height="15.0" fill="rgb(206,216,23)" rx="2" ry="2" />
<text  x="806.52" y="1007.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::find_waitable_ptrs_if&lt;rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (8,556,546 samples, 0.03%)</title><rect x="812.2" y="1029" width="0.4" height="15.0" fill="rgb(236,172,1)" rx="2" ry="2" />
<text  x="815.18" y="1039.5" ></text>
</g>
<g >
<title>boost::detail::function::void_function_obj_invoker1&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo_plugins::GazeboRosRaySensorPrivate, boost::shared_ptr&lt;gazebo::msgs::LaserScanStamped const&gt; const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo_plugins::GazeboRosRaySensorPrivate*&gt;, boost::arg&lt;1&gt; &gt; &gt;, void, boost::shared_ptr&lt;gazebo::msgs::LaserScanStamped const&gt; const&amp;&gt;::invoke (16,489,393 samples, 0.07%)</title><rect x="73.3" y="1125" width="0.7" height="15.0" fill="rgb(252,22,31)" rx="2" ry="2" />
<text  x="76.27" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,156,643 samples, 0.01%)</title><rect x="689.4" y="853" width="0.1" height="15.0" fill="rgb(208,203,12)" rx="2" ry="2" />
<text  x="692.38" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,081,146 samples, 0.06%)</title><rect x="1171.1" y="1125" width="0.7" height="15.0" fill="rgb(225,62,44)" rx="2" ry="2" />
<text  x="1174.15" y="1135.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (2,347,907 samples, 0.01%)</title><rect x="654.3" y="837" width="0.1" height="15.0" fill="rgb(234,136,45)" rx="2" ry="2" />
<text  x="657.28" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="981" width="0.1" height="15.0" fill="rgb(208,28,52)" rx="2" ry="2" />
<text  x="848.06" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,141,612 samples, 0.02%)</title><rect x="1177.0" y="1253" width="0.2" height="15.0" fill="rgb(210,182,29)" rx="2" ry="2" />
<text  x="1180.00" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,766,416 samples, 0.01%)</title><rect x="856.3" y="997" width="0.1" height="15.0" fill="rgb(213,30,20)" rx="2" ry="2" />
<text  x="859.26" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (360,752,850 samples, 1.42%)</title><rect x="872.4" y="1237" width="16.8" height="15.0" fill="rgb(243,197,38)" rx="2" ry="2" />
<text  x="875.44" y="1247.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (18,349,954 samples, 0.07%)</title><rect x="798.0" y="885" width="0.9" height="15.0" fill="rgb(234,183,40)" rx="2" ry="2" />
<text  x="801.00" y="895.5" ></text>
</g>
<g >
<title>[libcontroller_manager.so] (13,190,682 samples, 0.05%)</title><rect x="823.1" y="1141" width="0.6" height="15.0" fill="rgb(253,132,22)" rx="2" ry="2" />
<text  x="826.07" y="1151.5" ></text>
</g>
<g >
<title>gazebo::msgs::WorldStatistics::set_paused (2,219,352 samples, 0.01%)</title><rect x="750.5" y="1061" width="0.1" height="15.0" fill="rgb(227,34,7)" rx="2" ry="2" />
<text  x="753.50" y="1071.5" ></text>
</g>
<g >
<title>sdf::v9::Element::Get&lt;unsigned int&gt; (19,426,309 samples, 0.08%)</title><rect x="44.8" y="1109" width="0.9" height="15.0" fill="rgb(221,102,44)" rx="2" ry="2" />
<text  x="47.75" y="1119.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_service_t const,  (4,016,876 samples, 0.02%)</title><rect x="202.0" y="933" width="0.2" height="15.0" fill="rgb(248,18,15)" rx="2" ry="2" />
<text  x="204.99" y="943.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (166,943,585 samples, 0.66%)</title><rect x="64.5" y="1125" width="7.8" height="15.0" fill="rgb(217,77,37)" rx="2" ry="2" />
<text  x="67.51" y="1135.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::~Pose (38,126,065 samples, 0.15%)</title><rect x="756.2" y="965" width="1.8" height="15.0" fill="rgb(245,222,5)" rx="2" ry="2" />
<text  x="759.21" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_subscription_t,  (6,778,683 samples, 0.03%)</title><rect x="811.4" y="949" width="0.3" height="15.0" fill="rgb(234,40,32)" rx="2" ry="2" />
<text  x="814.38" y="959.5" ></text>
</g>
<g >
<title>std::function&lt;void  (8,069,732 samples, 0.03%)</title><rect x="794.2" y="949" width="0.3" height="15.0" fill="rgb(221,83,24)" rx="2" ry="2" />
<text  x="797.16" y="959.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::Pose3 (4,279,300 samples, 0.02%)</title><rect x="695.4" y="917" width="0.2" height="15.0" fill="rgb(210,81,35)" rx="2" ry="2" />
<text  x="698.39" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,549,321 samples, 0.32%)</title><rect x="1185.5" y="1141" width="3.8" height="15.0" fill="rgb(233,188,28)" rx="2" ry="2" />
<text  x="1188.54" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (116,950,602 samples, 0.46%)</title><rect x="533.6" y="805" width="5.5" height="15.0" fill="rgb(220,140,46)" rx="2" ry="2" />
<text  x="536.62" y="815.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (12,516,779,584 samples, 49.40%)</title><rect x="206.7" y="1221" width="583.0" height="15.0" fill="rgb(234,84,50)" rx="2" ry="2" />
<text  x="209.69" y="1231.5" >std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void </text>
</g>
<g >
<title>dds_waitset_attach (5,719,021 samples, 0.02%)</title><rect x="1157.1" y="1301" width="0.3" height="15.0" fill="rgb(212,7,34)" rx="2" ry="2" />
<text  x="1160.12" y="1311.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (4,267,751 samples, 0.02%)</title><rect x="848.2" y="1109" width="0.2" height="15.0" fill="rgb(211,165,42)" rx="2" ry="2" />
<text  x="851.23" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,652,819 samples, 0.07%)</title><rect x="1182.1" y="1077" width="0.9" height="15.0" fill="rgb(232,172,15)" rx="2" ry="2" />
<text  x="1185.10" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (87,697,037 samples, 0.35%)</title><rect x="54.9" y="709" width="4.1" height="15.0" fill="rgb(220,120,26)" rx="2" ry="2" />
<text  x="57.88" y="719.5" ></text>
</g>
<g >
<title>boost::function&lt;void  (2,485,233 samples, 0.01%)</title><rect x="81.4" y="1061" width="0.1" height="15.0" fill="rgb(217,173,8)" rx="2" ry="2" />
<text  x="84.38" y="1071.5" ></text>
</g>
<g >
<title>dShortestAngularDistanceUpdate (13,889,026 samples, 0.05%)</title><rect x="271.6" y="949" width="0.6" height="15.0" fill="rgb(222,79,54)" rx="2" ry="2" />
<text  x="274.58" y="959.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::pop_front (3,540,426 samples, 0.01%)</title><rect x="14.4" y="885" width="0.1" height="15.0" fill="rgb(238,109,6)" rx="2" ry="2" />
<text  x="17.36" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;gazebo::physics::Entity*, std::allocator&lt;gazebo::physics::Entity*&gt; &gt;::_M_insert&lt;gazebo::physics::Entity* const&amp;&gt; (24,900,695 samples, 0.10%)</title><rect x="444.7" y="885" width="1.2" height="15.0" fill="rgb(213,194,0)" rx="2" ry="2" />
<text  x="447.74" y="895.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::transport::Connection&gt;::~shared_ptr (3,361,464 samples, 0.01%)</title><rect x="13.6" y="981" width="0.1" height="15.0" fill="rgb(219,131,35)" rx="2" ry="2" />
<text  x="16.55" y="991.5" ></text>
</g>
<g >
<title>__dynamic_cast (8,824,110 samples, 0.03%)</title><rect x="132.6" y="1253" width="0.4" height="15.0" fill="rgb(226,31,50)" rx="2" ry="2" />
<text  x="135.61" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,910,423 samples, 0.01%)</title><rect x="779.1" y="805" width="0.1" height="15.0" fill="rgb(233,180,40)" rx="2" ry="2" />
<text  x="782.11" y="815.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::get (2,286,872 samples, 0.01%)</title><rect x="750.9" y="1029" width="0.1" height="15.0" fill="rgb(238,182,23)" rx="2" ry="2" />
<text  x="753.89" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,958,587 samples, 0.02%)</title><rect x="851.4" y="1013" width="0.2" height="15.0" fill="rgb(235,118,3)" rx="2" ry="2" />
<text  x="854.38" y="1023.5" ></text>
</g>
<g >
<title>dxSimpleSpace::cleanGeoms (3,581,036 samples, 0.01%)</title><rect x="244.3" y="997" width="0.2" height="15.0" fill="rgb(228,175,42)" rx="2" ry="2" />
<text  x="247.29" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,628,552 samples, 0.03%)</title><rect x="138.3" y="1061" width="0.3" height="15.0" fill="rgb(245,190,11)" rx="2" ry="2" />
<text  x="141.29" y="1071.5" ></text>
</g>
<g >
<title>rclcpp::ServiceBase::get_service_handle (4,495,038 samples, 0.02%)</title><rect x="794.5" y="949" width="0.2" height="15.0" fill="rgb(217,75,45)" rx="2" ry="2" />
<text  x="797.53" y="959.5" ></text>
</g>
<g >
<title>std::recursive_mutex::unlock (2,171,942 samples, 0.01%)</title><rect x="224.3" y="965" width="0.1" height="15.0" fill="rgb(241,172,53)" rx="2" ry="2" />
<text  x="227.28" y="975.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::select_on_container_copy_construction (2,169,663 samples, 0.01%)</title><rect x="655.4" y="869" width="0.1" height="15.0" fill="rgb(241,160,51)" rx="2" ry="2" />
<text  x="658.36" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,157,582 samples, 0.01%)</title><rect x="458.0" y="917" width="0.1" height="15.0" fill="rgb(231,158,48)" rx="2" ry="2" />
<text  x="460.96" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (92,542,284 samples, 0.37%)</title><rect x="54.7" y="853" width="4.3" height="15.0" fill="rgb(246,92,34)" rx="2" ry="2" />
<text  x="57.65" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,812,785 samples, 0.05%)</title><rect x="63.0" y="1061" width="0.6" height="15.0" fill="rgb(232,78,16)" rx="2" ry="2" />
<text  x="65.97" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,491,228 samples, 0.06%)</title><rect x="457.0" y="837" width="0.7" height="15.0" fill="rgb(242,128,49)" rx="2" ry="2" />
<text  x="460.02" y="847.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (4,572,183 samples, 0.02%)</title><rect x="60.8" y="1157" width="0.3" height="15.0" fill="rgb(220,212,7)" rx="2" ry="2" />
<text  x="63.85" y="1167.5" ></text>
</g>
<g >
<title>dq.builtins (62,007,348 samples, 0.24%)</title><rect x="10.0" y="1317" width="2.9" height="15.0" fill="rgb(244,77,10)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,634,833 samples, 0.03%)</title><rect x="796.3" y="885" width="0.3" height="15.0" fill="rgb(236,157,19)" rx="2" ry="2" />
<text  x="799.26" y="895.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (9,737,861 samples, 0.04%)</title><rect x="522.0" y="837" width="0.5" height="15.0" fill="rgb(254,171,9)" rx="2" ry="2" />
<text  x="525.05" y="847.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (3,416,216 samples, 0.01%)</title><rect x="529.8" y="789" width="0.1" height="15.0" fill="rgb(240,207,51)" rx="2" ry="2" />
<text  x="532.77" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,318,641 samples, 0.01%)</title><rect x="272.5" y="901" width="0.1" height="15.0" fill="rgb(212,208,22)" rx="2" ry="2" />
<text  x="275.50" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;::_M_insert&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; const&amp;&gt; (8,775,095 samples, 0.03%)</title><rect x="84.5" y="1045" width="0.4" height="15.0" fill="rgb(214,86,43)" rx="2" ry="2" />
<text  x="87.48" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,043,983 samples, 0.08%)</title><rect x="740.5" y="821" width="1.0" height="15.0" fill="rgb(222,25,41)" rx="2" ry="2" />
<text  x="743.52" y="831.5" ></text>
</g>
<g >
<title>sensor_msgs::msg::JointState_&lt;std::allocator&lt;void&gt; &gt;::~JointState_ (9,268,597 samples, 0.04%)</title><rect x="857.4" y="1141" width="0.4" height="15.0" fill="rgb(238,128,37)" rx="2" ry="2" />
<text  x="860.35" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,893,317 samples, 0.12%)</title><rect x="1170.4" y="1141" width="1.4" height="15.0" fill="rgb(217,105,25)" rx="2" ry="2" />
<text  x="1173.41" y="1151.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;::duration&lt;long, void&gt; (8,325,965 samples, 0.03%)</title><rect x="860.8" y="1109" width="0.4" height="15.0" fill="rgb(208,105,36)" rx="2" ry="2" />
<text  x="863.78" y="1119.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEJoint::SetPosition (1,717,932,192 samples, 6.78%)</title><rect x="531.3" y="853" width="80.0" height="15.0" fill="rgb(217,207,10)" rx="2" ry="2" />
<text  x="534.29" y="863.5" >gazebo::p..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,305,251 samples, 0.01%)</title><rect x="126.3" y="1125" width="0.1" height="15.0" fill="rgb(243,14,35)" rx="2" ry="2" />
<text  x="129.28" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,291,093 samples, 0.01%)</title><rect x="521.1" y="613" width="0.1" height="15.0" fill="rgb(223,109,41)" rx="2" ry="2" />
<text  x="524.08" y="623.5" ></text>
</g>
<g >
<title>joint_state_broadcaster::JointStateBroadcaster::update (5,777,256 samples, 0.02%)</title><rect x="614.1" y="917" width="0.3" height="15.0" fill="rgb(231,4,38)" rx="2" ry="2" />
<text  x="617.09" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt;::base (3,656,981 samples, 0.01%)</title><rect x="650.8" y="885" width="0.2" height="15.0" fill="rgb(244,105,22)" rx="2" ry="2" />
<text  x="653.82" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;gazebo::common::Battery&gt;, std::allocator&lt;std::shared_ptr&lt;gazebo::common::Battery&gt; &gt; &gt;::begin (14,639,548 samples, 0.06%)</title><rect x="641.2" y="901" width="0.7" height="15.0" fill="rgb(250,93,33)" rx="2" ry="2" />
<text  x="644.23" y="911.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::SetNoArena (3,922,629 samples, 0.02%)</title><rect x="764.5" y="853" width="0.2" height="15.0" fill="rgb(253,206,20)" rx="2" ry="2" />
<text  x="767.51" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,653,457 samples, 0.06%)</title><rect x="56.5" y="117" width="0.7" height="15.0" fill="rgb(237,32,52)" rx="2" ry="2" />
<text  x="59.49" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::size (3,633,233 samples, 0.01%)</title><rect x="827.8" y="1125" width="0.2" height="15.0" fill="rgb(205,97,18)" rx="2" ry="2" />
<text  x="830.82" y="1135.5" ></text>
</g>
<g >
<title>[libcontroller_manager.so] (3,049,228 samples, 0.01%)</title><rect x="847.2" y="1109" width="0.2" height="15.0" fill="rgb(252,12,33)" rx="2" ry="2" />
<text  x="850.24" y="1119.5" ></text>
</g>
<g >
<title>ode::quickstep::dot6 (823,458,261 samples, 3.25%)</title><rect x="342.1" y="933" width="38.4" height="15.0" fill="rgb(222,84,19)" rx="2" ry="2" />
<text  x="345.11" y="943.5" >ode..</text>
</g>
<g >
<title>std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (11,879,662 samples, 0.05%)</title><rect x="669.8" y="901" width="0.6" height="15.0" fill="rgb(250,59,45)" rx="2" ry="2" />
<text  x="672.80" y="911.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::~unique_lock (3,952,519 samples, 0.02%)</title><rect x="238.1" y="773" width="0.2" height="15.0" fill="rgb(239,81,27)" rx="2" ry="2" />
<text  x="241.08" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,910,423 samples, 0.01%)</title><rect x="779.1" y="741" width="0.1" height="15.0" fill="rgb(244,8,45)" rx="2" ry="2" />
<text  x="782.11" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,604,577 samples, 0.01%)</title><rect x="840.5" y="949" width="0.2" height="15.0" fill="rgb(253,165,14)" rx="2" ry="2" />
<text  x="843.51" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11,779,065 samples, 0.05%)</title><rect x="379.7" y="725" width="0.6" height="15.0" fill="rgb(213,99,36)" rx="2" ry="2" />
<text  x="382.74" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,759,600 samples, 0.03%)</title><rect x="796.9" y="885" width="0.3" height="15.0" fill="rgb(247,90,43)" rx="2" ry="2" />
<text  x="799.86" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,733,516 samples, 0.05%)</title><rect x="722.4" y="789" width="0.5" height="15.0" fill="rgb(241,197,5)" rx="2" ry="2" />
<text  x="725.35" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,157,582 samples, 0.01%)</title><rect x="458.0" y="949" width="0.1" height="15.0" fill="rgb(232,197,37)" rx="2" ry="2" />
<text  x="460.96" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;double&gt;, double&gt;::_S_select_on_copy (2,520,020 samples, 0.01%)</title><rect x="826.5" y="997" width="0.1" height="15.0" fill="rgb(211,179,8)" rx="2" ry="2" />
<text  x="829.50" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt;::operator* (2,173,532 samples, 0.01%)</title><rect x="672.2" y="837" width="0.1" height="15.0" fill="rgb(241,146,10)" rx="2" ry="2" />
<text  x="675.24" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (92,542,284 samples, 0.37%)</title><rect x="54.7" y="821" width="4.3" height="15.0" fill="rgb(210,214,49)" rx="2" ry="2" />
<text  x="57.65" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,543,812 samples, 0.06%)</title><rect x="426.6" y="917" width="0.7" height="15.0" fill="rgb(232,15,32)" rx="2" ry="2" />
<text  x="429.61" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (100,330,797 samples, 0.40%)</title><rect x="881.9" y="821" width="4.7" height="15.0" fill="rgb(210,102,18)" rx="2" ry="2" />
<text  x="884.90" y="831.5" ></text>
</g>
<g >
<title>setBall (4,166,231 samples, 0.02%)</title><rect x="274.3" y="949" width="0.2" height="15.0" fill="rgb(251,158,40)" rx="2" ry="2" />
<text  x="277.34" y="959.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (20,830,968 samples, 0.08%)</title><rect x="13.6" y="1109" width="0.9" height="15.0" fill="rgb(252,213,48)" rx="2" ry="2" />
<text  x="16.55" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_M_check_len (3,946,369 samples, 0.02%)</title><rect x="694.2" y="869" width="0.2" height="15.0" fill="rgb(220,185,52)" rx="2" ry="2" />
<text  x="697.25" y="879.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Collision&gt;::operator (5,664,674 samples, 0.02%)</title><rect x="39.0" y="1125" width="0.3" height="15.0" fill="rgb(216,206,45)" rx="2" ry="2" />
<text  x="42.00" y="1135.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;google::protobuf::Message&gt;::~shared_ptr (2,537,634 samples, 0.01%)</title><rect x="75.8" y="949" width="0.1" height="15.0" fill="rgb(253,77,35)" rx="2" ry="2" />
<text  x="78.76" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,032,103 samples, 0.02%)</title><rect x="831.1" y="949" width="0.3" height="15.0" fill="rgb(211,154,10)" rx="2" ry="2" />
<text  x="834.09" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,652,819 samples, 0.07%)</title><rect x="1182.1" y="1061" width="0.9" height="15.0" fill="rgb(251,0,27)" rx="2" ry="2" />
<text  x="1185.10" y="1071.5" ></text>
</g>
<g >
<title>dds_handle_unpin (8,160,817 samples, 0.03%)</title><rect x="158.0" y="1285" width="0.3" height="15.0" fill="rgb(238,132,25)" rx="2" ry="2" />
<text  x="160.95" y="1295.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator* (4,197,727 samples, 0.02%)</title><rect x="762.7" y="997" width="0.2" height="15.0" fill="rgb(252,202,10)" rx="2" ry="2" />
<text  x="765.74" y="1007.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_Vector_base (4,197,493 samples, 0.02%)</title><rect x="654.2" y="869" width="0.2" height="15.0" fill="rgb(216,197,32)" rx="2" ry="2" />
<text  x="657.20" y="879.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::RepeatedPtrField (41,457,249 samples, 0.16%)</title><rect x="752.5" y="1029" width="2.0" height="15.0" fill="rgb(206,32,48)" rx="2" ry="2" />
<text  x="755.55" y="1039.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (2,253,608 samples, 0.01%)</title><rect x="522.5" y="869" width="0.1" height="15.0" fill="rgb(217,162,1)" rx="2" ry="2" />
<text  x="525.50" y="879.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Model&gt;::~shared_ptr (2,190,823 samples, 0.01%)</title><rect x="678.6" y="821" width="0.1" height="15.0" fill="rgb(215,18,4)" rx="2" ry="2" />
<text  x="681.57" y="831.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::operator (6,251,299 samples, 0.02%)</title><rect x="751.7" y="1045" width="0.3" height="15.0" fill="rgb(222,6,47)" rx="2" ry="2" />
<text  x="754.66" y="1055.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_subscription_t const,  (9,899,067 samples, 0.04%)</title><rect x="792.0" y="997" width="0.5" height="15.0" fill="rgb(209,164,21)" rx="2" ry="2" />
<text  x="795.00" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (3,274,399 samples, 0.01%)</title><rect x="32.3" y="1109" width="0.2" height="15.0" fill="rgb(205,213,50)" rx="2" ry="2" />
<text  x="35.31" y="1119.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::shared_ptr (2,416,283 samples, 0.01%)</title><rect x="592.9" y="725" width="0.1" height="15.0" fill="rgb(251,73,7)" rx="2" ry="2" />
<text  x="595.93" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,200,275 samples, 0.02%)</title><rect x="117.1" y="1045" width="0.3" height="15.0" fill="rgb(219,137,15)" rx="2" ry="2" />
<text  x="120.13" y="1055.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::ServiceBase&gt;::shared_ptr (6,717,612 samples, 0.03%)</title><rect x="793.8" y="1061" width="0.4" height="15.0" fill="rgb(235,221,27)" rx="2" ry="2" />
<text  x="796.84" y="1071.5" ></text>
</g>
<g >
<title>gazebo::msgs::IMU::GetMetadata (4,660,333 samples, 0.02%)</title><rect x="32.5" y="1125" width="0.2" height="15.0" fill="rgb(216,174,44)" rx="2" ry="2" />
<text  x="35.47" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,190,889 samples, 0.01%)</title><rect x="616.9" y="885" width="0.1" height="15.0" fill="rgb(250,163,20)" rx="2" ry="2" />
<text  x="619.85" y="895.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;rclcpp::executors::MultiThreadedExecutor*, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt;, std::hash&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::equal_to&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::allocator&lt;std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt; &gt; &gt;::operator[] (8,176,813 samples, 0.03%)</title><rect x="793.1" y="1045" width="0.4" height="15.0" fill="rgb(227,61,47)" rx="2" ry="2" />
<text  x="796.13" y="1055.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (8,332,306 samples, 0.03%)</title><rect x="810.6" y="917" width="0.4" height="15.0" fill="rgb(231,178,40)" rx="2" ry="2" />
<text  x="813.61" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_S_relocate (3,994,229 samples, 0.02%)</title><rect x="593.2" y="741" width="0.2" height="15.0" fill="rgb(211,77,24)" rx="2" ry="2" />
<text  x="596.21" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray&lt;gazebo::msgs::Pose&gt; (2,734,777 samples, 0.01%)</title><rect x="1159.5" y="1269" width="0.1" height="15.0" fill="rgb(213,135,50)" rx="2" ry="2" />
<text  x="1162.50" y="1279.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::FindAllConnectedLinksHelper (13,294,636 samples, 0.05%)</title><rect x="585.5" y="709" width="0.6" height="15.0" fill="rgb(239,52,37)" rx="2" ry="2" />
<text  x="588.47" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,281,711 samples, 0.01%)</title><rect x="841.9" y="917" width="0.2" height="15.0" fill="rgb(253,122,52)" rx="2" ry="2" />
<text  x="844.95" y="927.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (5,561,468 samples, 0.02%)</title><rect x="220.2" y="933" width="0.3" height="15.0" fill="rgb(242,23,15)" rx="2" ry="2" />
<text  x="223.22" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,361,874 samples, 0.03%)</title><rect x="917.4" y="1029" width="0.3" height="15.0" fill="rgb(240,219,11)" rx="2" ry="2" />
<text  x="920.40" y="1039.5" ></text>
</g>
<g >
<title>std::remove&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_service_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_service_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; &gt; &gt;, decltype (6,727,611 samples, 0.03%)</title><rect x="816.0" y="1029" width="0.3" height="15.0" fill="rgb(246,66,45)" rx="2" ry="2" />
<text  x="818.98" y="1039.5" ></text>
</g>
<g >
<title>gazebo::sensors::Sensor::Name[abi:cxx11] (28,695,204 samples, 0.11%)</title><rect x="19.5" y="1189" width="1.4" height="15.0" fill="rgb(221,141,36)" rx="2" ry="2" />
<text  x="22.52" y="1199.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, gazebo_ros2_control::GazeboSystemPrivate*, false&gt;::_M_head (4,069,602 samples, 0.02%)</title><rect x="519.2" y="773" width="0.2" height="15.0" fill="rgb(240,178,17)" rx="2" ry="2" />
<text  x="522.22" y="783.5" ></text>
</g>
<g >
<title>dCalcVectorDot3_41 (5,976,866 samples, 0.02%)</title><rect x="243.3" y="853" width="0.2" height="15.0" fill="rgb(239,164,16)" rx="2" ry="2" />
<text  x="246.27" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,145,973 samples, 0.12%)</title><rect x="56.1" y="357" width="1.4" height="15.0" fill="rgb(249,100,53)" rx="2" ry="2" />
<text  x="59.05" y="367.5" ></text>
</g>
<g >
<title>google::protobuf::Message::~Message (3,644,236 samples, 0.01%)</title><rect x="74.4" y="869" width="0.2" height="15.0" fill="rgb(228,39,51)" rx="2" ry="2" />
<text  x="77.43" y="879.5" ></text>
</g>
<g >
<title>hardware_interface::LoanedStateInterface::get_value (3,820,281 samples, 0.02%)</title><rect x="505.4" y="853" width="0.2" height="15.0" fill="rgb(216,137,32)" rx="2" ry="2" />
<text  x="508.45" y="863.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;rclcpp::Publisher&lt;nav_msgs::msg::Odometry_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;,  (3,771,734 samples, 0.01%)</title><rect x="636.0" y="885" width="0.2" height="15.0" fill="rgb(231,95,1)" rx="2" ry="2" />
<text  x="639.00" y="895.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::MergeFrom (41,457,249 samples, 0.16%)</title><rect x="752.5" y="1013" width="2.0" height="15.0" fill="rgb(216,62,44)" rx="2" ry="2" />
<text  x="755.55" y="1023.5" ></text>
</g>
<g >
<title>gazebo_plugins::GazeboRosVacuumGripperPrivate::OnUpdate (9,798,023 samples, 0.04%)</title><rect x="778.7" y="917" width="0.4" height="15.0" fill="rgb(222,158,30)" rx="2" ry="2" />
<text  x="781.66" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (3,116,103 samples, 0.01%)</title><rect x="195.3" y="981" width="0.1" height="15.0" fill="rgb(246,153,38)" rx="2" ry="2" />
<text  x="198.28" y="991.5" ></text>
</g>
<g >
<title>boost::asio::detail::initiate_async_write_buffer_sequence::operator (100,583,021 samples, 0.40%)</title><rect x="54.3" y="1125" width="4.7" height="15.0" fill="rgb(226,95,37)" rx="2" ry="2" />
<text  x="57.28" y="1135.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::FindAllConnectedLinks (19,551,117 samples, 0.08%)</title><rect x="775.1" y="821" width="0.9" height="15.0" fill="rgb(223,65,19)" rx="2" ry="2" />
<text  x="778.07" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,580,330 samples, 0.01%)</title><rect x="675.3" y="725" width="0.2" height="15.0" fill="rgb(246,49,51)" rx="2" ry="2" />
<text  x="678.34" y="735.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::shared_ptr (10,069,702 samples, 0.04%)</title><rect x="543.5" y="741" width="0.5" height="15.0" fill="rgb(205,60,37)" rx="2" ry="2" />
<text  x="546.49" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,528,796 samples, 0.10%)</title><rect x="468.2" y="965" width="1.1" height="15.0" fill="rgb(206,218,1)" rx="2" ry="2" />
<text  x="471.21" y="975.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (2,220,914 samples, 0.01%)</title><rect x="562.8" y="757" width="0.1" height="15.0" fill="rgb(216,168,19)" rx="2" ry="2" />
<text  x="565.78" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_realloc_insert&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (6,113,139 samples, 0.02%)</title><rect x="595.3" y="741" width="0.3" height="15.0" fill="rgb(241,197,35)" rx="2" ry="2" />
<text  x="598.28" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::_M_end (2,272,626 samples, 0.01%)</title><rect x="80.5" y="1077" width="0.1" height="15.0" fill="rgb(217,119,14)" rx="2" ry="2" />
<text  x="83.52" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,243,032 samples, 0.02%)</title><rect x="521.0" y="741" width="0.2" height="15.0" fill="rgb(237,137,48)" rx="2" ry="2" />
<text  x="523.99" y="751.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (2,960,003 samples, 0.01%)</title><rect x="73.1" y="1141" width="0.2" height="15.0" fill="rgb(241,164,12)" rx="2" ry="2" />
<text  x="76.13" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (188,871,813 samples, 0.75%)</title><rect x="166.9" y="1141" width="8.8" height="15.0" fill="rgb(225,67,31)" rx="2" ry="2" />
<text  x="169.91" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,881,128 samples, 0.07%)</title><rect x="618.7" y="853" width="0.8" height="15.0" fill="rgb(252,110,47)" rx="2" ry="2" />
<text  x="621.73" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,812,785 samples, 0.05%)</title><rect x="63.0" y="1109" width="0.6" height="15.0" fill="rgb(221,205,18)" rx="2" ry="2" />
<text  x="65.97" y="1119.5" ></text>
</g>
<g >
<title>[librclcpp.so] (6,536,713 samples, 0.03%)</title><rect x="189.4" y="1045" width="0.3" height="15.0" fill="rgb(229,125,34)" rx="2" ry="2" />
<text  x="192.41" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,496,532 samples, 0.10%)</title><rect x="11.4" y="1077" width="1.1" height="15.0" fill="rgb(208,41,30)" rx="2" ry="2" />
<text  x="14.36" y="1087.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::ServiceBase&gt;::shared_ptr (13,777,972 samples, 0.05%)</title><rect x="196.7" y="1013" width="0.7" height="15.0" fill="rgb(215,82,15)" rx="2" ry="2" />
<text  x="199.73" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt;::construct&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;, geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt; (3,971,085 samples, 0.02%)</title><rect x="693.5" y="773" width="0.2" height="15.0" fill="rgb(254,91,8)" rx="2" ry="2" />
<text  x="696.50" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,411,266 samples, 0.01%)</title><rect x="830.2" y="981" width="0.1" height="15.0" fill="rgb(217,83,49)" rx="2" ry="2" />
<text  x="833.18" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,933,454 samples, 0.04%)</title><rect x="379.8" y="709" width="0.5" height="15.0" fill="rgb(217,169,45)" rx="2" ry="2" />
<text  x="382.82" y="719.5" ></text>
</g>
<g >
<title>_dCalcVectorCross3 (2,211,726 samples, 0.01%)</title><rect x="252.4" y="901" width="0.1" height="15.0" fill="rgb(208,25,42)" rx="2" ry="2" />
<text  x="255.37" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,573,524 samples, 0.01%)</title><rect x="214.6" y="709" width="0.1" height="15.0" fill="rgb(214,79,20)" rx="2" ry="2" />
<text  x="217.61" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,991,914 samples, 0.02%)</title><rect x="538.9" y="709" width="0.2" height="15.0" fill="rgb(216,80,17)" rx="2" ry="2" />
<text  x="541.88" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,766,416 samples, 0.01%)</title><rect x="856.3" y="981" width="0.1" height="15.0" fill="rgb(235,165,47)" rx="2" ry="2" />
<text  x="859.26" y="991.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (2,745,270 samples, 0.01%)</title><rect x="777.2" y="773" width="0.1" height="15.0" fill="rgb(238,78,21)" rx="2" ry="2" />
<text  x="780.22" y="783.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::~PosesStamped (24,252,778 samples, 0.10%)</title><rect x="765.8" y="901" width="1.1" height="15.0" fill="rgb(212,178,16)" rx="2" ry="2" />
<text  x="768.76" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::World::ProcessMessages (439,241,383 samples, 1.73%)</title><rect x="751.1" y="1061" width="20.4" height="15.0" fill="rgb(215,181,26)" rx="2" ry="2" />
<text  x="754.09" y="1071.5" ></text>
</g>
<g >
<title>[libcontroller_manager.so] (16,478,350 samples, 0.07%)</title><rect x="838.1" y="1141" width="0.7" height="15.0" fill="rgb(238,134,23)" rx="2" ry="2" />
<text  x="841.07" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (209,379,380 samples, 0.83%)</title><rect x="877.4" y="1061" width="9.7" height="15.0" fill="rgb(232,160,27)" rx="2" ry="2" />
<text  x="880.39" y="1071.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (6,912,390 samples, 0.03%)</title><rect x="198.3" y="1029" width="0.3" height="15.0" fill="rgb(237,223,25)" rx="2" ry="2" />
<text  x="201.26" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (31,143,638 samples, 0.12%)</title><rect x="476.9" y="901" width="1.5" height="15.0" fill="rgb(223,44,34)" rx="2" ry="2" />
<text  x="479.91" y="911.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (14,889,770 samples, 0.06%)</title><rect x="1184.7" y="1285" width="0.7" height="15.0" fill="rgb(237,68,3)" rx="2" ry="2" />
<text  x="1187.68" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,847,722 samples, 0.03%)</title><rect x="931.5" y="1157" width="0.4" height="15.0" fill="rgb(246,65,49)" rx="2" ry="2" />
<text  x="934.53" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,606,472 samples, 0.03%)</title><rect x="466.2" y="997" width="0.4" height="15.0" fill="rgb(234,167,52)" rx="2" ry="2" />
<text  x="469.20" y="1007.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;double*, unsigned long&gt; (3,958,314 samples, 0.02%)</title><rect x="506.8" y="821" width="0.1" height="15.0" fill="rgb(232,226,41)" rx="2" ry="2" />
<text  x="509.76" y="831.5" ></text>
</g>
<g >
<title>__gthread_mutex_trylock (2,241,233 samples, 0.01%)</title><rect x="842.7" y="1125" width="0.1" height="15.0" fill="rgb(229,119,31)" rx="2" ry="2" />
<text  x="845.72" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (83,566,038 samples, 0.33%)</title><rect x="882.7" y="677" width="3.9" height="15.0" fill="rgb(209,80,34)" rx="2" ry="2" />
<text  x="885.68" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,691,548 samples, 0.28%)</title><rect x="475.1" y="965" width="3.3" height="15.0" fill="rgb(244,128,41)" rx="2" ry="2" />
<text  x="478.07" y="975.5" ></text>
</g>
<g >
<title>gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Publisher, unsigned int&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Publisher*&gt;, boost::arg&lt;1&gt; &gt; &gt;, gazebo::transport::Publisher&gt;::operator (5,433,391 samples, 0.02%)</title><rect x="79.9" y="1093" width="0.2" height="15.0" fill="rgb(210,165,34)" rx="2" ry="2" />
<text  x="82.88" y="1103.5" ></text>
</g>
<g >
<title>getAnchor (6,063,896 samples, 0.02%)</title><rect x="580.0" y="773" width="0.3" height="15.0" fill="rgb(216,178,52)" rx="2" ry="2" />
<text  x="583.02" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;::empty (3,104,227 samples, 0.01%)</title><rect x="76.5" y="1141" width="0.2" height="15.0" fill="rgb(221,215,36)" rx="2" ry="2" />
<text  x="79.54" y="1151.5" ></text>
</g>
<g >
<title>[libhardware_interface.so] (2,183,871 samples, 0.01%)</title><rect x="519.8" y="805" width="0.1" height="15.0" fill="rgb(216,194,20)" rx="2" ry="2" />
<text  x="522.78" y="815.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;*&gt; (3,809,919 samples, 0.02%)</title><rect x="678.8" y="885" width="0.1" height="15.0" fill="rgb(227,80,49)" rx="2" ry="2" />
<text  x="681.77" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,434,575 samples, 0.02%)</title><rect x="54.0" y="1141" width="0.3" height="15.0" fill="rgb(217,42,3)" rx="2" ry="2" />
<text  x="57.03" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,653,457 samples, 0.06%)</title><rect x="56.5" y="165" width="0.7" height="15.0" fill="rgb(235,84,37)" rx="2" ry="2" />
<text  x="59.49" y="175.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::~Pose (40,222,419 samples, 0.16%)</title><rect x="756.1" y="981" width="1.9" height="15.0" fill="rgb(213,165,26)" rx="2" ry="2" />
<text  x="759.11" y="991.5" ></text>
</g>
<g >
<title>ode::quickstep::PGS_LCP (45,263,378 samples, 0.18%)</title><rect x="746.8" y="965" width="2.1" height="15.0" fill="rgb(229,96,24)" rx="2" ry="2" />
<text  x="749.80" y="975.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (3,959,115 samples, 0.02%)</title><rect x="562.1" y="757" width="0.2" height="15.0" fill="rgb(252,52,41)" rx="2" ry="2" />
<text  x="565.13" y="767.5" ></text>
</g>
<g >
<title>[libgazebo_msgs.so.11.10.1] (8,780,026 samples, 0.03%)</title><rect x="25.3" y="1157" width="0.4" height="15.0" fill="rgb(206,73,41)" rx="2" ry="2" />
<text  x="28.33" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1157" width="0.4" height="15.0" fill="rgb(208,208,5)" rx="2" ry="2" />
<text  x="1181.27" y="1167.5" ></text>
</g>
<g >
<title>gazebo::event::EventT&lt;void  (164,098,904 samples, 0.65%)</title><rect x="773.1" y="1045" width="7.7" height="15.0" fill="rgb(238,174,40)" rx="2" ry="2" />
<text  x="776.13" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (3,840,601 samples, 0.02%)</title><rect x="687.8" y="885" width="0.1" height="15.0" fill="rgb(230,177,6)" rx="2" ry="2" />
<text  x="690.76" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,334,647 samples, 0.01%)</title><rect x="150.1" y="1173" width="0.1" height="15.0" fill="rgb(254,1,41)" rx="2" ry="2" />
<text  x="153.06" y="1183.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_guard_condition (13,401,474 samples, 0.05%)</title><rect x="193.2" y="1061" width="0.6" height="15.0" fill="rgb(209,199,17)" rx="2" ry="2" />
<text  x="196.17" y="1071.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (3,858,531 samples, 0.02%)</title><rect x="507.0" y="821" width="0.2" height="15.0" fill="rgb(229,137,39)" rx="2" ry="2" />
<text  x="510.03" y="831.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::WorldLinearVel (16,268,242 samples, 0.06%)</title><rect x="686.1" y="885" width="0.7" height="15.0" fill="rgb(219,128,32)" rx="2" ry="2" />
<text  x="689.08" y="895.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::map&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, gazebo::physics::ContactPublisher*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, gazebo::physics::ContactPublisher*, boost::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (2,297,589 samples, 0.01%)</title><rect x="212.5" y="1029" width="0.1" height="15.0" fill="rgb(245,179,20)" rx="2" ry="2" />
<text  x="215.45" y="1039.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::Pose3 (6,008,427 samples, 0.02%)</title><rect x="761.8" y="1029" width="0.3" height="15.0" fill="rgb(254,213,46)" rx="2" ry="2" />
<text  x="764.78" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,904 samples, 0.12%)</title><rect x="1181.6" y="1205" width="1.4" height="15.0" fill="rgb(232,45,34)" rx="2" ry="2" />
<text  x="1184.61" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21,162,786 samples, 0.08%)</title><rect x="618.5" y="885" width="1.0" height="15.0" fill="rgb(244,20,3)" rx="2" ry="2" />
<text  x="621.53" y="895.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (2,366,821 samples, 0.01%)</title><rect x="580.9" y="773" width="0.2" height="15.0" fill="rgb(224,159,29)" rx="2" ry="2" />
<text  x="583.94" y="783.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (7,916,740 samples, 0.03%)</title><rect x="469.6" y="949" width="0.4" height="15.0" fill="rgb(246,143,26)" rx="2" ry="2" />
<text  x="472.63" y="959.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt;,  (12,884,002 samples, 0.05%)</title><rect x="798.3" y="789" width="0.6" height="15.0" fill="rgb(236,109,22)" rx="2" ry="2" />
<text  x="801.26" y="799.5" ></text>
</g>
<g >
<title>trajectory_msgs::msg::JointTrajectoryPoint_&lt;std::allocator&lt;void&gt; &gt;::operator= (17,282,985 samples, 0.07%)</title><rect x="840.2" y="1125" width="0.8" height="15.0" fill="rgb(247,68,36)" rx="2" ry="2" />
<text  x="843.20" y="1135.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEHingeJoint::SetVelocity (2,745,270 samples, 0.01%)</title><rect x="777.2" y="853" width="0.1" height="15.0" fill="rgb(247,5,52)" rx="2" ry="2" />
<text  x="780.22" y="863.5" ></text>
</g>
<g >
<title>collideAABBs (4,175,437 samples, 0.02%)</title><rect x="781.4" y="869" width="0.2" height="15.0" fill="rgb(213,166,50)" rx="2" ry="2" />
<text  x="784.37" y="879.5" ></text>
</g>
<g >
<title>_dSafeNormalize3 (3,778,139 samples, 0.01%)</title><rect x="248.7" y="917" width="0.2" height="15.0" fill="rgb(241,179,25)" rx="2" ry="2" />
<text  x="251.73" y="927.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;controller_interface::ControllerInterface,  (7,638,838 samples, 0.03%)</title><rect x="522.6" y="869" width="0.4" height="15.0" fill="rgb(237,87,28)" rx="2" ry="2" />
<text  x="525.60" y="879.5" ></text>
</g>
<g >
<title>dMultiply1_331 (4,063,499 samples, 0.02%)</title><rect x="36.6" y="949" width="0.2" height="15.0" fill="rgb(222,97,19)" rx="2" ry="2" />
<text  x="39.61" y="959.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned int const&amp;&gt;::_Tuple_impl (2,537,634 samples, 0.01%)</title><rect x="85.5" y="1029" width="0.1" height="15.0" fill="rgb(210,119,34)" rx="2" ry="2" />
<text  x="88.52" y="1039.5" ></text>
</g>
<g >
<title>boost::_mfi::mf1&lt;void, gazebo::transport::Publisher, unsigned int&gt;::operator (13,929,078 samples, 0.05%)</title><rect x="13.7" y="805" width="0.7" height="15.0" fill="rgb(253,196,10)" rx="2" ry="2" />
<text  x="16.71" y="815.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (11,215,913 samples, 0.04%)</title><rect x="197.4" y="1029" width="0.5" height="15.0" fill="rgb(223,206,40)" rx="2" ry="2" />
<text  x="200.37" y="1039.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::Pose3 (2,173,576 samples, 0.01%)</title><rect x="226.0" y="981" width="0.1" height="15.0" fill="rgb(251,3,9)" rx="2" ry="2" />
<text  x="229.01" y="991.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;double*, unsigned long, double&gt; (3,958,314 samples, 0.02%)</title><rect x="506.8" y="837" width="0.1" height="15.0" fill="rgb(249,221,13)" rx="2" ry="2" />
<text  x="509.76" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,126,400 samples, 0.02%)</title><rect x="708.7" y="773" width="0.2" height="15.0" fill="rgb(246,96,51)" rx="2" ry="2" />
<text  x="711.66" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,896,962 samples, 0.02%)</title><rect x="737.4" y="773" width="0.2" height="15.0" fill="rgb(228,205,2)" rx="2" ry="2" />
<text  x="740.42" y="783.5" ></text>
</g>
<g >
<title>[libgazebo_ros_state.so] (2,315,045 samples, 0.01%)</title><rect x="490.0" y="997" width="0.1" height="15.0" fill="rgb(216,15,38)" rx="2" ry="2" />
<text  x="493.02" y="1007.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::SharedDtor (4,049,499 samples, 0.02%)</title><rect x="719.7" y="885" width="0.2" height="15.0" fill="rgb(242,207,37)" rx="2" ry="2" />
<text  x="722.75" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,362,860 samples, 0.04%)</title><rect x="614.5" y="853" width="0.4" height="15.0" fill="rgb(254,32,36)" rx="2" ry="2" />
<text  x="617.45" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,152,963 samples, 0.06%)</title><rect x="116.7" y="1109" width="0.7" height="15.0" fill="rgb(252,99,51)" rx="2" ry="2" />
<text  x="119.71" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,579,944 samples, 0.03%)</title><rect x="75.2" y="933" width="0.4" height="15.0" fill="rgb(215,74,31)" rx="2" ry="2" />
<text  x="78.18" y="943.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (10,357,145 samples, 0.04%)</title><rect x="610.3" y="805" width="0.4" height="15.0" fill="rgb(211,45,54)" rx="2" ry="2" />
<text  x="613.26" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (15,855,202 samples, 0.06%)</title><rect x="502.3" y="853" width="0.8" height="15.0" fill="rgb(225,83,41)" rx="2" ry="2" />
<text  x="505.33" y="863.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (2,774,926 samples, 0.01%)</title><rect x="20.7" y="1173" width="0.2" height="15.0" fill="rgb(223,132,10)" rx="2" ry="2" />
<text  x="23.72" y="1183.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::Add&lt;google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::TypeHandler&gt; (5,668,640 samples, 0.02%)</title><rect x="755.2" y="1029" width="0.3" height="15.0" fill="rgb(234,28,5)" rx="2" ry="2" />
<text  x="758.19" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,152,832 samples, 0.01%)</title><rect x="615.8" y="805" width="0.1" height="15.0" fill="rgb(225,106,43)" rx="2" ry="2" />
<text  x="618.81" y="815.5" ></text>
</g>
<g >
<title>dMultiplyAdd0_331 (5,074,314 samples, 0.02%)</title><rect x="440.3" y="949" width="0.2" height="15.0" fill="rgb(251,36,42)" rx="2" ry="2" />
<text  x="443.28" y="959.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator* (5,907,128 samples, 0.02%)</title><rect x="582.0" y="789" width="0.3" height="15.0" fill="rgb(253,183,23)" rx="2" ry="2" />
<text  x="584.98" y="799.5" ></text>
</g>
<g >
<title>[libjoint_state_broadcaster.so] (3,834,286 samples, 0.02%)</title><rect x="493.7" y="901" width="0.2" height="15.0" fill="rgb(243,82,44)" rx="2" ry="2" />
<text  x="496.67" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::ODELink::WorldLinearVel (2,745,270 samples, 0.01%)</title><rect x="777.2" y="821" width="0.1" height="15.0" fill="rgb(223,19,30)" rx="2" ry="2" />
<text  x="780.22" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1077" width="0.1" height="15.0" fill="rgb(217,13,43)" rx="2" ry="2" />
<text  x="135.18" y="1087.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (2,155,734 samples, 0.01%)</title><rect x="512.8" y="837" width="0.1" height="15.0" fill="rgb(210,149,25)" rx="2" ry="2" />
<text  x="515.78" y="847.5" ></text>
</g>
<g >
<title>[libgazebo_transport.so.11.10.1] (7,614,840 samples, 0.03%)</title><rect x="80.6" y="1061" width="0.4" height="15.0" fill="rgb(207,120,45)" rx="2" ry="2" />
<text  x="83.63" y="1071.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt;*&gt; (77,795,287 samples, 0.31%)</title><rect x="672.1" y="853" width="3.6" height="15.0" fill="rgb(205,198,26)" rx="2" ry="2" />
<text  x="675.05" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,952,087 samples, 0.02%)</title><rect x="487.2" y="917" width="0.2" height="15.0" fill="rgb(220,82,25)" rx="2" ry="2" />
<text  x="490.20" y="927.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;rclcpp::SubscriptionBase,  (7,628,990 samples, 0.03%)</title><rect x="197.4" y="1013" width="0.3" height="15.0" fill="rgb(218,75,12)" rx="2" ry="2" />
<text  x="200.37" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19,036,442 samples, 0.08%)</title><rect x="618.6" y="869" width="0.9" height="15.0" fill="rgb(243,188,27)" rx="2" ry="2" />
<text  x="621.63" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,628,552 samples, 0.03%)</title><rect x="138.3" y="1173" width="0.3" height="15.0" fill="rgb(234,152,52)" rx="2" ry="2" />
<text  x="141.29" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,067,856 samples, 0.02%)</title><rect x="578.4" y="517" width="0.1" height="15.0" fill="rgb(251,97,20)" rx="2" ry="2" />
<text  x="581.35" y="527.5" ></text>
</g>
<g >
<title>rclcpp::Service&lt;gazebo_msgs::srv::GetEntityState&gt;::send_response (4,495,038 samples, 0.02%)</title><rect x="794.5" y="965" width="0.2" height="15.0" fill="rgb(248,97,35)" rx="2" ry="2" />
<text  x="797.53" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (49,445,618 samples, 0.20%)</title><rect x="455.4" y="949" width="2.3" height="15.0" fill="rgb(234,14,1)" rx="2" ry="2" />
<text  x="458.39" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,235,535 samples, 0.05%)</title><rect x="737.0" y="805" width="0.6" height="15.0" fill="rgb(242,89,45)" rx="2" ry="2" />
<text  x="740.03" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (7,107,550 samples, 0.03%)</title><rect x="773.7" y="805" width="0.3" height="15.0" fill="rgb(210,59,8)" rx="2" ry="2" />
<text  x="776.65" y="815.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Vector3 (34,083,707 samples, 0.13%)</title><rect x="661.9" y="869" width="1.6" height="15.0" fill="rgb(246,122,23)" rx="2" ry="2" />
<text  x="664.88" y="879.5" ></text>
</g>
<g >
<title>[libgazebo_common.so.11.10.1] (4,346,768 samples, 0.02%)</title><rect x="506.1" y="869" width="0.2" height="15.0" fill="rgb(250,163,53)" rx="2" ry="2" />
<text  x="509.09" y="879.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::physics::Link*&gt; (6,216,737 samples, 0.02%)</title><rect x="725.6" y="949" width="0.3" height="15.0" fill="rgb(238,13,31)" rx="2" ry="2" />
<text  x="728.60" y="959.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::SubscriptionBase&gt;::shared_ptr (6,052,277 samples, 0.02%)</title><rect x="802.0" y="965" width="0.3" height="15.0" fill="rgb(235,120,4)" rx="2" ry="2" />
<text  x="805.05" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (108,788,354 samples, 0.43%)</title><rect x="912.7" y="1205" width="5.0" height="15.0" fill="rgb(253,138,42)" rx="2" ry="2" />
<text  x="915.67" y="1215.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*, double&gt; (8,818,437 samples, 0.03%)</title><rect x="840.5" y="1077" width="0.4" height="15.0" fill="rgb(252,75,2)" rx="2" ry="2" />
<text  x="843.51" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,281,711 samples, 0.01%)</title><rect x="841.9" y="981" width="0.2" height="15.0" fill="rgb(221,122,54)" rx="2" ry="2" />
<text  x="844.95" y="991.5" ></text>
</g>
<g >
<title>boost::detail::sp_pointer_construct&lt;google::protobuf::Message, google::protobuf::Message&gt; (4,147,631 samples, 0.02%)</title><rect x="213.8" y="981" width="0.2" height="15.0" fill="rgb(238,204,20)" rx="2" ry="2" />
<text  x="216.80" y="991.5" ></text>
</g>
<g >
<title>collideAABBs (8,088,297 samples, 0.03%)</title><rect x="781.2" y="997" width="0.4" height="15.0" fill="rgb(212,184,50)" rx="2" ry="2" />
<text  x="784.19" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,908,166 samples, 0.20%)</title><rect x="915.4" y="1109" width="2.3" height="15.0" fill="rgb(232,93,27)" rx="2" ry="2" />
<text  x="918.36" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_service_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; &gt;::_M_erase_at_end (4,016,876 samples, 0.02%)</title><rect x="202.0" y="1029" width="0.2" height="15.0" fill="rgb(240,138,47)" rx="2" ry="2" />
<text  x="204.99" y="1039.5" ></text>
</g>
<g >
<title>dMultiply0_331 (7,952,648 samples, 0.03%)</title><rect x="243.7" y="917" width="0.4" height="15.0" fill="rgb(231,203,29)" rx="2" ry="2" />
<text  x="246.73" y="927.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (8,069,732 samples, 0.03%)</title><rect x="794.2" y="869" width="0.3" height="15.0" fill="rgb(216,111,23)" rx="2" ry="2" />
<text  x="797.16" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,946,780 samples, 0.02%)</title><rect x="852.2" y="901" width="0.2" height="15.0" fill="rgb(252,51,2)" rx="2" ry="2" />
<text  x="855.16" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,096,741 samples, 0.04%)</title><rect x="520.7" y="901" width="0.5" height="15.0" fill="rgb(224,189,9)" rx="2" ry="2" />
<text  x="523.72" y="911.5" ></text>
</g>
<g >
<title>_dNormalize4 (2,260,146 samples, 0.01%)</title><rect x="441.1" y="933" width="0.1" height="15.0" fill="rgb(227,189,23)" rx="2" ry="2" />
<text  x="444.09" y="943.5" ></text>
</g>
<g >
<title>std::remove&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_client_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_client_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_client_t const&gt; &gt; &gt; &gt;, decltype (5,007,693 samples, 0.02%)</title><rect x="200.7" y="1061" width="0.2" height="15.0" fill="rgb(224,47,21)" rx="2" ry="2" />
<text  x="203.66" y="1071.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (8,307,412 samples, 0.03%)</title><rect x="447.4" y="901" width="0.4" height="15.0" fill="rgb(208,77,37)" rx="2" ry="2" />
<text  x="450.38" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,579,944 samples, 0.03%)</title><rect x="75.2" y="1045" width="0.4" height="15.0" fill="rgb(239,210,14)" rx="2" ry="2" />
<text  x="78.18" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;unsigned int&gt; &gt;::deallocate (5,926,179 samples, 0.02%)</title><rect x="82.3" y="1093" width="0.3" height="15.0" fill="rgb(219,99,1)" rx="2" ry="2" />
<text  x="85.32" y="1103.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::_M_ptr (2,286,872 samples, 0.01%)</title><rect x="750.9" y="1013" width="0.1" height="15.0" fill="rgb(233,144,30)" rx="2" ry="2" />
<text  x="753.89" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,882,600 samples, 0.02%)</title><rect x="666.3" y="853" width="0.1" height="15.0" fill="rgb(235,126,47)" rx="2" ry="2" />
<text  x="669.26" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_timer_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_timer_t const&gt; &gt; &gt;::_M_erase (3,404,176 samples, 0.01%)</title><rect x="202.2" y="1045" width="0.1" height="15.0" fill="rgb(241,8,28)" rx="2" ry="2" />
<text  x="205.18" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;gazebo::physics::Entity*, std::allocator&lt;gazebo::physics::Entity*&gt; &gt;::push_back (41,022,172 samples, 0.16%)</title><rect x="444.1" y="901" width="1.9" height="15.0" fill="rgb(222,35,2)" rx="2" ry="2" />
<text  x="447.09" y="911.5" ></text>
</g>
<g >
<title>gazebo::common::Time::operator&lt; (5,704,726 samples, 0.02%)</title><rect x="894.0" y="1205" width="0.3" height="15.0" fill="rgb(250,28,18)" rx="2" ry="2" />
<text  x="897.01" y="1215.5" ></text>
</g>
<g >
<title>[librclcpp.so] (7,461,283 samples, 0.03%)</title><rect x="805.0" y="981" width="0.3" height="15.0" fill="rgb(254,78,16)" rx="2" ry="2" />
<text  x="807.97" y="991.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::get (8,473,753 samples, 0.03%)</title><rect x="561.4" y="757" width="0.4" height="15.0" fill="rgb(238,209,45)" rx="2" ry="2" />
<text  x="564.39" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,744,160 samples, 0.03%)</title><rect x="852.0" y="981" width="0.4" height="15.0" fill="rgb(240,193,52)" rx="2" ry="2" />
<text  x="854.99" y="991.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (10,199,720 samples, 0.04%)</title><rect x="770.5" y="917" width="0.4" height="15.0" fill="rgb(219,38,5)" rx="2" ry="2" />
<text  x="773.47" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (78,516,493 samples, 0.31%)</title><rect x="882.9" y="613" width="3.7" height="15.0" fill="rgb(223,130,25)" rx="2" ry="2" />
<text  x="885.91" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1141" width="0.1" height="15.0" fill="rgb(253,104,41)" rx="2" ry="2" />
<text  x="135.18" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,829,113 samples, 0.20%)</title><rect x="1169.4" y="1237" width="2.4" height="15.0" fill="rgb(229,27,12)" rx="2" ry="2" />
<text  x="1172.43" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,318,641 samples, 0.01%)</title><rect x="272.5" y="837" width="0.1" height="15.0" fill="rgb(209,18,47)" rx="2" ry="2" />
<text  x="275.50" y="847.5" ></text>
</g>
<g >
<title>[libgazebo_ros2_control.so] (4,106,830 samples, 0.02%)</title><rect x="615.1" y="933" width="0.2" height="15.0" fill="rgb(212,201,23)" rx="2" ry="2" />
<text  x="618.08" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (88,733,113 samples, 0.35%)</title><rect x="600.5" y="757" width="4.2" height="15.0" fill="rgb(216,42,0)" rx="2" ry="2" />
<text  x="603.53" y="767.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo_ros2_control::GazeboRosControlPrivate&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo_ros2_control::GazeboRosControlPrivate*&gt; &gt; &gt; &gt;::_M_get_pointer (3,992,763 samples, 0.02%)</title><rect x="728.7" y="981" width="0.2" height="15.0" fill="rgb(235,132,28)" rx="2" ry="2" />
<text  x="731.71" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,653,457 samples, 0.06%)</title><rect x="56.5" y="133" width="0.7" height="15.0" fill="rgb(215,162,48)" rx="2" ry="2" />
<text  x="59.49" y="143.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::unlock (2,154,874 samples, 0.01%)</title><rect x="50.0" y="1157" width="0.1" height="15.0" fill="rgb(250,3,54)" rx="2" ry="2" />
<text  x="52.95" y="1167.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Collision&gt;::shared_ptr&lt;gazebo::physics::Base&gt; (8,198,888 samples, 0.03%)</title><rect x="227.1" y="997" width="0.3" height="15.0" fill="rgb(222,96,7)" rx="2" ry="2" />
<text  x="230.05" y="1007.5" ></text>
</g>
<g >
<title>realtime_tools::RealtimePublisher&lt;control_msgs::msg::DynamicJointState_&lt;std::allocator&lt;void&gt; &gt; &gt;::publishingLoop (307,005,303 samples, 1.21%)</title><rect x="822.5" y="1157" width="14.3" height="15.0" fill="rgb(228,146,8)" rx="2" ry="2" />
<text  x="825.46" y="1167.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::LinkData (2,156,357 samples, 0.01%)</title><rect x="718.8" y="917" width="0.1" height="15.0" fill="rgb(225,63,29)" rx="2" ry="2" />
<text  x="721.80" y="927.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;decltype (4,143,934 samples, 0.02%)</title><rect x="816.3" y="997" width="0.2" height="15.0" fill="rgb(250,3,18)" rx="2" ry="2" />
<text  x="819.30" y="1007.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GenericTypeHandler&lt;gazebo::msgs::Pose&gt;::Delete (20,403,923 samples, 0.08%)</title><rect x="765.9" y="837" width="1.0" height="15.0" fill="rgb(244,173,39)" rx="2" ry="2" />
<text  x="768.93" y="847.5" ></text>
</g>
<g >
<title>dVector3Copy (3,872,077 samples, 0.02%)</title><rect x="255.0" y="965" width="0.2" height="15.0" fill="rgb(248,91,10)" rx="2" ry="2" />
<text  x="257.98" y="975.5" ></text>
</g>
<g >
<title>gazebo::physics::World::Models (4,098,996 samples, 0.02%)</title><rect x="642.0" y="917" width="0.2" height="15.0" fill="rgb(254,137,21)" rx="2" ry="2" />
<text  x="645.01" y="927.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (3,757,230 samples, 0.01%)</title><rect x="606.6" y="773" width="0.2" height="15.0" fill="rgb(225,176,12)" rx="2" ry="2" />
<text  x="609.60" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,910,423 samples, 0.01%)</title><rect x="779.1" y="869" width="0.1" height="15.0" fill="rgb(208,222,5)" rx="2" ry="2" />
<text  x="782.11" y="879.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::physics::LinkPrivate*, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt; (2,237,807 samples, 0.01%)</title><rect x="594.0" y="725" width="0.1" height="15.0" fill="rgb(211,8,43)" rx="2" ry="2" />
<text  x="597.03" y="735.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (4,212,343 samples, 0.02%)</title><rect x="593.4" y="757" width="0.2" height="15.0" fill="rgb(250,75,37)" rx="2" ry="2" />
<text  x="596.40" y="767.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Vector3 (3,821,967 samples, 0.02%)</title><rect x="261.0" y="1013" width="0.2" height="15.0" fill="rgb(208,114,31)" rx="2" ry="2" />
<text  x="264.00" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,305,043 samples, 0.10%)</title><rect x="22.9" y="965" width="1.1" height="15.0" fill="rgb(213,84,52)" rx="2" ry="2" />
<text  x="25.86" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;rclcpp::node_interfaces::NodeLoggingInterface,  (5,808,871 samples, 0.02%)</title><rect x="497.4" y="869" width="0.3" height="15.0" fill="rgb(215,47,43)" rx="2" ry="2" />
<text  x="500.38" y="879.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::recursive_mutex&gt;::~lock_guard (5,985,797 samples, 0.02%)</title><rect x="544.5" y="757" width="0.2" height="15.0" fill="rgb(233,163,53)" rx="2" ry="2" />
<text  x="547.45" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,254,930,948 samples, 16.79%)</title><rect x="957.0" y="1141" width="198.1" height="15.0" fill="rgb(212,220,4)" rx="2" ry="2" />
<text  x="959.97" y="1151.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>google::protobuf::internal::GenericTypeHandler&lt;gazebo::msgs::Pose&gt;::Merge (35,195,675 samples, 0.14%)</title><rect x="752.6" y="949" width="1.7" height="15.0" fill="rgb(220,205,26)" rx="2" ry="2" />
<text  x="755.65" y="959.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::InertialPrivate, std::default_delete&lt;gazebo::physics::InertialPrivate&gt; &gt;::get (12,233,963 samples, 0.05%)</title><rect x="443.5" y="885" width="0.6" height="15.0" fill="rgb(215,106,23)" rx="2" ry="2" />
<text  x="446.52" y="895.5" ></text>
</g>
<g >
<title>rclcpp::AnyExecutable::~AnyExecutable (7,733,003 samples, 0.03%)</title><rect x="789.9" y="1045" width="0.4" height="15.0" fill="rgb(248,86,38)" rx="2" ry="2" />
<text  x="792.90" y="1055.5" ></text>
</g>
<g >
<title>[libgazebo_ros_node.so] (7,449,969 samples, 0.03%)</title><rect x="838.8" y="1141" width="0.4" height="15.0" fill="rgb(245,215,37)" rx="2" ry="2" />
<text  x="841.84" y="1151.5" ></text>
</g>
<g >
<title>Opcode::RayCollider::_SegmentStab (3,676,925 samples, 0.01%)</title><rect x="117.6" y="1253" width="0.2" height="15.0" fill="rgb(206,35,22)" rx="2" ry="2" />
<text  x="120.60" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (81,162,592 samples, 0.32%)</title><rect x="1185.5" y="1221" width="3.8" height="15.0" fill="rgb(230,101,44)" rx="2" ry="2" />
<text  x="1188.51" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (106,072,551 samples, 0.42%)</title><rect x="1184.7" y="1301" width="4.9" height="15.0" fill="rgb(216,11,0)" rx="2" ry="2" />
<text  x="1187.68" y="1311.5" ></text>
</g>
<g >
<title>std::_List_node&lt;std::weak_ptr&lt;rclcpp::node_interfaces::NodeBaseInterface&gt; &gt;::_M_valptr (9,247,408 samples, 0.04%)</title><rect x="189.0" y="1029" width="0.4" height="15.0" fill="rgb(205,68,5)" rx="2" ry="2" />
<text  x="191.98" y="1039.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (4,128,482 samples, 0.02%)</title><rect x="855.4" y="1109" width="0.2" height="15.0" fill="rgb(205,226,13)" rx="2" ry="2" />
<text  x="858.40" y="1119.5" ></text>
</g>
<g >
<title>sdf::v9::Element::Get&lt;ignition::math::v6::Vector3&lt;double&gt; &gt; (14,452,996 samples, 0.06%)</title><rect x="29.3" y="1109" width="0.7" height="15.0" fill="rgb(247,51,25)" rx="2" ry="2" />
<text  x="32.32" y="1119.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::unique_lock (4,133,986 samples, 0.02%)</title><rect x="214.9" y="981" width="0.2" height="15.0" fill="rgb(234,8,51)" rx="2" ry="2" />
<text  x="217.92" y="991.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (12,736,439 samples, 0.05%)</title><rect x="654.8" y="773" width="0.6" height="15.0" fill="rgb(211,217,41)" rx="2" ry="2" />
<text  x="657.76" y="783.5" ></text>
</g>
<g >
<title>gazebo::msgs::Contacts::GetMetadata (6,131,012 samples, 0.02%)</title><rect x="216.7" y="997" width="0.3" height="15.0" fill="rgb(207,126,44)" rx="2" ry="2" />
<text  x="219.74" y="1007.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (2,163,391 samples, 0.01%)</title><rect x="527.5" y="757" width="0.1" height="15.0" fill="rgb(233,198,29)" rx="2" ry="2" />
<text  x="530.50" y="767.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (7,101,875 samples, 0.03%)</title><rect x="195.4" y="1013" width="0.4" height="15.0" fill="rgb(218,72,31)" rx="2" ry="2" />
<text  x="198.43" y="1023.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (987,863,774 samples, 3.90%)</title><rect x="819.3" y="1173" width="46.1" height="15.0" fill="rgb(227,56,25)" rx="2" ry="2" />
<text  x="822.35" y="1183.5" >std:..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::zero (6,281,281 samples, 0.02%)</title><rect x="860.0" y="1125" width="0.3" height="15.0" fill="rgb(235,165,51)" rx="2" ry="2" />
<text  x="862.96" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,609,527 samples, 0.08%)</title><rect x="477.4" y="821" width="1.0" height="15.0" fill="rgb(241,23,36)" rx="2" ry="2" />
<text  x="480.40" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,958,587 samples, 0.02%)</title><rect x="851.4" y="1029" width="0.2" height="15.0" fill="rgb(239,196,52)" rx="2" ry="2" />
<text  x="854.38" y="1039.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::unique_lock (28,063,418 samples, 0.11%)</title><rect x="59.0" y="1173" width="1.3" height="15.0" fill="rgb(220,186,18)" rx="2" ry="2" />
<text  x="61.96" y="1183.5" ></text>
</g>
<g >
<title>boost::_mfi::mf1&lt;void, gazebo::sensors::SimTimeEventHandler, gazebo::common::UpdateInfo const&amp;&gt;::operator (47,604,337 samples, 0.19%)</title><rect x="619.6" y="949" width="2.2" height="15.0" fill="rgb(241,211,50)" rx="2" ry="2" />
<text  x="622.61" y="959.5" ></text>
</g>
<g >
<title>[libgazebo_ros_factory.so] (5,836,342 samples, 0.02%)</title><rect x="779.2" y="901" width="0.3" height="15.0" fill="rgb(242,162,26)" rx="2" ry="2" />
<text  x="782.25" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::back (2,194,298 samples, 0.01%)</title><rect x="586.6" y="677" width="0.1" height="15.0" fill="rgb(243,63,28)" rx="2" ry="2" />
<text  x="589.65" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt;::destroy&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; (7,461,283 samples, 0.03%)</title><rect x="805.0" y="997" width="0.3" height="15.0" fill="rgb(245,162,34)" rx="2" ry="2" />
<text  x="807.97" y="1007.5" ></text>
</g>
<g >
<title>dVector3Cross (2,211,726 samples, 0.01%)</title><rect x="252.4" y="933" width="0.1" height="15.0" fill="rgb(231,3,33)" rx="2" ry="2" />
<text  x="255.37" y="943.5" ></text>
</g>
<g >
<title>__tls_get_addr (3,997,841 samples, 0.02%)</title><rect x="160.8" y="1269" width="0.2" height="15.0" fill="rgb(221,79,28)" rx="2" ry="2" />
<text  x="163.80" y="1279.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (3,999,934 samples, 0.02%)</title><rect x="580.1" y="725" width="0.2" height="15.0" fill="rgb(207,156,30)" rx="2" ry="2" />
<text  x="583.11" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo_ros2_control::GazeboSystemPrivate, std::default_delete&lt;gazebo_ros2_control::GazeboSystemPrivate&gt; &gt;::get (16,101,355 samples, 0.06%)</title><rect x="611.6" y="837" width="0.8" height="15.0" fill="rgb(237,84,31)" rx="2" ry="2" />
<text  x="614.61" y="847.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,190,060 samples, 0.03%)</title><rect x="190.1" y="965" width="0.4" height="15.0" fill="rgb(231,81,25)" rx="2" ry="2" />
<text  x="193.14" y="975.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::~LinkData (15,510,083 samples, 0.06%)</title><rect x="74.3" y="933" width="0.7" height="15.0" fill="rgb(212,91,50)" rx="2" ry="2" />
<text  x="77.32" y="943.5" ></text>
</g>
<g >
<title>boost::condition_variable::notify_all (6,377,139 samples, 0.03%)</title><rect x="214.4" y="981" width="0.3" height="15.0" fill="rgb(218,200,14)" rx="2" ry="2" />
<text  x="217.43" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_get_insert_unique_pos (7,924,855 samples, 0.03%)</title><rect x="220.9" y="965" width="0.3" height="15.0" fill="rgb(228,6,12)" rx="2" ry="2" />
<text  x="223.86" y="975.5" ></text>
</g>
<g >
<title>boost::detail::atomic_decrement (3,889,757 samples, 0.02%)</title><rect x="226.9" y="965" width="0.2" height="15.0" fill="rgb(239,44,16)" rx="2" ry="2" />
<text  x="229.87" y="975.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::InertialPrivate, std::default_delete&lt;gazebo::physics::InertialPrivate&gt; &gt;::_M_ptr (4,199,602 samples, 0.02%)</title><rect x="684.4" y="821" width="0.2" height="15.0" fill="rgb(252,55,34)" rx="2" ry="2" />
<text  x="687.38" y="831.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::_find_ptrs_if_impl&lt;rclcpp::ServiceBase, rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (34,583,908 samples, 0.14%)</title><rect x="809.4" y="1013" width="1.6" height="15.0" fill="rgb(234,227,0)" rx="2" ry="2" />
<text  x="812.39" y="1023.5" ></text>
</g>
<g >
<title>boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::sensors::ImuSensor*&gt;, boost::arg&lt;1&gt; &gt;::operator (29,322,656 samples, 0.12%)</title><rect x="74.2" y="1093" width="1.4" height="15.0" fill="rgb(238,148,45)" rx="2" ry="2" />
<text  x="77.22" y="1103.5" ></text>
</g>
<g >
<title>gazebo_plugins::GazeboRosDiffDrivePrivate::PublishOdometryMsg (19,771,407 samples, 0.08%)</title><rect x="635.3" y="901" width="0.9" height="15.0" fill="rgb(228,156,12)" rx="2" ry="2" />
<text  x="638.25" y="911.5" ></text>
</g>
<g >
<title>gazebo_plugins::GazeboRosDiffDrivePrivate::OnUpdate (2,410,805 samples, 0.01%)</title><rect x="778.5" y="917" width="0.2" height="15.0" fill="rgb(208,216,12)" rx="2" ry="2" />
<text  x="781.55" y="927.5" ></text>
</g>
<g >
<title>std::isfinite (4,043,177 samples, 0.02%)</title><rect x="559.5" y="741" width="0.2" height="15.0" fill="rgb(242,59,24)" rx="2" ry="2" />
<text  x="562.46" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GetEmptyStringAlreadyInited[abi:cxx11] (2,189,390 samples, 0.01%)</title><rect x="766.6" y="773" width="0.1" height="15.0" fill="rgb(221,62,44)" rx="2" ry="2" />
<text  x="769.61" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (22,039,144 samples, 0.09%)</title><rect x="499.0" y="821" width="1.0" height="15.0" fill="rgb(208,93,54)" rx="2" ry="2" />
<text  x="501.98" y="831.5" ></text>
</g>
<g >
<title>dCalcVectorDot3_41 (8,767,427 samples, 0.03%)</title><rect x="267.1" y="917" width="0.4" height="15.0" fill="rgb(220,164,11)" rx="2" ry="2" />
<text  x="270.09" y="927.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (2,505,872 samples, 0.01%)</title><rect x="58.3" y="565" width="0.1" height="15.0" fill="rgb(222,65,52)" rx="2" ry="2" />
<text  x="61.30" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;::_Rb_tree_iterator (2,865,199 samples, 0.01%)</title><rect x="32.0" y="1061" width="0.1" height="15.0" fill="rgb(207,17,35)" rx="2" ry="2" />
<text  x="35.00" y="1071.5" ></text>
</g>
<g >
<title>boost::asio::detail::io_object_impl&lt;boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;, boost::asio::executor&gt;::get_service (27,967,816 samples, 0.11%)</title><rect x="53.0" y="1157" width="1.3" height="15.0" fill="rgb(225,127,32)" rx="2" ry="2" />
<text  x="55.98" y="1167.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::GetParent (2,160,822 samples, 0.01%)</title><rect x="775.4" y="725" width="0.1" height="15.0" fill="rgb(228,224,42)" rx="2" ry="2" />
<text  x="778.44" y="735.5" ></text>
</g>
<g >
<title>hardware_interface::ResourceManager::write (10,533,557 samples, 0.04%)</title><rect x="777.2" y="901" width="0.5" height="15.0" fill="rgb(229,113,5)" rx="2" ry="2" />
<text  x="780.22" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,628,552 samples, 0.03%)</title><rect x="138.3" y="1093" width="0.3" height="15.0" fill="rgb(231,36,11)" rx="2" ry="2" />
<text  x="141.29" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (8,328,804 samples, 0.03%)</title><rect x="592.4" y="757" width="0.4" height="15.0" fill="rgb(238,99,26)" rx="2" ry="2" />
<text  x="595.44" y="767.5" ></text>
</g>
<g >
<title>PublishPerformanceMetrics (55,249,178 samples, 0.22%)</title><rect x="898.2" y="1221" width="2.6" height="15.0" fill="rgb(218,68,3)" rx="2" ry="2" />
<text  x="901.21" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,526,646 samples, 0.03%)</title><rect x="830.0" y="1077" width="0.3" height="15.0" fill="rgb(205,209,19)" rx="2" ry="2" />
<text  x="832.99" y="1087.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rclcpp::executors::MultiThreadedExecutor*, std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt;, std::allocator&lt;std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::hash&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (5,811,521 samples, 0.02%)</title><rect x="819.0" y="1045" width="0.3" height="15.0" fill="rgb(242,62,35)" rx="2" ry="2" />
<text  x="822.01" y="1055.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, hardware_interface::SystemInterface*, std::default_delete&lt;hardware_interface::SystemInterface&gt; &gt; (4,061,399 samples, 0.02%)</title><rect x="519.8" y="821" width="0.2" height="15.0" fill="rgb(253,11,34)" rx="2" ry="2" />
<text  x="522.78" y="831.5" ></text>
</g>
<g >
<title>Opcode::AABBTreeCollider::_Collide (7,904,675 samples, 0.03%)</title><rect x="103.1" y="1285" width="0.4" height="15.0" fill="rgb(232,4,0)" rx="2" ry="2" />
<text  x="106.09" y="1295.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (4,151,006 samples, 0.02%)</title><rect x="741.7" y="997" width="0.2" height="15.0" fill="rgb(247,52,29)" rx="2" ry="2" />
<text  x="744.73" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,652,014 samples, 0.04%)</title><rect x="722.4" y="613" width="0.5" height="15.0" fill="rgb(208,59,53)" rx="2" ry="2" />
<text  x="725.45" y="623.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::UpdatePhysics (15,889,694 samples, 0.06%)</title><rect x="458.1" y="1061" width="0.7" height="15.0" fill="rgb(223,159,20)" rx="2" ry="2" />
<text  x="461.06" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::emplace_back&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (6,113,139 samples, 0.02%)</title><rect x="595.3" y="757" width="0.3" height="15.0" fill="rgb(208,192,16)" rx="2" ry="2" />
<text  x="598.28" y="767.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Vector3 (4,005,229 samples, 0.02%)</title><rect x="664.2" y="885" width="0.2" height="15.0" fill="rgb(209,10,34)" rx="2" ry="2" />
<text  x="667.20" y="895.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (6,909,633 samples, 0.03%)</title><rect x="152.3" y="1285" width="0.3" height="15.0" fill="rgb(253,154,41)" rx="2" ry="2" />
<text  x="155.26" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,579,944 samples, 0.03%)</title><rect x="75.2" y="1061" width="0.4" height="15.0" fill="rgb(218,17,16)" rx="2" ry="2" />
<text  x="78.18" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="1093" width="0.1" height="15.0" fill="rgb(205,28,33)" rx="2" ry="2" />
<text  x="839.31" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,415,848 samples, 0.03%)</title><rect x="145.2" y="1205" width="0.3" height="15.0" fill="rgb(218,176,18)" rx="2" ry="2" />
<text  x="148.23" y="1215.5" ></text>
</g>
<g >
<title>gazebo::msgs::IMU::mutable_orientation (5,981,842 samples, 0.02%)</title><rect x="26.5" y="1157" width="0.3" height="15.0" fill="rgb(232,177,1)" rx="2" ry="2" />
<text  x="29.52" y="1167.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (6,912,390 samples, 0.03%)</title><rect x="195.0" y="1029" width="0.3" height="15.0" fill="rgb(232,217,29)" rx="2" ry="2" />
<text  x="197.96" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,067,708 samples, 0.05%)</title><rect x="12.9" y="1253" width="0.6" height="15.0" fill="rgb(231,41,45)" rx="2" ry="2" />
<text  x="15.89" y="1263.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (100,583,021 samples, 0.40%)</title><rect x="54.3" y="1061" width="4.7" height="15.0" fill="rgb(212,66,32)" rx="2" ry="2" />
<text  x="57.28" y="1071.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::operator (6,244,107 samples, 0.02%)</title><rect x="260.7" y="997" width="0.3" height="15.0" fill="rgb(248,178,9)" rx="2" ry="2" />
<text  x="263.71" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;hardware_interface::Actuator*, std::vector&lt;hardware_interface::Actuator, std::allocator&lt;hardware_interface::Actuator&gt; &gt; &gt;::base (4,212,185 samples, 0.02%)</title><rect x="523.8" y="885" width="0.2" height="15.0" fill="rgb(250,36,0)" rx="2" ry="2" />
<text  x="526.79" y="895.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (8,767,427 samples, 0.03%)</title><rect x="267.1" y="901" width="0.4" height="15.0" fill="rgb(238,59,46)" rx="2" ry="2" />
<text  x="270.09" y="911.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (2,394,558 samples, 0.01%)</title><rect x="640.5" y="885" width="0.1" height="15.0" fill="rgb(208,222,40)" rx="2" ry="2" />
<text  x="643.47" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;::_M_node_count (2,688,974 samples, 0.01%)</title><rect x="82.0" y="1141" width="0.1" height="15.0" fill="rgb(230,120,43)" rx="2" ry="2" />
<text  x="84.97" y="1151.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (7,107,550 samples, 0.03%)</title><rect x="773.7" y="853" width="0.3" height="15.0" fill="rgb(212,223,54)" rx="2" ry="2" />
<text  x="776.65" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::event::EventT&lt;void  (12,508,132 samples, 0.05%)</title><rect x="731.1" y="1013" width="0.6" height="15.0" fill="rgb(246,133,48)" rx="2" ry="2" />
<text  x="734.12" y="1023.5" ></text>
</g>
<g >
<title>[libgazebo_ros_vacuum_gripper.so] (4,086,635 samples, 0.02%)</title><rect x="671.6" y="853" width="0.2" height="15.0" fill="rgb(242,46,18)" rx="2" ry="2" />
<text  x="674.57" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,646 samples, 0.01%)</title><rect x="724.0" y="885" width="0.1" height="15.0" fill="rgb(236,53,39)" rx="2" ry="2" />
<text  x="727.02" y="895.5" ></text>
</g>
<g >
<title>gazebo::common::Time::operator&gt; (4,383,368 samples, 0.02%)</title><rect x="482.3" y="997" width="0.2" height="15.0" fill="rgb(252,57,46)" rx="2" ry="2" />
<text  x="485.29" y="1007.5" ></text>
</g>
<g >
<title>ode::quickstep::PGS_LCP (90,159,307 samples, 0.36%)</title><rect x="783.0" y="965" width="4.2" height="15.0" fill="rgb(206,42,53)" rx="2" ry="2" />
<text  x="786.05" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="917" width="0.1" height="15.0" fill="rgb(208,171,25)" rx="2" ry="2" />
<text  x="848.06" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::InertialPrivate, std::default_delete&lt;gazebo::physics::InertialPrivate&gt; &gt;::operator (4,116,622 samples, 0.02%)</title><rect x="684.8" y="869" width="0.2" height="15.0" fill="rgb(235,187,46)" rx="2" ry="2" />
<text  x="687.77" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,865,199 samples, 0.01%)</title><rect x="32.8" y="1077" width="0.2" height="15.0" fill="rgb(215,48,30)" rx="2" ry="2" />
<text  x="35.84" y="1087.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt; &gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;*&gt; (20,717,087 samples, 0.08%)</title><rect x="654.4" y="853" width="1.0" height="15.0" fill="rgb(239,36,24)" rx="2" ry="2" />
<text  x="657.39" y="863.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GenericTypeHandler&lt;gazebo::msgs::Pose&gt;::New (6,964,964 samples, 0.03%)</title><rect x="754.8" y="981" width="0.3" height="15.0" fill="rgb(213,34,8)" rx="2" ry="2" />
<text  x="757.77" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="997" width="0.2" height="15.0" fill="rgb(219,143,10)" rx="2" ry="2" />
<text  x="849.22" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,225,905 samples, 0.01%)</title><rect x="829.7" y="1061" width="0.1" height="15.0" fill="rgb(214,38,25)" rx="2" ry="2" />
<text  x="832.69" y="1071.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::transport::CallbackHelper&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::CallbackHelper&gt; &gt; &gt;::size (7,387,439 samples, 0.03%)</title><rect x="900.4" y="1173" width="0.4" height="15.0" fill="rgb(247,90,51)" rx="2" ry="2" />
<text  x="903.44" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,056,464 samples, 0.02%)</title><rect x="741.3" y="757" width="0.2" height="15.0" fill="rgb(238,170,15)" rx="2" ry="2" />
<text  x="744.27" y="767.5" ></text>
</g>
<g >
<title>std::allocator&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt; &gt;::allocator (4,975,899 samples, 0.02%)</title><rect x="794.7" y="917" width="0.3" height="15.0" fill="rgb(234,46,3)" rx="2" ry="2" />
<text  x="797.74" y="927.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::node_interfaces::NodeBaseInterface&gt;::shared_ptr (7,281,247 samples, 0.03%)</title><rect x="791.2" y="965" width="0.3" height="15.0" fill="rgb(206,3,24)" rx="2" ry="2" />
<text  x="794.19" y="975.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rclcpp::executors::MultiThreadedExecutor*, std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt;, std::allocator&lt;std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::hash&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (8,176,813 samples, 0.03%)</title><rect x="793.1" y="1013" width="0.4" height="15.0" fill="rgb(254,10,41)" rx="2" ry="2" />
<text  x="796.13" y="1023.5" ></text>
</g>
<g >
<title>gazebo::transport::Publication::SetPrevMsg (16,835,093 samples, 0.07%)</title><rect x="31.4" y="1125" width="0.7" height="15.0" fill="rgb(247,61,19)" rx="2" ry="2" />
<text  x="34.35" y="1135.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (2,622,062 samples, 0.01%)</title><rect x="156.8" y="1269" width="0.2" height="15.0" fill="rgb(246,96,12)" rx="2" ry="2" />
<text  x="159.84" y="1279.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;sdf::v9::ParamPrivate, std::default_delete&lt;sdf::v9::ParamPrivate&gt; &gt;::operator (6,729,605 samples, 0.03%)</title><rect x="45.3" y="1045" width="0.4" height="15.0" fill="rgb(219,109,27)" rx="2" ry="2" />
<text  x="48.34" y="1055.5" ></text>
</g>
<g >
<title>[libgazebo_msgs.so.11.10.1] (8,126,554 samples, 0.03%)</title><rect x="21.8" y="1013" width="0.3" height="15.0" fill="rgb(227,167,50)" rx="2" ry="2" />
<text  x="24.75" y="1023.5" ></text>
</g>
<g >
<title>rmw_publish (3,882,600 samples, 0.02%)</title><rect x="666.3" y="869" width="0.1" height="15.0" fill="rgb(208,43,27)" rx="2" ry="2" />
<text  x="669.26" y="879.5" ></text>
</g>
<g >
<title>[libjoint_trajectory_controller.so] (6,034,817 samples, 0.02%)</title><rect x="493.9" y="901" width="0.2" height="15.0" fill="rgb(211,107,38)" rx="2" ry="2" />
<text  x="496.85" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,992,783 samples, 0.02%)</title><rect x="707.3" y="821" width="0.3" height="15.0" fill="rgb(238,158,47)" rx="2" ry="2" />
<text  x="710.29" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,619,113 samples, 0.02%)</title><rect x="634.8" y="805" width="0.3" height="15.0" fill="rgb(225,0,15)" rx="2" ry="2" />
<text  x="637.81" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,124,985 samples, 0.11%)</title><rect x="853.0" y="1093" width="1.3" height="15.0" fill="rgb(228,151,35)" rx="2" ry="2" />
<text  x="855.96" y="1103.5" ></text>
</g>
<g >
<title>gazebo::physics::ODESurfaceParams::FrictionPyramid (5,888,903 samples, 0.02%)</title><rect x="260.4" y="1013" width="0.3" height="15.0" fill="rgb(224,129,44)" rx="2" ry="2" />
<text  x="263.43" y="1023.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::find_subscription_ptrs_if&lt;rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (25,364,968 samples, 0.10%)</title><rect x="811.0" y="1029" width="1.2" height="15.0" fill="rgb(223,99,54)" rx="2" ry="2" />
<text  x="814.00" y="1039.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::find_timer_ptrs_if&lt;rclcpp::memory_strategy::MemoryStrategy::get_timer_by_handle (16,395,720 samples, 0.06%)</title><rect x="189.7" y="1045" width="0.8" height="15.0" fill="rgb(220,202,22)" rx="2" ry="2" />
<text  x="192.71" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,635,319 samples, 0.12%)</title><rect x="740.1" y="869" width="1.4" height="15.0" fill="rgb(246,92,5)" rx="2" ry="2" />
<text  x="743.07" y="879.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rcl_service_t const&gt;::shared_ptr (6,390,161 samples, 0.03%)</title><rect x="196.4" y="949" width="0.3" height="15.0" fill="rgb(235,159,9)" rx="2" ry="2" />
<text  x="199.43" y="959.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::GetChildJointsLinks (4,256,050 samples, 0.02%)</title><rect x="586.1" y="709" width="0.2" height="15.0" fill="rgb(229,86,4)" rx="2" ry="2" />
<text  x="589.09" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,646 samples, 0.01%)</title><rect x="724.0" y="693" width="0.1" height="15.0" fill="rgb(254,77,0)" rx="2" ry="2" />
<text  x="727.02" y="703.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_allocate (2,286,334 samples, 0.01%)</title><rect x="54.3" y="917" width="0.1" height="15.0" fill="rgb(242,15,4)" rx="2" ry="2" />
<text  x="57.28" y="927.5" ></text>
</g>
<g >
<title>gazebo::physics::ODELink::OnPoseChange (138,399,991 samples, 0.55%)</title><rect x="552.3" y="757" width="6.4" height="15.0" fill="rgb(218,166,48)" rx="2" ry="2" />
<text  x="555.25" y="767.5" ></text>
</g>
<g >
<title>[libzmq.so.5.2.2] (18,904,102 samples, 0.07%)</title><rect x="133.9" y="1285" width="0.8" height="15.0" fill="rgb(211,161,4)" rx="2" ry="2" />
<text  x="136.85" y="1295.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Model&gt;::~shared_ptr (6,165,450 samples, 0.02%)</title><rect x="218.7" y="1013" width="0.3" height="15.0" fill="rgb(236,164,52)" rx="2" ry="2" />
<text  x="221.68" y="1023.5" ></text>
</g>
<g >
<title>Opcode::AABBTreeCollider::InitQuery (3,896,127 samples, 0.02%)</title><rect x="102.9" y="1285" width="0.2" height="15.0" fill="rgb(215,53,20)" rx="2" ry="2" />
<text  x="105.91" y="1295.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (7,916,740 samples, 0.03%)</title><rect x="469.6" y="917" width="0.4" height="15.0" fill="rgb(232,166,31)" rx="2" ry="2" />
<text  x="472.63" y="927.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::SetVelocityMaximal (5,728,333 samples, 0.02%)</title><rect x="774.5" y="837" width="0.2" height="15.0" fill="rgb(245,5,38)" rx="2" ry="2" />
<text  x="777.45" y="847.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_allocate (3,962,799 samples, 0.02%)</title><rect x="596.8" y="773" width="0.2" height="15.0" fill="rgb(219,183,7)" rx="2" ry="2" />
<text  x="599.78" y="783.5" ></text>
</g>
<g >
<title>dxSimpleSpace::collide2 (4,175,437 samples, 0.02%)</title><rect x="781.4" y="949" width="0.2" height="15.0" fill="rgb(208,178,21)" rx="2" ry="2" />
<text  x="784.37" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (4,033,917 samples, 0.02%)</title><rect x="767.4" y="1045" width="0.2" height="15.0" fill="rgb(245,131,37)" rx="2" ry="2" />
<text  x="770.38" y="1055.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;rclcpp::ServiceBase&gt;::lock (13,777,972 samples, 0.05%)</title><rect x="196.7" y="1029" width="0.7" height="15.0" fill="rgb(252,106,9)" rx="2" ry="2" />
<text  x="199.73" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1237" width="0.1" height="15.0" fill="rgb(223,109,47)" rx="2" ry="2" />
<text  x="135.18" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1061" width="0.1" height="15.0" fill="rgb(207,111,19)" rx="2" ry="2" />
<text  x="135.18" y="1071.5" ></text>
</g>
<g >
<title>gazebo::msgs::Time::Time (2,171,112 samples, 0.01%)</title><rect x="752.4" y="1029" width="0.1" height="15.0" fill="rgb(220,40,30)" rx="2" ry="2" />
<text  x="755.45" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_realloc_insert&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (5,602,768 samples, 0.02%)</title><rect x="594.4" y="741" width="0.2" height="15.0" fill="rgb(208,156,12)" rx="2" ry="2" />
<text  x="597.39" y="751.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::IsInitialized (7,824,932 samples, 0.03%)</title><rect x="765.2" y="1013" width="0.3" height="15.0" fill="rgb(220,186,25)" rx="2" ry="2" />
<text  x="768.17" y="1023.5" ></text>
</g>
<g >
<title>rcl_subscription_is_valid (9,034,749 samples, 0.04%)</title><rect x="808.3" y="997" width="0.4" height="15.0" fill="rgb(226,27,45)" rx="2" ry="2" />
<text  x="811.28" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_realloc_insert&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; const&amp;&gt; (7,683,688 samples, 0.03%)</title><rect x="593.0" y="757" width="0.4" height="15.0" fill="rgb(205,53,48)" rx="2" ry="2" />
<text  x="596.04" y="767.5" ></text>
</g>
<g >
<title>[unknown] (6,015,980 samples, 0.02%)</title><rect x="1181.3" y="1285" width="0.3" height="15.0" fill="rgb(210,86,22)" rx="2" ry="2" />
<text  x="1184.33" y="1295.5" ></text>
</g>
<g >
<title>__gthread_active_p (2,169,538 samples, 0.01%)</title><rect x="544.5" y="709" width="0.1" height="15.0" fill="rgb(220,132,9)" rx="2" ry="2" />
<text  x="547.45" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,363,069 samples, 0.03%)</title><rect x="40.1" y="1077" width="0.3" height="15.0" fill="rgb(245,210,47)" rx="2" ry="2" />
<text  x="43.09" y="1087.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::TimerBase&gt;::shared_ptr (9,205,660 samples, 0.04%)</title><rect x="189.7" y="1013" width="0.4" height="15.0" fill="rgb(222,130,34)" rx="2" ry="2" />
<text  x="192.71" y="1023.5" ></text>
</g>
<g >
<title>boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (5,754,403 samples, 0.02%)</title><rect x="54.4" y="981" width="0.3" height="15.0" fill="rgb(248,86,9)" rx="2" ry="2" />
<text  x="57.39" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,992,783 samples, 0.02%)</title><rect x="707.3" y="869" width="0.3" height="15.0" fill="rgb(225,6,4)" rx="2" ry="2" />
<text  x="710.29" y="879.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::SubscriptionBase,  (6,052,277 samples, 0.02%)</title><rect x="802.0" y="949" width="0.3" height="15.0" fill="rgb(232,19,8)" rx="2" ry="2" />
<text  x="805.05" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rclcpp::Waitable&gt;, std::allocator&lt;std::shared_ptr&lt;rclcpp::Waitable&gt; &gt; &gt;::end (5,995,416 samples, 0.02%)</title><rect x="202.3" y="1029" width="0.3" height="15.0" fill="rgb(254,86,40)" rx="2" ry="2" />
<text  x="205.33" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::~vector (3,705,509 samples, 0.01%)</title><rect x="696.7" y="917" width="0.1" height="15.0" fill="rgb(236,193,10)" rx="2" ry="2" />
<text  x="699.67" y="927.5" ></text>
</g>
<g >
<title>google::protobuf::io::CodedOutputStream::VarintSize32SignExtended (2,665,526 samples, 0.01%)</title><rect x="163.9" y="1189" width="0.1" height="15.0" fill="rgb(250,77,31)" rx="2" ry="2" />
<text  x="166.90" y="1199.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::node_interfaces::NodeBaseInterface,  (6,010,464 samples, 0.02%)</title><rect x="803.5" y="981" width="0.3" height="15.0" fill="rgb(221,70,42)" rx="2" ry="2" />
<text  x="806.52" y="991.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::WorldPose (13,894,108 samples, 0.05%)</title><rect x="527.0" y="821" width="0.6" height="15.0" fill="rgb(215,91,42)" rx="2" ry="2" />
<text  x="529.96" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,847,722 samples, 0.03%)</title><rect x="931.5" y="1269" width="0.4" height="15.0" fill="rgb(205,186,21)" rx="2" ry="2" />
<text  x="934.53" y="1279.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::GetParentJointsLinks (3,946,030 samples, 0.02%)</title><rect x="775.4" y="741" width="0.2" height="15.0" fill="rgb(239,109,2)" rx="2" ry="2" />
<text  x="778.44" y="751.5" ></text>
</g>
<g >
<title>[libgazebo_transport.so.11.10.1] (2,537,634 samples, 0.01%)</title><rect x="82.7" y="1125" width="0.1" height="15.0" fill="rgb(226,63,28)" rx="2" ry="2" />
<text  x="85.72" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,415,848 samples, 0.03%)</title><rect x="145.2" y="1253" width="0.3" height="15.0" fill="rgb(214,145,24)" rx="2" ry="2" />
<text  x="148.23" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,225,905 samples, 0.01%)</title><rect x="829.7" y="933" width="0.1" height="15.0" fill="rgb(209,170,54)" rx="2" ry="2" />
<text  x="832.69" y="943.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::SetVelocityMaximal (11,891,691 samples, 0.05%)</title><rect x="717.8" y="885" width="0.5" height="15.0" fill="rgb(227,95,18)" rx="2" ry="2" />
<text  x="720.76" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4,100,603 samples, 0.02%)</title><rect x="695.1" y="869" width="0.2" height="15.0" fill="rgb(217,52,19)" rx="2" ry="2" />
<text  x="698.11" y="879.5" ></text>
</g>
<g >
<title>gazebo_ros2_control::GazeboRosControlPrivate::Update (22,078,966 samples, 0.09%)</title><rect x="616.6" y="933" width="1.0" height="15.0" fill="rgb(254,117,51)" rx="2" ry="2" />
<text  x="619.58" y="943.5" ></text>
</g>
<g >
<title>gazebo::msgs::Time::set_has_sec (6,436,601 samples, 0.03%)</title><rect x="28.4" y="1125" width="0.3" height="15.0" fill="rgb(223,26,26)" rx="2" ry="2" />
<text  x="31.36" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,904 samples, 0.12%)</title><rect x="1181.6" y="1221" width="1.4" height="15.0" fill="rgb(227,195,41)" rx="2" ry="2" />
<text  x="1184.61" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,585,715 samples, 0.03%)</title><rect x="852.1" y="949" width="0.3" height="15.0" fill="rgb(249,68,43)" rx="2" ry="2" />
<text  x="855.09" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,013,105 samples, 0.02%)</title><rect x="452.5" y="1045" width="0.2" height="15.0" fill="rgb(254,86,48)" rx="2" ry="2" />
<text  x="455.54" y="1055.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::Pose3 (5,990,050 samples, 0.02%)</title><rect x="609.9" y="821" width="0.3" height="15.0" fill="rgb(207,162,32)" rx="2" ry="2" />
<text  x="612.88" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,860,710 samples, 0.03%)</title><rect x="829.2" y="1109" width="0.3" height="15.0" fill="rgb(226,3,17)" rx="2" ry="2" />
<text  x="832.17" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (6,353,618 samples, 0.03%)</title><rect x="126.4" y="1269" width="0.3" height="15.0" fill="rgb(230,109,7)" rx="2" ry="2" />
<text  x="129.38" y="1279.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::CallbackGroup&gt;::shared_ptr (7,825,830 samples, 0.03%)</title><rect x="190.9" y="1061" width="0.4" height="15.0" fill="rgb(225,107,30)" rx="2" ry="2" />
<text  x="193.89" y="1071.5" ></text>
</g>
<g >
<title>dJointGetHingeAngleRate (5,748,522 samples, 0.02%)</title><rect x="472.1" y="837" width="0.3" height="15.0" fill="rgb(232,162,42)" rx="2" ry="2" />
<text  x="475.12" y="847.5" ></text>
</g>
<g >
<title>dBodySetPosition (25,817,898 samples, 0.10%)</title><rect x="552.7" y="741" width="1.2" height="15.0" fill="rgb(239,149,23)" rx="2" ry="2" />
<text  x="555.71" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (92,542,284 samples, 0.37%)</title><rect x="54.7" y="837" width="4.3" height="15.0" fill="rgb(211,170,47)" rx="2" ry="2" />
<text  x="57.65" y="847.5" ></text>
</g>
<g >
<title>gazebo_ros::Executor::run (82,914,669 samples, 0.33%)</title><rect x="789.7" y="1093" width="3.8" height="15.0" fill="rgb(229,73,35)" rx="2" ry="2" />
<text  x="792.65" y="1103.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,011,260 samples, 0.03%)</title><rect x="813.2" y="997" width="0.3" height="15.0" fill="rgb(212,162,28)" rx="2" ry="2" />
<text  x="816.19" y="1007.5" ></text>
</g>
<g >
<title>joint_trajectory_controller::JointTrajectoryController::resize_joint_trajectory_point (4,047,910 samples, 0.02%)</title><rect x="777.0" y="885" width="0.2" height="15.0" fill="rgb(238,1,46)" rx="2" ry="2" />
<text  x="780.03" y="895.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (4,947,258 samples, 0.02%)</title><rect x="782.4" y="965" width="0.3" height="15.0" fill="rgb(240,149,23)" rx="2" ry="2" />
<text  x="785.44" y="975.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator= (14,465,385 samples, 0.06%)</title><rect x="559.9" y="757" width="0.7" height="15.0" fill="rgb(228,107,2)" rx="2" ry="2" />
<text  x="562.93" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,606,472 samples, 0.03%)</title><rect x="466.2" y="981" width="0.4" height="15.0" fill="rgb(208,74,21)" rx="2" ry="2" />
<text  x="469.20" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_check_len (4,029,975 samples, 0.02%)</title><rect x="595.3" y="725" width="0.2" height="15.0" fill="rgb(240,151,21)" rx="2" ry="2" />
<text  x="598.28" y="735.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::UpdateCollision (9,282,650 samples, 0.04%)</title><rect x="746.3" y="1045" width="0.4" height="15.0" fill="rgb(227,29,26)" rx="2" ry="2" />
<text  x="749.28" y="1055.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2,952,909 samples, 0.01%)</title><rect x="80.1" y="981" width="0.2" height="15.0" fill="rgb(228,229,13)" rx="2" ry="2" />
<text  x="83.13" y="991.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Z (10,193,306 samples, 0.04%)</title><rect x="664.5" y="885" width="0.4" height="15.0" fill="rgb(238,129,28)" rx="2" ry="2" />
<text  x="667.47" y="895.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (2,928,290 samples, 0.01%)</title><rect x="1185.4" y="1285" width="0.1" height="15.0" fill="rgb(230,34,49)" rx="2" ry="2" />
<text  x="1188.38" y="1295.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;rclcpp::executors::MultiThreadedExecutor*, std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt;, std::allocator&lt;std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::hash&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (5,811,521 samples, 0.02%)</title><rect x="819.0" y="1029" width="0.3" height="15.0" fill="rgb(235,54,9)" rx="2" ry="2" />
<text  x="822.01" y="1039.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::get (2,170,686 samples, 0.01%)</title><rect x="591.1" y="757" width="0.1" height="15.0" fill="rgb(242,194,27)" rx="2" ry="2" />
<text  x="594.09" y="767.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double&gt; (2,227,751 samples, 0.01%)</title><rect x="512.7" y="837" width="0.1" height="15.0" fill="rgb(212,0,11)" rx="2" ry="2" />
<text  x="515.67" y="847.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_timer (5,315,760 samples, 0.02%)</title><rect x="194.3" y="1061" width="0.2" height="15.0" fill="rgb(219,19,21)" rx="2" ry="2" />
<text  x="197.28" y="1071.5" ></text>
</g>
<g >
<title>rmw_publish (2,624,031 samples, 0.01%)</title><rect x="22.7" y="997" width="0.2" height="15.0" fill="rgb(248,191,50)" rx="2" ry="2" />
<text  x="25.74" y="1007.5" ></text>
</g>
<g >
<title>__libc_sendto (5,179,357 samples, 0.02%)</title><rect x="889.2" y="1301" width="0.3" height="15.0" fill="rgb(245,177,17)" rx="2" ry="2" />
<text  x="892.25" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,440,838 samples, 0.02%)</title><rect x="510.9" y="789" width="0.3" height="15.0" fill="rgb(223,134,5)" rx="2" ry="2" />
<text  x="513.91" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (100,504,280 samples, 0.40%)</title><rect x="453.0" y="1045" width="4.7" height="15.0" fill="rgb(210,83,23)" rx="2" ry="2" />
<text  x="456.01" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (7,107,550 samples, 0.03%)</title><rect x="773.7" y="821" width="0.3" height="15.0" fill="rgb(226,75,9)" rx="2" ry="2" />
<text  x="776.65" y="831.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (6,154,835 samples, 0.02%)</title><rect x="52.2" y="1173" width="0.3" height="15.0" fill="rgb(205,41,2)" rx="2" ry="2" />
<text  x="55.20" y="1183.5" ></text>
</g>
<g >
<title>sdf::v9::Element::Get&lt;unsigned int&gt; (19,426,309 samples, 0.08%)</title><rect x="44.8" y="1125" width="0.9" height="15.0" fill="rgb(213,190,25)" rx="2" ry="2" />
<text  x="47.75" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,580,330 samples, 0.01%)</title><rect x="675.3" y="757" width="0.2" height="15.0" fill="rgb(235,89,22)" rx="2" ry="2" />
<text  x="678.34" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::AppendPartialToString (29,647,825 samples, 0.12%)</title><rect x="162.6" y="1253" width="1.4" height="15.0" fill="rgb(242,130,54)" rx="2" ry="2" />
<text  x="165.64" y="1263.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (16,838,690 samples, 0.07%)</title><rect x="728.9" y="981" width="0.8" height="15.0" fill="rgb(210,167,2)" rx="2" ry="2" />
<text  x="731.89" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (165,739,373 samples, 0.65%)</title><rect x="910.0" y="1253" width="7.7" height="15.0" fill="rgb(220,91,27)" rx="2" ry="2" />
<text  x="913.01" y="1263.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (2,171,942 samples, 0.01%)</title><rect x="224.3" y="933" width="0.1" height="15.0" fill="rgb(221,155,7)" rx="2" ry="2" />
<text  x="227.28" y="943.5" ></text>
</g>
<g >
<title>[[uprobes]] (19,946,575 samples, 0.08%)</title><rect x="665.5" y="885" width="0.9" height="15.0" fill="rgb(245,139,32)" rx="2" ry="2" />
<text  x="668.51" y="895.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (82,914,669 samples, 0.33%)</title><rect x="789.7" y="1109" width="3.8" height="15.0" fill="rgb(235,190,41)" rx="2" ry="2" />
<text  x="792.65" y="1119.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetParent (10,069,702 samples, 0.04%)</title><rect x="543.5" y="757" width="0.5" height="15.0" fill="rgb(225,166,18)" rx="2" ry="2" />
<text  x="546.49" y="767.5" ></text>
</g>
<g >
<title>boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (20,830,968 samples, 0.08%)</title><rect x="13.6" y="997" width="0.9" height="15.0" fill="rgb(251,13,36)" rx="2" ry="2" />
<text  x="16.55" y="1007.5" ></text>
</g>
<g >
<title>gazebo::msgs::Vector3d::ByteSizeLong (9,942,903 samples, 0.04%)</title><rect x="163.4" y="1173" width="0.5" height="15.0" fill="rgb(227,21,24)" rx="2" ry="2" />
<text  x="166.43" y="1183.5" ></text>
</g>
<g >
<title>gazebo::common::Time::Sleep (21,196,757 samples, 0.08%)</title><rect x="893.3" y="1237" width="1.0" height="15.0" fill="rgb(223,159,25)" rx="2" ry="2" />
<text  x="896.29" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::size (2,218,123 samples, 0.01%)</title><rect x="507.4" y="869" width="0.1" height="15.0" fill="rgb(250,100,16)" rx="2" ry="2" />
<text  x="510.41" y="879.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_timer_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_timer_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_timer_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;decltype (6,005,596 samples, 0.02%)</title><rect x="201.3" y="1029" width="0.3" height="15.0" fill="rgb(229,216,19)" rx="2" ry="2" />
<text  x="204.34" y="1039.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::shared_ptr (13,892,277 samples, 0.05%)</title><rect x="681.5" y="885" width="0.7" height="15.0" fill="rgb(247,84,19)" rx="2" ry="2" />
<text  x="684.55" y="895.5" ></text>
</g>
<g >
<title>boost::asio::async_result&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (100,583,021 samples, 0.40%)</title><rect x="54.3" y="1045" width="4.7" height="15.0" fill="rgb(223,158,45)" rx="2" ry="2" />
<text  x="57.28" y="1055.5" ></text>
</g>
<g >
<title>dxSimpleSpace::collide2 (61,580,894 samples, 0.24%)</title><rect x="35.3" y="1029" width="2.8" height="15.0" fill="rgb(253,172,48)" rx="2" ry="2" />
<text  x="38.26" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (5,078,644 samples, 0.02%)</title><rect x="828.0" y="1029" width="0.3" height="15.0" fill="rgb(224,31,22)" rx="2" ry="2" />
<text  x="831.03" y="1039.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (4,362,102 samples, 0.02%)</title><rect x="239.6" y="805" width="0.2" height="15.0" fill="rgb(237,192,35)" rx="2" ry="2" />
<text  x="242.58" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,350,425 samples, 0.03%)</title><rect x="707.0" y="837" width="0.3" height="15.0" fill="rgb(215,108,8)" rx="2" ry="2" />
<text  x="710.00" y="847.5" ></text>
</g>
<g >
<title>[libgazebo_util.so.11.10.1] (4,100,816 samples, 0.02%)</title><rect x="482.9" y="1045" width="0.2" height="15.0" fill="rgb(252,108,41)" rx="2" ry="2" />
<text  x="485.88" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,525,761 samples, 0.03%)</title><rect x="478.0" y="773" width="0.4" height="15.0" fill="rgb(208,199,35)" rx="2" ry="2" />
<text  x="480.96" y="783.5" ></text>
</g>
<g >
<title>geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;::Pose_ (2,169,202 samples, 0.01%)</title><rect x="690.5" y="901" width="0.1" height="15.0" fill="rgb(229,52,48)" rx="2" ry="2" />
<text  x="693.53" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,652,819 samples, 0.07%)</title><rect x="1182.1" y="1109" width="0.9" height="15.0" fill="rgb(209,43,4)" rx="2" ry="2" />
<text  x="1185.10" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::resize (3,964,790 samples, 0.02%)</title><rect x="644.1" y="901" width="0.2" height="15.0" fill="rgb(241,159,24)" rx="2" ry="2" />
<text  x="647.07" y="911.5" ></text>
</g>
<g >
<title>__cos_fma (6,124,773 samples, 0.02%)</title><rect x="865.5" y="1301" width="0.3" height="15.0" fill="rgb(226,56,18)" rx="2" ry="2" />
<text  x="868.52" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,195,211 samples, 0.02%)</title><rect x="789.3" y="965" width="0.3" height="15.0" fill="rgb(219,152,12)" rx="2" ry="2" />
<text  x="792.28" y="975.5" ></text>
</g>
<g >
<title>std::min&lt;double&gt; (2,227,222 samples, 0.01%)</title><rect x="610.2" y="821" width="0.1" height="15.0" fill="rgb(251,110,42)" rx="2" ry="2" />
<text  x="613.15" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,803,424 samples, 0.09%)</title><rect x="462.1" y="901" width="1.1" height="15.0" fill="rgb(214,205,16)" rx="2" ry="2" />
<text  x="465.13" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (44,060,488 samples, 0.17%)</title><rect x="602.6" y="613" width="2.1" height="15.0" fill="rgb(220,199,50)" rx="2" ry="2" />
<text  x="605.61" y="623.5" ></text>
</g>
<g >
<title>gazebo::event::EventT&lt;void  (9,939,354 samples, 0.04%)</title><rect x="469.6" y="965" width="0.5" height="15.0" fill="rgb(229,199,18)" rx="2" ry="2" />
<text  x="472.63" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset (5,434,575 samples, 0.02%)</title><rect x="76.3" y="1141" width="0.2" height="15.0" fill="rgb(254,128,54)" rx="2" ry="2" />
<text  x="79.29" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (188,871,813 samples, 0.75%)</title><rect x="166.9" y="1125" width="8.8" height="15.0" fill="rgb(236,171,17)" rx="2" ry="2" />
<text  x="169.91" y="1135.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::GetParentJointsLinks (19,689,545 samples, 0.08%)</title><rect x="594.6" y="789" width="1.0" height="15.0" fill="rgb(232,227,29)" rx="2" ry="2" />
<text  x="597.65" y="799.5" ></text>
</g>
<g >
<title>gazebo::physics::ODELink::WorldLinearVel (45,522,212 samples, 0.18%)</title><rect x="528.1" y="821" width="2.1" height="15.0" fill="rgb(227,98,23)" rx="2" ry="2" />
<text  x="531.07" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="1093" width="0.2" height="15.0" fill="rgb(247,212,44)" rx="2" ry="2" />
<text  x="849.22" y="1103.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (20,101,372 samples, 0.08%)</title><rect x="798.0" y="933" width="0.9" height="15.0" fill="rgb(247,47,49)" rx="2" ry="2" />
<text  x="801.00" y="943.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Equal (6,206,817 samples, 0.02%)</title><rect x="261.4" y="981" width="0.3" height="15.0" fill="rgb(217,140,38)" rx="2" ry="2" />
<text  x="264.37" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,952,087 samples, 0.02%)</title><rect x="487.2" y="933" width="0.2" height="15.0" fill="rgb(228,76,28)" rx="2" ry="2" />
<text  x="490.20" y="943.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;sensor_msgs::msg::Imu_&lt;std::allocator&lt;void&gt; &gt;,  (4,861,997 samples, 0.02%)</title><rect x="24.0" y="997" width="0.2" height="15.0" fill="rgb(217,176,23)" rx="2" ry="2" />
<text  x="26.99" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (92,542,284 samples, 0.37%)</title><rect x="54.7" y="773" width="4.3" height="15.0" fill="rgb(235,116,24)" rx="2" ry="2" />
<text  x="57.65" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,082,204,221 samples, 16.11%)</title><rect x="965.0" y="1125" width="190.1" height="15.0" fill="rgb(227,73,7)" rx="2" ry="2" />
<text  x="968.01" y="1135.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>joint_trajectory_controller::JointTrajectoryController::update (257,662,539 samples, 1.02%)</title><rect x="503.4" y="901" width="12.0" height="15.0" fill="rgb(206,224,14)" rx="2" ry="2" />
<text  x="506.37" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (3,767,954 samples, 0.01%)</title><rect x="495.8" y="805" width="0.2" height="15.0" fill="rgb(245,6,42)" rx="2" ry="2" />
<text  x="498.79" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rclcpp::Waitable&gt;, std::allocator&lt;std::shared_ptr&lt;rclcpp::Waitable&gt; &gt; &gt;::end (5,485,816 samples, 0.02%)</title><rect x="203.3" y="1077" width="0.3" height="15.0" fill="rgb(210,137,51)" rx="2" ry="2" />
<text  x="206.32" y="1087.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::CollisionCallback (20,124,470 samples, 0.08%)</title><rect x="236.4" y="853" width="1.0" height="15.0" fill="rgb(240,151,22)" rx="2" ry="2" />
<text  x="239.43" y="863.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::Correct (14,015,684 samples, 0.06%)</title><rect x="559.2" y="773" width="0.6" height="15.0" fill="rgb(237,158,54)" rx="2" ry="2" />
<text  x="562.18" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,053,890 samples, 0.02%)</title><rect x="462.9" y="789" width="0.2" height="15.0" fill="rgb(232,206,14)" rx="2" ry="2" />
<text  x="465.90" y="799.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::lock (4,539,696 samples, 0.02%)</title><rect x="47.1" y="1173" width="0.2" height="15.0" fill="rgb(247,97,41)" rx="2" ry="2" />
<text  x="50.08" y="1183.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, int&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::_M_lower_bound (2,272,626 samples, 0.01%)</title><rect x="87.0" y="1093" width="0.1" height="15.0" fill="rgb(243,54,53)" rx="2" ry="2" />
<text  x="89.96" y="1103.5" ></text>
</g>
<g >
<title>hardware_interface::System::read (42,832,306 samples, 0.17%)</title><rect x="518.0" y="885" width="2.0" height="15.0" fill="rgb(246,17,6)" rx="2" ry="2" />
<text  x="520.98" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,111,231 samples, 0.20%)</title><rect x="1171.8" y="1253" width="2.3" height="15.0" fill="rgb(251,6,13)" rx="2" ry="2" />
<text  x="1174.80" y="1263.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;hardware_interface::SystemInterface, std::default_delete&lt;hardware_interface::SystemInterface&gt; &gt;::_M_ptr (7,815,709 samples, 0.03%)</title><rect x="519.6" y="837" width="0.4" height="15.0" fill="rgb(233,5,24)" rx="2" ry="2" />
<text  x="522.61" y="847.5" ></text>
</g>
<g >
<title>dBodyGetAngularVel (4,064,132 samples, 0.02%)</title><rect x="685.3" y="885" width="0.2" height="15.0" fill="rgb(242,135,7)" rx="2" ry="2" />
<text  x="688.26" y="895.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; const*, std::vector&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt;, control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;*&gt; (44,668,268 samples, 0.18%)</title><rect x="825.7" y="1061" width="2.1" height="15.0" fill="rgb(222,79,21)" rx="2" ry="2" />
<text  x="828.74" y="1071.5" ></text>
</g>
<g >
<title>std::abs (2,265,757 samples, 0.01%)</title><rect x="261.6" y="949" width="0.1" height="15.0" fill="rgb(234,37,15)" rx="2" ry="2" />
<text  x="264.55" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,305,251 samples, 0.01%)</title><rect x="126.3" y="1237" width="0.1" height="15.0" fill="rgb(222,18,37)" rx="2" ry="2" />
<text  x="129.28" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="949" width="0.1" height="15.0" fill="rgb(230,139,1)" rx="2" ry="2" />
<text  x="839.31" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,847,722 samples, 0.03%)</title><rect x="931.5" y="1125" width="0.4" height="15.0" fill="rgb(236,50,39)" rx="2" ry="2" />
<text  x="934.53" y="1135.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Z (2,217,393 samples, 0.01%)</title><rect x="526.7" y="773" width="0.1" height="15.0" fill="rgb(225,220,19)" rx="2" ry="2" />
<text  x="529.67" y="783.5" ></text>
</g>
<g >
<title>dCollideSTL (11,871,642 samples, 0.05%)</title><rect x="255.4" y="997" width="0.6" height="15.0" fill="rgb(233,157,7)" rx="2" ry="2" />
<text  x="258.43" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::get (6,244,107 samples, 0.02%)</title><rect x="260.7" y="981" width="0.3" height="15.0" fill="rgb(212,86,36)" rx="2" ry="2" />
<text  x="263.71" y="991.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo::event::EventT&lt;void  (4,053,633 samples, 0.02%)</title><rect x="731.5" y="949" width="0.2" height="15.0" fill="rgb(252,22,3)" rx="2" ry="2" />
<text  x="734.51" y="959.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;,  (12,939,044 samples, 0.05%)</title><rect x="794.7" y="981" width="0.6" height="15.0" fill="rgb(240,72,37)" rx="2" ry="2" />
<text  x="797.74" y="991.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::SharedDtor (18,294,950 samples, 0.07%)</title><rect x="766.0" y="789" width="0.9" height="15.0" fill="rgb(225,154,39)" rx="2" ry="2" />
<text  x="769.03" y="799.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;*, boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; (16,365,091 samples, 0.06%)</title><rect x="678.0" y="885" width="0.8" height="15.0" fill="rgb(228,76,46)" rx="2" ry="2" />
<text  x="681.01" y="895.5" ></text>
</g>
<g >
<title>dRfromQ (14,114,933 samples, 0.06%)</title><rect x="554.5" y="725" width="0.6" height="15.0" fill="rgb(227,132,21)" rx="2" ry="2" />
<text  x="557.46" y="735.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (8,380,776 samples, 0.03%)</title><rect x="30.0" y="1077" width="0.4" height="15.0" fill="rgb(211,204,1)" rx="2" ry="2" />
<text  x="33.00" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,585,715 samples, 0.03%)</title><rect x="852.1" y="917" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="855.09" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::InertialPrivate, std::default_delete&lt;gazebo::physics::InertialPrivate&gt; &gt;::get (7,966,785 samples, 0.03%)</title><rect x="555.4" y="709" width="0.4" height="15.0" fill="rgb(248,83,1)" rx="2" ry="2" />
<text  x="558.39" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (3,506,964 samples, 0.01%)</title><rect x="773.3" y="1013" width="0.2" height="15.0" fill="rgb(236,215,31)" rx="2" ry="2" />
<text  x="776.30" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,227,017 samples, 0.02%)</title><rect x="478.2" y="581" width="0.2" height="15.0" fill="rgb(251,199,51)" rx="2" ry="2" />
<text  x="481.16" y="591.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned int const&amp;, false&gt;::_M_head (2,537,634 samples, 0.01%)</title><rect x="85.5" y="1013" width="0.1" height="15.0" fill="rgb(234,48,53)" rx="2" ry="2" />
<text  x="88.52" y="1023.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;double*, double&gt; (2,517,758 samples, 0.01%)</title><rect x="828.6" y="1013" width="0.1" height="15.0" fill="rgb(251,58,49)" rx="2" ry="2" />
<text  x="831.63" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (57,608,920 samples, 0.23%)</title><rect x="15.3" y="981" width="2.6" height="15.0" fill="rgb(249,25,41)" rx="2" ry="2" />
<text  x="18.26" y="991.5" ></text>
</g>
<g >
<title>boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::physics::ODEJoint*&gt; &gt;::operator (57,702,662 samples, 0.23%)</title><rect x="470.5" y="917" width="2.6" height="15.0" fill="rgb(241,173,42)" rx="2" ry="2" />
<text  x="473.46" y="927.5" ></text>
</g>
<g >
<title>realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt;::unlock (5,703,179 samples, 0.02%)</title><rect x="849.1" y="1157" width="0.3" height="15.0" fill="rgb(240,223,19)" rx="2" ry="2" />
<text  x="852.09" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,213,530 samples, 0.01%)</title><rect x="666.9" y="837" width="0.1" height="15.0" fill="rgb(208,47,9)" rx="2" ry="2" />
<text  x="669.93" y="847.5" ></text>
</g>
<g >
<title>sCylinderTrimeshColliderData::TestCollisionForSingleTriangle (25,291,757 samples, 0.10%)</title><rect x="253.4" y="981" width="1.2" height="15.0" fill="rgb(240,171,4)" rx="2" ry="2" />
<text  x="256.43" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_insert_&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const&amp;, std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_Alloc_node&gt; (4,011,813 samples, 0.02%)</title><rect x="221.2" y="965" width="0.2" height="15.0" fill="rgb(236,80,48)" rx="2" ry="2" />
<text  x="224.23" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,388,879 samples, 0.06%)</title><rect x="379.6" y="789" width="0.7" height="15.0" fill="rgb(250,190,35)" rx="2" ry="2" />
<text  x="382.61" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,896,962 samples, 0.02%)</title><rect x="737.4" y="741" width="0.2" height="15.0" fill="rgb(230,52,43)" rx="2" ry="2" />
<text  x="740.42" y="751.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16,405,270 samples, 0.06%)</title><rect x="760.6" y="1029" width="0.8" height="15.0" fill="rgb(207,177,28)" rx="2" ry="2" />
<text  x="763.64" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,243,735 samples, 0.01%)</title><rect x="266.8" y="885" width="0.1" height="15.0" fill="rgb(236,124,22)" rx="2" ry="2" />
<text  x="269.79" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,190,889 samples, 0.01%)</title><rect x="616.9" y="869" width="0.1" height="15.0" fill="rgb(205,148,34)" rx="2" ry="2" />
<text  x="619.85" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,282,220 samples, 0.03%)</title><rect x="618.1" y="917" width="0.3" height="15.0" fill="rgb(233,126,32)" rx="2" ry="2" />
<text  x="621.05" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,426,742 samples, 0.03%)</title><rect x="618.1" y="773" width="0.3" height="15.0" fill="rgb(205,132,45)" rx="2" ry="2" />
<text  x="621.14" y="783.5" ></text>
</g>
<g >
<title>[librclcpp.so] (7,095,647 samples, 0.03%)</title><rect x="801.0" y="1013" width="0.3" height="15.0" fill="rgb(229,102,19)" rx="2" ry="2" />
<text  x="803.97" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,528,279 samples, 0.03%)</title><rect x="614.5" y="821" width="0.4" height="15.0" fill="rgb(242,159,39)" rx="2" ry="2" />
<text  x="617.54" y="831.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2,207,412 samples, 0.01%)</title><rect x="769.3" y="1045" width="0.1" height="15.0" fill="rgb(247,162,27)" rx="2" ry="2" />
<text  x="772.30" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (4,030,839 samples, 0.02%)</title><rect x="515.2" y="869" width="0.2" height="15.0" fill="rgb(221,207,50)" rx="2" ry="2" />
<text  x="518.18" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,334,647 samples, 0.01%)</title><rect x="150.1" y="1205" width="0.1" height="15.0" fill="rgb(232,105,24)" rx="2" ry="2" />
<text  x="153.06" y="1215.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (12,812,785 samples, 0.05%)</title><rect x="63.0" y="1157" width="0.6" height="15.0" fill="rgb(248,155,46)" rx="2" ry="2" />
<text  x="65.97" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,910,423 samples, 0.01%)</title><rect x="779.1" y="773" width="0.1" height="15.0" fill="rgb(226,185,8)" rx="2" ry="2" />
<text  x="782.11" y="783.5" ></text>
</g>
<g >
<title>dBodySetQuaternion (25,921,301 samples, 0.10%)</title><rect x="553.9" y="741" width="1.2" height="15.0" fill="rgb(221,142,9)" rx="2" ry="2" />
<text  x="556.91" y="751.5" ></text>
</g>
<g >
<title>std::_Construct&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;, control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; const&amp;&gt; (39,943,294 samples, 0.16%)</title><rect x="826.0" y="1045" width="1.8" height="15.0" fill="rgb(254,31,44)" rx="2" ry="2" />
<text  x="828.96" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,232,373 samples, 0.02%)</title><rect x="665.6" y="869" width="0.3" height="15.0" fill="rgb(229,213,18)" rx="2" ry="2" />
<text  x="668.59" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,500,806 samples, 0.10%)</title><rect x="707.8" y="901" width="1.1" height="15.0" fill="rgb(217,221,53)" rx="2" ry="2" />
<text  x="710.76" y="911.5" ></text>
</g>
<g >
<title>take_and_do_error_handling (94,132,139 samples, 0.37%)</title><rect x="795.7" y="1045" width="4.3" height="15.0" fill="rgb(253,25,40)" rx="2" ry="2" />
<text  x="798.65" y="1055.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::release (4,110,741 samples, 0.02%)</title><rect x="610.5" y="709" width="0.2" height="15.0" fill="rgb(247,115,5)" rx="2" ry="2" />
<text  x="613.55" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::_M_begin (2,914,488 samples, 0.01%)</title><rect x="80.4" y="1077" width="0.1" height="15.0" fill="rgb(227,29,24)" rx="2" ry="2" />
<text  x="83.39" y="1087.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (56,935,916 samples, 0.22%)</title><rect x="204.0" y="1157" width="2.7" height="15.0" fill="rgb(242,116,29)" rx="2" ry="2" />
<text  x="207.03" y="1167.5" ></text>
</g>
<g >
<title>rcl_publish (28,124,985 samples, 0.11%)</title><rect x="853.0" y="1125" width="1.3" height="15.0" fill="rgb(251,213,34)" rx="2" ry="2" />
<text  x="855.96" y="1135.5" ></text>
</g>
<g >
<title>control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt;::~JointTrajectoryControllerState_ (7,019,263 samples, 0.03%)</title><rect x="841.0" y="1141" width="0.3" height="15.0" fill="rgb(247,139,1)" rx="2" ry="2" />
<text  x="844.00" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,812,785 samples, 0.05%)</title><rect x="63.0" y="1045" width="0.6" height="15.0" fill="rgb(228,185,49)" rx="2" ry="2" />
<text  x="65.97" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,812,785 samples, 0.05%)</title><rect x="63.0" y="1013" width="0.6" height="15.0" fill="rgb(229,110,36)" rx="2" ry="2" />
<text  x="65.97" y="1023.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::AppendPartialToString (5,112,195 samples, 0.02%)</title><rect x="1159.5" y="1301" width="0.2" height="15.0" fill="rgb(232,172,16)" rx="2" ry="2" />
<text  x="1162.50" y="1311.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Model&gt;::~shared_ptr (6,075,064 samples, 0.02%)</title><rect x="678.3" y="837" width="0.3" height="15.0" fill="rgb(216,183,1)" rx="2" ry="2" />
<text  x="681.29" y="847.5" ></text>
</g>
<g >
<title>dxSimpleSpace::collide2 (4,175,437 samples, 0.02%)</title><rect x="781.4" y="885" width="0.2" height="15.0" fill="rgb(250,217,45)" rx="2" ry="2" />
<text  x="784.37" y="895.5" ></text>
</g>
<g >
<title>boost::detail::variant::invoke_visitor&lt;boost::detail::variant::get_visitor&lt;std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt; &gt;, false&gt;::internal_visit&lt;std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;&amp;&gt; (3,946,163 samples, 0.02%)</title><rect x="73.3" y="933" width="0.1" height="15.0" fill="rgb(222,5,2)" rx="2" ry="2" />
<text  x="76.27" y="943.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::GetParentModel (69,751,709 samples, 0.28%)</title><rect x="540.8" y="773" width="3.3" height="15.0" fill="rgb(222,1,44)" rx="2" ry="2" />
<text  x="543.81" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,286,132 samples, 0.02%)</title><rect x="927.7" y="1205" width="0.2" height="15.0" fill="rgb(223,39,19)" rx="2" ry="2" />
<text  x="930.67" y="1215.5" ></text>
</g>
<g >
<title>rclcpp::Duration::operator&gt;= (3,989,867 samples, 0.02%)</title><rect x="617.6" y="933" width="0.2" height="15.0" fill="rgb(250,110,20)" rx="2" ry="2" />
<text  x="620.61" y="943.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetScopedName[abi:cxx11] (20,420,297 samples, 0.08%)</title><rect x="760.6" y="1045" width="1.0" height="15.0" fill="rgb(228,165,15)" rx="2" ry="2" />
<text  x="763.64" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, int&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned int const&amp;&gt;, std::tuple&lt;&gt; &gt; (23,485,824 samples, 0.09%)</title><rect x="85.0" y="1109" width="1.1" height="15.0" fill="rgb(235,142,39)" rx="2" ry="2" />
<text  x="88.00" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37,935,199 samples, 0.15%)</title><rect x="55.9" y="437" width="1.8" height="15.0" fill="rgb(243,19,2)" rx="2" ry="2" />
<text  x="58.88" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,646 samples, 0.01%)</title><rect x="724.0" y="837" width="0.1" height="15.0" fill="rgb(253,35,30)" rx="2" ry="2" />
<text  x="727.02" y="847.5" ></text>
</g>
<g >
<title>[librclcpp.so] (6,234,018 samples, 0.02%)</title><rect x="801.3" y="981" width="0.3" height="15.0" fill="rgb(229,58,37)" rx="2" ry="2" />
<text  x="804.30" y="991.5" ></text>
</g>
<g >
<title>boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo::physics::ODEJoint&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::physics::ODEJoint*&gt; &gt; &gt;::operator (57,702,662 samples, 0.23%)</title><rect x="470.5" y="933" width="2.6" height="15.0" fill="rgb(223,135,21)" rx="2" ry="2" />
<text  x="473.46" y="943.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::shared_ptr (10,262,198 samples, 0.04%)</title><rect x="687.3" y="853" width="0.5" height="15.0" fill="rgb(246,69,14)" rx="2" ry="2" />
<text  x="690.29" y="863.5" ></text>
</g>
<g >
<title>dxQuickStepper (4,014,170,983 samples, 15.84%)</title><rect x="262.6" y="981" width="187.0" height="15.0" fill="rgb(235,67,40)" rx="2" ry="2" />
<text  x="265.59" y="991.5" >dxQuickStepper</text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (227,213,914 samples, 0.90%)</title><rect x="175.7" y="1285" width="10.6" height="15.0" fill="rgb(216,118,38)" rx="2" ry="2" />
<text  x="178.71" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,227,017 samples, 0.02%)</title><rect x="478.2" y="613" width="0.2" height="15.0" fill="rgb(237,173,12)" rx="2" ry="2" />
<text  x="481.16" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt;::construct&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt; const&amp;&gt; (2,416,283 samples, 0.01%)</title><rect x="592.9" y="741" width="0.1" height="15.0" fill="rgb(252,226,44)" rx="2" ry="2" />
<text  x="595.93" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,766,416 samples, 0.01%)</title><rect x="856.3" y="805" width="0.1" height="15.0" fill="rgb(222,111,1)" rx="2" ry="2" />
<text  x="859.26" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,791,229 samples, 0.03%)</title><rect x="458.4" y="949" width="0.4" height="15.0" fill="rgb(233,177,22)" rx="2" ry="2" />
<text  x="461.44" y="959.5" ></text>
</g>
<g >
<title>[libboost_thread.so.1.71.0] (7,835,043 samples, 0.03%)</title><rect x="48.9" y="1173" width="0.4" height="15.0" fill="rgb(249,114,22)" rx="2" ry="2" />
<text  x="51.91" y="1183.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (9,051,352 samples, 0.04%)</title><rect x="827.1" y="981" width="0.4" height="15.0" fill="rgb(219,125,16)" rx="2" ry="2" />
<text  x="830.10" y="991.5" ></text>
</g>
<g >
<title>gazebo::physics::World::SimTime (2,181,135 samples, 0.01%)</title><rect x="611.3" y="853" width="0.1" height="15.0" fill="rgb(232,116,30)" rx="2" ry="2" />
<text  x="614.31" y="863.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::SubscriptionBase&gt;::~shared_ptr (9,818,000 samples, 0.04%)</title><rect x="801.6" y="981" width="0.4" height="15.0" fill="rgb(228,136,10)" rx="2" ry="2" />
<text  x="804.59" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (100,330,797 samples, 0.40%)</title><rect x="881.9" y="757" width="4.7" height="15.0" fill="rgb(227,49,38)" rx="2" ry="2" />
<text  x="884.90" y="767.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rcl_subscription_t&gt;::shared_ptr (7,843,523 samples, 0.03%)</title><rect x="803.1" y="949" width="0.3" height="15.0" fill="rgb(235,169,18)" rx="2" ry="2" />
<text  x="806.08" y="959.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (26,065,827 samples, 0.10%)</title><rect x="796.0" y="1013" width="1.2" height="15.0" fill="rgb(241,14,10)" rx="2" ry="2" />
<text  x="799.01" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,574 samples, 0.12%)</title><rect x="145.5" y="1173" width="1.4" height="15.0" fill="rgb(223,136,50)" rx="2" ry="2" />
<text  x="148.53" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,910,423 samples, 0.01%)</title><rect x="779.1" y="853" width="0.1" height="15.0" fill="rgb(233,11,5)" rx="2" ry="2" />
<text  x="782.11" y="863.5" ></text>
</g>
<g >
<title>std::function&lt;void  (57,702,662 samples, 0.23%)</title><rect x="470.5" y="965" width="2.6" height="15.0" fill="rgb(244,37,38)" rx="2" ry="2" />
<text  x="473.46" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;gazebo::sensors::SimTimeEvent*, std::allocator&lt;gazebo::sensors::SimTimeEvent*&gt; &gt;::erase (4,275,515 samples, 0.02%)</title><rect x="621.0" y="917" width="0.2" height="15.0" fill="rgb(222,48,54)" rx="2" ry="2" />
<text  x="624.04" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,847,722 samples, 0.03%)</title><rect x="931.5" y="1109" width="0.4" height="15.0" fill="rgb(206,138,17)" rx="2" ry="2" />
<text  x="934.53" y="1119.5" ></text>
</g>
<g >
<title>[[uprobes]] (151,488,564 samples, 0.60%)</title><rect x="466.6" y="1029" width="7.0" height="15.0" fill="rgb(224,84,39)" rx="2" ry="2" />
<text  x="469.55" y="1039.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, int, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::erase[abi:cxx11] (3,402,041 samples, 0.01%)</title><rect x="13.7" y="773" width="0.2" height="15.0" fill="rgb(217,126,1)" rx="2" ry="2" />
<text  x="16.71" y="783.5" ></text>
</g>
<g >
<title>is_reader_entityid (7,926,517 samples, 0.03%)</title><rect x="164.5" y="1285" width="0.3" height="15.0" fill="rgb(251,226,54)" rx="2" ry="2" />
<text  x="167.45" y="1295.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (7,652,301 samples, 0.03%)</title><rect x="681.8" y="853" width="0.4" height="15.0" fill="rgb(219,38,15)" rx="2" ry="2" />
<text  x="684.84" y="863.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (3,906,154 samples, 0.02%)</title><rect x="219.8" y="981" width="0.2" height="15.0" fill="rgb(226,143,49)" rx="2" ry="2" />
<text  x="222.84" y="991.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt; &gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;*&gt; (8,433,096 samples, 0.03%)</title><rect x="688.0" y="853" width="0.4" height="15.0" fill="rgb(220,9,29)" rx="2" ry="2" />
<text  x="691.04" y="863.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::~PosesStamped (24,252,778 samples, 0.10%)</title><rect x="765.8" y="885" width="1.1" height="15.0" fill="rgb(210,180,3)" rx="2" ry="2" />
<text  x="768.76" y="895.5" ></text>
</g>
<g >
<title>getHingeAngle (2,457,342 samples, 0.01%)</title><rect x="782.9" y="949" width="0.1" height="15.0" fill="rgb(222,198,11)" rx="2" ry="2" />
<text  x="785.93" y="959.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;control_msgs::msg::DynamicJointState_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::publish (41,187,813 samples, 0.16%)</title><rect x="829.2" y="1141" width="1.9" height="15.0" fill="rgb(210,150,46)" rx="2" ry="2" />
<text  x="832.17" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,210,290 samples, 0.01%)</title><rect x="855.7" y="997" width="0.1" height="15.0" fill="rgb(243,12,12)" rx="2" ry="2" />
<text  x="858.73" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::~list (13,069,064 samples, 0.05%)</title><rect x="83.9" y="1141" width="0.6" height="15.0" fill="rgb(239,160,3)" rx="2" ry="2" />
<text  x="86.87" y="1151.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (7,652,301 samples, 0.03%)</title><rect x="681.8" y="869" width="0.4" height="15.0" fill="rgb(210,136,31)" rx="2" ry="2" />
<text  x="684.84" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,481,069 samples, 0.04%)</title><rect x="706.3" y="693" width="0.5" height="15.0" fill="rgb(253,199,42)" rx="2" ry="2" />
<text  x="709.33" y="703.5" ></text>
</g>
<g >
<title>rclcpp::Node::now (5,618,656 samples, 0.02%)</title><rect x="513.4" y="885" width="0.3" height="15.0" fill="rgb(237,216,54)" rx="2" ry="2" />
<text  x="516.42" y="895.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (8,198,888 samples, 0.03%)</title><rect x="227.1" y="949" width="0.3" height="15.0" fill="rgb(224,31,7)" rx="2" ry="2" />
<text  x="230.05" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,698,963,129 samples, 18.55%)</title><rect x="936.3" y="1269" width="218.8" height="15.0" fill="rgb(226,155,27)" rx="2" ry="2" />
<text  x="939.29" y="1279.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,754,759 samples, 0.02%)</title><rect x="73.4" y="949" width="0.3" height="15.0" fill="rgb(206,225,54)" rx="2" ry="2" />
<text  x="76.45" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (3,116,103 samples, 0.01%)</title><rect x="195.3" y="997" width="0.1" height="15.0" fill="rgb(208,207,53)" rx="2" ry="2" />
<text  x="198.28" y="1007.5" ></text>
</g>
<g >
<title>[libjoint_trajectory_controller.so] (5,702,774 samples, 0.02%)</title><rect x="508.2" y="869" width="0.3" height="15.0" fill="rgb(254,60,18)" rx="2" ry="2" />
<text  x="511.24" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,318,641 samples, 0.01%)</title><rect x="272.5" y="885" width="0.1" height="15.0" fill="rgb(236,53,15)" rx="2" ry="2" />
<text  x="275.50" y="895.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (4,526,541 samples, 0.02%)</title><rect x="831.9" y="1141" width="0.3" height="15.0" fill="rgb(227,154,51)" rx="2" ry="2" />
<text  x="834.94" y="1151.5" ></text>
</g>
<g >
<title>rcl_subscription_get_rmw_handle (10,595,523 samples, 0.04%)</title><rect x="193.8" y="1045" width="0.5" height="15.0" fill="rgb(247,188,47)" rx="2" ry="2" />
<text  x="196.79" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,154,483 samples, 0.01%)</title><rect x="724.5" y="725" width="0.1" height="15.0" fill="rgb(213,123,23)" rx="2" ry="2" />
<text  x="727.51" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (77,838,653 samples, 0.31%)</title><rect x="459.6" y="1045" width="3.6" height="15.0" fill="rgb(243,124,51)" rx="2" ry="2" />
<text  x="462.56" y="1055.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (6,057,794 samples, 0.02%)</title><rect x="243.8" y="885" width="0.3" height="15.0" fill="rgb(211,128,25)" rx="2" ry="2" />
<text  x="246.82" y="895.5" ></text>
</g>
<g >
<title>dCollideBTL (44,074,413 samples, 0.17%)</title><rect x="247.5" y="997" width="2.1" height="15.0" fill="rgb(228,26,43)" rx="2" ry="2" />
<text  x="250.50" y="1007.5" ></text>
</g>
<g >
<title>SingletonT&lt;gazebo::sensors::SensorManager&gt;::Instance (6,777,859 samples, 0.03%)</title><rect x="897.0" y="1237" width="0.3" height="15.0" fill="rgb(221,114,45)" rx="2" ry="2" />
<text  x="899.97" y="1247.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo_ros2_control::GazeboSystemPrivate, std::default_delete&lt;gazebo_ros2_control::GazeboSystemPrivate&gt; &gt;::operator (8,020,528 samples, 0.03%)</title><rect x="519.1" y="853" width="0.4" height="15.0" fill="rgb(242,206,31)" rx="2" ry="2" />
<text  x="522.14" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (42,012,256 samples, 0.17%)</title><rect x="479.1" y="1013" width="2.0" height="15.0" fill="rgb(231,91,23)" rx="2" ry="2" />
<text  x="482.13" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,291,093 samples, 0.01%)</title><rect x="521.1" y="709" width="0.1" height="15.0" fill="rgb(246,168,49)" rx="2" ry="2" />
<text  x="524.08" y="719.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (2,309,464 samples, 0.01%)</title><rect x="452.0" y="1045" width="0.1" height="15.0" fill="rgb(229,154,10)" rx="2" ry="2" />
<text  x="455.02" y="1055.5" ></text>
</g>
<g >
<title>[[uprobes]] (2,624,568,019 samples, 10.36%)</title><rect x="492.8" y="933" width="122.3" height="15.0" fill="rgb(215,210,10)" rx="2" ry="2" />
<text  x="495.84" y="943.5" >[[uprobes]]</text>
</g>
<g >
<title>std::_Destroy&lt;double*&gt; (2,539,080 samples, 0.01%)</title><rect x="857.4" y="1109" width="0.1" height="15.0" fill="rgb(254,196,4)" rx="2" ry="2" />
<text  x="860.35" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,838,386 samples, 0.02%)</title><rect x="765.5" y="869" width="0.3" height="15.0" fill="rgb(231,119,53)" rx="2" ry="2" />
<text  x="768.53" y="879.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::SetWorldPose (253,735,984 samples, 1.00%)</title><rect x="217.3" y="1045" width="11.8" height="15.0" fill="rgb(205,55,32)" rx="2" ry="2" />
<text  x="220.31" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,076,686 samples, 0.02%)</title><rect x="339.4" y="869" width="0.2" height="15.0" fill="rgb(254,169,5)" rx="2" ry="2" />
<text  x="342.38" y="879.5" ></text>
</g>
<g >
<title>[libjoint_trajectory_controller.so] (3,116,103 samples, 0.01%)</title><rect x="187.3" y="981" width="0.1" height="15.0" fill="rgb(205,170,30)" rx="2" ry="2" />
<text  x="190.28" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,272,626 samples, 0.01%)</title><rect x="57.1" y="37" width="0.1" height="15.0" fill="rgb(243,173,17)" rx="2" ry="2" />
<text  x="60.07" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,243,032 samples, 0.02%)</title><rect x="521.0" y="789" width="0.2" height="15.0" fill="rgb(241,228,15)" rx="2" ry="2" />
<text  x="523.99" y="799.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (3,158,180 samples, 0.01%)</title><rect x="560.1" y="709" width="0.1" height="15.0" fill="rgb(207,88,35)" rx="2" ry="2" />
<text  x="563.10" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1125" width="0.4" height="15.0" fill="rgb(212,72,37)" rx="2" ry="2" />
<text  x="1181.27" y="1135.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_331 (13,972,849 samples, 0.06%)</title><rect x="429.9" y="917" width="0.7" height="15.0" fill="rgb(227,76,1)" rx="2" ry="2" />
<text  x="432.94" y="927.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (6,101,089 samples, 0.02%)</title><rect x="502.0" y="789" width="0.2" height="15.0" fill="rgb(222,164,5)" rx="2" ry="2" />
<text  x="504.96" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,838,386 samples, 0.02%)</title><rect x="765.5" y="917" width="0.3" height="15.0" fill="rgb(227,130,28)" rx="2" ry="2" />
<text  x="768.53" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,604,577 samples, 0.01%)</title><rect x="840.5" y="997" width="0.2" height="15.0" fill="rgb(227,155,17)" rx="2" ry="2" />
<text  x="843.51" y="1007.5" ></text>
</g>
<g >
<title>boost::_mfi::mf0&lt;void, gazebo::sensors::SensorManager::SensorContainer&gt;::operator (657,730,845 samples, 2.60%)</title><rect x="17.9" y="1237" width="30.7" height="15.0" fill="rgb(241,40,24)" rx="2" ry="2" />
<text  x="20.95" y="1247.5" >bo..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (227,213,914 samples, 0.90%)</title><rect x="175.7" y="1237" width="10.6" height="15.0" fill="rgb(237,62,35)" rx="2" ry="2" />
<text  x="178.71" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,363,069 samples, 0.03%)</title><rect x="40.1" y="965" width="0.3" height="15.0" fill="rgb(209,4,45)" rx="2" ry="2" />
<text  x="43.09" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="1029" width="0.1" height="15.0" fill="rgb(209,171,7)" rx="2" ry="2" />
<text  x="848.06" y="1039.5" ></text>
</g>
<g >
<title>[libgazebo.so.11.10.1] (2,377,596 samples, 0.01%)</title><rect x="824.8" y="1125" width="0.2" height="15.0" fill="rgb(217,223,23)" rx="2" ry="2" />
<text  x="827.84" y="1135.5" ></text>
</g>
<g >
<title>dxGeom::recomputePosr (12,034,081 samples, 0.05%)</title><rect x="243.0" y="933" width="0.5" height="15.0" fill="rgb(223,42,33)" rx="2" ry="2" />
<text  x="245.98" y="943.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::ServiceBase&gt;::~shared_ptr (4,795,289 samples, 0.02%)</title><rect x="810.1" y="997" width="0.2" height="15.0" fill="rgb(240,9,10)" rx="2" ry="2" />
<text  x="813.10" y="1007.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::Pose (6,120,579 samples, 0.02%)</title><rect x="764.9" y="853" width="0.3" height="15.0" fill="rgb(237,19,2)" rx="2" ry="2" />
<text  x="767.88" y="863.5" ></text>
</g>
<g >
<title>rclcpp::executors::MultiThreadedExecutor::run (553,115,524 samples, 2.18%)</title><rect x="793.5" y="1093" width="25.8" height="15.0" fill="rgb(249,124,8)" rx="2" ry="2" />
<text  x="796.52" y="1103.5" >r..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,575,197 samples, 0.01%)</title><rect x="776.5" y="821" width="0.2" height="15.0" fill="rgb(229,135,16)" rx="2" ry="2" />
<text  x="779.54" y="831.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::World&gt;::operator (3,623,489 samples, 0.01%)</title><rect x="539.8" y="789" width="0.2" height="15.0" fill="rgb(248,173,11)" rx="2" ry="2" />
<text  x="542.83" y="799.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; (4,016,876 samples, 0.02%)</title><rect x="202.0" y="965" width="0.2" height="15.0" fill="rgb(245,192,46)" rx="2" ry="2" />
<text  x="204.99" y="975.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_allocate&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (2,286,334 samples, 0.01%)</title><rect x="54.3" y="949" width="0.1" height="15.0" fill="rgb(231,225,2)" rx="2" ry="2" />
<text  x="57.28" y="959.5" ></text>
</g>
<g >
<title>boost::unordered::unordered_set&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt;::insert (16,270,847 samples, 0.06%)</title><rect x="215.6" y="981" width="0.8" height="15.0" fill="rgb(209,191,21)" rx="2" ry="2" />
<text  x="218.60" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,210,290 samples, 0.01%)</title><rect x="855.7" y="1109" width="0.1" height="15.0" fill="rgb(254,94,1)" rx="2" ry="2" />
<text  x="858.73" y="1119.5" ></text>
</g>
<g >
<title>gazebo::physics::World::Gravity (37,012,210 samples, 0.15%)</title><rect x="28.7" y="1157" width="1.7" height="15.0" fill="rgb(249,34,33)" rx="2" ry="2" />
<text  x="31.66" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (55,583,676 samples, 0.22%)</title><rect x="173.1" y="1045" width="2.6" height="15.0" fill="rgb(233,203,33)" rx="2" ry="2" />
<text  x="176.12" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (6,101,434 samples, 0.02%)</title><rect x="815.7" y="949" width="0.3" height="15.0" fill="rgb(241,181,52)" rx="2" ry="2" />
<text  x="818.70" y="959.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::WorldLinearVel (3,835,573 samples, 0.02%)</title><rect x="779.5" y="901" width="0.2" height="15.0" fill="rgb(232,12,0)" rx="2" ry="2" />
<text  x="782.52" y="911.5" ></text>
</g>
<g >
<title>dCollide (216,417,762 samples, 0.85%)</title><rect x="246.7" y="1013" width="10.0" height="15.0" fill="rgb(236,189,45)" rx="2" ry="2" />
<text  x="249.66" y="1023.5" ></text>
</g>
<g >
<title>boost::condition_variable::do_wait_until (2,622,062 samples, 0.01%)</title><rect x="156.8" y="1285" width="0.2" height="15.0" fill="rgb(253,34,32)" rx="2" ry="2" />
<text  x="159.84" y="1295.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::empty (4,572,183 samples, 0.02%)</title><rect x="60.8" y="1173" width="0.3" height="15.0" fill="rgb(251,192,22)" rx="2" ry="2" />
<text  x="63.85" y="1183.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::physics::WorldPrivate*, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt; (2,286,872 samples, 0.01%)</title><rect x="750.9" y="997" width="0.1" height="15.0" fill="rgb(251,215,42)" rx="2" ry="2" />
<text  x="753.89" y="1007.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (23,580,005 samples, 0.09%)</title><rect x="258.1" y="949" width="1.1" height="15.0" fill="rgb(208,71,34)" rx="2" ry="2" />
<text  x="261.11" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,491,228 samples, 0.06%)</title><rect x="457.0" y="853" width="0.7" height="15.0" fill="rgb(239,35,47)" rx="2" ry="2" />
<text  x="460.02" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::_M_drop_node (7,442,632 samples, 0.03%)</title><rect x="75.8" y="1109" width="0.3" height="15.0" fill="rgb(233,166,24)" rx="2" ry="2" />
<text  x="78.76" y="1119.5" ></text>
</g>
<g >
<title>ignition::math::v6::Angle::Angle (5,292,169 samples, 0.02%)</title><rect x="46.3" y="1141" width="0.3" height="15.0" fill="rgb(241,219,4)" rx="2" ry="2" />
<text  x="49.33" y="1151.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (7,158,836 samples, 0.03%)</title><rect x="779.7" y="885" width="0.3" height="15.0" fill="rgb(221,89,54)" rx="2" ry="2" />
<text  x="782.70" y="895.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (5,321,015 samples, 0.02%)</title><rect x="229.3" y="1029" width="0.3" height="15.0" fill="rgb(211,9,40)" rx="2" ry="2" />
<text  x="232.32" y="1039.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator* (5,975,352 samples, 0.02%)</title><rect x="605.4" y="773" width="0.3" height="15.0" fill="rgb(210,92,47)" rx="2" ry="2" />
<text  x="608.39" y="783.5" ></text>
</g>
<g >
<title>gazebo::transport::Connection::PostWrite (17,469,504 samples, 0.07%)</title><rect x="13.7" y="901" width="0.8" height="15.0" fill="rgb(234,224,12)" rx="2" ry="2" />
<text  x="16.71" y="911.5" ></text>
</g>
<g >
<title>controller_manager::ControllerManager::read (76,215,105 samples, 0.30%)</title><rect x="517.2" y="917" width="3.5" height="15.0" fill="rgb(252,102,0)" rx="2" ry="2" />
<text  x="520.17" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,318,641 samples, 0.01%)</title><rect x="272.5" y="821" width="0.1" height="15.0" fill="rgb(235,187,42)" rx="2" ry="2" />
<text  x="275.50" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,604,577 samples, 0.01%)</title><rect x="840.5" y="981" width="0.2" height="15.0" fill="rgb(223,58,20)" rx="2" ry="2" />
<text  x="843.51" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::_M_put_node (4,904,998 samples, 0.02%)</title><rect x="75.9" y="1093" width="0.2" height="15.0" fill="rgb(221,170,35)" rx="2" ry="2" />
<text  x="78.87" y="1103.5" ></text>
</g>
<g >
<title>boost::pthread::pthread_mutex_scoped_lock::~pthread_mutex_scoped_lock (2,154,982 samples, 0.01%)</title><rect x="620.4" y="901" width="0.1" height="15.0" fill="rgb(239,186,14)" rx="2" ry="2" />
<text  x="623.39" y="911.5" ></text>
</g>
<g >
<title>hardware_interface::System::write (44,871,004 samples, 0.18%)</title><rect x="774.5" y="885" width="2.0" height="15.0" fill="rgb(235,86,43)" rx="2" ry="2" />
<text  x="777.45" y="895.5" ></text>
</g>
<g >
<title>gazebo_ros2_control::GazeboRosControlPrivate::Update (23,038,048 samples, 0.09%)</title><rect x="618.4" y="949" width="1.1" height="15.0" fill="rgb(205,84,2)" rx="2" ry="2" />
<text  x="621.44" y="959.5" ></text>
</g>
<g >
<title>dBodyEnable (8,238,233 samples, 0.03%)</title><rect x="556.2" y="725" width="0.4" height="15.0" fill="rgb(240,209,25)" rx="2" ry="2" />
<text  x="559.21" y="735.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::Waitable&gt;::~shared_ptr (7,101,875 samples, 0.03%)</title><rect x="195.4" y="1061" width="0.4" height="15.0" fill="rgb(219,6,3)" rx="2" ry="2" />
<text  x="198.43" y="1071.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (55,256,551 samples, 0.22%)</title><rect x="142.5" y="1285" width="2.6" height="15.0" fill="rgb(223,70,44)" rx="2" ry="2" />
<text  x="145.48" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_clear (8,198,805 samples, 0.03%)</title><rect x="82.2" y="1125" width="0.4" height="15.0" fill="rgb(238,70,29)" rx="2" ry="2" />
<text  x="85.21" y="1135.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (7,190,060 samples, 0.03%)</title><rect x="190.1" y="949" width="0.4" height="15.0" fill="rgb(249,212,48)" rx="2" ry="2" />
<text  x="193.14" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (73,580,411 samples, 0.29%)</title><rect x="454.3" y="1029" width="3.4" height="15.0" fill="rgb(247,6,34)" rx="2" ry="2" />
<text  x="457.26" y="1039.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::operator (2,286,872 samples, 0.01%)</title><rect x="750.9" y="1045" width="0.1" height="15.0" fill="rgb(243,22,26)" rx="2" ry="2" />
<text  x="753.89" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;gazebo::physics::Entity*, std::allocator&lt;gazebo::physics::Entity*&gt; &gt;::_M_clear (10,542,402 samples, 0.04%)</title><rect x="744.4" y="1029" width="0.5" height="15.0" fill="rgb(252,202,33)" rx="2" ry="2" />
<text  x="747.36" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="1029" width="0.2" height="15.0" fill="rgb(219,152,7)" rx="2" ry="2" />
<text  x="823.95" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_insert_unique&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const&amp;&gt; (17,999,398 samples, 0.07%)</title><rect x="220.8" y="981" width="0.8" height="15.0" fill="rgb(221,93,48)" rx="2" ry="2" />
<text  x="223.76" y="991.5" ></text>
</g>
<g >
<title>rcl_set_ros_time_override (8,176,813 samples, 0.03%)</title><rect x="790.5" y="805" width="0.4" height="15.0" fill="rgb(214,81,2)" rx="2" ry="2" />
<text  x="793.48" y="815.5" ></text>
</g>
<g >
<title>[libcontroller_manager.so] (14,303,348 samples, 0.06%)</title><rect x="834.5" y="1125" width="0.7" height="15.0" fill="rgb(230,185,13)" rx="2" ry="2" />
<text  x="837.49" y="1135.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetChild (8,174,678 samples, 0.03%)</title><rect x="741.5" y="1029" width="0.4" height="15.0" fill="rgb(213,26,39)" rx="2" ry="2" />
<text  x="744.54" y="1039.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::operator (7,133,160 samples, 0.03%)</title><rect x="651.3" y="901" width="0.3" height="15.0" fill="rgb(240,95,4)" rx="2" ry="2" />
<text  x="654.27" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::FindAllConnectedLinksHelper (91,327,577 samples, 0.36%)</title><rect x="584.7" y="757" width="4.3" height="15.0" fill="rgb(222,84,11)" rx="2" ry="2" />
<text  x="587.74" y="767.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;rclcpp::Node,  (2,598,823 samples, 0.01%)</title><rect x="516.4" y="901" width="0.1" height="15.0" fill="rgb(252,64,53)" rx="2" ry="2" />
<text  x="519.40" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26,223,569 samples, 0.10%)</title><rect x="11.3" y="1205" width="1.2" height="15.0" fill="rgb(234,72,8)" rx="2" ry="2" />
<text  x="14.32" y="1215.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::ServerPrivate*, std::default_delete&lt;gazebo::ServerPrivate&gt; &gt; (4,321,870 samples, 0.02%)</title><rect x="906.7" y="1205" width="0.2" height="15.0" fill="rgb(223,204,22)" rx="2" ry="2" />
<text  x="909.68" y="1215.5" ></text>
</g>
<g >
<title>[libgazebo_msgs.so.11.10.1] (6,444,228 samples, 0.03%)</title><rect x="163.1" y="1173" width="0.3" height="15.0" fill="rgb(236,218,26)" rx="2" ry="2" />
<text  x="166.13" y="1183.5" ></text>
</g>
<g >
<title>getAxis (4,108,094 samples, 0.02%)</title><rect x="472.4" y="821" width="0.2" height="15.0" fill="rgb(216,133,21)" rx="2" ry="2" />
<text  x="475.39" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt;::deallocate (2,222,802 samples, 0.01%)</title><rect x="692.9" y="853" width="0.1" height="15.0" fill="rgb(242,101,29)" rx="2" ry="2" />
<text  x="695.92" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::~vector (7,793,050 samples, 0.03%)</title><rect x="596.3" y="789" width="0.4" height="15.0" fill="rgb(250,89,15)" rx="2" ry="2" />
<text  x="599.33" y="799.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (8,405,684 samples, 0.03%)</title><rect x="622.9" y="965" width="0.4" height="15.0" fill="rgb(230,80,6)" rx="2" ry="2" />
<text  x="625.90" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,992,783 samples, 0.02%)</title><rect x="707.3" y="901" width="0.3" height="15.0" fill="rgb(206,49,5)" rx="2" ry="2" />
<text  x="710.29" y="911.5" ></text>
</g>
<g >
<title>operator new (2,159,595 samples, 0.01%)</title><rect x="445.7" y="821" width="0.1" height="15.0" fill="rgb(227,159,29)" rx="2" ry="2" />
<text  x="448.71" y="831.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Z (13,768,772 samples, 0.05%)</title><rect x="446.5" y="901" width="0.6" height="15.0" fill="rgb(219,222,30)" rx="2" ry="2" />
<text  x="449.46" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,029,167 samples, 0.02%)</title><rect x="886.4" y="485" width="0.2" height="15.0" fill="rgb(210,64,6)" rx="2" ry="2" />
<text  x="889.38" y="495.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetName[abi:cxx11] (5,955,155 samples, 0.02%)</title><rect x="682.3" y="901" width="0.3" height="15.0" fill="rgb(240,189,3)" rx="2" ry="2" />
<text  x="685.29" y="911.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2,383,998 samples, 0.01%)</title><rect x="826.8" y="901" width="0.1" height="15.0" fill="rgb(205,195,11)" rx="2" ry="2" />
<text  x="829.80" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,141,612 samples, 0.02%)</title><rect x="1177.0" y="1205" width="0.2" height="15.0" fill="rgb(234,98,29)" rx="2" ry="2" />
<text  x="1180.00" y="1215.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::node_interfaces::NodeBaseInterface,  (5,937,575 samples, 0.02%)</title><rect x="812.6" y="997" width="0.3" height="15.0" fill="rgb(208,31,37)" rx="2" ry="2" />
<text  x="815.58" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;boost::shared_ptr&lt;gazebo::transport::CallbackHelper&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::CallbackHelper&gt; &gt; &gt;::_M_get_size (6,330,427 samples, 0.02%)</title><rect x="900.4" y="1157" width="0.3" height="15.0" fill="rgb(226,153,45)" rx="2" ry="2" />
<text  x="903.44" y="1167.5" ></text>
</g>
<g >
<title>dGeomMoved (23,870,518 samples, 0.09%)</title><rect x="552.8" y="725" width="1.1" height="15.0" fill="rgb(223,69,51)" rx="2" ry="2" />
<text  x="555.80" y="735.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (554,651,533 samples, 2.19%)</title><rect x="793.5" y="1253" width="25.8" height="15.0" fill="rgb(211,59,28)" rx="2" ry="2" />
<text  x="796.52" y="1263.5" >[..</text>
</g>
<g >
<title>gazebo::physics::ContactManager::NewContact (14,370,823 samples, 0.06%)</title><rect x="259.2" y="1013" width="0.7" height="15.0" fill="rgb(244,3,11)" rx="2" ry="2" />
<text  x="262.21" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,291,093 samples, 0.01%)</title><rect x="521.1" y="597" width="0.1" height="15.0" fill="rgb(241,203,1)" rx="2" ry="2" />
<text  x="524.08" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,744,828 samples, 0.01%)</title><rect x="851.8" y="1093" width="0.1" height="15.0" fill="rgb(225,49,54)" rx="2" ry="2" />
<text  x="854.77" y="1103.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;::duration&lt;long, void&gt; (3,215,186 samples, 0.01%)</title><rect x="847.5" y="1109" width="0.1" height="15.0" fill="rgb(228,179,4)" rx="2" ry="2" />
<text  x="850.46" y="1119.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (2,416,283 samples, 0.01%)</title><rect x="592.9" y="677" width="0.1" height="15.0" fill="rgb(227,11,36)" rx="2" ry="2" />
<text  x="595.93" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (65,478,742 samples, 0.26%)</title><rect x="14.9" y="1109" width="3.0" height="15.0" fill="rgb(216,45,41)" rx="2" ry="2" />
<text  x="17.90" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (6,101,434 samples, 0.02%)</title><rect x="815.7" y="965" width="0.3" height="15.0" fill="rgb(244,184,10)" rx="2" ry="2" />
<text  x="818.70" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,597,363 samples, 0.01%)</title><rect x="86.1" y="997" width="0.2" height="15.0" fill="rgb(246,154,24)" rx="2" ry="2" />
<text  x="89.09" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,243,032 samples, 0.02%)</title><rect x="521.0" y="757" width="0.2" height="15.0" fill="rgb(205,206,4)" rx="2" ry="2" />
<text  x="523.99" y="767.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::find_service_ptrs_if&lt;rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (34,566,503 samples, 0.14%)</title><rect x="195.8" y="1061" width="1.6" height="15.0" fill="rgb(219,133,30)" rx="2" ry="2" />
<text  x="198.76" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (89,694,800 samples, 0.35%)</title><rect x="182.1" y="1061" width="4.2" height="15.0" fill="rgb(237,177,3)" rx="2" ry="2" />
<text  x="185.11" y="1071.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (12,516,779,584 samples, 49.40%)</title><rect x="206.7" y="1141" width="583.0" height="15.0" fill="rgb(232,39,17)" rx="2" ry="2" />
<text  x="209.69" y="1151.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::get_next_subscription (111,089,226 samples, 0.44%)</title><rect x="800.7" y="1045" width="5.2" height="15.0" fill="rgb(219,69,36)" rx="2" ry="2" />
<text  x="803.73" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,579,944 samples, 0.03%)</title><rect x="75.2" y="917" width="0.4" height="15.0" fill="rgb(208,116,33)" rx="2" ry="2" />
<text  x="78.18" y="927.5" ></text>
</g>
<g >
<title>boost::detail::thread_data&lt;boost::_bi::bind_t&lt;unsigned long, boost::_mfi::mf0&lt;unsigned long, boost::asio::io_context&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;boost::asio::io_context*&gt; &gt; &gt; &gt;::run (94,393,818 samples, 0.37%)</title><rect x="13.6" y="1285" width="4.3" height="15.0" fill="rgb(228,149,10)" rx="2" ry="2" />
<text  x="16.55" y="1295.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt;::operator[] (45,187,054 samples, 0.18%)</title><rect x="498.5" y="885" width="2.1" height="15.0" fill="rgb(210,207,41)" rx="2" ry="2" />
<text  x="501.48" y="895.5" ></text>
</g>
<g >
<title>gazebo::msgs::Diagnostics::set_real_time_factor (4,531,513 samples, 0.02%)</title><rect x="718.6" y="917" width="0.2" height="15.0" fill="rgb(235,206,2)" rx="2" ry="2" />
<text  x="721.58" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,363,069 samples, 0.03%)</title><rect x="40.1" y="1061" width="0.3" height="15.0" fill="rgb(226,84,11)" rx="2" ry="2" />
<text  x="43.09" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (27,563,762 samples, 0.11%)</title><rect x="707.7" y="917" width="1.2" height="15.0" fill="rgb(218,111,0)" rx="2" ry="2" />
<text  x="710.66" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,754,759 samples, 0.02%)</title><rect x="73.4" y="965" width="0.3" height="15.0" fill="rgb(239,202,25)" rx="2" ry="2" />
<text  x="76.45" y="975.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*, std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; (12,627,182 samples, 0.05%)</title><rect x="816.8" y="981" width="0.6" height="15.0" fill="rgb(209,197,29)" rx="2" ry="2" />
<text  x="819.83" y="991.5" ></text>
</g>
<g >
<title>[gzserver-11.10.1] (2,228,051 samples, 0.01%)</title><rect x="688.6" y="821" width="0.1" height="15.0" fill="rgb(236,205,54)" rx="2" ry="2" />
<text  x="691.62" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (2,536,199 samples, 0.01%)</title><rect x="828.7" y="1029" width="0.2" height="15.0" fill="rgb(213,220,50)" rx="2" ry="2" />
<text  x="831.74" y="1039.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (4,557,018 samples, 0.02%)</title><rect x="809.9" y="997" width="0.2" height="15.0" fill="rgb(216,221,47)" rx="2" ry="2" />
<text  x="812.89" y="1007.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (4,060,170 samples, 0.02%)</title><rect x="745.5" y="1077" width="0.2" height="15.0" fill="rgb(216,7,36)" rx="2" ry="2" />
<text  x="748.53" y="1087.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::_find_ptrs_if_impl&lt;rclcpp::Waitable, rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (8,556,546 samples, 0.03%)</title><rect x="812.2" y="1013" width="0.4" height="15.0" fill="rgb(246,14,11)" rx="2" ry="2" />
<text  x="815.18" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,816,086 samples, 0.02%)</title><rect x="43.4" y="1093" width="0.3" height="15.0" fill="rgb(234,68,0)" rx="2" ry="2" />
<text  x="46.39" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::back (2,247,934 samples, 0.01%)</title><rect x="592.7" y="725" width="0.1" height="15.0" fill="rgb(210,12,36)" rx="2" ry="2" />
<text  x="595.73" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,652,819 samples, 0.07%)</title><rect x="1182.1" y="1029" width="0.9" height="15.0" fill="rgb(233,113,33)" rx="2" ry="2" />
<text  x="1185.10" y="1039.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (4,115,431 samples, 0.02%)</title><rect x="141.9" y="1269" width="0.2" height="15.0" fill="rgb(248,196,47)" rx="2" ry="2" />
<text  x="144.90" y="1279.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op&lt;boost::asio::const_buffers_1, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (8,040,737 samples, 0.03%)</title><rect x="54.3" y="997" width="0.4" height="15.0" fill="rgb(232,157,10)" rx="2" ry="2" />
<text  x="57.28" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt; &gt; &gt;::begin (2,208,845 samples, 0.01%)</title><rect x="559.0" y="757" width="0.1" height="15.0" fill="rgb(244,79,26)" rx="2" ry="2" />
<text  x="561.97" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,124,985 samples, 0.11%)</title><rect x="853.0" y="1077" width="1.3" height="15.0" fill="rgb(222,81,10)" rx="2" ry="2" />
<text  x="855.96" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,500,806 samples, 0.10%)</title><rect x="707.8" y="869" width="1.1" height="15.0" fill="rgb(214,197,51)" rx="2" ry="2" />
<text  x="710.76" y="879.5" ></text>
</g>
<g >
<title>rcl_publisher_is_valid (4,068,586 samples, 0.02%)</title><rect x="22.5" y="981" width="0.2" height="15.0" fill="rgb(244,15,42)" rx="2" ry="2" />
<text  x="25.55" y="991.5" ></text>
</g>
<g >
<title>ddsrt_chh_lookup (13,295,210 samples, 0.05%)</title><rect x="159.1" y="1285" width="0.6" height="15.0" fill="rgb(205,118,3)" rx="2" ry="2" />
<text  x="162.13" y="1295.5" ></text>
</g>
<g >
<title>std::function&lt;void  (15,194,205 samples, 0.06%)</title><rect x="790.5" y="997" width="0.7" height="15.0" fill="rgb(250,224,0)" rx="2" ry="2" />
<text  x="793.48" y="1007.5" ></text>
</g>
<g >
<title>ode::quickstep::sum6 (1,005,213,969 samples, 3.97%)</title><rect x="380.5" y="933" width="46.8" height="15.0" fill="rgb(222,149,53)" rx="2" ry="2" />
<text  x="383.47" y="943.5" >ode:..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;hardware_interface::ResourceStorage, std::default_delete&lt;hardware_interface::ResourceStorage&gt; &gt;::_M_ptr (6,240,700 samples, 0.02%)</title><rect x="520.1" y="853" width="0.2" height="15.0" fill="rgb(253,105,36)" rx="2" ry="2" />
<text  x="523.06" y="863.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (4,151,006 samples, 0.02%)</title><rect x="741.7" y="965" width="0.2" height="15.0" fill="rgb(221,92,23)" rx="2" ry="2" />
<text  x="744.73" y="975.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::SetWorldPoseDefault (14,768,204 samples, 0.06%)</title><rect x="225.1" y="1013" width="0.7" height="15.0" fill="rgb(249,145,36)" rx="2" ry="2" />
<text  x="228.07" y="1023.5" ></text>
</g>
<g >
<title>dBoxBox (30,242,324 samples, 0.12%)</title><rect x="249.6" y="981" width="1.4" height="15.0" fill="rgb(235,172,24)" rx="2" ry="2" />
<text  x="252.56" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (57,608,920 samples, 0.23%)</title><rect x="15.3" y="997" width="2.6" height="15.0" fill="rgb(229,193,43)" rx="2" ry="2" />
<text  x="18.26" y="1007.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, boost::shared_ptr&lt;google::protobuf::Message&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;::lower_bound (2,865,199 samples, 0.01%)</title><rect x="32.0" y="1093" width="0.1" height="15.0" fill="rgb(250,109,19)" rx="2" ry="2" />
<text  x="35.00" y="1103.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (6,027,309 samples, 0.02%)</title><rect x="502.8" y="821" width="0.3" height="15.0" fill="rgb(246,157,35)" rx="2" ry="2" />
<text  x="505.79" y="831.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (3,906,186 samples, 0.02%)</title><rect x="223.2" y="997" width="0.2" height="15.0" fill="rgb(248,23,6)" rx="2" ry="2" />
<text  x="226.20" y="1007.5" ></text>
</g>
<g >
<title>gen11_gt_irq_handler (2,200,088 samples, 0.01%)</title><rect x="427.1" y="789" width="0.1" height="15.0" fill="rgb(252,2,43)" rx="2" ry="2" />
<text  x="430.08" y="799.5" ></text>
</g>
<g >
<title>rcl_publish (10,574,391 samples, 0.04%)</title><rect x="666.4" y="885" width="0.5" height="15.0" fill="rgb(247,218,48)" rx="2" ry="2" />
<text  x="669.44" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;::lower_bound (2,865,199 samples, 0.01%)</title><rect x="32.0" y="1077" width="0.1" height="15.0" fill="rgb(219,206,52)" rx="2" ry="2" />
<text  x="35.00" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,574,391 samples, 0.04%)</title><rect x="666.4" y="869" width="0.5" height="15.0" fill="rgb(252,78,6)" rx="2" ry="2" />
<text  x="669.44" y="879.5" ></text>
</g>
<g >
<title>gazebo::physics::PhysicsEngine::GetPhysicsUpdateMutex (3,690,048 samples, 0.01%)</title><rect x="609.6" y="821" width="0.2" height="15.0" fill="rgb(237,209,51)" rx="2" ry="2" />
<text  x="612.61" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_S_relocate (10,334,307 samples, 0.04%)</title><rect x="693.3" y="869" width="0.5" height="15.0" fill="rgb(233,50,47)" rx="2" ry="2" />
<text  x="696.30" y="879.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (3,931,963 samples, 0.02%)</title><rect x="219.2" y="933" width="0.1" height="15.0" fill="rgb(235,8,17)" rx="2" ry="2" />
<text  x="222.16" y="943.5" ></text>
</g>
<g >
<title>dxProcessOneIsland (4,030,306,480 samples, 15.91%)</title><rect x="261.9" y="997" width="187.7" height="15.0" fill="rgb(233,109,9)" rx="2" ry="2" />
<text  x="264.92" y="1007.5" >dxProcessOneIsland</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,243,032 samples, 0.02%)</title><rect x="521.0" y="773" width="0.2" height="15.0" fill="rgb(245,42,21)" rx="2" ry="2" />
<text  x="523.99" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,225,905 samples, 0.01%)</title><rect x="829.7" y="1013" width="0.1" height="15.0" fill="rgb(222,127,49)" rx="2" ry="2" />
<text  x="832.69" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (6,778,683 samples, 0.03%)</title><rect x="811.4" y="901" width="0.3" height="15.0" fill="rgb(230,48,21)" rx="2" ry="2" />
<text  x="814.38" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (23,729,793 samples, 0.09%)</title><rect x="1173.0" y="1061" width="1.1" height="15.0" fill="rgb(209,107,31)" rx="2" ry="2" />
<text  x="1176.03" y="1071.5" ></text>
</g>
<g >
<title>[libcontroller_manager.so] (9,745,015 samples, 0.04%)</title><rect x="860.3" y="1109" width="0.5" height="15.0" fill="rgb(233,88,3)" rx="2" ry="2" />
<text  x="863.33" y="1119.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_subscription (12,919,864 samples, 0.05%)</title><rect x="808.1" y="1029" width="0.6" height="15.0" fill="rgb(229,84,48)" rx="2" ry="2" />
<text  x="811.10" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (12,652,778 samples, 0.05%)</title><rect x="856.8" y="1109" width="0.6" height="15.0" fill="rgb(219,169,38)" rx="2" ry="2" />
<text  x="859.76" y="1119.5" ></text>
</g>
<g >
<title>gazebo::physics::ContactManager::SubscribersConnected (11,801,336 samples, 0.05%)</title><rect x="236.8" y="837" width="0.6" height="15.0" fill="rgb(245,166,47)" rx="2" ry="2" />
<text  x="239.82" y="847.5" ></text>
</g>
<g >
<title>gazebo::physics::ContactManager::SubscribersConnected (4,175,437 samples, 0.02%)</title><rect x="781.4" y="837" width="0.2" height="15.0" fill="rgb(209,171,2)" rx="2" ry="2" />
<text  x="784.37" y="847.5" ></text>
</g>
<g >
<title>rcl_publish (2,150,199 samples, 0.01%)</title><rect x="13.5" y="1285" width="0.1" height="15.0" fill="rgb(210,168,15)" rx="2" ry="2" />
<text  x="16.45" y="1295.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::IsStatic (4,604,456 samples, 0.02%)</title><rect x="638.8" y="917" width="0.2" height="15.0" fill="rgb(230,190,18)" rx="2" ry="2" />
<text  x="641.78" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,221,319 samples, 0.04%)</title><rect x="842.1" y="1093" width="0.4" height="15.0" fill="rgb(215,172,54)" rx="2" ry="2" />
<text  x="845.05" y="1103.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::release (4,184,204 samples, 0.02%)</title><rect x="681.3" y="885" width="0.1" height="15.0" fill="rgb(214,142,38)" rx="2" ry="2" />
<text  x="684.25" y="895.5" ></text>
</g>
<g >
<title>joint_trajectory_controller::JointTrajectoryController::read_state_from_hardware (13,827,879 samples, 0.05%)</title><rect x="505.4" y="885" width="0.7" height="15.0" fill="rgb(240,155,25)" rx="2" ry="2" />
<text  x="508.45" y="895.5" ></text>
</g>
<g >
<title>boost::unordered::detail::ptr_bucket::ptr_bucket (2,288,567 samples, 0.01%)</title><rect x="215.6" y="901" width="0.1" height="15.0" fill="rgb(254,22,34)" rx="2" ry="2" />
<text  x="218.60" y="911.5" ></text>
</g>
<g >
<title>std::remove&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_service_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_service_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; &gt; &gt;, decltype (9,652,816 samples, 0.04%)</title><rect x="200.9" y="1061" width="0.4" height="15.0" fill="rgb(216,182,19)" rx="2" ry="2" />
<text  x="203.89" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,222,578 samples, 0.02%)</title><rect x="493.1" y="901" width="0.2" height="15.0" fill="rgb(252,207,1)" rx="2" ry="2" />
<text  x="496.11" y="911.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::CoordPositionAdd (5,893,408 samples, 0.02%)</title><rect x="527.1" y="789" width="0.2" height="15.0" fill="rgb(245,46,34)" rx="2" ry="2" />
<text  x="530.05" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,574 samples, 0.12%)</title><rect x="145.5" y="1205" width="1.4" height="15.0" fill="rgb(208,82,39)" rx="2" ry="2" />
<text  x="148.53" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::emplace_back&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (4,256,050 samples, 0.02%)</title><rect x="586.1" y="677" width="0.2" height="15.0" fill="rgb(224,145,15)" rx="2" ry="2" />
<text  x="589.09" y="687.5" ></text>
</g>
<g >
<title>gen8_de_irq_handler (2,205,749 samples, 0.01%)</title><rect x="1155.0" y="997" width="0.1" height="15.0" fill="rgb(244,193,50)" rx="2" ry="2" />
<text  x="1157.99" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,636,810 samples, 0.03%)</title><rect x="615.3" y="869" width="0.3" height="15.0" fill="rgb(253,5,28)" rx="2" ry="2" />
<text  x="618.27" y="879.5" ></text>
</g>
<g >
<title>gazebo::physics::Model::WorldLinearVel (9,036,606 samples, 0.04%)</title><rect x="778.1" y="917" width="0.4" height="15.0" fill="rgb(248,105,51)" rx="2" ry="2" />
<text  x="781.12" y="927.5" ></text>
</g>
<g >
<title>dMultiply0_331 (16,067,648 samples, 0.06%)</title><rect x="429.8" y="933" width="0.8" height="15.0" fill="rgb(241,30,41)" rx="2" ry="2" />
<text  x="432.85" y="943.5" ></text>
</g>
<g >
<title>std::function&lt;void  (20,101,372 samples, 0.08%)</title><rect x="798.0" y="949" width="0.9" height="15.0" fill="rgb(223,105,44)" rx="2" ry="2" />
<text  x="801.00" y="959.5" ></text>
</g>
<g >
<title>trajectory_msgs::msg::JointTrajectoryPoint_&lt;std::allocator&lt;void&gt; &gt;::~JointTrajectoryPoint_ (4,030,839 samples, 0.02%)</title><rect x="515.2" y="885" width="0.2" height="15.0" fill="rgb(218,123,18)" rx="2" ry="2" />
<text  x="518.18" y="895.5" ></text>
</g>
<g >
<title>sCylinderTrimeshColliderData::_cldTestAxis (5,477,102 samples, 0.02%)</title><rect x="254.4" y="917" width="0.2" height="15.0" fill="rgb(249,97,31)" rx="2" ry="2" />
<text  x="257.35" y="927.5" ></text>
</g>
<g >
<title>dxJointHinge::getInfo1 (39,502,963 samples, 0.16%)</title><rect x="271.2" y="965" width="1.9" height="15.0" fill="rgb(239,19,39)" rx="2" ry="2" />
<text  x="274.22" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,111,231 samples, 0.20%)</title><rect x="1171.8" y="1269" width="2.3" height="15.0" fill="rgb(231,120,42)" rx="2" ry="2" />
<text  x="1174.80" y="1279.5" ></text>
</g>
<g >
<title>dxJointLimitMotor::testRotationalLimit (3,835,504 samples, 0.02%)</title><rect x="272.2" y="949" width="0.2" height="15.0" fill="rgb(223,42,11)" rx="2" ry="2" />
<text  x="275.22" y="959.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::common::UpdateInfo const&amp;&gt; (5,879,819 samples, 0.02%)</title><rect x="625.5" y="917" width="0.3" height="15.0" fill="rgb(251,54,44)" rx="2" ry="2" />
<text  x="628.55" y="927.5" ></text>
</g>
<g >
<title>iptable_filter_hook (4,766,790 samples, 0.02%)</title><rect x="58.7" y="613" width="0.2" height="15.0" fill="rgb(243,201,23)" rx="2" ry="2" />
<text  x="61.65" y="623.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::Collide (18,903,953 samples, 0.07%)</title><rect x="781.8" y="1029" width="0.9" height="15.0" fill="rgb(237,194,6)" rx="2" ry="2" />
<text  x="784.79" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,073,882 samples, 0.02%)</title><rect x="457.8" y="1045" width="0.3" height="15.0" fill="rgb(213,9,48)" rx="2" ry="2" />
<text  x="460.78" y="1055.5" ></text>
</g>
<g >
<title>sdf::v9::Param::Get&lt;ignition::math::v6::Vector3&lt;double&gt; &gt; (7,752,141 samples, 0.03%)</title><rect x="29.6" y="1077" width="0.4" height="15.0" fill="rgb(236,8,47)" rx="2" ry="2" />
<text  x="32.63" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::~vector (6,352,766 samples, 0.03%)</title><rect x="593.4" y="773" width="0.3" height="15.0" fill="rgb(225,118,16)" rx="2" ry="2" />
<text  x="596.40" y="783.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::ContainsLink (3,973,473 samples, 0.02%)</title><rect x="585.0" y="725" width="0.2" height="15.0" fill="rgb(240,189,53)" rx="2" ry="2" />
<text  x="588.03" y="735.5" ></text>
</g>
<g >
<title>SingletonT&lt;gazebo::transport::TopicManager&gt;::GetInstance (4,936,250 samples, 0.02%)</title><rect x="51.2" y="1173" width="0.2" height="15.0" fill="rgb(220,21,6)" rx="2" ry="2" />
<text  x="54.21" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,334,647 samples, 0.01%)</title><rect x="150.1" y="1253" width="0.1" height="15.0" fill="rgb(254,220,5)" rx="2" ry="2" />
<text  x="153.06" y="1263.5" ></text>
</g>
<g >
<title>[librclcpp.so] (7,279,028 samples, 0.03%)</title><rect x="188.6" y="1077" width="0.4" height="15.0" fill="rgb(249,128,36)" rx="2" ry="2" />
<text  x="191.64" y="1087.5" ></text>
</g>
<g >
<title>boost::operator!=&lt;gazebo::physics::Inertial&gt; (3,302,493 samples, 0.01%)</title><rect x="787.4" y="917" width="0.1" height="15.0" fill="rgb(233,229,42)" rx="2" ry="2" />
<text  x="790.37" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;gazebo::physics::Entity*, std::allocator&lt;gazebo::physics::Entity*&gt; &gt;::_M_get_node (14,725,774 samples, 0.06%)</title><rect x="445.1" y="853" width="0.7" height="15.0" fill="rgb(231,15,8)" rx="2" ry="2" />
<text  x="448.13" y="863.5" ></text>
</g>
<g >
<title>dMultiply0_331 (4,108,094 samples, 0.02%)</title><rect x="472.4" y="805" width="0.2" height="15.0" fill="rgb(235,0,19)" rx="2" ry="2" />
<text  x="475.39" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt; &gt;::operator* (4,975,899 samples, 0.02%)</title><rect x="806.8" y="1045" width="0.3" height="15.0" fill="rgb(231,2,7)" rx="2" ry="2" />
<text  x="809.83" y="1055.5" ></text>
</g>
<g >
<title>gazebo::physics::get_world (12,580,100 samples, 0.05%)</title><rect x="47.3" y="1189" width="0.6" height="15.0" fill="rgb(253,50,21)" rx="2" ry="2" />
<text  x="50.30" y="1199.5" ></text>
</g>
<g >
<title>dxProcessOneIsland (47,300,937 samples, 0.19%)</title><rect x="746.7" y="997" width="2.2" height="15.0" fill="rgb(225,156,4)" rx="2" ry="2" />
<text  x="749.71" y="1007.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, boost::shared_ptr&lt;gazebo::physics::Link&gt;*, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; (8,452,734 samples, 0.03%)</title><rect x="588.3" y="661" width="0.3" height="15.0" fill="rgb(238,132,30)" rx="2" ry="2" />
<text  x="591.25" y="671.5" ></text>
</g>
<g >
<title>sCylinderBoxData::_cldTestAxis (10,326,349 samples, 0.04%)</title><rect x="251.7" y="949" width="0.5" height="15.0" fill="rgb(209,109,31)" rx="2" ry="2" />
<text  x="254.70" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,067,708 samples, 0.05%)</title><rect x="12.9" y="1221" width="0.6" height="15.0" fill="rgb(217,1,15)" rx="2" ry="2" />
<text  x="15.89" y="1231.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::Pose3 (40,255,360 samples, 0.16%)</title><rect x="661.8" y="885" width="1.9" height="15.0" fill="rgb(213,27,43)" rx="2" ry="2" />
<text  x="664.78" y="895.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (6,912,390 samples, 0.03%)</title><rect x="195.0" y="1013" width="0.3" height="15.0" fill="rgb(248,97,49)" rx="2" ry="2" />
<text  x="197.96" y="1023.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::_find_ptrs_if_impl&lt;rclcpp::SubscriptionBase, rclcpp::memory_strategy::MemoryStrategy::get_subscription_by_handle (10,093,779 samples, 0.04%)</title><rect x="791.5" y="965" width="0.5" height="15.0" fill="rgb(208,72,20)" rx="2" ry="2" />
<text  x="794.53" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,838,386 samples, 0.02%)</title><rect x="765.5" y="885" width="0.3" height="15.0" fill="rgb(224,228,21)" rx="2" ry="2" />
<text  x="768.53" y="895.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::unique_lock (12,733,516 samples, 0.05%)</title><rect x="722.4" y="853" width="0.5" height="15.0" fill="rgb(252,195,7)" rx="2" ry="2" />
<text  x="725.35" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_timer_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_timer_t const&gt; &gt; &gt;::erase (3,404,176 samples, 0.01%)</title><rect x="202.2" y="1061" width="0.1" height="15.0" fill="rgb(233,20,48)" rx="2" ry="2" />
<text  x="205.18" y="1071.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (52,910,588 samples, 0.21%)</title><rect x="1178.9" y="1285" width="2.4" height="15.0" fill="rgb(221,30,2)" rx="2" ry="2" />
<text  x="1181.86" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::max_size (3,908,959 samples, 0.02%)</title><rect x="546.9" y="645" width="0.2" height="15.0" fill="rgb(209,213,18)" rx="2" ry="2" />
<text  x="549.91" y="655.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::release (4,134,598 samples, 0.02%)</title><rect x="543.2" y="725" width="0.2" height="15.0" fill="rgb(253,196,43)" rx="2" ry="2" />
<text  x="546.21" y="735.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::HasConnections (41,153,225 samples, 0.16%)</title><rect x="898.9" y="1205" width="1.9" height="15.0" fill="rgb(221,198,23)" rx="2" ry="2" />
<text  x="901.87" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (987,863,774 samples, 3.90%)</title><rect x="819.3" y="1269" width="46.1" height="15.0" fill="rgb(222,104,10)" rx="2" ry="2" />
<text  x="822.35" y="1279.5" >[unk..</text>
</g>
<g >
<title>boost::_mfi::mf0&lt;void, gazebo_ros2_control::GazeboRosControlPrivate&gt;::operator (8,282,220 samples, 0.03%)</title><rect x="618.1" y="949" width="0.3" height="15.0" fill="rgb(243,164,50)" rx="2" ry="2" />
<text  x="621.05" y="959.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::time (3,381,009 samples, 0.01%)</title><rect x="27.6" y="1141" width="0.1" height="15.0" fill="rgb(221,22,1)" rx="2" ry="2" />
<text  x="30.57" y="1151.5" ></text>
</g>
<g >
<title>swap_callback (32,235,512 samples, 0.13%)</title><rect x="238.6" y="917" width="1.5" height="15.0" fill="rgb(244,175,34)" rx="2" ry="2" />
<text  x="241.55" y="927.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (3,474,511 samples, 0.01%)</title><rect x="530.6" y="805" width="0.1" height="15.0" fill="rgb(234,99,24)" rx="2" ry="2" />
<text  x="533.57" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (3,334,647 samples, 0.01%)</title><rect x="20.4" y="1141" width="0.1" height="15.0" fill="rgb(242,196,29)" rx="2" ry="2" />
<text  x="23.39" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, int&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned int const&amp;&gt;, std::tuple&lt;&gt; &gt; (13,726,977 samples, 0.05%)</title><rect x="85.0" y="1093" width="0.6" height="15.0" fill="rgb(245,134,42)" rx="2" ry="2" />
<text  x="88.00" y="1103.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::operator (18,199,104 samples, 0.07%)</title><rect x="895.2" y="1221" width="0.8" height="15.0" fill="rgb(242,111,47)" rx="2" ry="2" />
<text  x="898.19" y="1231.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5,795,171 samples, 0.02%)</title><rect x="146.9" y="1285" width="0.3" height="15.0" fill="rgb(250,40,34)" rx="2" ry="2" />
<text  x="149.89" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,523,698 samples, 0.08%)</title><rect x="468.4" y="949" width="0.9" height="15.0" fill="rgb(236,18,11)" rx="2" ry="2" />
<text  x="471.39" y="959.5" ></text>
</g>
<g >
<title>SingletonT&lt;gazebo::transport::TopicManager&gt;::GetInstance (2,272,626 samples, 0.01%)</title><rect x="51.1" y="1189" width="0.1" height="15.0" fill="rgb(222,24,51)" rx="2" ry="2" />
<text  x="54.10" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,303,114 samples, 0.01%)</title><rect x="62.8" y="1125" width="0.2" height="15.0" fill="rgb(229,60,33)" rx="2" ry="2" />
<text  x="65.82" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,243,735 samples, 0.01%)</title><rect x="266.8" y="789" width="0.1" height="15.0" fill="rgb(250,118,39)" rx="2" ry="2" />
<text  x="269.79" y="799.5" ></text>
</g>
<g >
<title>gazebo_plugins::GazeboRosDiffDrivePrivate::UpdateOdometryWorld (6,693,961 samples, 0.03%)</title><rect x="642.8" y="901" width="0.3" height="15.0" fill="rgb(243,64,24)" rx="2" ry="2" />
<text  x="645.77" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;gazebo::common::Battery&gt;*, std::vector&lt;std::shared_ptr&lt;gazebo::common::Battery&gt;, std::allocator&lt;std::shared_ptr&lt;gazebo::common::Battery&gt; &gt; &gt; &gt;::__normal_iterator (14,639,548 samples, 0.06%)</title><rect x="641.2" y="885" width="0.7" height="15.0" fill="rgb(254,58,24)" rx="2" ry="2" />
<text  x="644.23" y="895.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::MergeFrom (14,329,436 samples, 0.06%)</title><rect x="764.1" y="885" width="0.7" height="15.0" fill="rgb(205,70,51)" rx="2" ry="2" />
<text  x="767.12" y="895.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (54,918,708 samples, 0.22%)</title><rect x="1169.2" y="1301" width="2.6" height="15.0" fill="rgb(236,195,38)" rx="2" ry="2" />
<text  x="1172.24" y="1311.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::event::EventT&lt;void  (6,197,676 samples, 0.02%)</title><rect x="788.5" y="949" width="0.3" height="15.0" fill="rgb(243,123,22)" rx="2" ry="2" />
<text  x="791.55" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,889,694 samples, 0.06%)</title><rect x="458.1" y="997" width="0.7" height="15.0" fill="rgb(241,2,45)" rx="2" ry="2" />
<text  x="461.06" y="1007.5" ></text>
</g>
<g >
<title>[librclcpp.so] (4,312,120 samples, 0.02%)</title><rect x="508.5" y="869" width="0.2" height="15.0" fill="rgb(233,45,52)" rx="2" ry="2" />
<text  x="511.50" y="879.5" ></text>
</g>
<g >
<title>[[uprobes]] (72,425,930 samples, 0.29%)</title><rect x="773.6" y="949" width="3.3" height="15.0" fill="rgb(250,60,13)" rx="2" ry="2" />
<text  x="776.55" y="959.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::unique_lock (2,767,783 samples, 0.01%)</title><rect x="899.2" y="1189" width="0.1" height="15.0" fill="rgb(225,100,15)" rx="2" ry="2" />
<text  x="902.18" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,368,669 samples, 0.03%)</title><rect x="833.6" y="1093" width="0.3" height="15.0" fill="rgb(237,130,30)" rx="2" ry="2" />
<text  x="836.60" y="1103.5" ></text>
</g>
<g >
<title>execlists_submission_tasklet (2,193,532 samples, 0.01%)</title><rect x="427.2" y="821" width="0.1" height="15.0" fill="rgb(249,131,43)" rx="2" ry="2" />
<text  x="430.18" y="831.5" ></text>
</g>
<g >
<title>dxWorldProcessContext::AllocateArray&lt;double&gt; (4,181,751 samples, 0.02%)</title><rect x="274.7" y="965" width="0.2" height="15.0" fill="rgb(245,106,17)" rx="2" ry="2" />
<text  x="277.71" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (9,247,088 samples, 0.04%)</title><rect x="33.6" y="1157" width="0.5" height="15.0" fill="rgb(224,54,49)" rx="2" ry="2" />
<text  x="36.63" y="1167.5" ></text>
</g>
<g >
<title>gazebo_plugins::GazeboRosDiffDrivePrivate::PublishOdometryTf (3,799,899 samples, 0.01%)</title><rect x="636.2" y="901" width="0.2" height="15.0" fill="rgb(220,93,23)" rx="2" ry="2" />
<text  x="639.17" y="911.5" ></text>
</g>
<g >
<title>boost::date_time::int_adapter&lt;long&gt;::as_number (5,311,868 samples, 0.02%)</title><rect x="50.2" y="1157" width="0.3" height="15.0" fill="rgb(232,3,46)" rx="2" ry="2" />
<text  x="53.21" y="1167.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (15,194,205 samples, 0.06%)</title><rect x="790.5" y="901" width="0.7" height="15.0" fill="rgb(248,176,37)" rx="2" ry="2" />
<text  x="793.48" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Joint&gt;*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Joint&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Joint&gt; &gt; &gt; &gt;::__normal_iterator (3,927,043 samples, 0.02%)</title><rect x="590.0" y="725" width="0.1" height="15.0" fill="rgb(239,174,4)" rx="2" ry="2" />
<text  x="592.97" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;sdf::v9::ParamPrivate, std::default_delete&lt;sdf::v9::ParamPrivate&gt; &gt;::get (3,653,248 samples, 0.01%)</title><rect x="45.2" y="1045" width="0.1" height="15.0" fill="rgb(227,224,2)" rx="2" ry="2" />
<text  x="48.17" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (5,723,840 samples, 0.02%)</title><rect x="587.0" y="725" width="0.3" height="15.0" fill="rgb(219,52,34)" rx="2" ry="2" />
<text  x="590.02" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::_M_ptr (4,103,928 samples, 0.02%)</title><rect x="587.5" y="693" width="0.2" height="15.0" fill="rgb(215,21,2)" rx="2" ry="2" />
<text  x="590.48" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (88,733,113 samples, 0.35%)</title><rect x="600.5" y="773" width="4.2" height="15.0" fill="rgb(209,105,25)" rx="2" ry="2" />
<text  x="603.53" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,440,838 samples, 0.02%)</title><rect x="510.9" y="821" width="0.3" height="15.0" fill="rgb(243,189,49)" rx="2" ry="2" />
<text  x="513.91" y="831.5" ></text>
</g>
<g >
<title>ComputeRows (3,237,508,614 samples, 12.78%)</title><rect x="276.5" y="949" width="150.8" height="15.0" fill="rgb(215,124,46)" rx="2" ry="2" />
<text  x="279.50" y="959.5" >ComputeRows</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (7,107,550 samples, 0.03%)</title><rect x="773.7" y="837" width="0.3" height="15.0" fill="rgb(237,8,12)" rx="2" ry="2" />
<text  x="776.65" y="847.5" ></text>
</g>
<g >
<title>google::protobuf::Message::GetTypeName[abi:cxx11] (4,130,019 samples, 0.02%)</title><rect x="772.8" y="1029" width="0.2" height="15.0" fill="rgb(212,0,5)" rx="2" ry="2" />
<text  x="775.84" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,574 samples, 0.12%)</title><rect x="145.5" y="1237" width="1.4" height="15.0" fill="rgb(248,54,13)" rx="2" ry="2" />
<text  x="148.53" y="1247.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;*&gt; (8,474,606 samples, 0.03%)</title><rect x="828.6" y="1093" width="0.3" height="15.0" fill="rgb(244,157,4)" rx="2" ry="2" />
<text  x="831.55" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_service_t const&gt; const*, std::vector&lt;std::shared_ptr&lt;rcl_service_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; &gt; &gt;::__normal_iterator (7,825,830 samples, 0.03%)</title><rect x="201.6" y="1045" width="0.4" height="15.0" fill="rgb(241,202,7)" rx="2" ry="2" />
<text  x="204.62" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::max_size (4,285,280 samples, 0.02%)</title><rect x="597.2" y="757" width="0.2" height="15.0" fill="rgb(224,91,9)" rx="2" ry="2" />
<text  x="600.17" y="767.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::shared_ptr (3,498,724 samples, 0.01%)</title><rect x="593.8" y="757" width="0.1" height="15.0" fill="rgb(243,80,44)" rx="2" ry="2" />
<text  x="596.78" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::~vector (16,323,747 samples, 0.06%)</title><rect x="610.3" y="821" width="0.7" height="15.0" fill="rgb(212,209,39)" rx="2" ry="2" />
<text  x="613.26" y="831.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GenericTypeHandler&lt;gazebo::msgs::Pose&gt;::Merge (14,329,436 samples, 0.06%)</title><rect x="764.1" y="901" width="0.7" height="15.0" fill="rgb(207,89,51)" rx="2" ry="2" />
<text  x="767.12" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;::operator+ (2,155,734 samples, 0.01%)</title><rect x="512.8" y="805" width="0.1" height="15.0" fill="rgb(218,161,8)" rx="2" ry="2" />
<text  x="515.78" y="815.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;::allocate (6,736,317 samples, 0.03%)</title><rect x="84.6" y="997" width="0.3" height="15.0" fill="rgb(252,171,40)" rx="2" ry="2" />
<text  x="87.58" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,156,643 samples, 0.01%)</title><rect x="689.4" y="821" width="0.1" height="15.0" fill="rgb(225,3,39)" rx="2" ry="2" />
<text  x="692.38" y="831.5" ></text>
</g>
<g >
<title>[libgazebo_ros_imu_sensor.so] (4,970,357 samples, 0.02%)</title><rect x="21.1" y="1029" width="0.3" height="15.0" fill="rgb(207,73,48)" rx="2" ry="2" />
<text  x="24.15" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,225,905 samples, 0.01%)</title><rect x="829.7" y="917" width="0.1" height="15.0" fill="rgb(240,173,50)" rx="2" ry="2" />
<text  x="832.69" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,411,266 samples, 0.01%)</title><rect x="830.2" y="869" width="0.1" height="15.0" fill="rgb(212,5,27)" rx="2" ry="2" />
<text  x="833.18" y="879.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::FindAllConnectedLinksHelper (26,874,140 samples, 0.11%)</title><rect x="585.2" y="725" width="1.3" height="15.0" fill="rgb(227,79,49)" rx="2" ry="2" />
<text  x="588.22" y="735.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::~shared_ptr (3,932,805 samples, 0.02%)</title><rect x="596.4" y="709" width="0.2" height="15.0" fill="rgb(224,16,40)" rx="2" ry="2" />
<text  x="599.42" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,958,587 samples, 0.02%)</title><rect x="851.4" y="1077" width="0.2" height="15.0" fill="rgb(215,159,52)" rx="2" ry="2" />
<text  x="854.38" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,071,908 samples, 0.06%)</title><rect x="709.0" y="869" width="0.7" height="15.0" fill="rgb(207,79,49)" rx="2" ry="2" />
<text  x="712.04" y="879.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::PublishPose (180,422,949 samples, 0.71%)</title><rect x="540.1" y="789" width="8.4" height="15.0" fill="rgb(207,62,2)" rx="2" ry="2" />
<text  x="543.10" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,628,552 samples, 0.03%)</title><rect x="138.3" y="1077" width="0.3" height="15.0" fill="rgb(236,72,45)" rx="2" ry="2" />
<text  x="141.29" y="1087.5" ></text>
</g>
<g >
<title>gazebo::sensors::RaySensor::VerticalAngleMin (5,292,169 samples, 0.02%)</title><rect x="46.3" y="1157" width="0.3" height="15.0" fill="rgb(206,156,7)" rx="2" ry="2" />
<text  x="49.33" y="1167.5" ></text>
</g>
<g >
<title>sensor_msgs::msg::JointState_&lt;std::allocator&lt;void&gt; &gt;::JointState_ (4,324,311 samples, 0.02%)</title><rect x="855.6" y="1141" width="0.2" height="15.0" fill="rgb(235,43,27)" rx="2" ry="2" />
<text  x="858.63" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,291,093 samples, 0.01%)</title><rect x="521.1" y="693" width="0.1" height="15.0" fill="rgb(246,198,52)" rx="2" ry="2" />
<text  x="524.08" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,426,742 samples, 0.03%)</title><rect x="618.1" y="757" width="0.3" height="15.0" fill="rgb(222,134,19)" rx="2" ry="2" />
<text  x="621.14" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::~_List_base (6,340,348 samples, 0.03%)</title><rect x="84.2" y="1125" width="0.3" height="15.0" fill="rgb(208,87,5)" rx="2" ry="2" />
<text  x="87.19" y="1135.5" ></text>
</g>
<g >
<title>boost::_mfi::mf1&lt;void, gazebo::transport::Publisher, unsigned int&gt;::operator (5,433,391 samples, 0.02%)</title><rect x="79.9" y="1045" width="0.2" height="15.0" fill="rgb(248,28,34)" rx="2" ry="2" />
<text  x="82.88" y="1055.5" ></text>
</g>
<g >
<title>std::mutex::unlock (8,215,015 samples, 0.03%)</title><rect x="562.5" y="773" width="0.4" height="15.0" fill="rgb(226,169,11)" rx="2" ry="2" />
<text  x="565.50" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,060,062 samples, 0.12%)</title><rect x="479.7" y="981" width="1.4" height="15.0" fill="rgb(230,10,36)" rx="2" ry="2" />
<text  x="482.68" y="991.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::event::EventT&lt;void  (10,073,533 samples, 0.04%)</title><rect x="730.7" y="965" width="0.4" height="15.0" fill="rgb(226,19,26)" rx="2" ry="2" />
<text  x="733.65" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,446 samples, 0.01%)</title><rect x="681.0" y="821" width="0.1" height="15.0" fill="rgb(231,48,10)" rx="2" ry="2" />
<text  x="683.97" y="831.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::~unique_lock (6,154,835 samples, 0.02%)</title><rect x="52.2" y="1189" width="0.3" height="15.0" fill="rgb(243,181,6)" rx="2" ry="2" />
<text  x="55.20" y="1199.5" ></text>
</g>
<g >
<title>dxHashSpace::cleanGeoms (88,971,707 samples, 0.35%)</title><rect x="240.1" y="997" width="4.2" height="15.0" fill="rgb(235,47,40)" rx="2" ry="2" />
<text  x="243.15" y="1007.5" ></text>
</g>
<g >
<title>swap_callback (61,580,894 samples, 0.24%)</title><rect x="35.3" y="1077" width="2.8" height="15.0" fill="rgb(216,212,28)" rx="2" ry="2" />
<text  x="38.26" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,426,497 samples, 0.08%)</title><rect x="379.5" y="853" width="1.0" height="15.0" fill="rgb(249,190,43)" rx="2" ry="2" />
<text  x="382.52" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (16,762,327 samples, 0.07%)</title><rect x="587.9" y="741" width="0.7" height="15.0" fill="rgb(236,136,28)" rx="2" ry="2" />
<text  x="590.86" y="751.5" ></text>
</g>
<g >
<title>dxGeom::recomputePosr (3,933,021 samples, 0.02%)</title><rect x="37.5" y="885" width="0.2" height="15.0" fill="rgb(214,99,31)" rx="2" ry="2" />
<text  x="40.48" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,067,708 samples, 0.05%)</title><rect x="12.9" y="1189" width="0.6" height="15.0" fill="rgb(217,20,32)" rx="2" ry="2" />
<text  x="15.89" y="1199.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (2,173,369 samples, 0.01%)</title><rect x="273.7" y="901" width="0.1" height="15.0" fill="rgb(237,12,7)" rx="2" ry="2" />
<text  x="276.65" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,129,483 samples, 0.02%)</title><rect x="706.6" y="677" width="0.2" height="15.0" fill="rgb(235,204,54)" rx="2" ry="2" />
<text  x="709.63" y="687.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (4,703,175 samples, 0.02%)</title><rect x="727.4" y="965" width="0.2" height="15.0" fill="rgb(212,65,46)" rx="2" ry="2" />
<text  x="730.36" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;::destroy&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; (2,537,634 samples, 0.01%)</title><rect x="75.8" y="965" width="0.1" height="15.0" fill="rgb(224,104,9)" rx="2" ry="2" />
<text  x="78.76" y="975.5" ></text>
</g>
<g >
<title>gazebo::sensors::SimTimeEventHandler::AddRelativeEvent (32,111,775 samples, 0.13%)</title><rect x="47.1" y="1205" width="1.5" height="15.0" fill="rgb(241,134,25)" rx="2" ry="2" />
<text  x="50.08" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt; (4,714,706 samples, 0.02%)</title><rect x="777.9" y="917" width="0.2" height="15.0" fill="rgb(219,191,43)" rx="2" ry="2" />
<text  x="780.91" y="927.5" ></text>
</g>
<g >
<title>__gthread_active_p (4,256,772 samples, 0.02%)</title><rect x="842.8" y="1093" width="0.2" height="15.0" fill="rgb(244,74,49)" rx="2" ry="2" />
<text  x="845.82" y="1103.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (7,368,669 samples, 0.03%)</title><rect x="824.5" y="1093" width="0.3" height="15.0" fill="rgb(238,90,16)" rx="2" ry="2" />
<text  x="827.48" y="1103.5" ></text>
</g>
<g >
<title>_dSetZero (2,332,246 samples, 0.01%)</title><rect x="427.6" y="949" width="0.1" height="15.0" fill="rgb(234,209,42)" rx="2" ry="2" />
<text  x="430.57" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (13,571,111 samples, 0.05%)</title><rect x="815.1" y="949" width="0.6" height="15.0" fill="rgb(233,190,5)" rx="2" ry="2" />
<text  x="818.07" y="959.5" ></text>
</g>
<g >
<title>recvUC (112,093,814 samples, 0.44%)</title><rect x="1178.7" y="1317" width="5.2" height="15.0" fill="rgb(229,147,45)" rx="2" ry="2" />
<text  x="1181.68" y="1327.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GenericTypeHandler&lt;gazebo::msgs::Pose&gt;::New (8,128,910 samples, 0.03%)</title><rect x="764.8" y="885" width="0.4" height="15.0" fill="rgb(236,93,21)" rx="2" ry="2" />
<text  x="767.79" y="895.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (8,922,802 samples, 0.04%)</title><rect x="197.0" y="949" width="0.4" height="15.0" fill="rgb(219,60,14)" rx="2" ry="2" />
<text  x="199.95" y="959.5" ></text>
</g>
<g >
<title>rcl_publisher_is_valid (2,272,626 samples, 0.01%)</title><rect x="73.7" y="1013" width="0.1" height="15.0" fill="rgb(211,25,51)" rx="2" ry="2" />
<text  x="76.67" y="1023.5" ></text>
</g>
<g >
<title>[[uprobes]] (422,732,438 samples, 1.67%)</title><rect x="463.2" y="1045" width="19.7" height="15.0" fill="rgb(235,93,37)" rx="2" ry="2" />
<text  x="466.19" y="1055.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::HasType (8,286,515 samples, 0.03%)</title><rect x="222.7" y="1013" width="0.4" height="15.0" fill="rgb(248,9,2)" rx="2" ry="2" />
<text  x="225.72" y="1023.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (3,134,847 samples, 0.01%)</title><rect x="81.2" y="1093" width="0.2" height="15.0" fill="rgb(240,99,41)" rx="2" ry="2" />
<text  x="84.24" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (6,912,390 samples, 0.03%)</title><rect x="195.0" y="981" width="0.3" height="15.0" fill="rgb(245,184,41)" rx="2" ry="2" />
<text  x="197.96" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::TimerBase,  (9,205,660 samples, 0.04%)</title><rect x="189.7" y="997" width="0.4" height="15.0" fill="rgb(237,103,39)" rx="2" ry="2" />
<text  x="192.71" y="1007.5" ></text>
</g>
<g >
<title>GetTrimeshCollidersCache (2,160,969 samples, 0.01%)</title><rect x="247.6" y="981" width="0.1" height="15.0" fill="rgb(251,153,27)" rx="2" ry="2" />
<text  x="250.59" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,744,160 samples, 0.03%)</title><rect x="852.0" y="997" width="0.4" height="15.0" fill="rgb(207,81,41)" rx="2" ry="2" />
<text  x="854.99" y="1007.5" ></text>
</g>
<g >
<title>__fmod_finite@GLIBC_2.15 (4,222,114 samples, 0.02%)</title><rect x="471.4" y="773" width="0.2" height="15.0" fill="rgb(230,182,38)" rx="2" ry="2" />
<text  x="474.38" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_S_relocate (6,094,437 samples, 0.02%)</title><rect x="694.4" y="869" width="0.3" height="15.0" fill="rgb(205,218,17)" rx="2" ry="2" />
<text  x="697.43" y="879.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (305,586,042 samples, 1.21%)</title><rect x="710.4" y="933" width="14.2" height="15.0" fill="rgb(212,114,0)" rx="2" ry="2" />
<text  x="713.38" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_create_node&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const&amp;&gt; (3,789,885 samples, 0.01%)</title><rect x="224.5" y="917" width="0.2" height="15.0" fill="rgb(235,103,35)" rx="2" ry="2" />
<text  x="227.48" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt;::_M_erase (12,627,182 samples, 0.05%)</title><rect x="816.8" y="1013" width="0.6" height="15.0" fill="rgb(222,76,44)" rx="2" ry="2" />
<text  x="819.83" y="1023.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (10,319,635 samples, 0.04%)</title><rect x="151.8" y="1285" width="0.5" height="15.0" fill="rgb(231,171,49)" rx="2" ry="2" />
<text  x="154.78" y="1295.5" ></text>
</g>
<g >
<title>boost::_mfi::mf0&lt;void, gazebo::physics::ODEJoint&gt;::operator (57,702,662 samples, 0.23%)</title><rect x="470.5" y="901" width="2.6" height="15.0" fill="rgb(251,22,42)" rx="2" ry="2" />
<text  x="473.46" y="911.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt; &gt;::allocate (6,339,691 samples, 0.03%)</title><rect x="546.8" y="661" width="0.3" height="15.0" fill="rgb(208,52,26)" rx="2" ry="2" />
<text  x="549.79" y="671.5" ></text>
</g>
<g >
<title>dJointGetHingeAngle (15,992,512 samples, 0.06%)</title><rect x="579.0" y="773" width="0.7" height="15.0" fill="rgb(219,96,6)" rx="2" ry="2" />
<text  x="582.00" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,141,612 samples, 0.02%)</title><rect x="1177.0" y="1157" width="0.2" height="15.0" fill="rgb(205,90,15)" rx="2" ry="2" />
<text  x="1180.00" y="1167.5" ></text>
</g>
<g >
<title>gazebo::physics::JointController::Update (3,278,943 samples, 0.01%)</title><rect x="788.8" y="1013" width="0.2" height="15.0" fill="rgb(233,111,31)" rx="2" ry="2" />
<text  x="791.83" y="1023.5" ></text>
</g>
<g >
<title>clock_getres@GLIBC_2.2.5 (3,140,254 samples, 0.01%)</title><rect x="893.5" y="1221" width="0.2" height="15.0" fill="rgb(242,175,33)" rx="2" ry="2" />
<text  x="896.51" y="1231.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (2,183,831 samples, 0.01%)</title><rect x="609.1" y="725" width="0.1" height="15.0" fill="rgb(227,107,46)" rx="2" ry="2" />
<text  x="612.14" y="735.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::release (3,889,757 samples, 0.02%)</title><rect x="226.9" y="981" width="0.2" height="15.0" fill="rgb(226,154,37)" rx="2" ry="2" />
<text  x="229.87" y="991.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;realtime_tools::RealtimeServerGoalHandle&lt;control_msgs::action::FollowJointTrajectory&gt; &gt; &gt;::_M_head (9,779,170 samples, 0.04%)</title><rect x="187.8" y="997" width="0.5" height="15.0" fill="rgb(221,19,5)" rx="2" ry="2" />
<text  x="190.81" y="1007.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::~unique_lock (3,599,849 samples, 0.01%)</title><rect x="237.9" y="805" width="0.2" height="15.0" fill="rgb(205,151,28)" rx="2" ry="2" />
<text  x="240.91" y="815.5" ></text>
</g>
<g >
<title>[libcontroller_manager.so] (7,141,866 samples, 0.03%)</title><rect x="859.3" y="1125" width="0.3" height="15.0" fill="rgb(208,138,12)" rx="2" ry="2" />
<text  x="862.26" y="1135.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::MergeFrom (13,416,473 samples, 0.05%)</title><rect x="26.9" y="1141" width="0.7" height="15.0" fill="rgb(240,200,16)" rx="2" ry="2" />
<text  x="29.94" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (45,216,167 samples, 0.18%)</title><rect x="739.3" y="949" width="2.2" height="15.0" fill="rgb(229,47,35)" rx="2" ry="2" />
<text  x="742.35" y="959.5" ></text>
</g>
<g >
<title>realtime_tools::RealtimeServerGoalHandle&lt;control_msgs::action::FollowJointTrajectory&gt;::runNonRealtime (8,358,513 samples, 0.03%)</title><rect x="187.4" y="981" width="0.4" height="15.0" fill="rgb(253,74,44)" rx="2" ry="2" />
<text  x="190.42" y="991.5" ></text>
</g>
<g >
<title>__pthread_mutex_trylock (3,810,051 samples, 0.02%)</title><rect x="831.7" y="1109" width="0.1" height="15.0" fill="rgb(220,223,1)" rx="2" ry="2" />
<text  x="834.67" y="1119.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::CreateMaybeMessage&lt;gazebo::msgs::Vector3d&gt; (8,483,526 samples, 0.03%)</title><rect x="753.1" y="901" width="0.4" height="15.0" fill="rgb(230,47,43)" rx="2" ry="2" />
<text  x="756.13" y="911.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;void  (554,651,533 samples, 2.19%)</title><rect x="793.5" y="1189" width="25.8" height="15.0" fill="rgb(229,91,34)" rx="2" ry="2" />
<text  x="796.52" y="1199.5" >s..</text>
</g>
<g >
<title>createJoint&lt;dxJointContact&gt; (5,931,875 samples, 0.02%)</title><rect x="256.8" y="997" width="0.3" height="15.0" fill="rgb(205,210,9)" rx="2" ry="2" />
<text  x="259.83" y="1007.5" ></text>
</g>
<g >
<title>gazebo_ros2_control::GazeboSystem::write (10,533,557 samples, 0.04%)</title><rect x="777.2" y="869" width="0.5" height="15.0" fill="rgb(253,144,47)" rx="2" ry="2" />
<text  x="780.22" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,082,184 samples, 0.03%)</title><rect x="520.8" y="853" width="0.4" height="15.0" fill="rgb(252,114,8)" rx="2" ry="2" />
<text  x="523.82" y="863.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::_M_ptr (6,244,107 samples, 0.02%)</title><rect x="260.7" y="965" width="0.3" height="15.0" fill="rgb(234,130,39)" rx="2" ry="2" />
<text  x="263.71" y="975.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, std::_List_iterator&lt;gazebo::msgs::Light&gt;, std::back_insert_iterator&lt;std::__cxx11::list&lt;gazebo::msgs::Light, std::allocator&lt;gazebo::msgs::Light&gt; &gt; &gt; &gt; (2,170,625 samples, 0.01%)</title><rect x="763.0" y="1013" width="0.1" height="15.0" fill="rgb(251,73,26)" rx="2" ry="2" />
<text  x="766.03" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,227,017 samples, 0.02%)</title><rect x="478.2" y="661" width="0.2" height="15.0" fill="rgb(249,135,11)" rx="2" ry="2" />
<text  x="481.16" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,291,093 samples, 0.01%)</title><rect x="521.1" y="581" width="0.1" height="15.0" fill="rgb(240,27,6)" rx="2" ry="2" />
<text  x="524.08" y="591.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::set&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::destroy_node (2,648,545 samples, 0.01%)</title><rect x="63.7" y="1141" width="0.1" height="15.0" fill="rgb(249,107,38)" rx="2" ry="2" />
<text  x="66.69" y="1151.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::_find_ptrs_if_impl&lt;rclcpp::ServiceBase, rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (34,566,503 samples, 0.14%)</title><rect x="195.8" y="1045" width="1.6" height="15.0" fill="rgb(218,64,53)" rx="2" ry="2" />
<text  x="198.76" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,574 samples, 0.12%)</title><rect x="145.5" y="1125" width="1.4" height="15.0" fill="rgb(237,189,27)" rx="2" ry="2" />
<text  x="148.53" y="1135.5" ></text>
</g>
<g >
<title>rcutils_logging_get_logger_effective_level (6,326,940 samples, 0.02%)</title><rect x="817.4" y="1045" width="0.3" height="15.0" fill="rgb(207,69,14)" rx="2" ry="2" />
<text  x="820.42" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,646 samples, 0.01%)</title><rect x="724.0" y="821" width="0.1" height="15.0" fill="rgb(250,33,36)" rx="2" ry="2" />
<text  x="727.02" y="831.5" ></text>
</g>
<g >
<title>[unknown] (109,793,646 samples, 0.43%)</title><rect x="128.7" y="1269" width="5.2" height="15.0" fill="rgb(227,201,23)" rx="2" ry="2" />
<text  x="131.74" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,150,199 samples, 0.01%)</title><rect x="13.5" y="1189" width="0.1" height="15.0" fill="rgb(246,210,13)" rx="2" ry="2" />
<text  x="16.45" y="1199.5" ></text>
</g>
<g >
<title>std::operator!= (3,644,236 samples, 0.01%)</title><rect x="81.6" y="1125" width="0.2" height="15.0" fill="rgb(221,91,3)" rx="2" ry="2" />
<text  x="84.59" y="1135.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo_ros2_control::GazeboSystemPrivate, std::default_delete&lt;gazebo_ros2_control::GazeboSystemPrivate&gt; &gt;::operator (20,416,729 samples, 0.08%)</title><rect x="611.4" y="853" width="1.0" height="15.0" fill="rgb(249,90,26)" rx="2" ry="2" />
<text  x="614.41" y="863.5" ></text>
</g>
<g >
<title>ode::quickstep::dxUpdateBodies (203,122,288 samples, 0.80%)</title><rect x="439.1" y="965" width="9.5" height="15.0" fill="rgb(226,110,35)" rx="2" ry="2" />
<text  x="442.13" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_timer_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_timer_t const&gt; &gt; &gt;::push_back (6,912,390 samples, 0.03%)</title><rect x="198.3" y="1013" width="0.3" height="15.0" fill="rgb(249,66,51)" rx="2" ry="2" />
<text  x="201.26" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (92,542,284 samples, 0.37%)</title><rect x="54.7" y="901" width="4.3" height="15.0" fill="rgb(208,100,2)" rx="2" ry="2" />
<text  x="57.65" y="911.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Inverse (16,957,544 samples, 0.07%)</title><rect x="660.7" y="869" width="0.8" height="15.0" fill="rgb(245,42,2)" rx="2" ry="2" />
<text  x="663.70" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,500,622 samples, 0.04%)</title><rect x="853.8" y="917" width="0.5" height="15.0" fill="rgb(243,148,12)" rx="2" ry="2" />
<text  x="856.83" y="927.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_publisher_t,  (2,196,824 samples, 0.01%)</title><rect x="842.6" y="1125" width="0.1" height="15.0" fill="rgb(207,31,35)" rx="2" ry="2" />
<text  x="845.61" y="1135.5" ></text>
</g>
<g >
<title>rmw_take_with_info (6,634,833 samples, 0.03%)</title><rect x="796.3" y="965" width="0.3" height="15.0" fill="rgb(206,77,13)" rx="2" ry="2" />
<text  x="799.26" y="975.5" ></text>
</g>
<g >
<title>gazebo::physics::ContactManager::PublishContacts (5,860,635 samples, 0.02%)</title><rect x="780.8" y="1045" width="0.2" height="15.0" fill="rgb(254,143,54)" rx="2" ry="2" />
<text  x="783.77" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,847,722 samples, 0.03%)</title><rect x="931.5" y="1237" width="0.4" height="15.0" fill="rgb(251,165,17)" rx="2" ry="2" />
<text  x="934.53" y="1247.5" ></text>
</g>
<g >
<title>dxReallocateWorldProcessContext (3,975,473 samples, 0.02%)</title><rect x="451.8" y="1029" width="0.2" height="15.0" fill="rgb(206,154,8)" rx="2" ry="2" />
<text  x="454.84" y="1039.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEHingeJoint::PositionImpl (17,952,494 samples, 0.07%)</title><rect x="578.9" y="789" width="0.8" height="15.0" fill="rgb(221,51,0)" rx="2" ry="2" />
<text  x="581.91" y="799.5" ></text>
</g>
<g >
<title>sCylinderBoxData::PerformCollisionChecking (36,452,323 samples, 0.14%)</title><rect x="251.0" y="981" width="1.7" height="15.0" fill="rgb(208,152,3)" rx="2" ry="2" />
<text  x="253.96" y="991.5" ></text>
</g>
<g >
<title>gazebo::Master::Run (46,292,622 samples, 0.18%)</title><rect x="204.2" y="1093" width="2.2" height="15.0" fill="rgb(217,48,3)" rx="2" ry="2" />
<text  x="207.20" y="1103.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Inverse (7,009,330 samples, 0.03%)</title><rect x="40.4" y="1109" width="0.4" height="15.0" fill="rgb(226,136,9)" rx="2" ry="2" />
<text  x="43.43" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;bool, char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, unsigned long, unsigned int, double, float, sdf::v9::Time, ignition::math::v6::Angle, ignition::math::v6::Color, ignition::math::v6::Vector2&lt;int&gt;, ignition::math::v6::Vector2&lt;double&gt;, ignition::math::v6::Vector3&lt;double&gt;, ignition::math::v6::Quaternion&lt;double&gt;, ignition::math::v6::Pose3&lt;double&gt; &gt;&amp;&gt; (9,043,456 samples, 0.04%)</title><rect x="44.8" y="997" width="0.4" height="15.0" fill="rgb(239,227,17)" rx="2" ry="2" />
<text  x="47.75" y="1007.5" ></text>
</g>
<g >
<title>rcl_publish (5,515,845 samples, 0.02%)</title><rect x="73.8" y="1029" width="0.2" height="15.0" fill="rgb(241,15,23)" rx="2" ry="2" />
<text  x="76.78" y="1039.5" ></text>
</g>
<g >
<title>dVector3Copy (2,162,732 samples, 0.01%)</title><rect x="253.3" y="981" width="0.1" height="15.0" fill="rgb(229,9,37)" rx="2" ry="2" />
<text  x="256.33" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,305,043 samples, 0.10%)</title><rect x="22.9" y="981" width="1.1" height="15.0" fill="rgb(230,43,10)" rx="2" ry="2" />
<text  x="25.86" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::size (2,341,891 samples, 0.01%)</title><rect x="840.1" y="1125" width="0.1" height="15.0" fill="rgb(215,41,36)" rx="2" ry="2" />
<text  x="843.09" y="1135.5" ></text>
</g>
<g >
<title>dCollideTTL (14,360,722 samples, 0.06%)</title><rect x="256.0" y="997" width="0.7" height="15.0" fill="rgb(244,207,7)" rx="2" ry="2" />
<text  x="258.98" y="1007.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_ready_executable (27,274,093 samples, 0.11%)</title><rect x="791.2" y="1029" width="1.3" height="15.0" fill="rgb(219,65,49)" rx="2" ry="2" />
<text  x="794.19" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (5,687,656 samples, 0.02%)</title><rect x="512.9" y="837" width="0.2" height="15.0" fill="rgb(214,197,31)" rx="2" ry="2" />
<text  x="515.88" y="847.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::shared_ptr (2,160,822 samples, 0.01%)</title><rect x="775.4" y="709" width="0.1" height="15.0" fill="rgb(224,103,37)" rx="2" ry="2" />
<text  x="778.44" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,910,423 samples, 0.01%)</title><rect x="779.1" y="901" width="0.1" height="15.0" fill="rgb(212,173,27)" rx="2" ry="2" />
<text  x="782.11" y="911.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;sensor_msgs::msg::Imu_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::publish (33,621,691 samples, 0.13%)</title><rect x="22.4" y="1029" width="1.6" height="15.0" fill="rgb(225,56,54)" rx="2" ry="2" />
<text  x="25.42" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (38,758,658 samples, 0.15%)</title><rect x="209.6" y="1029" width="1.8" height="15.0" fill="rgb(231,112,31)" rx="2" ry="2" />
<text  x="212.62" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,124,985 samples, 0.11%)</title><rect x="853.0" y="1109" width="1.3" height="15.0" fill="rgb(243,69,2)" rx="2" ry="2" />
<text  x="855.96" y="1119.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (5,701,371 samples, 0.02%)</title><rect x="496.3" y="821" width="0.2" height="15.0" fill="rgb(219,95,50)" rx="2" ry="2" />
<text  x="499.25" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,415,848 samples, 0.03%)</title><rect x="145.2" y="1125" width="0.3" height="15.0" fill="rgb(229,155,54)" rx="2" ry="2" />
<text  x="148.23" y="1135.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::PublishPose (7,788,287 samples, 0.03%)</title><rect x="777.3" y="789" width="0.4" height="15.0" fill="rgb(226,30,36)" rx="2" ry="2" />
<text  x="780.35" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,179,357 samples, 0.02%)</title><rect x="889.2" y="1253" width="0.3" height="15.0" fill="rgb(238,229,47)" rx="2" ry="2" />
<text  x="892.25" y="1263.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (9,251,156 samples, 0.04%)</title><rect x="833.2" y="1141" width="0.4" height="15.0" fill="rgb(233,146,54)" rx="2" ry="2" />
<text  x="836.17" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,281,711 samples, 0.01%)</title><rect x="841.9" y="1061" width="0.2" height="15.0" fill="rgb(221,61,22)" rx="2" ry="2" />
<text  x="844.95" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,733,516 samples, 0.05%)</title><rect x="722.4" y="741" width="0.5" height="15.0" fill="rgb(235,157,37)" rx="2" ry="2" />
<text  x="725.35" y="751.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;double&gt; &gt;::allocate (3,892,195 samples, 0.02%)</title><rect x="840.3" y="1061" width="0.2" height="15.0" fill="rgb(206,30,43)" rx="2" ry="2" />
<text  x="843.33" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (360,752,850 samples, 1.42%)</title><rect x="872.4" y="1221" width="16.8" height="15.0" fill="rgb(239,220,48)" rx="2" ry="2" />
<text  x="875.44" y="1231.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt;*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt; &gt; &gt; &gt;::__normal_iterator (4,243,995 samples, 0.02%)</title><rect x="225.6" y="981" width="0.2" height="15.0" fill="rgb(245,139,43)" rx="2" ry="2" />
<text  x="228.56" y="991.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (554,651,533 samples, 2.19%)</title><rect x="793.5" y="1237" width="25.8" height="15.0" fill="rgb(230,126,10)" rx="2" ry="2" />
<text  x="796.52" y="1247.5" >s..</text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (2,416,283 samples, 0.01%)</title><rect x="592.9" y="693" width="0.1" height="15.0" fill="rgb(207,170,24)" rx="2" ry="2" />
<text  x="595.93" y="703.5" ></text>
</g>
<g >
<title>dCollideRayBox (15,888,881 samples, 0.06%)</title><rect x="36.1" y="965" width="0.7" height="15.0" fill="rgb(235,39,21)" rx="2" ry="2" />
<text  x="39.05" y="975.5" ></text>
</g>
<g >
<title>dShortestAngularDistance (6,072,950 samples, 0.02%)</title><rect x="579.0" y="741" width="0.3" height="15.0" fill="rgb(251,147,41)" rx="2" ry="2" />
<text  x="582.00" y="751.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1l&gt;, void&gt; (5,524,356 samples, 0.02%)</title><rect x="848.0" y="1109" width="0.2" height="15.0" fill="rgb(251,82,54)" rx="2" ry="2" />
<text  x="850.97" y="1119.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4,016,876 samples, 0.02%)</title><rect x="202.0" y="917" width="0.2" height="15.0" fill="rgb(221,77,27)" rx="2" ry="2" />
<text  x="204.99" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (73,142,036 samples, 0.29%)</title><rect x="713.9" y="901" width="3.4" height="15.0" fill="rgb(246,133,2)" rx="2" ry="2" />
<text  x="716.90" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::SetPositionMaximal (7,788,287 samples, 0.03%)</title><rect x="777.3" y="837" width="0.4" height="15.0" fill="rgb(216,69,40)" rx="2" ry="2" />
<text  x="780.35" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,049,089 samples, 0.06%)</title><rect x="796.6" y="965" width="0.6" height="15.0" fill="rgb(231,50,42)" rx="2" ry="2" />
<text  x="799.57" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::ServerPrivate, std::default_delete&lt;gazebo::ServerPrivate&gt; &gt;::get (11,496,773 samples, 0.05%)</title><rect x="906.5" y="1237" width="0.5" height="15.0" fill="rgb(226,215,43)" rx="2" ry="2" />
<text  x="909.51" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (10,529,291 samples, 0.04%)</title><rect x="901.0" y="1221" width="0.5" height="15.0" fill="rgb(228,123,41)" rx="2" ry="2" />
<text  x="904.01" y="1231.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Entity&gt;::operator (3,731,709 samples, 0.01%)</title><rect x="222.0" y="1013" width="0.1" height="15.0" fill="rgb(224,226,2)" rx="2" ry="2" />
<text  x="224.97" y="1023.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Y (3,901,841 samples, 0.02%)</title><rect x="659.1" y="869" width="0.2" height="15.0" fill="rgb(218,81,10)" rx="2" ry="2" />
<text  x="662.14" y="879.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_service (6,809,922 samples, 0.03%)</title><rect x="792.5" y="997" width="0.3" height="15.0" fill="rgb(220,172,43)" rx="2" ry="2" />
<text  x="795.46" y="1007.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::SetVelocityMaximal (107,979,841 samples, 0.43%)</title><rect x="526.1" y="837" width="5.0" height="15.0" fill="rgb(235,104,32)" rx="2" ry="2" />
<text  x="529.08" y="847.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;2ul, std::variant&lt;bool, char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, unsigned long, unsigned int, double, float, sdf::v9::Time, ignition::math::v6::Angle, ignition::math::v6::Color, ignition::math::v6::Vector2&lt;int&gt;, ignition::math::v6::Vector2&lt;double&gt;, ignition::math::v6::Vector3&lt;double&gt;, ignition::math::v6::Quaternion&lt;double&gt;, ignition::math::v6::Pose3&lt;double&gt; &gt;&amp;&gt; (4,861,997 samples, 0.02%)</title><rect x="19.7" y="1093" width="0.3" height="15.0" fill="rgb(253,192,13)" rx="2" ry="2" />
<text  x="22.73" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,150,356 samples, 0.02%)</title><rect x="616.1" y="901" width="0.3" height="15.0" fill="rgb(244,4,32)" rx="2" ry="2" />
<text  x="619.10" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::TimerBase,  (3,879,164 samples, 0.02%)</title><rect x="203.6" y="1093" width="0.2" height="15.0" fill="rgb(231,173,1)" rx="2" ry="2" />
<text  x="206.58" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,381,905 samples, 0.02%)</title><rect x="796.0" y="853" width="0.3" height="15.0" fill="rgb(243,222,41)" rx="2" ry="2" />
<text  x="799.01" y="863.5" ></text>
</g>
<g >
<title>epoll_wait (65,478,742 samples, 0.26%)</title><rect x="14.9" y="1173" width="3.0" height="15.0" fill="rgb(236,118,17)" rx="2" ry="2" />
<text  x="17.90" y="1183.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::AssignWithDefault (6,328,580 samples, 0.02%)</title><rect x="753.8" y="917" width="0.3" height="15.0" fill="rgb(244,190,49)" rx="2" ry="2" />
<text  x="756.81" y="927.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::set&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::find_node_impl&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; (2,172,463 samples, 0.01%)</title><rect x="722.9" y="789" width="0.1" height="15.0" fill="rgb(210,185,53)" rx="2" ry="2" />
<text  x="725.94" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,525,761 samples, 0.03%)</title><rect x="478.0" y="741" width="0.4" height="15.0" fill="rgb(217,186,49)" rx="2" ry="2" />
<text  x="480.96" y="751.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::lock (5,679,087 samples, 0.02%)</title><rect x="899.3" y="1173" width="0.3" height="15.0" fill="rgb(224,9,25)" rx="2" ry="2" />
<text  x="902.31" y="1183.5" ></text>
</g>
<g >
<title>dJointGroupEmpty (12,403,877 samples, 0.05%)</title><rect x="229.8" y="1029" width="0.6" height="15.0" fill="rgb(240,91,29)" rx="2" ry="2" />
<text  x="232.85" y="1039.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_service_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_service_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;decltype (6,727,611 samples, 0.03%)</title><rect x="816.0" y="1013" width="0.3" height="15.0" fill="rgb(207,156,17)" rx="2" ry="2" />
<text  x="818.98" y="1023.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetParent (7,661,209 samples, 0.03%)</title><rect x="220.1" y="997" width="0.4" height="15.0" fill="rgb(220,162,1)" rx="2" ry="2" />
<text  x="223.12" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (106,904,821 samples, 0.42%)</title><rect x="701.8" y="821" width="5.0" height="15.0" fill="rgb(231,60,3)" rx="2" ry="2" />
<text  x="704.84" y="831.5" ></text>
</g>
<g >
<title>_dNormalize3 (2,439,912 samples, 0.01%)</title><rect x="251.8" y="933" width="0.1" height="15.0" fill="rgb(229,30,38)" rx="2" ry="2" />
<text  x="254.80" y="943.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (4,838,386 samples, 0.02%)</title><rect x="765.5" y="965" width="0.3" height="15.0" fill="rgb(228,156,27)" rx="2" ry="2" />
<text  x="768.53" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;sensor_msgs::msg::Imu_&lt;std::allocator&lt;void&gt; &gt;,  (4,861,997 samples, 0.02%)</title><rect x="24.0" y="1029" width="0.2" height="15.0" fill="rgb(227,209,16)" rx="2" ry="2" />
<text  x="26.99" y="1039.5" ></text>
</g>
<g >
<title>boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;::is_open (27,967,816 samples, 0.11%)</title><rect x="53.0" y="1173" width="1.3" height="15.0" fill="rgb(217,167,54)" rx="2" ry="2" />
<text  x="55.98" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,496,532 samples, 0.10%)</title><rect x="11.4" y="1141" width="1.1" height="15.0" fill="rgb(243,194,32)" rx="2" ry="2" />
<text  x="14.36" y="1151.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Model&gt;::shared_ptr (6,465,663 samples, 0.03%)</title><rect x="688.1" y="805" width="0.3" height="15.0" fill="rgb(230,58,34)" rx="2" ry="2" />
<text  x="691.13" y="815.5" ></text>
</g>
<g >
<title>rclcpp::Time::Time (5,465,952 samples, 0.02%)</title><rect x="798.0" y="837" width="0.3" height="15.0" fill="rgb(210,85,21)" rx="2" ry="2" />
<text  x="801.00" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,646 samples, 0.01%)</title><rect x="724.0" y="805" width="0.1" height="15.0" fill="rgb(226,86,45)" rx="2" ry="2" />
<text  x="727.02" y="815.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_publisher_t,  (4,306,229 samples, 0.02%)</title><rect x="667.0" y="885" width="0.2" height="15.0" fill="rgb(237,12,3)" rx="2" ry="2" />
<text  x="670.04" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,526,646 samples, 0.03%)</title><rect x="830.0" y="1093" width="0.3" height="15.0" fill="rgb(238,37,40)" rx="2" ry="2" />
<text  x="832.99" y="1103.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_subscription_t const,  (3,116,103 samples, 0.01%)</title><rect x="195.3" y="1045" width="0.1" height="15.0" fill="rgb(237,66,29)" rx="2" ry="2" />
<text  x="198.28" y="1055.5" ></text>
</g>
<g >
<title>std::move&lt;gazebo::msgs::LinkData const*&amp;&gt; (2,272,626 samples, 0.01%)</title><rect x="74.2" y="1013" width="0.1" height="15.0" fill="rgb(209,175,17)" rx="2" ry="2" />
<text  x="77.22" y="1023.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::sensors::RaySensorPrivate*, std::default_delete&lt;gazebo::sensors::RaySensorPrivate&gt; &gt; (3,941,521 samples, 0.02%)</title><rect x="46.2" y="1093" width="0.1" height="15.0" fill="rgb(222,43,20)" rx="2" ry="2" />
<text  x="49.15" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; &gt;::_M_valptr (2,168,549 samples, 0.01%)</title><rect x="503.1" y="837" width="0.1" height="15.0" fill="rgb(253,55,28)" rx="2" ry="2" />
<text  x="506.07" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,628,552 samples, 0.03%)</title><rect x="138.3" y="1125" width="0.3" height="15.0" fill="rgb(240,22,8)" rx="2" ry="2" />
<text  x="141.29" y="1135.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::Pose3 (9,644,567 samples, 0.04%)</title><rect x="609.0" y="789" width="0.4" height="15.0" fill="rgb(207,188,20)" rx="2" ry="2" />
<text  x="611.98" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="981" width="0.2" height="15.0" fill="rgb(235,58,11)" rx="2" ry="2" />
<text  x="823.95" y="991.5" ></text>
</g>
<g >
<title>[unknown] (28,104,029 samples, 0.11%)</title><rect x="136.8" y="1269" width="1.4" height="15.0" fill="rgb(242,163,28)" rx="2" ry="2" />
<text  x="139.85" y="1279.5" ></text>
</g>
<g >
<title>gazebo::physics::World::RunLoop (12,516,779,584 samples, 49.40%)</title><rect x="206.7" y="1093" width="583.0" height="15.0" fill="rgb(219,168,1)" rx="2" ry="2" />
<text  x="209.69" y="1103.5" >gazebo::physics::World::RunLoop</text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (10,262,198 samples, 0.04%)</title><rect x="687.3" y="821" width="0.5" height="15.0" fill="rgb(239,99,22)" rx="2" ry="2" />
<text  x="690.29" y="831.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (12,516,779,584 samples, 49.40%)</title><rect x="206.7" y="1173" width="583.0" height="15.0" fill="rgb(214,98,33)" rx="2" ry="2" />
<text  x="209.69" y="1183.5" >std::__invoke_impl&lt;void, std::_Bind&lt;void </text>
</g>
<g >
<title>dxRay::computeAABB (7,583,095 samples, 0.03%)</title><rect x="38.6" y="1045" width="0.4" height="15.0" fill="rgb(239,186,15)" rx="2" ry="2" />
<text  x="41.64" y="1055.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::WorldLinearVel (35,167,110 samples, 0.14%)</title><rect x="683.3" y="901" width="1.7" height="15.0" fill="rgb(221,2,46)" rx="2" ry="2" />
<text  x="686.32" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,421,589 samples, 0.10%)</title><rect x="56.3" y="261" width="1.2" height="15.0" fill="rgb(235,214,0)" rx="2" ry="2" />
<text  x="59.27" y="271.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::HasConnections (3,952,519 samples, 0.02%)</title><rect x="238.1" y="805" width="0.2" height="15.0" fill="rgb(215,161,19)" rx="2" ry="2" />
<text  x="241.08" y="815.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (5,547,118 samples, 0.02%)</title><rect x="858.3" y="1141" width="0.3" height="15.0" fill="rgb(232,193,48)" rx="2" ry="2" />
<text  x="861.32" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,574 samples, 0.12%)</title><rect x="145.5" y="1141" width="1.4" height="15.0" fill="rgb(220,124,8)" rx="2" ry="2" />
<text  x="148.53" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;::_M_valptr (5,579,845 samples, 0.02%)</title><rect x="545.5" y="693" width="0.2" height="15.0" fill="rgb(229,50,50)" rx="2" ry="2" />
<text  x="548.48" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::event::EventT&lt;void  (8,249,036 samples, 0.03%)</title><rect x="731.3" y="997" width="0.4" height="15.0" fill="rgb(223,109,23)" rx="2" ry="2" />
<text  x="734.32" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (162,393,045 samples, 0.64%)</title><rect x="699.3" y="869" width="7.5" height="15.0" fill="rgb(222,133,24)" rx="2" ry="2" />
<text  x="702.26" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::util::LogRecordPrivate, std::default_delete&lt;gazebo::util::LogRecordPrivate&gt; &gt;::operator (5,979,213 samples, 0.02%)</title><rect x="743.8" y="1029" width="0.3" height="15.0" fill="rgb(219,161,48)" rx="2" ry="2" />
<text  x="746.80" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (2,275,085 samples, 0.01%)</title><rect x="224.7" y="949" width="0.1" height="15.0" fill="rgb(225,195,15)" rx="2" ry="2" />
<text  x="227.66" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,434,575 samples, 0.02%)</title><rect x="54.0" y="981" width="0.3" height="15.0" fill="rgb(219,143,21)" rx="2" ry="2" />
<text  x="57.03" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,179,357 samples, 0.02%)</title><rect x="889.2" y="1189" width="0.3" height="15.0" fill="rgb(214,37,1)" rx="2" ry="2" />
<text  x="892.25" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1109" width="0.4" height="15.0" fill="rgb(215,85,6)" rx="2" ry="2" />
<text  x="1181.27" y="1119.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (80,909,555 samples, 0.32%)</title><rect x="809.1" y="1045" width="3.8" height="15.0" fill="rgb(246,108,51)" rx="2" ry="2" />
<text  x="812.09" y="1055.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (7,368,669 samples, 0.03%)</title><rect x="833.6" y="1141" width="0.3" height="15.0" fill="rgb(234,219,24)" rx="2" ry="2" />
<text  x="836.60" y="1151.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (368,172,242 samples, 1.45%)</title><rect x="186.9" y="1253" width="17.1" height="15.0" fill="rgb(242,181,38)" rx="2" ry="2" />
<text  x="189.89" y="1263.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*, std::shared_ptr&lt;rcl_subscription_t const&gt;*&gt; (6,573,743 samples, 0.03%)</title><rect x="805.6" y="949" width="0.3" height="15.0" fill="rgb(234,63,27)" rx="2" ry="2" />
<text  x="808.60" y="959.5" ></text>
</g>
<g >
<title>boost::unordered::detail::func::construct_node_from_args&lt;std::allocator&lt;boost::unordered::detail::ptr_node&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt; const&amp;&gt; (2,288,567 samples, 0.01%)</title><rect x="215.6" y="933" width="0.1" height="15.0" fill="rgb(218,49,54)" rx="2" ry="2" />
<text  x="218.60" y="943.5" ></text>
</g>
<g >
<title>std::mutex::unlock (6,772,943 samples, 0.03%)</title><rect x="855.3" y="1125" width="0.3" height="15.0" fill="rgb(223,109,19)" rx="2" ry="2" />
<text  x="858.31" y="1135.5" ></text>
</g>
<g >
<title>gazebo::physics::RayShape::GetLength (5,664,674 samples, 0.02%)</title><rect x="37.7" y="901" width="0.2" height="15.0" fill="rgb(217,59,15)" rx="2" ry="2" />
<text  x="40.66" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2,183,008 samples, 0.01%)</title><rect x="502.1" y="773" width="0.1" height="15.0" fill="rgb(223,214,1)" rx="2" ry="2" />
<text  x="505.06" y="783.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;gazebo_msgs::msg::LinkStates_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::publish (2,172,459 samples, 0.01%)</title><rect x="690.6" y="901" width="0.1" height="15.0" fill="rgb(241,128,50)" rx="2" ry="2" />
<text  x="693.63" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,082,184 samples, 0.03%)</title><rect x="520.8" y="869" width="0.4" height="15.0" fill="rgb(211,4,2)" rx="2" ry="2" />
<text  x="523.82" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="1013" width="0.2" height="15.0" fill="rgb(240,26,15)" rx="2" ry="2" />
<text  x="823.95" y="1023.5" ></text>
</g>
<g >
<title>gazebo::Master::Run (56,935,916 samples, 0.22%)</title><rect x="204.0" y="1269" width="2.7" height="15.0" fill="rgb(239,97,53)" rx="2" ry="2" />
<text  x="207.03" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (81,162,592 samples, 0.32%)</title><rect x="1185.5" y="1237" width="3.8" height="15.0" fill="rgb(230,119,32)" rx="2" ry="2" />
<text  x="1188.51" y="1247.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt;, std::default_delete&lt;realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt;::operator bool (16,471,935 samples, 0.07%)</title><rect x="504.7" y="869" width="0.7" height="15.0" fill="rgb(239,104,48)" rx="2" ry="2" />
<text  x="507.68" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,604,577 samples, 0.01%)</title><rect x="840.5" y="917" width="0.2" height="15.0" fill="rgb(234,128,53)" rx="2" ry="2" />
<text  x="843.51" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,118,178 samples, 0.10%)</title><rect x="185.1" y="1013" width="1.2" height="15.0" fill="rgb(232,30,50)" rx="2" ry="2" />
<text  x="188.13" y="1023.5" ></text>
</g>
<g >
<title>dMultiply2_333 (25,828,777 samples, 0.10%)</title><rect x="267.5" y="965" width="1.2" height="15.0" fill="rgb(212,213,33)" rx="2" ry="2" />
<text  x="270.50" y="975.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;rclcpp::TimerBase&gt;::lock (7,190,060 samples, 0.03%)</title><rect x="190.1" y="1013" width="0.4" height="15.0" fill="rgb(217,44,0)" rx="2" ry="2" />
<text  x="193.14" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,411,266 samples, 0.01%)</title><rect x="830.2" y="965" width="0.1" height="15.0" fill="rgb(206,1,49)" rx="2" ry="2" />
<text  x="833.18" y="975.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator= (25,041,428 samples, 0.10%)</title><rect x="41.8" y="1125" width="1.2" height="15.0" fill="rgb(231,93,42)" rx="2" ry="2" />
<text  x="44.81" y="1135.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::MergeFrom (31,269,291 samples, 0.12%)</title><rect x="752.6" y="933" width="1.5" height="15.0" fill="rgb(223,134,9)" rx="2" ry="2" />
<text  x="755.65" y="943.5" ></text>
</g>
<g >
<title>gazebo::sensors::RaySensor::VerticalAngleMin (3,143,021 samples, 0.01%)</title><rect x="46.6" y="1141" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="49.58" y="1151.5" ></text>
</g>
<g >
<title>gazebo::common::Time::operator&gt;= (8,864,164 samples, 0.03%)</title><rect x="893.9" y="1221" width="0.4" height="15.0" fill="rgb(248,41,47)" rx="2" ry="2" />
<text  x="896.86" y="1231.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (26,254,078 samples, 0.10%)</title><rect x="498.8" y="853" width="1.2" height="15.0" fill="rgb(225,205,31)" rx="2" ry="2" />
<text  x="501.78" y="863.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (5,565,294 samples, 0.02%)</title><rect x="832.7" y="1141" width="0.3" height="15.0" fill="rgb(252,5,54)" rx="2" ry="2" />
<text  x="835.74" y="1151.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator* (3,774,607 samples, 0.01%)</title><rect x="446.2" y="901" width="0.2" height="15.0" fill="rgb(245,24,18)" rx="2" ry="2" />
<text  x="449.18" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,227,017 samples, 0.02%)</title><rect x="478.2" y="693" width="0.2" height="15.0" fill="rgb(226,132,10)" rx="2" ry="2" />
<text  x="481.16" y="703.5" ></text>
</g>
<g >
<title>getHingeAngle (5,569,362 samples, 0.02%)</title><rect x="518.8" y="805" width="0.2" height="15.0" fill="rgb(231,138,12)" rx="2" ry="2" />
<text  x="521.79" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,151,257 samples, 0.01%)</title><rect x="864.0" y="1093" width="0.1" height="15.0" fill="rgb(242,161,9)" rx="2" ry="2" />
<text  x="866.98" y="1103.5" ></text>
</g>
<g >
<title>dxJointHinge::getInfo2 (31,568,799 samples, 0.12%)</title><rect x="273.1" y="965" width="1.4" height="15.0" fill="rgb(206,71,3)" rx="2" ry="2" />
<text  x="276.06" y="975.5" ></text>
</g>
<g >
<title>gazebo_ros2_control::GazeboRosControlPrivate::Update (4,710,444 samples, 0.02%)</title><rect x="776.7" y="933" width="0.2" height="15.0" fill="rgb(241,153,7)" rx="2" ry="2" />
<text  x="779.71" y="943.5" ></text>
</g>
<g >
<title>get_l4proto (2,179,454 samples, 0.01%)</title><rect x="888.7" y="1029" width="0.1" height="15.0" fill="rgb(235,223,9)" rx="2" ry="2" />
<text  x="891.66" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (142,234,040 samples, 0.56%)</title><rect x="880.5" y="965" width="6.6" height="15.0" fill="rgb(218,49,19)" rx="2" ry="2" />
<text  x="883.51" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (68,638,581 samples, 0.27%)</title><rect x="714.1" y="837" width="3.2" height="15.0" fill="rgb(251,77,20)" rx="2" ry="2" />
<text  x="717.11" y="847.5" ></text>
</g>
<g >
<title>realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt;::publishingLoop (249,237,465 samples, 0.98%)</title><rect x="837.5" y="1157" width="11.6" height="15.0" fill="rgb(238,81,50)" rx="2" ry="2" />
<text  x="840.48" y="1167.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::UpdatePhysics (114,773,045 samples, 0.45%)</title><rect x="782.7" y="1045" width="5.3" height="15.0" fill="rgb(213,39,40)" rx="2" ry="2" />
<text  x="785.67" y="1055.5" ></text>
</g>
<g >
<title>rmw_wait (4,179,900 samples, 0.02%)</title><rect x="1174.4" y="1301" width="0.2" height="15.0" fill="rgb(249,163,12)" rx="2" ry="2" />
<text  x="1177.36" y="1311.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::release (2,537,634 samples, 0.01%)</title><rect x="75.8" y="917" width="0.1" height="15.0" fill="rgb(237,117,49)" rx="2" ry="2" />
<text  x="78.76" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (83,566,038 samples, 0.33%)</title><rect x="882.7" y="693" width="3.9" height="15.0" fill="rgb(216,56,1)" rx="2" ry="2" />
<text  x="885.68" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;gazebo::sensors::SimTimeEvent*, std::allocator&lt;gazebo::sensors::SimTimeEvent*&gt; &gt;::_M_create_node&lt;gazebo::sensors::SimTimeEvent* const&amp;&gt; (11,610,970 samples, 0.05%)</title><rect x="48.0" y="1157" width="0.6" height="15.0" fill="rgb(245,84,32)" rx="2" ry="2" />
<text  x="51.04" y="1167.5" ></text>
</g>
<g >
<title>[librclcpp.so] (19,898,762 samples, 0.08%)</title><rect x="805.9" y="1045" width="0.9" height="15.0" fill="rgb(229,221,38)" rx="2" ry="2" />
<text  x="808.91" y="1055.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::UpdatePhysicsPose (6,019,191 samples, 0.02%)</title><rect x="776.1" y="773" width="0.3" height="15.0" fill="rgb(249,145,30)" rx="2" ry="2" />
<text  x="779.08" y="783.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena (2,192,007 samples, 0.01%)</title><rect x="754.0" y="901" width="0.1" height="15.0" fill="rgb(207,81,45)" rx="2" ry="2" />
<text  x="757.00" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,488,054 samples, 0.08%)</title><rect x="736.6" y="837" width="1.0" height="15.0" fill="rgb(209,16,20)" rx="2" ry="2" />
<text  x="739.65" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::sensors::ImuSensorPrivate, std::default_delete&lt;gazebo::sensors::ImuSensorPrivate&gt; &gt;::get (4,610,904 samples, 0.02%)</title><rect x="21.5" y="997" width="0.3" height="15.0" fill="rgb(208,186,15)" rx="2" ry="2" />
<text  x="24.54" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,440,838 samples, 0.02%)</title><rect x="510.9" y="741" width="0.3" height="15.0" fill="rgb(249,196,41)" rx="2" ry="2" />
<text  x="513.91" y="751.5" ></text>
</g>
<g >
<title>rcl_wait_set_resize (7,330,535 samples, 0.03%)</title><rect x="192.8" y="1077" width="0.4" height="15.0" fill="rgb(238,49,14)" rx="2" ry="2" />
<text  x="195.82" y="1087.5" ></text>
</g>
<g >
<title>std::this_thread::sleep_for&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (56,663,803 samples, 0.22%)</title><rect x="833.9" y="1141" width="2.7" height="15.0" fill="rgb(249,164,11)" rx="2" ry="2" />
<text  x="836.95" y="1151.5" ></text>
</g>
<g >
<title>gazebo::physics::World::Physics (4,121,756 samples, 0.02%)</title><rect x="611.0" y="837" width="0.2" height="15.0" fill="rgb(247,13,32)" rx="2" ry="2" />
<text  x="614.02" y="847.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::Position (15,902,358 samples, 0.06%)</title><rect x="471.4" y="853" width="0.7" height="15.0" fill="rgb(220,48,31)" rx="2" ry="2" />
<text  x="474.38" y="863.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt; &gt;::construct&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt; const&amp;&gt; (7,677,951 samples, 0.03%)</title><rect x="768.7" y="997" width="0.4" height="15.0" fill="rgb(251,30,32)" rx="2" ry="2" />
<text  x="771.74" y="1007.5" ></text>
</g>
<g >
<title>[libjoint_trajectory_controller.so] (10,249,354 samples, 0.04%)</title><rect x="503.6" y="885" width="0.5" height="15.0" fill="rgb(248,23,2)" rx="2" ry="2" />
<text  x="506.65" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,579,944 samples, 0.03%)</title><rect x="75.2" y="997" width="0.4" height="15.0" fill="rgb(225,218,43)" rx="2" ry="2" />
<text  x="78.18" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,526,646 samples, 0.03%)</title><rect x="830.0" y="1045" width="0.3" height="15.0" fill="rgb(206,54,52)" rx="2" ry="2" />
<text  x="832.99" y="1055.5" ></text>
</g>
<g >
<title>boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;::is_open (3,640,791 samples, 0.01%)</title><rect x="204.9" y="1045" width="0.2" height="15.0" fill="rgb(243,128,28)" rx="2" ry="2" />
<text  x="207.90" y="1055.5" ></text>
</g>
<g >
<title>gazebo::physics::MultiRayShape::Update (192,329,886 samples, 0.76%)</title><rect x="34.7" y="1157" width="9.0" height="15.0" fill="rgb(236,2,25)" rx="2" ry="2" />
<text  x="37.71" y="1167.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::transport::Connection&gt;::operator (3,896,903 samples, 0.02%)</title><rect x="48.6" y="1221" width="0.2" height="15.0" fill="rgb(213,57,23)" rx="2" ry="2" />
<text  x="51.58" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (87,526,544 samples, 0.35%)</title><rect x="733.5" y="981" width="4.1" height="15.0" fill="rgb(214,39,31)" rx="2" ry="2" />
<text  x="736.53" y="991.5" ></text>
</g>
<g >
<title>boost::checked_delete&lt;google::protobuf::Message&gt; (15,510,083 samples, 0.06%)</title><rect x="74.3" y="965" width="0.7" height="15.0" fill="rgb(221,120,45)" rx="2" ry="2" />
<text  x="77.32" y="975.5" ></text>
</g>
<g >
<title>is_writer_entityid (2,224,678 samples, 0.01%)</title><rect x="164.8" y="1285" width="0.1" height="15.0" fill="rgb(237,225,28)" rx="2" ry="2" />
<text  x="167.82" y="1295.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::publish (12,543,230 samples, 0.05%)</title><rect x="73.4" y="1045" width="0.6" height="15.0" fill="rgb(249,161,12)" rx="2" ry="2" />
<text  x="76.45" y="1055.5" ></text>
</g>
<g >
<title>Opcode::AABBTreeCollider::_Collide (299,662,593 samples, 1.18%)</title><rect x="103.5" y="1253" width="13.9" height="15.0" fill="rgb(238,223,6)" rx="2" ry="2" />
<text  x="106.46" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,496,532 samples, 0.10%)</title><rect x="11.4" y="1093" width="1.1" height="15.0" fill="rgb(208,215,28)" rx="2" ry="2" />
<text  x="14.36" y="1103.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (3,594,486 samples, 0.01%)</title><rect x="430.1" y="901" width="0.2" height="15.0" fill="rgb(222,113,31)" rx="2" ry="2" />
<text  x="433.13" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,460,233 samples, 0.03%)</title><rect x="841.6" y="1109" width="0.3" height="15.0" fill="rgb(253,130,9)" rx="2" ry="2" />
<text  x="844.65" y="1119.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray&lt;gazebo::msgs::Time&gt; (2,377,418 samples, 0.01%)</title><rect x="1159.6" y="1285" width="0.1" height="15.0" fill="rgb(213,149,4)" rx="2" ry="2" />
<text  x="1162.63" y="1295.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt;::~shared_ptr (4,224,317 samples, 0.02%)</title><rect x="496.9" y="869" width="0.2" height="15.0" fill="rgb(230,218,29)" rx="2" ry="2" />
<text  x="499.89" y="879.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::WriteDoubleToArray (2,734,777 samples, 0.01%)</title><rect x="1159.5" y="1205" width="0.1" height="15.0" fill="rgb(210,175,19)" rx="2" ry="2" />
<text  x="1162.50" y="1215.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::UpdateCollision (7,986,964 samples, 0.03%)</title><rect x="457.7" y="1061" width="0.4" height="15.0" fill="rgb(218,209,47)" rx="2" ry="2" />
<text  x="460.69" y="1071.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::remove_null_handles (83,954,916 samples, 0.33%)</title><rect x="813.5" y="1045" width="3.9" height="15.0" fill="rgb(218,48,1)" rx="2" ry="2" />
<text  x="816.51" y="1055.5" ></text>
</g>
<g >
<title>[libjoint_state_broadcaster.so] (4,206,517 samples, 0.02%)</title><rect x="825.0" y="1125" width="0.1" height="15.0" fill="rgb(206,138,10)" rx="2" ry="2" />
<text  x="827.95" y="1135.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (7,677,951 samples, 0.03%)</title><rect x="768.7" y="917" width="0.4" height="15.0" fill="rgb(213,32,29)" rx="2" ry="2" />
<text  x="771.74" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,575,197 samples, 0.01%)</title><rect x="776.5" y="901" width="0.2" height="15.0" fill="rgb(208,173,50)" rx="2" ry="2" />
<text  x="779.54" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,286,132 samples, 0.02%)</title><rect x="927.7" y="1285" width="0.2" height="15.0" fill="rgb(244,193,52)" rx="2" ry="2" />
<text  x="930.67" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;gazebo::sensors::SimTimeEvent*, std::allocator&lt;gazebo::sensors::SimTimeEvent*&gt; &gt;::_M_insert&lt;gazebo::sensors::SimTimeEvent* const&amp;&gt; (11,610,970 samples, 0.05%)</title><rect x="48.0" y="1173" width="0.6" height="15.0" fill="rgb(239,33,34)" rx="2" ry="2" />
<text  x="51.04" y="1183.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop&lt;google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::TypeHandler&gt; (41,457,249 samples, 0.16%)</title><rect x="752.5" y="965" width="2.0" height="15.0" fill="rgb(235,184,8)" rx="2" ry="2" />
<text  x="755.55" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,812,785 samples, 0.05%)</title><rect x="63.0" y="1125" width="0.6" height="15.0" fill="rgb(237,15,39)" rx="2" ry="2" />
<text  x="65.97" y="1135.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (12,643,595 samples, 0.05%)</title><rect x="72.5" y="1141" width="0.6" height="15.0" fill="rgb(215,13,44)" rx="2" ry="2" />
<text  x="75.54" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,157,037 samples, 0.01%)</title><rect x="746.1" y="997" width="0.1" height="15.0" fill="rgb(232,162,46)" rx="2" ry="2" />
<text  x="749.09" y="1007.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (4,202,086 samples, 0.02%)</title><rect x="442.1" y="885" width="0.2" height="15.0" fill="rgb(238,104,39)" rx="2" ry="2" />
<text  x="445.10" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,225,905 samples, 0.01%)</title><rect x="829.7" y="949" width="0.1" height="15.0" fill="rgb(230,108,47)" rx="2" ry="2" />
<text  x="832.69" y="959.5" ></text>
</g>
<g >
<title>ode::quickstep::sum6 (69,847,853 samples, 0.28%)</title><rect x="435.8" y="949" width="3.2" height="15.0" fill="rgb(248,193,4)" rx="2" ry="2" />
<text  x="438.77" y="959.5" ></text>
</g>
<g >
<title>gazebo::physics::Model::GetLink (3,693,494 samples, 0.01%)</title><rect x="685.5" y="885" width="0.1" height="15.0" fill="rgb(238,72,13)" rx="2" ry="2" />
<text  x="688.45" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (57,608,920 samples, 0.23%)</title><rect x="15.3" y="949" width="2.6" height="15.0" fill="rgb(225,102,11)" rx="2" ry="2" />
<text  x="18.26" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,143,840 samples, 0.05%)</title><rect x="871.4" y="1253" width="0.6" height="15.0" fill="rgb(236,2,8)" rx="2" ry="2" />
<text  x="874.45" y="1263.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (12,652,778 samples, 0.05%)</title><rect x="856.8" y="1093" width="0.6" height="15.0" fill="rgb(231,105,15)" rx="2" ry="2" />
<text  x="859.76" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,486,412 samples, 0.10%)</title><rect x="479.9" y="885" width="1.2" height="15.0" fill="rgb(212,209,3)" rx="2" ry="2" />
<text  x="482.94" y="895.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_get_Tp_allocator (2,298,100 samples, 0.01%)</title><rect x="767.6" y="1045" width="0.1" height="15.0" fill="rgb(235,108,46)" rx="2" ry="2" />
<text  x="770.56" y="1055.5" ></text>
</g>
<g >
<title>entidx_lookup_proxy_reader_guid (5,869,299 samples, 0.02%)</title><rect x="162.0" y="1285" width="0.3" height="15.0" fill="rgb(242,115,9)" rx="2" ry="2" />
<text  x="165.02" y="1295.5" ></text>
</g>
<g >
<title>gazebo_ros::GazeboRosStatePrivate::OnUpdate (335,169,102 samples, 1.32%)</title><rect x="679.8" y="917" width="15.6" height="15.0" fill="rgb(236,214,0)" rx="2" ry="2" />
<text  x="682.78" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (45,187,054 samples, 0.18%)</title><rect x="498.5" y="869" width="2.1" height="15.0" fill="rgb(226,124,26)" rx="2" ry="2" />
<text  x="501.48" y="879.5" ></text>
</g>
<g >
<title>boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (100,583,021 samples, 0.40%)</title><rect x="54.3" y="1093" width="4.7" height="15.0" fill="rgb(245,60,50)" rx="2" ry="2" />
<text  x="57.28" y="1103.5" ></text>
</g>
<g >
<title>__tls_get_addr (2,286,334 samples, 0.01%)</title><rect x="54.3" y="885" width="0.1" height="15.0" fill="rgb(217,172,2)" rx="2" ry="2" />
<text  x="57.28" y="895.5" ></text>
</g>
<g >
<title>std::_Mu&lt;std::_Placeholder&lt;1&gt;, false, true&gt;::operator (14,146,203 samples, 0.06%)</title><rect x="625.2" y="949" width="0.6" height="15.0" fill="rgb(230,154,49)" rx="2" ry="2" />
<text  x="628.16" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,152,963 samples, 0.06%)</title><rect x="116.7" y="1173" width="0.7" height="15.0" fill="rgb(242,216,51)" rx="2" ry="2" />
<text  x="119.71" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,918,687 samples, 0.02%)</title><rect x="620.7" y="837" width="0.2" height="15.0" fill="rgb(208,205,8)" rx="2" ry="2" />
<text  x="623.69" y="847.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, std::ratio&lt;1000000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (2,595,338 samples, 0.01%)</title><rect x="848.1" y="1077" width="0.1" height="15.0" fill="rgb(222,227,42)" rx="2" ry="2" />
<text  x="851.11" y="1087.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::~LinkData (2,537,634 samples, 0.01%)</title><rect x="75.8" y="869" width="0.1" height="15.0" fill="rgb(234,200,27)" rx="2" ry="2" />
<text  x="78.76" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,145,973 samples, 0.12%)</title><rect x="56.1" y="373" width="1.4" height="15.0" fill="rgb(230,95,1)" rx="2" ry="2" />
<text  x="59.05" y="383.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (2,528,592 samples, 0.01%)</title><rect x="483.8" y="1013" width="0.1" height="15.0" fill="rgb(221,69,45)" rx="2" ry="2" />
<text  x="486.81" y="1023.5" ></text>
</g>
<g >
<title>boost::checked_delete&lt;google::protobuf::Message&gt; (2,537,634 samples, 0.01%)</title><rect x="75.8" y="885" width="0.1" height="15.0" fill="rgb(240,65,2)" rx="2" ry="2" />
<text  x="78.76" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (5,472,598 samples, 0.02%)</title><rect x="80.1" y="1061" width="0.3" height="15.0" fill="rgb(252,100,17)" rx="2" ry="2" />
<text  x="83.13" y="1071.5" ></text>
</g>
<g >
<title>gazebo::transport::SubscriptionTransport::HandleData (18,750,765 samples, 0.07%)</title><rect x="80.6" y="1125" width="0.9" height="15.0" fill="rgb(245,57,1)" rx="2" ry="2" />
<text  x="83.63" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,225,905 samples, 0.01%)</title><rect x="829.7" y="997" width="0.1" height="15.0" fill="rgb(211,20,18)" rx="2" ry="2" />
<text  x="832.69" y="1007.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Model&gt;::shared_ptr&lt;gazebo::physics::Base&gt; (2,386,525 samples, 0.01%)</title><rect x="224.0" y="981" width="0.1" height="15.0" fill="rgb(238,134,9)" rx="2" ry="2" />
<text  x="226.97" y="991.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*&gt; (12,627,182 samples, 0.05%)</title><rect x="816.8" y="949" width="0.6" height="15.0" fill="rgb(215,165,12)" rx="2" ry="2" />
<text  x="819.83" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,111,231 samples, 0.20%)</title><rect x="1171.8" y="1221" width="2.3" height="15.0" fill="rgb(239,154,32)" rx="2" ry="2" />
<text  x="1174.80" y="1231.5" ></text>
</g>
<g >
<title>gazebo::physics::World::PauseTime (2,186,790 samples, 0.01%)</title><rect x="772.5" y="1045" width="0.1" height="15.0" fill="rgb(239,29,30)" rx="2" ry="2" />
<text  x="775.47" y="1055.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_service_t const,  (6,912,390 samples, 0.03%)</title><rect x="195.0" y="1045" width="0.3" height="15.0" fill="rgb(234,204,52)" rx="2" ry="2" />
<text  x="197.96" y="1055.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (60,918,113 samples, 0.24%)</title><rect x="777.7" y="949" width="2.8" height="15.0" fill="rgb(254,176,25)" rx="2" ry="2" />
<text  x="780.71" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_service_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; &gt;::_M_erase (4,016,876 samples, 0.02%)</title><rect x="202.0" y="1045" width="0.2" height="15.0" fill="rgb(236,121,52)" rx="2" ry="2" />
<text  x="204.99" y="1055.5" ></text>
</g>
<g >
<title>boost::posix_time::time_duration::time_duration (2,838,218 samples, 0.01%)</title><rect x="50.8" y="1205" width="0.2" height="15.0" fill="rgb(221,106,34)" rx="2" ry="2" />
<text  x="53.84" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,491,228 samples, 0.06%)</title><rect x="457.0" y="869" width="0.7" height="15.0" fill="rgb(209,186,24)" rx="2" ry="2" />
<text  x="460.02" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_realloc_insert&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (3,756,265 samples, 0.01%)</title><rect x="587.0" y="693" width="0.2" height="15.0" fill="rgb(222,196,50)" rx="2" ry="2" />
<text  x="590.02" y="703.5" ></text>
</g>
<g >
<title>rclcpp::AnySubscriptionCallback&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::dispatch (15,194,205 samples, 0.06%)</title><rect x="790.5" y="933" width="0.7" height="15.0" fill="rgb(251,138,46)" rx="2" ry="2" />
<text  x="793.48" y="943.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::InertialPrivate, std::default_delete&lt;gazebo::physics::InertialPrivate&gt; &gt;::operator (12,233,963 samples, 0.05%)</title><rect x="443.5" y="901" width="0.6" height="15.0" fill="rgb(234,190,8)" rx="2" ry="2" />
<text  x="446.52" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26,535,350 samples, 0.10%)</title><rect x="736.4" y="901" width="1.2" height="15.0" fill="rgb(232,203,31)" rx="2" ry="2" />
<text  x="739.37" y="911.5" ></text>
</g>
<g >
<title>boost::_bi::list2&lt;boost::_bi::value&lt;gazebo_plugins::GazeboRosRaySensorPrivate*&gt;, boost::arg&lt;1&gt; &gt;::operator (16,489,393 samples, 0.07%)</title><rect x="73.3" y="1093" width="0.7" height="15.0" fill="rgb(218,220,40)" rx="2" ry="2" />
<text  x="76.27" y="1103.5" ></text>
</g>
<g >
<title>dxGeom::spaceRemove (8,395,033 samples, 0.03%)</title><rect x="442.5" y="901" width="0.4" height="15.0" fill="rgb(234,51,50)" rx="2" ry="2" />
<text  x="445.47" y="911.5" ></text>
</g>
<g >
<title>dSpaceCollide2 (7,986,629 samples, 0.03%)</title><rect x="238.9" y="885" width="0.3" height="15.0" fill="rgb(238,59,41)" rx="2" ry="2" />
<text  x="241.85" y="895.5" ></text>
</g>
<g >
<title>ipt_do_table (4,208,334 samples, 0.02%)</title><rect x="887.4" y="1045" width="0.2" height="15.0" fill="rgb(246,0,5)" rx="2" ry="2" />
<text  x="890.44" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,377,139 samples, 0.03%)</title><rect x="214.4" y="853" width="0.3" height="15.0" fill="rgb(235,196,49)" rx="2" ry="2" />
<text  x="217.43" y="863.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_133 (10,881,805 samples, 0.04%)</title><rect x="267.0" y="949" width="0.5" height="15.0" fill="rgb(219,181,24)" rx="2" ry="2" />
<text  x="269.99" y="959.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (5,830,521 samples, 0.02%)</title><rect x="596.3" y="773" width="0.3" height="15.0" fill="rgb(222,2,48)" rx="2" ry="2" />
<text  x="599.33" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,272,626 samples, 0.01%)</title><rect x="57.1" y="101" width="0.1" height="15.0" fill="rgb(213,213,51)" rx="2" ry="2" />
<text  x="60.07" y="111.5" ></text>
</g>
<g >
<title>dxSimpleSpace::collide2 (105,998,525 samples, 0.42%)</title><rect x="235.1" y="949" width="5.0" height="15.0" fill="rgb(239,59,32)" rx="2" ry="2" />
<text  x="238.12" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1221" width="0.1" height="15.0" fill="rgb(253,211,15)" rx="2" ry="2" />
<text  x="135.18" y="1231.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::MasterPrivate, std::default_delete&lt;gazebo::MasterPrivate&gt; &gt;::get (5,360,767 samples, 0.02%)</title><rect x="206.1" y="1077" width="0.3" height="15.0" fill="rgb(213,19,45)" rx="2" ry="2" />
<text  x="209.11" y="1087.5" ></text>
</g>
<g >
<title>boost::lock_guard&lt;boost::mutex&gt;::~lock_guard (4,741,425 samples, 0.02%)</title><rect x="49.6" y="1157" width="0.3" height="15.0" fill="rgb(212,51,34)" rx="2" ry="2" />
<text  x="52.65" y="1167.5" ></text>
</g>
<g >
<title>ode::quickstep::dot6 (2,150,142 samples, 0.01%)</title><rect x="439.0" y="965" width="0.1" height="15.0" fill="rgb(246,82,32)" rx="2" ry="2" />
<text  x="442.03" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,243,735 samples, 0.01%)</title><rect x="266.8" y="901" width="0.1" height="15.0" fill="rgb(251,145,22)" rx="2" ry="2" />
<text  x="269.79" y="911.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (2,260,146 samples, 0.01%)</title><rect x="441.1" y="917" width="0.1" height="15.0" fill="rgb(213,26,26)" rx="2" ry="2" />
<text  x="444.09" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::push_back (17,937,189 samples, 0.07%)</title><rect x="693.9" y="901" width="0.8" height="15.0" fill="rgb(221,205,1)" rx="2" ry="2" />
<text  x="696.88" y="911.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator* (4,235,783 samples, 0.02%)</title><rect x="530.4" y="821" width="0.2" height="15.0" fill="rgb(237,132,29)" rx="2" ry="2" />
<text  x="533.38" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,281,711 samples, 0.01%)</title><rect x="841.9" y="901" width="0.2" height="15.0" fill="rgb(238,125,36)" rx="2" ry="2" />
<text  x="844.95" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (53,952,387 samples, 0.21%)</title><rect x="602.2" y="693" width="2.5" height="15.0" fill="rgb(215,229,10)" rx="2" ry="2" />
<text  x="605.15" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13,204,901 samples, 0.05%)</title><rect x="618.9" y="837" width="0.6" height="15.0" fill="rgb(215,7,20)" rx="2" ry="2" />
<text  x="621.90" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,697,692 samples, 0.04%)</title><rect x="853.8" y="933" width="0.5" height="15.0" fill="rgb(209,57,24)" rx="2" ry="2" />
<text  x="856.77" y="943.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::unique_lock (5,512,753 samples, 0.02%)</title><rect x="441.8" y="917" width="0.2" height="15.0" fill="rgb(245,222,11)" rx="2" ry="2" />
<text  x="444.75" y="927.5" ></text>
</g>
<g >
<title>std::get_if&lt;5ul, bool, char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, unsigned long, unsigned int, double, float, sdf::v9::Time, ignition::math::v6::Angle, ignition::math::v6::Color, ignition::math::v6::Vector2&lt;int&gt;, ignition::math::v6::Vector2&lt;double&gt;, ignition::math::v6::Vector3&lt;double&gt;, ignition::math::v6::Quaternion&lt;double&gt;, ignition::math::v6::Pose3&lt;double&gt; &gt; (9,043,456 samples, 0.04%)</title><rect x="44.8" y="1029" width="0.4" height="15.0" fill="rgb(228,162,33)" rx="2" ry="2" />
<text  x="47.75" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,496,532 samples, 0.10%)</title><rect x="11.4" y="1189" width="1.1" height="15.0" fill="rgb(220,171,10)" rx="2" ry="2" />
<text  x="14.36" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::variant&lt;bool, char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, unsigned long, unsigned int, double, float, sdf::v9::Time, ignition::math::v6::Angle, ignition::math::v6::Color, ignition::math::v6::Vector2&lt;int&gt;, ignition::math::v6::Vector2&lt;double&gt;, ignition::math::v6::Vector3&lt;double&gt;, ignition::math::v6::Quaternion&lt;double&gt;, ignition::math::v6::Pose3&lt;double&gt; &gt;&amp;&gt; (9,043,456 samples, 0.04%)</title><rect x="44.8" y="1013" width="0.4" height="15.0" fill="rgb(230,154,19)" rx="2" ry="2" />
<text  x="47.75" y="1023.5" ></text>
</g>
<g >
<title>std::get_if&lt;13ul, bool, char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, unsigned long, unsigned int, double, float, sdf::v9::Time, ignition::math::v6::Angle, ignition::math::v6::Color, ignition::math::v6::Vector2&lt;int&gt;, ignition::math::v6::Vector2&lt;double&gt;, ignition::math::v6::Vector3&lt;double&gt;, ignition::math::v6::Quaternion&lt;double&gt;, ignition::math::v6::Pose3&lt;double&gt; &gt; (3,903,482 samples, 0.02%)</title><rect x="29.8" y="1045" width="0.2" height="15.0" fill="rgb(215,50,38)" rx="2" ry="2" />
<text  x="32.81" y="1055.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (56,935,916 samples, 0.22%)</title><rect x="204.0" y="1237" width="2.7" height="15.0" fill="rgb(208,157,21)" rx="2" ry="2" />
<text  x="207.03" y="1247.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::operator (12,818,579 samples, 0.05%)</title><rect x="561.2" y="773" width="0.6" height="15.0" fill="rgb(227,82,39)" rx="2" ry="2" />
<text  x="564.19" y="783.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::SharedDtor (15,510,083 samples, 0.06%)</title><rect x="74.3" y="917" width="0.7" height="15.0" fill="rgb(230,226,0)" rx="2" ry="2" />
<text  x="77.32" y="927.5" ></text>
</g>
<g >
<title>gazebo::event::EventT&lt;void  (7,970,955 samples, 0.03%)</title><rect x="788.5" y="997" width="0.3" height="15.0" fill="rgb(221,157,16)" rx="2" ry="2" />
<text  x="791.46" y="1007.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::msgs::LinkData const&gt;::~shared_ptr (3,722,797 samples, 0.01%)</title><rect x="75.6" y="1141" width="0.2" height="15.0" fill="rgb(206,105,54)" rx="2" ry="2" />
<text  x="78.58" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,904 samples, 0.12%)</title><rect x="1181.6" y="1237" width="1.4" height="15.0" fill="rgb(212,102,40)" rx="2" ry="2" />
<text  x="1184.61" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,227,017 samples, 0.02%)</title><rect x="478.2" y="677" width="0.2" height="15.0" fill="rgb(216,66,37)" rx="2" ry="2" />
<text  x="481.16" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,865,199 samples, 0.01%)</title><rect x="32.8" y="997" width="0.2" height="15.0" fill="rgb(219,108,10)" rx="2" ry="2" />
<text  x="35.84" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,850,278 samples, 0.02%)</title><rect x="832.5" y="1061" width="0.2" height="15.0" fill="rgb(250,120,46)" rx="2" ry="2" />
<text  x="835.51" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,100,153 samples, 0.10%)</title><rect x="705.7" y="741" width="1.1" height="15.0" fill="rgb(208,173,26)" rx="2" ry="2" />
<text  x="708.65" y="751.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::lock (22,951,542 samples, 0.09%)</title><rect x="902.1" y="1205" width="1.1" height="15.0" fill="rgb(233,104,11)" rx="2" ry="2" />
<text  x="905.14" y="1215.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::Waitable,  (22,073,354 samples, 0.09%)</title><rect x="199.6" y="1061" width="1.1" height="15.0" fill="rgb(227,62,23)" rx="2" ry="2" />
<text  x="202.63" y="1071.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_service_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_service_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;decltype (3,116,103 samples, 0.01%)</title><rect x="201.2" y="1045" width="0.1" height="15.0" fill="rgb(235,166,13)" rx="2" ry="2" />
<text  x="204.20" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (4,741,781 samples, 0.02%)</title><rect x="826.2" y="1013" width="0.3" height="15.0" fill="rgb(224,125,26)" rx="2" ry="2" />
<text  x="829.24" y="1023.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::event::EventT&lt;void  (3,769,555 samples, 0.01%)</title><rect x="473.3" y="949" width="0.2" height="15.0" fill="rgb(221,7,50)" rx="2" ry="2" />
<text  x="476.34" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,597,363 samples, 0.01%)</title><rect x="86.1" y="1029" width="0.2" height="15.0" fill="rgb(216,83,1)" rx="2" ry="2" />
<text  x="89.09" y="1039.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::HasType (15,717,791 samples, 0.06%)</title><rect x="227.4" y="1013" width="0.8" height="15.0" fill="rgb(253,212,4)" rx="2" ry="2" />
<text  x="230.44" y="1023.5" ></text>
</g>
<g >
<title>google::protobuf::Message::GetTypeName[abi:cxx11] (6,131,012 samples, 0.02%)</title><rect x="216.7" y="1013" width="0.3" height="15.0" fill="rgb(225,6,37)" rx="2" ry="2" />
<text  x="219.74" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (47,267,486 samples, 0.19%)</title><rect x="739.3" y="1013" width="2.2" height="15.0" fill="rgb(235,78,13)" rx="2" ry="2" />
<text  x="742.25" y="1023.5" ></text>
</g>
<g >
<title>rclcpp::TimeSource::clock_cb (15,194,205 samples, 0.06%)</title><rect x="790.5" y="821" width="0.7" height="15.0" fill="rgb(210,148,44)" rx="2" ry="2" />
<text  x="793.48" y="831.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::Pose3 (18,295,956 samples, 0.07%)</title><rect x="580.3" y="805" width="0.9" height="15.0" fill="rgb(230,7,25)" rx="2" ry="2" />
<text  x="583.30" y="815.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5,311,916 samples, 0.02%)</title><rect x="907.6" y="1301" width="0.3" height="15.0" fill="rgb(220,72,6)" rx="2" ry="2" />
<text  x="910.64" y="1311.5" ></text>
</g>
<g >
<title>gazebo::physics::World::Update (342,496,076 samples, 1.35%)</title><rect x="773.0" y="1061" width="16.0" height="15.0" fill="rgb(248,217,11)" rx="2" ry="2" />
<text  x="776.03" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,596,349 samples, 0.01%)</title><rect x="220.3" y="773" width="0.2" height="15.0" fill="rgb(222,6,35)" rx="2" ry="2" />
<text  x="223.31" y="783.5" ></text>
</g>
<g >
<title>gazebo::util::IntrospectionManager::Update (8,540,773 samples, 0.03%)</title><rect x="743.0" y="1045" width="0.4" height="15.0" fill="rgb(251,210,28)" rx="2" ry="2" />
<text  x="746.04" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (43,104,486 samples, 0.17%)</title><rect x="1172.1" y="1157" width="2.0" height="15.0" fill="rgb(252,188,40)" rx="2" ry="2" />
<text  x="1175.13" y="1167.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator* (23,783,415 samples, 0.09%)</title><rect x="528.8" y="805" width="1.1" height="15.0" fill="rgb(209,177,40)" rx="2" ry="2" />
<text  x="531.82" y="815.5" ></text>
</g>
<g >
<title>[libgazebo_ode.so.11.10.1] (6,246,416 samples, 0.02%)</title><rect x="472.8" y="837" width="0.3" height="15.0" fill="rgb(240,125,25)" rx="2" ry="2" />
<text  x="475.76" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (67,128,036 samples, 0.26%)</title><rect x="738.3" y="1029" width="3.2" height="15.0" fill="rgb(241,219,37)" rx="2" ry="2" />
<text  x="741.33" y="1039.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::set&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::node_alloc (2,648,545 samples, 0.01%)</title><rect x="63.7" y="1125" width="0.1" height="15.0" fill="rgb(225,56,47)" rx="2" ry="2" />
<text  x="66.69" y="1135.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (3,782,285 samples, 0.01%)</title><rect x="20.5" y="1157" width="0.2" height="15.0" fill="rgb(216,78,43)" rx="2" ry="2" />
<text  x="23.55" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (186,914,812 samples, 0.74%)</title><rect x="878.4" y="1045" width="8.7" height="15.0" fill="rgb(231,154,3)" rx="2" ry="2" />
<text  x="881.43" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,156,643 samples, 0.01%)</title><rect x="689.4" y="789" width="0.1" height="15.0" fill="rgb(248,123,41)" rx="2" ry="2" />
<text  x="692.38" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,646 samples, 0.01%)</title><rect x="724.0" y="773" width="0.1" height="15.0" fill="rgb(226,166,40)" rx="2" ry="2" />
<text  x="727.02" y="783.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (4,338,718 samples, 0.02%)</title><rect x="688.2" y="773" width="0.2" height="15.0" fill="rgb(250,168,26)" rx="2" ry="2" />
<text  x="691.23" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,574 samples, 0.12%)</title><rect x="145.5" y="1109" width="1.4" height="15.0" fill="rgb(245,61,28)" rx="2" ry="2" />
<text  x="148.53" y="1119.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_331 (5,074,314 samples, 0.02%)</title><rect x="440.3" y="933" width="0.2" height="15.0" fill="rgb(238,194,45)" rx="2" ry="2" />
<text  x="443.28" y="943.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::lock (12,733,516 samples, 0.05%)</title><rect x="722.4" y="837" width="0.5" height="15.0" fill="rgb(215,91,23)" rx="2" ry="2" />
<text  x="725.35" y="847.5" ></text>
</g>
<g >
<title>gazebo::sensors::ImuSensor::AngularVelocity (4,610,904 samples, 0.02%)</title><rect x="21.5" y="1029" width="0.3" height="15.0" fill="rgb(217,159,19)" rx="2" ry="2" />
<text  x="24.54" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,574,391 samples, 0.04%)</title><rect x="666.4" y="837" width="0.5" height="15.0" fill="rgb(219,25,38)" rx="2" ry="2" />
<text  x="669.44" y="847.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, hardware_interface::ResourceStorage*, std::default_delete&lt;hardware_interface::ResourceStorage&gt; &gt; (3,543,677 samples, 0.01%)</title><rect x="520.2" y="837" width="0.1" height="15.0" fill="rgb(237,174,49)" rx="2" ry="2" />
<text  x="523.18" y="847.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Model&gt;::~shared_ptr (3,832,789 samples, 0.02%)</title><rect x="540.5" y="773" width="0.1" height="15.0" fill="rgb(245,154,3)" rx="2" ry="2" />
<text  x="543.46" y="783.5" ></text>
</g>
<g >
<title>IceMaths::InvertPRMatrix (4,050,517 samples, 0.02%)</title><rect x="102.4" y="1285" width="0.2" height="15.0" fill="rgb(250,175,20)" rx="2" ry="2" />
<text  x="105.44" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,491,228 samples, 0.06%)</title><rect x="457.0" y="901" width="0.7" height="15.0" fill="rgb(244,42,30)" rx="2" ry="2" />
<text  x="460.02" y="911.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Inverse (2,197,921 samples, 0.01%)</title><rect x="664.9" y="901" width="0.1" height="15.0" fill="rgb(226,162,0)" rx="2" ry="2" />
<text  x="667.94" y="911.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo::ServerPrivate*, std::default_delete&lt;gazebo::ServerPrivate&gt; &gt; (2,310,008 samples, 0.01%)</title><rect x="906.6" y="1205" width="0.1" height="15.0" fill="rgb(233,113,35)" rx="2" ry="2" />
<text  x="909.57" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,829,890 samples, 0.02%)</title><rect x="854.8" y="1061" width="0.2" height="15.0" fill="rgb(252,51,2)" rx="2" ry="2" />
<text  x="857.78" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,932,420 samples, 0.02%)</title><rect x="604.5" y="549" width="0.2" height="15.0" fill="rgb(250,110,14)" rx="2" ry="2" />
<text  x="607.48" y="559.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Joint&gt;::operator bool (3,806,513 samples, 0.02%)</title><rect x="525.5" y="853" width="0.2" height="15.0" fill="rgb(244,211,13)" rx="2" ry="2" />
<text  x="528.53" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,350,425 samples, 0.03%)</title><rect x="707.0" y="885" width="0.3" height="15.0" fill="rgb(231,156,3)" rx="2" ry="2" />
<text  x="710.00" y="895.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;gazebo::sensors::SimTimeEvent*&gt;::operator++ (3,757,086 samples, 0.01%)</title><rect x="621.7" y="933" width="0.1" height="15.0" fill="rgb(222,84,42)" rx="2" ry="2" />
<text  x="624.65" y="943.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::PublishImpl (39,829,307 samples, 0.16%)</title><rect x="30.6" y="1141" width="1.9" height="15.0" fill="rgb(249,33,18)" rx="2" ry="2" />
<text  x="33.61" y="1151.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Vector3 (3,886,445 samples, 0.02%)</title><rect x="610.0" y="805" width="0.2" height="15.0" fill="rgb(213,52,13)" rx="2" ry="2" />
<text  x="612.97" y="815.5" ></text>
</g>
<g >
<title>dGeomMoved (33,907,835 samples, 0.13%)</title><rect x="441.3" y="933" width="1.6" height="15.0" fill="rgb(253,181,22)" rx="2" ry="2" />
<text  x="444.28" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,368,669 samples, 0.03%)</title><rect x="833.6" y="1013" width="0.3" height="15.0" fill="rgb(231,67,1)" rx="2" ry="2" />
<text  x="836.60" y="1023.5" ></text>
</g>
<g >
<title>_dSafeNormalize3 (2,439,912 samples, 0.01%)</title><rect x="251.8" y="917" width="0.1" height="15.0" fill="rgb(243,125,37)" rx="2" ry="2" />
<text  x="254.80" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (92,542,284 samples, 0.37%)</title><rect x="54.7" y="805" width="4.3" height="15.0" fill="rgb(215,115,24)" rx="2" ry="2" />
<text  x="57.65" y="815.5" ></text>
</g>
<g >
<title>_dCalcVectorCross3 (2,199,122 samples, 0.01%)</title><rect x="249.2" y="917" width="0.1" height="15.0" fill="rgb(210,162,31)" rx="2" ry="2" />
<text  x="252.18" y="927.5" ></text>
</g>
<g >
<title>dds_get_matched_subscription_data (18,017,157 samples, 0.07%)</title><rect x="1156.3" y="1301" width="0.8" height="15.0" fill="rgb(244,182,1)" rx="2" ry="2" />
<text  x="1159.28" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (225,959,060 samples, 0.89%)</title><rect x="568.0" y="773" width="10.5" height="15.0" fill="rgb(221,72,11)" rx="2" ry="2" />
<text  x="571.02" y="783.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2,350,769 samples, 0.01%)</title><rect x="731.7" y="1029" width="0.1" height="15.0" fill="rgb(228,117,29)" rx="2" ry="2" />
<text  x="734.70" y="1039.5" ></text>
</g>
<g >
<title>_dSetZero (2,168,182 samples, 0.01%)</title><rect x="439.8" y="949" width="0.1" height="15.0" fill="rgb(236,121,16)" rx="2" ry="2" />
<text  x="442.77" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,740,333 samples, 0.09%)</title><rect x="477.3" y="837" width="1.1" height="15.0" fill="rgb(235,146,49)" rx="2" ry="2" />
<text  x="480.30" y="847.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::CoordPositionAdd (18,049,324 samples, 0.07%)</title><rect x="40.1" y="1125" width="0.8" height="15.0" fill="rgb(240,133,31)" rx="2" ry="2" />
<text  x="43.09" y="1135.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategy::MemoryStrategy::get_group_by_subscription (7,281,247 samples, 0.03%)</title><rect x="791.2" y="997" width="0.3" height="15.0" fill="rgb(254,18,15)" rx="2" ry="2" />
<text  x="794.19" y="1007.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (20,830,968 samples, 0.08%)</title><rect x="13.6" y="1077" width="0.9" height="15.0" fill="rgb(239,19,33)" rx="2" ry="2" />
<text  x="16.55" y="1087.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::deallocate (5,626,484 samples, 0.02%)</title><rect x="677.7" y="853" width="0.3" height="15.0" fill="rgb(206,192,48)" rx="2" ry="2" />
<text  x="680.75" y="863.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (3,821,084 samples, 0.02%)</title><rect x="500.4" y="837" width="0.2" height="15.0" fill="rgb(252,136,7)" rx="2" ry="2" />
<text  x="503.41" y="847.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (4,108,094 samples, 0.02%)</title><rect x="472.4" y="757" width="0.2" height="15.0" fill="rgb(232,91,2)" rx="2" ry="2" />
<text  x="475.39" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,154,483 samples, 0.01%)</title><rect x="724.5" y="741" width="0.1" height="15.0" fill="rgb(217,85,46)" rx="2" ry="2" />
<text  x="727.51" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;gazebo::physics::ContactPublisher*, std::allocator&lt;gazebo::physics::ContactPublisher*&gt; &gt;::vector (6,218,455 samples, 0.02%)</title><rect x="259.5" y="997" width="0.3" height="15.0" fill="rgb(240,55,42)" rx="2" ry="2" />
<text  x="262.49" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,388,879 samples, 0.06%)</title><rect x="379.6" y="805" width="0.7" height="15.0" fill="rgb(215,157,45)" rx="2" ry="2" />
<text  x="382.61" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,958,587 samples, 0.02%)</title><rect x="851.4" y="1109" width="0.2" height="15.0" fill="rgb(212,178,47)" rx="2" ry="2" />
<text  x="854.38" y="1119.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;*, geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;*, std::allocator&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; (10,334,307 samples, 0.04%)</title><rect x="693.3" y="837" width="0.5" height="15.0" fill="rgb(207,32,41)" rx="2" ry="2" />
<text  x="696.30" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::resize (21,925,758 samples, 0.09%)</title><rect x="506.4" y="869" width="1.0" height="15.0" fill="rgb(247,189,29)" rx="2" ry="2" />
<text  x="509.39" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (34,769,553 samples, 0.14%)</title><rect x="1172.5" y="1109" width="1.6" height="15.0" fill="rgb(251,58,26)" rx="2" ry="2" />
<text  x="1175.52" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,904 samples, 0.12%)</title><rect x="1181.6" y="1269" width="1.4" height="15.0" fill="rgb(248,106,27)" rx="2" ry="2" />
<text  x="1184.61" y="1279.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10,507,959 samples, 0.04%)</title><rect x="688.6" y="869" width="0.5" height="15.0" fill="rgb(231,122,7)" rx="2" ry="2" />
<text  x="691.62" y="879.5" ></text>
</g>
<g >
<title>[librclcpp.so] (7,017,392 samples, 0.03%)</title><rect x="790.9" y="741" width="0.3" height="15.0" fill="rgb(226,164,0)" rx="2" ry="2" />
<text  x="793.86" y="751.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedField&lt;double&gt;::Add (6,888,175 samples, 0.03%)</title><rect x="34.4" y="1141" width="0.3" height="15.0" fill="rgb(218,139,16)" rx="2" ry="2" />
<text  x="37.38" y="1151.5" ></text>
</g>
<g >
<title>control_msgs::msg::DynamicJointState_&lt;std::allocator&lt;void&gt; &gt;::~DynamicJointState_ (13,349,053 samples, 0.05%)</title><rect x="828.6" y="1141" width="0.6" height="15.0" fill="rgb(219,40,9)" rx="2" ry="2" />
<text  x="831.55" y="1151.5" ></text>
</g>
<g >
<title>dxSimpleSpace::cleanGeoms (80,790,297 samples, 0.32%)</title><rect x="240.5" y="981" width="3.8" height="15.0" fill="rgb(249,191,24)" rx="2" ry="2" />
<text  x="243.53" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;::_M_create_node&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; const&amp;&gt; (6,736,317 samples, 0.03%)</title><rect x="84.6" y="1029" width="0.3" height="15.0" fill="rgb(208,44,32)" rx="2" ry="2" />
<text  x="87.58" y="1039.5" ></text>
</g>
<g >
<title>dMultiplyHelper1_331 (10,881,805 samples, 0.04%)</title><rect x="267.0" y="933" width="0.5" height="15.0" fill="rgb(253,206,13)" rx="2" ry="2" />
<text  x="269.99" y="943.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (4,097,646 samples, 0.02%)</title><rect x="639.2" y="901" width="0.1" height="15.0" fill="rgb(239,0,26)" rx="2" ry="2" />
<text  x="642.15" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,762,331 samples, 0.01%)</title><rect x="1174.1" y="1269" width="0.2" height="15.0" fill="rgb(229,27,2)" rx="2" ry="2" />
<text  x="1177.14" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,910,423 samples, 0.01%)</title><rect x="779.1" y="757" width="0.1" height="15.0" fill="rgb(250,215,7)" rx="2" ry="2" />
<text  x="782.11" y="767.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (12,475,182 samples, 0.05%)</title><rect x="559.9" y="741" width="0.6" height="15.0" fill="rgb(247,44,3)" rx="2" ry="2" />
<text  x="562.93" y="751.5" ></text>
</g>
<g >
<title>boost::unordered::unordered_set&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt;::begin (2,529,277 samples, 0.01%)</title><rect x="63.6" y="1173" width="0.1" height="15.0" fill="rgb(224,4,7)" rx="2" ry="2" />
<text  x="66.57" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,071,908 samples, 0.06%)</title><rect x="709.0" y="837" width="0.7" height="15.0" fill="rgb(253,132,7)" rx="2" ry="2" />
<text  x="712.04" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::resize (4,047,910 samples, 0.02%)</title><rect x="777.0" y="869" width="0.2" height="15.0" fill="rgb(240,133,30)" rx="2" ry="2" />
<text  x="780.03" y="879.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt; &gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;*&gt; (8,433,096 samples, 0.03%)</title><rect x="688.0" y="837" width="0.4" height="15.0" fill="rgb(218,50,18)" rx="2" ry="2" />
<text  x="691.04" y="847.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4,224,317 samples, 0.02%)</title><rect x="496.9" y="837" width="0.2" height="15.0" fill="rgb(210,218,22)" rx="2" ry="2" />
<text  x="499.89" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt;::construct&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (4,041,851 samples, 0.02%)</title><rect x="592.4" y="693" width="0.2" height="15.0" fill="rgb(215,57,0)" rx="2" ry="2" />
<text  x="595.44" y="703.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::CollisionCallback (117,905,816 samples, 0.47%)</title><rect x="234.7" y="981" width="5.4" height="15.0" fill="rgb(231,26,18)" rx="2" ry="2" />
<text  x="237.66" y="991.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Quaternion (13,898,635 samples, 0.05%)</title><rect x="581.3" y="805" width="0.7" height="15.0" fill="rgb(249,159,3)" rx="2" ry="2" />
<text  x="584.33" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,143,840 samples, 0.05%)</title><rect x="871.4" y="1189" width="0.6" height="15.0" fill="rgb(238,25,46)" rx="2" ry="2" />
<text  x="874.45" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::~vector (25,873,587 samples, 0.10%)</title><rect x="678.0" y="901" width="1.2" height="15.0" fill="rgb(207,106,22)" rx="2" ry="2" />
<text  x="681.01" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,156,643 samples, 0.01%)</title><rect x="689.4" y="725" width="0.1" height="15.0" fill="rgb(222,214,8)" rx="2" ry="2" />
<text  x="692.38" y="735.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (71,625,986 samples, 0.28%)</title><rect x="21.1" y="1109" width="3.4" height="15.0" fill="rgb(218,132,34)" rx="2" ry="2" />
<text  x="24.15" y="1119.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_Vector_base (4,002,241 samples, 0.02%)</title><rect x="769.7" y="1029" width="0.2" height="15.0" fill="rgb(210,157,27)" rx="2" ry="2" />
<text  x="772.71" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt;::operator* (2,210,478 samples, 0.01%)</title><rect x="671.8" y="853" width="0.1" height="15.0" fill="rgb(245,117,10)" rx="2" ry="2" />
<text  x="674.76" y="863.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::shared_ptr&lt;rcl_service_t const&gt;*&gt; (4,016,876 samples, 0.02%)</title><rect x="202.0" y="981" width="0.2" height="15.0" fill="rgb(253,81,51)" rx="2" ry="2" />
<text  x="204.99" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_realloc_insert&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; const&amp;&gt; (14,782,730 samples, 0.06%)</title><rect x="588.0" y="725" width="0.6" height="15.0" fill="rgb(209,227,48)" rx="2" ry="2" />
<text  x="590.96" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::emplace_back&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (5,998,723 samples, 0.02%)</title><rect x="586.5" y="693" width="0.2" height="15.0" fill="rgb(232,8,33)" rx="2" ry="2" />
<text  x="589.47" y="703.5" ></text>
</g>
<g >
<title>gazebo::msgs::Quaternion::MergeFrom (2,996,931 samples, 0.01%)</title><rect x="31.0" y="1077" width="0.1" height="15.0" fill="rgb(224,112,7)" rx="2" ry="2" />
<text  x="33.98" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,908,166 samples, 0.20%)</title><rect x="915.4" y="1093" width="2.3" height="15.0" fill="rgb(254,177,21)" rx="2" ry="2" />
<text  x="918.36" y="1103.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (2,163,391 samples, 0.01%)</title><rect x="527.5" y="741" width="0.1" height="15.0" fill="rgb(217,135,3)" rx="2" ry="2" />
<text  x="530.50" y="751.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5,955,155 samples, 0.02%)</title><rect x="682.3" y="885" width="0.3" height="15.0" fill="rgb(234,23,21)" rx="2" ry="2" />
<text  x="685.29" y="895.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::SubscriptionBase,  (4,775,011 samples, 0.02%)</title><rect x="791.8" y="917" width="0.2" height="15.0" fill="rgb(239,205,12)" rx="2" ry="2" />
<text  x="794.78" y="927.5" ></text>
</g>
<g >
<title>gazebo::physics::RayShape::SetLength (8,969,198 samples, 0.04%)</title><rect x="43.0" y="1141" width="0.4" height="15.0" fill="rgb(214,112,25)" rx="2" ry="2" />
<text  x="45.97" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,385,752 samples, 0.05%)</title><rect x="830.5" y="1029" width="0.5" height="15.0" fill="rgb(239,10,53)" rx="2" ry="2" />
<text  x="833.45" y="1039.5" ></text>
</g>
<g >
<title>dJointGetHingeAngle (11,488,975 samples, 0.05%)</title><rect x="518.6" y="821" width="0.5" height="15.0" fill="rgb(249,11,26)" rx="2" ry="2" />
<text  x="521.60" y="831.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::shared_ptr&lt;rcl_timer_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_timer_t const&gt; &gt; &gt;::_M_get_Tp_allocator (3,404,176 samples, 0.01%)</title><rect x="202.2" y="1029" width="0.1" height="15.0" fill="rgb(229,23,49)" rx="2" ry="2" />
<text  x="205.18" y="1039.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::release (5,414,402 samples, 0.02%)</title><rect x="31.4" y="1061" width="0.2" height="15.0" fill="rgb(212,136,23)" rx="2" ry="2" />
<text  x="34.35" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,597,363 samples, 0.01%)</title><rect x="86.1" y="1093" width="0.2" height="15.0" fill="rgb(239,116,12)" rx="2" ry="2" />
<text  x="89.09" y="1103.5" ></text>
</g>
<g >
<title>boost::relaxed_get&lt;std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::PointCloud_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::PointCloud2_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::Range_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt; &gt; (3,946,163 samples, 0.02%)</title><rect x="73.3" y="997" width="0.1" height="15.0" fill="rgb(219,213,27)" rx="2" ry="2" />
<text  x="76.27" y="1007.5" ></text>
</g>
<g >
<title>gazebo::msgs::Quaternion::Quaternion (6,623,057 samples, 0.03%)</title><rect x="27.9" y="1157" width="0.3" height="15.0" fill="rgb(239,183,31)" rx="2" ry="2" />
<text  x="30.90" y="1167.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (82,914,669 samples, 0.33%)</title><rect x="789.7" y="1205" width="3.8" height="15.0" fill="rgb(207,4,6)" rx="2" ry="2" />
<text  x="792.65" y="1215.5" ></text>
</g>
<g >
<title>boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo_ros2_control::GazeboRosControlPrivate&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo_ros2_control::GazeboRosControlPrivate*&gt; &gt; &gt;::operator (2,731,824,702 samples, 10.78%)</title><rect x="492.4" y="981" width="127.2" height="15.0" fill="rgb(218,137,20)" rx="2" ry="2" />
<text  x="495.38" y="991.5" >boost::_bi::bin..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op&lt;boost::asio::const_buffers_1, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (28,915,076 samples, 0.11%)</title><rect x="13.6" y="1157" width="1.3" height="15.0" fill="rgb(240,92,47)" rx="2" ry="2" />
<text  x="16.55" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,032,103 samples, 0.02%)</title><rect x="831.1" y="1029" width="0.3" height="15.0" fill="rgb(246,41,9)" rx="2" ry="2" />
<text  x="834.09" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (7,455,204 samples, 0.03%)</title><rect x="856.8" y="1045" width="0.3" height="15.0" fill="rgb(233,17,49)" rx="2" ry="2" />
<text  x="859.76" y="1055.5" ></text>
</g>
<g >
<title>dxTriMesh::computeAABB (11,973,920 samples, 0.05%)</title><rect x="243.5" y="933" width="0.6" height="15.0" fill="rgb(214,48,24)" rx="2" ry="2" />
<text  x="246.55" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase_at_end (3,521,485 samples, 0.01%)</title><rect x="904.1" y="1221" width="0.2" height="15.0" fill="rgb(222,62,45)" rx="2" ry="2" />
<text  x="907.11" y="1231.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (2,416,283 samples, 0.01%)</title><rect x="592.9" y="709" width="0.1" height="15.0" fill="rgb(211,164,27)" rx="2" ry="2" />
<text  x="595.93" y="719.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;*&gt; (8,387,558 samples, 0.03%)</title><rect x="825.3" y="1093" width="0.4" height="15.0" fill="rgb(241,209,44)" rx="2" ry="2" />
<text  x="828.34" y="1103.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14,610,771 samples, 0.06%)</title><rect x="484.3" y="1013" width="0.7" height="15.0" fill="rgb(211,39,50)" rx="2" ry="2" />
<text  x="487.31" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (45,695,582 samples, 0.18%)</title><rect x="1152.9" y="997" width="2.1" height="15.0" fill="rgb(227,171,39)" rx="2" ry="2" />
<text  x="1155.87" y="1007.5" ></text>
</g>
<g >
<title>gazebo::transport::Connection::OnWrite (17,469,504 samples, 0.07%)</title><rect x="13.7" y="917" width="0.8" height="15.0" fill="rgb(224,133,8)" rx="2" ry="2" />
<text  x="16.71" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,143,840 samples, 0.05%)</title><rect x="871.4" y="1221" width="0.6" height="15.0" fill="rgb(215,210,0)" rx="2" ry="2" />
<text  x="874.45" y="1231.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (14,728,838 samples, 0.06%)</title><rect x="847.7" y="1125" width="0.7" height="15.0" fill="rgb(221,32,4)" rx="2" ry="2" />
<text  x="850.74" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,154,483 samples, 0.01%)</title><rect x="724.5" y="901" width="0.1" height="15.0" fill="rgb(213,206,11)" rx="2" ry="2" />
<text  x="727.51" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::max_size (2,296,238 samples, 0.01%)</title><rect x="507.3" y="853" width="0.1" height="15.0" fill="rgb(225,1,54)" rx="2" ry="2" />
<text  x="510.30" y="863.5" ></text>
</g>
<g >
<title>controller_manager::ControllerManager::write (1,936,963,124 samples, 7.65%)</title><rect x="523.6" y="917" width="90.2" height="15.0" fill="rgb(215,40,43)" rx="2" ry="2" />
<text  x="526.62" y="927.5" >controller..</text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator= (3,848,659 samples, 0.02%)</title><rect x="29.6" y="1061" width="0.2" height="15.0" fill="rgb(251,75,21)" rx="2" ry="2" />
<text  x="32.63" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt;::erase (24,906,178 samples, 0.10%)</title><rect x="804.7" y="1029" width="1.2" height="15.0" fill="rgb(205,194,6)" rx="2" ry="2" />
<text  x="807.75" y="1039.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::FindAllConnectedLinksHelper (215,832,745 samples, 0.85%)</title><rect x="583.6" y="789" width="10.1" height="15.0" fill="rgb(254,201,22)" rx="2" ry="2" />
<text  x="586.64" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (72,671,362 samples, 0.29%)</title><rect x="475.0" y="981" width="3.4" height="15.0" fill="rgb(238,221,18)" rx="2" ry="2" />
<text  x="477.97" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (2,188,210 samples, 0.01%)</title><rect x="497.9" y="885" width="0.1" height="15.0" fill="rgb(250,136,14)" rx="2" ry="2" />
<text  x="500.93" y="895.5" ></text>
</g>
<g >
<title>gazebo::msgs::WorldStatistics::Clear (2,159,705 samples, 0.01%)</title><rect x="771.6" y="1045" width="0.1" height="15.0" fill="rgb(228,74,3)" rx="2" ry="2" />
<text  x="774.64" y="1055.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2,519,689 samples, 0.01%)</title><rect x="80.3" y="981" width="0.1" height="15.0" fill="rgb(205,173,41)" rx="2" ry="2" />
<text  x="83.27" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,060,062 samples, 0.12%)</title><rect x="479.7" y="997" width="1.4" height="15.0" fill="rgb(251,84,54)" rx="2" ry="2" />
<text  x="482.68" y="1007.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (40,378,635 samples, 0.16%)</title><rect x="673.6" y="789" width="1.9" height="15.0" fill="rgb(208,214,13)" rx="2" ry="2" />
<text  x="676.62" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,694,278 samples, 0.06%)</title><rect x="709.7" y="901" width="0.7" height="15.0" fill="rgb(224,8,14)" rx="2" ry="2" />
<text  x="712.70" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,829,890 samples, 0.02%)</title><rect x="854.8" y="1093" width="0.2" height="15.0" fill="rgb(221,10,19)" rx="2" ry="2" />
<text  x="857.78" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="965" width="0.2" height="15.0" fill="rgb(234,147,34)" rx="2" ry="2" />
<text  x="849.22" y="975.5" ></text>
</g>
<g >
<title>swap_callback (19,240,530 samples, 0.08%)</title><rect x="237.4" y="853" width="0.9" height="15.0" fill="rgb(239,31,3)" rx="2" ry="2" />
<text  x="240.37" y="863.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (82,914,669 samples, 0.33%)</title><rect x="789.7" y="1221" width="3.8" height="15.0" fill="rgb(224,214,53)" rx="2" ry="2" />
<text  x="792.65" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (78,784,650 samples, 0.31%)</title><rect x="1185.6" y="1109" width="3.7" height="15.0" fill="rgb(212,200,34)" rx="2" ry="2" />
<text  x="1188.62" y="1119.5" ></text>
</g>
<g >
<title>[libgazebo_hardware_plugins.so] (8,688,111 samples, 0.03%)</title><rect x="524.0" y="869" width="0.4" height="15.0" fill="rgb(215,98,46)" rx="2" ry="2" />
<text  x="526.99" y="879.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::UpdatePhysics (4,085,576,637 samples, 16.13%)</title><rect x="261.7" y="1045" width="190.3" height="15.0" fill="rgb(232,6,36)" rx="2" ry="2" />
<text  x="264.74" y="1055.5" >gazebo::physics::ODEPhys..</text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_service_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; &gt;::erase (11,842,706 samples, 0.05%)</title><rect x="201.6" y="1061" width="0.6" height="15.0" fill="rgb(228,217,19)" rx="2" ry="2" />
<text  x="204.62" y="1071.5" ></text>
</g>
<g >
<title>google::protobuf::Message::Message (3,782,285 samples, 0.01%)</title><rect x="27.7" y="1141" width="0.2" height="15.0" fill="rgb(231,11,35)" rx="2" ry="2" />
<text  x="30.72" y="1151.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (16,230,432 samples, 0.06%)</title><rect x="917.7" y="1301" width="0.8" height="15.0" fill="rgb(216,148,4)" rx="2" ry="2" />
<text  x="920.73" y="1311.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (10,600,686 samples, 0.04%)</title><rect x="902.7" y="1189" width="0.5" height="15.0" fill="rgb(223,215,13)" rx="2" ry="2" />
<text  x="905.71" y="1199.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::~unique_lock (5,734,084 samples, 0.02%)</title><rect x="900.2" y="1173" width="0.2" height="15.0" fill="rgb(252,161,19)" rx="2" ry="2" />
<text  x="903.17" y="1183.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Collision&gt;::shared_ptr&lt;gazebo::physics::Base&gt; (22,498,650 samples, 0.09%)</title><rect x="549.2" y="757" width="1.0" height="15.0" fill="rgb(245,134,45)" rx="2" ry="2" />
<text  x="552.16" y="767.5" ></text>
</g>
<g >
<title>boost::unordered::detail::functions&lt;boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt;::current_functions (2,184,044 samples, 0.01%)</title><rect x="215.9" y="901" width="0.1" height="15.0" fill="rgb(220,156,11)" rx="2" ry="2" />
<text  x="218.88" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEJoint::SetPosition (7,788,287 samples, 0.03%)</title><rect x="777.3" y="853" width="0.4" height="15.0" fill="rgb(229,170,24)" rx="2" ry="2" />
<text  x="780.35" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,154,483 samples, 0.01%)</title><rect x="724.5" y="869" width="0.1" height="15.0" fill="rgb(233,224,31)" rx="2" ry="2" />
<text  x="727.51" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3,334,647 samples, 0.01%)</title><rect x="20.4" y="1157" width="0.1" height="15.0" fill="rgb(213,172,13)" rx="2" ry="2" />
<text  x="23.39" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,363,069 samples, 0.03%)</title><rect x="40.1" y="1013" width="0.3" height="15.0" fill="rgb(237,113,6)" rx="2" ry="2" />
<text  x="43.09" y="1023.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (4,381,989 samples, 0.02%)</title><rect x="266.8" y="933" width="0.2" height="15.0" fill="rgb(252,32,14)" rx="2" ry="2" />
<text  x="269.79" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;boost::shared_ptr&lt;gazebo::transport::Connection&gt; &gt;::_M_addr (2,605,039 samples, 0.01%)</title><rect x="87.5" y="1157" width="0.1" height="15.0" fill="rgb(218,213,52)" rx="2" ry="2" />
<text  x="90.52" y="1167.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::RotateVector (5,907,128 samples, 0.02%)</title><rect x="582.0" y="805" width="0.3" height="15.0" fill="rgb(252,38,32)" rx="2" ry="2" />
<text  x="584.98" y="815.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::end (5,804,031 samples, 0.02%)</title><rect x="667.3" y="901" width="0.3" height="15.0" fill="rgb(249,82,28)" rx="2" ry="2" />
<text  x="670.33" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;gazebo::sensors::Sensor&gt;, std::allocator&lt;std::shared_ptr&lt;gazebo::sensors::Sensor&gt; &gt; &gt;::size (3,070,428 samples, 0.01%)</title><rect x="904.4" y="1221" width="0.2" height="15.0" fill="rgb(213,81,44)" rx="2" ry="2" />
<text  x="907.44" y="1231.5" ></text>
</g>
<g >
<title>dMultiplyHelper1_331 (6,337,944 samples, 0.03%)</title><rect x="242.6" y="885" width="0.3" height="15.0" fill="rgb(220,203,38)" rx="2" ry="2" />
<text  x="245.59" y="895.5" ></text>
</g>
<g >
<title>[libgazebo_ros_state.so] (7,865,248 samples, 0.03%)</title><rect x="658.3" y="885" width="0.4" height="15.0" fill="rgb(232,28,13)" rx="2" ry="2" />
<text  x="661.31" y="895.5" ></text>
</g>
<g >
<title>ComputeRows (41,085,217 samples, 0.16%)</title><rect x="746.8" y="949" width="1.9" height="15.0" fill="rgb(244,158,16)" rx="2" ry="2" />
<text  x="749.80" y="959.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::FindAllConnectedLinksHelper (13,680,016 samples, 0.05%)</title><rect x="775.2" y="789" width="0.6" height="15.0" fill="rgb(223,81,32)" rx="2" ry="2" />
<text  x="778.16" y="799.5" ></text>
</g>
<g >
<title>hardware_interface::ResourceManager::write (1,931,144,665 samples, 7.62%)</title><rect x="523.8" y="901" width="89.9" height="15.0" fill="rgb(247,88,39)" rx="2" ry="2" />
<text  x="526.79" y="911.5" >hardware_i..</text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*&gt; (5,830,521 samples, 0.02%)</title><rect x="596.3" y="741" width="0.3" height="15.0" fill="rgb(213,23,37)" rx="2" ry="2" />
<text  x="599.33" y="751.5" ></text>
</g>
<g >
<title>rclcpp::add_will_underflow&lt;long&gt; (5,534,135 samples, 0.02%)</title><rect x="511.2" y="853" width="0.2" height="15.0" fill="rgb(242,109,39)" rx="2" ry="2" />
<text  x="514.16" y="863.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializeToString (2,272,626 samples, 0.01%)</title><rect x="81.8" y="1141" width="0.1" height="15.0" fill="rgb(226,109,34)" rx="2" ry="2" />
<text  x="84.76" y="1151.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt;::construct&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; (6,217,256 samples, 0.02%)</title><rect x="811.7" y="949" width="0.3" height="15.0" fill="rgb(232,83,23)" rx="2" ry="2" />
<text  x="814.69" y="959.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (4,100,578 samples, 0.02%)</title><rect x="270.4" y="933" width="0.2" height="15.0" fill="rgb(238,194,22)" rx="2" ry="2" />
<text  x="273.36" y="943.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (11,359,059 samples, 0.04%)</title><rect x="863.6" y="1157" width="0.5" height="15.0" fill="rgb(246,206,11)" rx="2" ry="2" />
<text  x="866.55" y="1167.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InternalMetadataWithArena::InternalMetadataWithArena (2,245,988 samples, 0.01%)</title><rect x="759.2" y="965" width="0.1" height="15.0" fill="rgb(211,128,27)" rx="2" ry="2" />
<text  x="762.17" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,067,708 samples, 0.05%)</title><rect x="12.9" y="1237" width="0.6" height="15.0" fill="rgb(212,181,20)" rx="2" ry="2" />
<text  x="15.89" y="1247.5" ></text>
</g>
<g >
<title>[librclcpp.so] (6,912,390 samples, 0.03%)</title><rect x="191.6" y="1077" width="0.4" height="15.0" fill="rgb(230,12,32)" rx="2" ry="2" />
<text  x="194.63" y="1087.5" ></text>
</g>
<g >
<title>dxProcessIslands (47,300,937 samples, 0.19%)</title><rect x="746.7" y="1013" width="2.2" height="15.0" fill="rgb(249,181,8)" rx="2" ry="2" />
<text  x="749.71" y="1023.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_service (12,564,770 samples, 0.05%)</title><rect x="794.2" y="997" width="0.5" height="15.0" fill="rgb(209,188,5)" rx="2" ry="2" />
<text  x="797.16" y="1007.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (3,894,456 samples, 0.02%)</title><rect x="186.3" y="1285" width="0.2" height="15.0" fill="rgb(222,9,30)" rx="2" ry="2" />
<text  x="189.29" y="1295.5" ></text>
</g>
<g >
<title>__lll_lock_wait (29,212,574 samples, 0.12%)</title><rect x="145.5" y="1285" width="1.4" height="15.0" fill="rgb(245,28,5)" rx="2" ry="2" />
<text  x="148.53" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (113,078,589 samples, 0.45%)</title><rect x="599.4" y="805" width="5.3" height="15.0" fill="rgb(248,25,5)" rx="2" ry="2" />
<text  x="602.40" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (208,288,275 samples, 0.82%)</title><rect x="568.8" y="725" width="9.7" height="15.0" fill="rgb(214,167,28)" rx="2" ry="2" />
<text  x="571.84" y="735.5" ></text>
</g>
<g >
<title>gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Publisher, unsigned int&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Publisher*&gt;, boost::arg&lt;1&gt; &gt; &gt;, gazebo::transport::Publisher&gt;::operator (13,929,078 samples, 0.05%)</title><rect x="13.7" y="853" width="0.7" height="15.0" fill="rgb(249,62,54)" rx="2" ry="2" />
<text  x="16.71" y="863.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_331 (4,378,770 samples, 0.02%)</title><rect x="440.1" y="933" width="0.2" height="15.0" fill="rgb(237,165,27)" rx="2" ry="2" />
<text  x="443.08" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="933" width="0.1" height="15.0" fill="rgb(232,1,25)" rx="2" ry="2" />
<text  x="839.31" y="943.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (2,383,998 samples, 0.01%)</title><rect x="826.8" y="949" width="0.1" height="15.0" fill="rgb(247,225,41)" rx="2" ry="2" />
<text  x="829.80" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt; &gt;::construct&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt;, geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt; const&amp;&gt; (6,062,007 samples, 0.02%)</title><rect x="694.0" y="869" width="0.2" height="15.0" fill="rgb(209,161,7)" rx="2" ry="2" />
<text  x="696.96" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::end (2,539,080 samples, 0.01%)</title><rect x="855.9" y="1125" width="0.1" height="15.0" fill="rgb(233,70,0)" rx="2" ry="2" />
<text  x="858.91" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,245,627 samples, 0.02%)</title><rect x="615.6" y="837" width="0.3" height="15.0" fill="rgb(249,97,39)" rx="2" ry="2" />
<text  x="618.62" y="847.5" ></text>
</g>
<g >
<title>ddsrt_mutex_unlock (5,923,328 samples, 0.02%)</title><rect x="159.7" y="1285" width="0.3" height="15.0" fill="rgb(212,108,24)" rx="2" ry="2" />
<text  x="162.75" y="1295.5" ></text>
</g>
<g >
<title>[libgazebo_msgs.so.11.10.1] (2,996,931 samples, 0.01%)</title><rect x="26.8" y="1141" width="0.1" height="15.0" fill="rgb(247,145,22)" rx="2" ry="2" />
<text  x="29.80" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="1109" width="0.2" height="15.0" fill="rgb(239,103,26)" rx="2" ry="2" />
<text  x="823.95" y="1119.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, int&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::_S_key (2,272,626 samples, 0.01%)</title><rect x="87.0" y="1077" width="0.1" height="15.0" fill="rgb(238,165,37)" rx="2" ry="2" />
<text  x="89.96" y="1087.5" ></text>
</g>
<g >
<title>rmw_wait (6,301,025 samples, 0.02%)</title><rect x="817.7" y="1045" width="0.3" height="15.0" fill="rgb(207,227,11)" rx="2" ry="2" />
<text  x="820.72" y="1055.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::construct&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (4,041,851 samples, 0.02%)</title><rect x="592.4" y="709" width="0.2" height="15.0" fill="rgb(223,136,23)" rx="2" ry="2" />
<text  x="595.44" y="719.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEJoint::ApplyStiffnessDamping (55,564,643 samples, 0.22%)</title><rect x="470.6" y="885" width="2.5" height="15.0" fill="rgb(252,225,2)" rx="2" ry="2" />
<text  x="473.56" y="895.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEHingeJoint::Anchor (11,878,407 samples, 0.05%)</title><rect x="579.7" y="805" width="0.6" height="15.0" fill="rgb(242,216,46)" rx="2" ry="2" />
<text  x="582.75" y="815.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::MoveFrame (7,788,287 samples, 0.03%)</title><rect x="777.3" y="821" width="0.4" height="15.0" fill="rgb(209,16,41)" rx="2" ry="2" />
<text  x="780.35" y="831.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (3,822,095 samples, 0.02%)</title><rect x="556.8" y="709" width="0.1" height="15.0" fill="rgb(205,148,47)" rx="2" ry="2" />
<text  x="559.76" y="719.5" ></text>
</g>
<g >
<title>gazebo::physics::Inertial::CoG (11,734,969 samples, 0.05%)</title><rect x="555.2" y="741" width="0.6" height="15.0" fill="rgb(225,98,41)" rx="2" ry="2" />
<text  x="558.21" y="751.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::sensors::RaySensorPrivate, std::default_delete&lt;gazebo::sensors::RaySensorPrivate&gt; &gt;::_M_ptr (3,941,521 samples, 0.02%)</title><rect x="46.2" y="1109" width="0.1" height="15.0" fill="rgb(239,228,26)" rx="2" ry="2" />
<text  x="49.15" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::~vector (3,831,059 samples, 0.02%)</title><rect x="590.7" y="757" width="0.2" height="15.0" fill="rgb(205,48,1)" rx="2" ry="2" />
<text  x="593.73" y="767.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (8,061,931 samples, 0.03%)</title><rect x="228.5" y="981" width="0.3" height="15.0" fill="rgb(206,189,18)" rx="2" ry="2" />
<text  x="231.46" y="991.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetByName (8,069,732 samples, 0.03%)</title><rect x="794.2" y="789" width="0.3" height="15.0" fill="rgb(208,85,52)" rx="2" ry="2" />
<text  x="797.16" y="799.5" ></text>
</g>
<g >
<title>boost::detail::atomic_decrement (4,102,814 samples, 0.02%)</title><rect x="218.8" y="965" width="0.2" height="15.0" fill="rgb(214,19,48)" rx="2" ry="2" />
<text  x="221.78" y="975.5" ></text>
</g>
<g >
<title>std::swap&lt;gazebo::physics::Base*&gt; (2,242,530 samples, 0.01%)</title><rect x="219.7" y="981" width="0.1" height="15.0" fill="rgb(241,36,20)" rx="2" ry="2" />
<text  x="222.74" y="991.5" ></text>
</g>
<g >
<title>std::map&lt;int, std::unique_ptr&lt;gazebo::event::EventT&lt;void  (4,294,443 samples, 0.02%)</title><rect x="473.1" y="965" width="0.2" height="15.0" fill="rgb(232,116,35)" rx="2" ry="2" />
<text  x="476.14" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt;::construct&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; (3,586,923 samples, 0.01%)</title><rect x="197.7" y="981" width="0.2" height="15.0" fill="rgb(215,128,46)" rx="2" ry="2" />
<text  x="200.72" y="991.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (5,727,014 samples, 0.02%)</title><rect x="495.7" y="837" width="0.3" height="15.0" fill="rgb(250,32,10)" rx="2" ry="2" />
<text  x="498.70" y="847.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::unique_lock (3,141,268 samples, 0.01%)</title><rect x="52.1" y="1189" width="0.1" height="15.0" fill="rgb(224,152,6)" rx="2" ry="2" />
<text  x="55.05" y="1199.5" ></text>
</g>
<g >
<title>getHingeAngle (14,121,526 samples, 0.06%)</title><rect x="272.4" y="949" width="0.7" height="15.0" fill="rgb(234,131,39)" rx="2" ry="2" />
<text  x="275.40" y="959.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEJoint::ApplyExplicitStiffnessDamping (51,740,283 samples, 0.20%)</title><rect x="470.6" y="869" width="2.5" height="15.0" fill="rgb(219,116,10)" rx="2" ry="2" />
<text  x="473.64" y="879.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::Update (7,970,955 samples, 0.03%)</title><rect x="788.5" y="1013" width="0.3" height="15.0" fill="rgb(250,146,25)" rx="2" ry="2" />
<text  x="791.46" y="1023.5" ></text>
</g>
<g >
<title>joint_state_broadcaster::JointStateBroadcaster::update (7,107,550 samples, 0.03%)</title><rect x="773.7" y="901" width="0.3" height="15.0" fill="rgb(238,76,40)" rx="2" ry="2" />
<text  x="776.65" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,579,944 samples, 0.03%)</title><rect x="75.2" y="981" width="0.4" height="15.0" fill="rgb(229,153,38)" rx="2" ry="2" />
<text  x="78.18" y="991.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, boost::shared_ptr&lt;gazebo::physics::Link&gt;*, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; (3,994,229 samples, 0.02%)</title><rect x="593.2" y="709" width="0.2" height="15.0" fill="rgb(250,146,16)" rx="2" ry="2" />
<text  x="596.21" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::end (4,025,175 samples, 0.02%)</title><rect x="696.3" y="917" width="0.2" height="15.0" fill="rgb(246,185,49)" rx="2" ry="2" />
<text  x="699.31" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, int&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::lower_bound (8,224,943 samples, 0.03%)</title><rect x="86.7" y="1109" width="0.4" height="15.0" fill="rgb(210,87,44)" rx="2" ry="2" />
<text  x="89.68" y="1119.5" ></text>
</g>
<g >
<title>rcl_context_get_instance_id (4,068,586 samples, 0.02%)</title><rect x="22.5" y="965" width="0.2" height="15.0" fill="rgb(205,166,41)" rx="2" ry="2" />
<text  x="25.55" y="975.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (6,056,415 samples, 0.02%)</title><rect x="677.2" y="885" width="0.3" height="15.0" fill="rgb(207,24,39)" rx="2" ry="2" />
<text  x="680.20" y="895.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10,437,020 samples, 0.04%)</title><rect x="908.1" y="1301" width="0.5" height="15.0" fill="rgb(248,216,2)" rx="2" ry="2" />
<text  x="911.10" y="1311.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_impl::_Vector_impl (6,105,224 samples, 0.02%)</title><rect x="514.7" y="837" width="0.3" height="15.0" fill="rgb(212,182,22)" rx="2" ry="2" />
<text  x="517.69" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::operator (4,203,159 samples, 0.02%)</title><rect x="43.7" y="1141" width="0.2" height="15.0" fill="rgb(241,168,6)" rx="2" ry="2" />
<text  x="46.66" y="1151.5" ></text>
</g>
<g >
<title>boost::function1&lt;void, unsigned int&gt;::assign_to&lt;gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Publisher, unsigned int&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Publisher*&gt;, boost::arg&lt;1&gt; &gt; &gt;, gazebo::transport::Publisher&gt; &gt; (7,002,136 samples, 0.03%)</title><rect x="78.5" y="1109" width="0.3" height="15.0" fill="rgb(238,228,37)" rx="2" ry="2" />
<text  x="81.52" y="1119.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (2,106,200,567 samples, 8.31%)</title><rect x="626.5" y="949" width="98.1" height="15.0" fill="rgb(254,57,33)" rx="2" ry="2" />
<text  x="629.52" y="959.5" >std::__invo..</text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (10,115,714 samples, 0.04%)</title><rect x="514.5" y="853" width="0.5" height="15.0" fill="rgb(246,210,18)" rx="2" ry="2" />
<text  x="517.51" y="863.5" ></text>
</g>
<g >
<title>__libc_start_main (387,936,503 samples, 1.53%)</title><rect x="889.5" y="1301" width="18.1" height="15.0" fill="rgb(225,205,32)" rx="2" ry="2" />
<text  x="892.49" y="1311.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (19,641,172 samples, 0.08%)</title><rect x="57.7" y="597" width="1.0" height="15.0" fill="rgb(219,63,6)" rx="2" ry="2" />
<text  x="60.74" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,646 samples, 0.01%)</title><rect x="724.0" y="789" width="0.1" height="15.0" fill="rgb(242,176,3)" rx="2" ry="2" />
<text  x="727.02" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (4,165,259 samples, 0.02%)</title><rect x="501.8" y="789" width="0.2" height="15.0" fill="rgb(238,0,46)" rx="2" ry="2" />
<text  x="504.76" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::SubscriptionBase,  (4,345,558 samples, 0.02%)</title><rect x="812.0" y="965" width="0.2" height="15.0" fill="rgb(225,29,38)" rx="2" ry="2" />
<text  x="814.98" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (7,857,844 samples, 0.03%)</title><rect x="856.1" y="1109" width="0.4" height="15.0" fill="rgb(228,181,43)" rx="2" ry="2" />
<text  x="859.09" y="1119.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::operator (3,766,232 samples, 0.01%)</title><rect x="585.5" y="677" width="0.1" height="15.0" fill="rgb(232,139,13)" rx="2" ry="2" />
<text  x="588.47" y="687.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (10,605,563 samples, 0.04%)</title><rect x="809.4" y="997" width="0.5" height="15.0" fill="rgb(212,161,11)" rx="2" ry="2" />
<text  x="812.39" y="1007.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (2,663,401 samples, 0.01%)</title><rect x="858.2" y="1141" width="0.1" height="15.0" fill="rgb(215,75,17)" rx="2" ry="2" />
<text  x="861.20" y="1151.5" ></text>
</g>
<g >
<title>sdf::v9::Element::GetName[abi:cxx11] (2,865,199 samples, 0.01%)</title><rect x="141.2" y="1269" width="0.1" height="15.0" fill="rgb(221,227,3)" rx="2" ry="2" />
<text  x="144.19" y="1279.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::CoordPositionAdd (14,240,551 samples, 0.06%)</title><rect x="605.0" y="789" width="0.7" height="15.0" fill="rgb(206,149,41)" rx="2" ry="2" />
<text  x="608.01" y="799.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::CoordRotationAdd (8,278,635 samples, 0.03%)</title><rect x="605.7" y="789" width="0.4" height="15.0" fill="rgb(212,67,51)" rx="2" ry="2" />
<text  x="608.67" y="799.5" ></text>
</g>
<g >
<title>collideAABBs (57,334,291 samples, 0.23%)</title><rect x="35.5" y="1013" width="2.6" height="15.0" fill="rgb(239,35,21)" rx="2" ry="2" />
<text  x="38.46" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (94,382,133 samples, 0.37%)</title><rect x="474.0" y="1013" width="4.4" height="15.0" fill="rgb(221,46,47)" rx="2" ry="2" />
<text  x="476.96" y="1023.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::lock (168,835,923 samples, 0.67%)</title><rect x="64.5" y="1141" width="7.9" height="15.0" fill="rgb(250,164,39)" rx="2" ry="2" />
<text  x="67.51" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,456,429 samples, 0.03%)</title><rect x="1182.7" y="965" width="0.3" height="15.0" fill="rgb(221,49,40)" rx="2" ry="2" />
<text  x="1185.67" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="1045" width="0.2" height="15.0" fill="rgb(225,85,1)" rx="2" ry="2" />
<text  x="823.95" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,210,290 samples, 0.01%)</title><rect x="855.7" y="1013" width="0.1" height="15.0" fill="rgb(219,211,47)" rx="2" ry="2" />
<text  x="858.73" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,952,087 samples, 0.02%)</title><rect x="487.2" y="949" width="0.2" height="15.0" fill="rgb(210,208,10)" rx="2" ry="2" />
<text  x="490.20" y="959.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::FindAllConnectedLinksHelper (44,918,386 samples, 0.18%)</title><rect x="584.9" y="741" width="2.1" height="15.0" fill="rgb(219,221,12)" rx="2" ry="2" />
<text  x="587.93" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (56,630,594 samples, 0.22%)</title><rect x="704.2" y="805" width="2.6" height="15.0" fill="rgb(254,201,22)" rx="2" ry="2" />
<text  x="707.18" y="815.5" ></text>
</g>
<g >
<title>ddsrt_avl_find_max (6,377,573 samples, 0.03%)</title><rect x="138.9" y="1269" width="0.3" height="15.0" fill="rgb(236,15,20)" rx="2" ry="2" />
<text  x="141.92" y="1279.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::sensors::RaySensorPrivate, std::default_delete&lt;gazebo::sensors::RaySensorPrivate&gt; &gt;::_M_ptr (5,350,012 samples, 0.02%)</title><rect x="45.9" y="1125" width="0.3" height="15.0" fill="rgb(235,62,35)" rx="2" ry="2" />
<text  x="48.90" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,426,497 samples, 0.08%)</title><rect x="379.5" y="917" width="1.0" height="15.0" fill="rgb(251,127,49)" rx="2" ry="2" />
<text  x="382.52" y="927.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::Publish&lt;gazebo::msgs::Contacts&gt; (5,860,635 samples, 0.02%)</title><rect x="780.8" y="1029" width="0.2" height="15.0" fill="rgb(214,53,29)" rx="2" ry="2" />
<text  x="783.77" y="1039.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (10,191,676 samples, 0.04%)</title><rect x="662.8" y="837" width="0.5" height="15.0" fill="rgb(244,132,40)" rx="2" ry="2" />
<text  x="665.81" y="847.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Quaternion (4,006,038 samples, 0.02%)</title><rect x="557.8" y="709" width="0.1" height="15.0" fill="rgb(227,204,10)" rx="2" ry="2" />
<text  x="560.76" y="719.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (82,914,669 samples, 0.33%)</title><rect x="789.7" y="1157" width="3.8" height="15.0" fill="rgb(218,95,20)" rx="2" ry="2" />
<text  x="792.65" y="1167.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rclcpp::Waitable&gt; const*, std::vector&lt;std::shared_ptr&lt;rclcpp::Waitable&gt;, std::allocator&lt;std::shared_ptr&lt;rclcpp::Waitable&gt; &gt; &gt; &gt;::base (7,010,976 samples, 0.03%)</title><rect x="812.9" y="1029" width="0.3" height="15.0" fill="rgb(222,210,2)" rx="2" ry="2" />
<text  x="815.86" y="1039.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (21,004,289 samples, 0.08%)</title><rect x="267.7" y="933" width="1.0" height="15.0" fill="rgb(243,27,0)" rx="2" ry="2" />
<text  x="270.73" y="943.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetId (4,261,701 samples, 0.02%)</title><rect x="760.4" y="1045" width="0.2" height="15.0" fill="rgb(253,12,28)" rx="2" ry="2" />
<text  x="763.44" y="1055.5" ></text>
</g>
<g >
<title>[libgazebo_ros_factory.so] (6,186,763 samples, 0.02%)</title><rect x="657.1" y="853" width="0.3" height="15.0" fill="rgb(243,39,41)" rx="2" ry="2" />
<text  x="660.10" y="863.5" ></text>
</g>
<g >
<title>ComputeRows (67,865,964 samples, 0.27%)</title><rect x="783.6" y="949" width="3.1" height="15.0" fill="rgb(253,174,24)" rx="2" ry="2" />
<text  x="786.56" y="959.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::get (7,630,911 samples, 0.03%)</title><rect x="547.7" y="741" width="0.3" height="15.0" fill="rgb(228,126,13)" rx="2" ry="2" />
<text  x="550.66" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,766,416 samples, 0.01%)</title><rect x="856.3" y="917" width="0.1" height="15.0" fill="rgb(206,149,29)" rx="2" ry="2" />
<text  x="859.26" y="927.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (12,516,779,584 samples, 49.40%)</title><rect x="206.7" y="1237" width="583.0" height="15.0" fill="rgb(207,101,41)" rx="2" ry="2" />
<text  x="209.69" y="1247.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void </text>
</g>
<g >
<title>__pthread_mutex_trylock (33,730,066 samples, 0.13%)</title><rect x="150.2" y="1285" width="1.6" height="15.0" fill="rgb(248,144,41)" rx="2" ry="2" />
<text  x="153.21" y="1295.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::mutable_position (6,092,846 samples, 0.02%)</title><rect x="759.0" y="1029" width="0.3" height="15.0" fill="rgb(213,175,2)" rx="2" ry="2" />
<text  x="761.99" y="1039.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::operator= (2,261,628 samples, 0.01%)</title><rect x="540.3" y="773" width="0.1" height="15.0" fill="rgb(224,62,8)" rx="2" ry="2" />
<text  x="543.27" y="783.5" ></text>
</g>
<g >
<title>[libgazebo_ros2_control.so] (4,151,983 samples, 0.02%)</title><rect x="492.1" y="981" width="0.2" height="15.0" fill="rgb(252,39,46)" rx="2" ry="2" />
<text  x="495.09" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,694,278 samples, 0.06%)</title><rect x="709.7" y="869" width="0.7" height="15.0" fill="rgb(225,154,13)" rx="2" ry="2" />
<text  x="712.70" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="869" width="0.1" height="15.0" fill="rgb(215,162,35)" rx="2" ry="2" />
<text  x="839.31" y="879.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::Waitable&gt;::shared_ptr (9,247,408 samples, 0.04%)</title><rect x="198.6" y="1013" width="0.4" height="15.0" fill="rgb(217,188,10)" rx="2" ry="2" />
<text  x="201.58" y="1023.5" ></text>
</g>
<g >
<title>collideAABBs (61,580,894 samples, 0.24%)</title><rect x="35.3" y="1093" width="2.8" height="15.0" fill="rgb(234,128,35)" rx="2" ry="2" />
<text  x="38.26" y="1103.5" ></text>
</g>
<g >
<title>gazebo::physics::World::BaseByName (8,069,732 samples, 0.03%)</title><rect x="794.2" y="821" width="0.3" height="15.0" fill="rgb(227,128,33)" rx="2" ry="2" />
<text  x="797.16" y="831.5" ></text>
</g>
<g >
<title>gazebo::msgs::Time::set_sec (6,436,601 samples, 0.03%)</title><rect x="28.4" y="1141" width="0.3" height="15.0" fill="rgb(245,47,47)" rx="2" ry="2" />
<text  x="31.36" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_default_append (3,964,790 samples, 0.02%)</title><rect x="644.1" y="885" width="0.2" height="15.0" fill="rgb(206,75,4)" rx="2" ry="2" />
<text  x="647.07" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, int&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::find (10,527,037 samples, 0.04%)</title><rect x="13.9" y="757" width="0.5" height="15.0" fill="rgb(239,117,43)" rx="2" ry="2" />
<text  x="16.87" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (81,967,882 samples, 0.32%)</title><rect x="913.9" y="1189" width="3.8" height="15.0" fill="rgb(211,62,25)" rx="2" ry="2" />
<text  x="916.92" y="1199.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Set (6,106,125 samples, 0.02%)</title><rect x="448.3" y="933" width="0.3" height="15.0" fill="rgb(208,80,39)" rx="2" ry="2" />
<text  x="451.30" y="943.5" ></text>
</g>
<g >
<title>dShortestAngularDistance (6,341,589 samples, 0.03%)</title><rect x="471.4" y="789" width="0.3" height="15.0" fill="rgb(225,29,45)" rx="2" ry="2" />
<text  x="474.38" y="799.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategy::MemoryStrategy::get_subscription_by_handle (10,093,779 samples, 0.04%)</title><rect x="791.5" y="997" width="0.5" height="15.0" fill="rgb(228,10,13)" rx="2" ry="2" />
<text  x="794.53" y="1007.5" ></text>
</g>
<g >
<title>gazebo::physics::World::Update (6,148,096,347 samples, 24.27%)</title><rect x="458.9" y="1061" width="286.4" height="15.0" fill="rgb(208,28,8)" rx="2" ry="2" />
<text  x="461.91" y="1071.5" >gazebo::physics::World::Update</text>
</g>
<g >
<title>gazebo::physics::Base::GetScopedName[abi:cxx11] (6,043,981 samples, 0.02%)</title><rect x="720.3" y="901" width="0.3" height="15.0" fill="rgb(243,29,15)" rx="2" ry="2" />
<text  x="723.32" y="911.5" ></text>
</g>
<g >
<title>std::abs (3,977,319 samples, 0.02%)</title><rect x="661.3" y="853" width="0.2" height="15.0" fill="rgb(244,180,10)" rx="2" ry="2" />
<text  x="664.30" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (6,103,683 samples, 0.02%)</title><rect x="502.3" y="837" width="0.3" height="15.0" fill="rgb(244,42,16)" rx="2" ry="2" />
<text  x="505.33" y="847.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (6,778,683 samples, 0.03%)</title><rect x="811.4" y="917" width="0.3" height="15.0" fill="rgb(215,53,28)" rx="2" ry="2" />
<text  x="814.38" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,596,349 samples, 0.01%)</title><rect x="220.3" y="789" width="0.2" height="15.0" fill="rgb(220,181,6)" rx="2" ry="2" />
<text  x="223.31" y="799.5" ></text>
</g>
<g >
<title>boost::condition_variable::notify_all (2,154,982 samples, 0.01%)</title><rect x="620.4" y="917" width="0.1" height="15.0" fill="rgb(237,5,38)" rx="2" ry="2" />
<text  x="623.39" y="927.5" ></text>
</g>
<g >
<title>gazebo::physics::Collision::GetSurface (41,403,481 samples, 0.16%)</title><rect x="257.3" y="1013" width="1.9" height="15.0" fill="rgb(240,192,53)" rx="2" ry="2" />
<text  x="260.28" y="1023.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (2,241,233 samples, 0.01%)</title><rect x="840.7" y="1029" width="0.1" height="15.0" fill="rgb(226,124,0)" rx="2" ry="2" />
<text  x="843.68" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,647,255 samples, 0.07%)</title><rect x="706.0" y="725" width="0.8" height="15.0" fill="rgb(206,80,24)" rx="2" ry="2" />
<text  x="708.95" y="735.5" ></text>
</g>
<g >
<title>gazebo::common::Time::Time (9,196,261 samples, 0.04%)</title><rect x="25.9" y="1157" width="0.4" height="15.0" fill="rgb(211,139,8)" rx="2" ry="2" />
<text  x="28.89" y="1167.5" ></text>
</g>
<g >
<title>[libgazebo_ros_init.so] (2,157,051 samples, 0.01%)</title><rect x="729.0" y="965" width="0.1" height="15.0" fill="rgb(212,72,13)" rx="2" ry="2" />
<text  x="731.98" y="975.5" ></text>
</g>
<g >
<title>sTrimeshBoxColliderData::_cldTestOneTriangle (25,711,997 samples, 0.10%)</title><rect x="248.4" y="965" width="1.2" height="15.0" fill="rgb(231,37,52)" rx="2" ry="2" />
<text  x="251.36" y="975.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InternalMetadataWithArenaBase&lt;google::protobuf::UnknownFieldSet, google::protobuf::internal::InternalMetadataWithArena&gt;::InternalMetadataWithArenaBase (2,245,988 samples, 0.01%)</title><rect x="759.2" y="949" width="0.1" height="15.0" fill="rgb(208,127,9)" rx="2" ry="2" />
<text  x="762.17" y="959.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::event::EventT&lt;void  (8,249,036 samples, 0.03%)</title><rect x="731.3" y="981" width="0.4" height="15.0" fill="rgb(242,116,15)" rx="2" ry="2" />
<text  x="734.32" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,666,830 samples, 0.08%)</title><rect x="56.5" y="181" width="1.0" height="15.0" fill="rgb(222,39,8)" rx="2" ry="2" />
<text  x="59.49" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="997" width="0.1" height="15.0" fill="rgb(244,190,17)" rx="2" ry="2" />
<text  x="848.06" y="1007.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (10,069,702 samples, 0.04%)</title><rect x="543.5" y="725" width="0.5" height="15.0" fill="rgb(213,167,6)" rx="2" ry="2" />
<text  x="546.49" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,816,086 samples, 0.02%)</title><rect x="43.4" y="1061" width="0.3" height="15.0" fill="rgb(210,160,43)" rx="2" ry="2" />
<text  x="46.39" y="1071.5" ></text>
</g>
<g >
<title>rclcpp::AnySubscriptionCallback&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::dispatch (27,118,420 samples, 0.11%)</title><rect x="797.7" y="965" width="1.2" height="15.0" fill="rgb(239,144,2)" rx="2" ry="2" />
<text  x="800.68" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (32,928,343 samples, 0.13%)</title><rect x="461.7" y="933" width="1.5" height="15.0" fill="rgb(253,8,4)" rx="2" ry="2" />
<text  x="464.65" y="943.5" ></text>
</g>
<g >
<title>boost::mutex::unlock (4,721,801 samples, 0.02%)</title><rect x="79.1" y="1125" width="0.2" height="15.0" fill="rgb(205,22,20)" rx="2" ry="2" />
<text  x="82.11" y="1135.5" ></text>
</g>
<g >
<title>boost::pthread::pthread_mutex_scoped_lock::~pthread_mutex_scoped_lock (6,377,139 samples, 0.03%)</title><rect x="214.4" y="965" width="0.3" height="15.0" fill="rgb(239,126,6)" rx="2" ry="2" />
<text  x="217.43" y="975.5" ></text>
</g>
<g >
<title>std::operator!= (6,281,295 samples, 0.02%)</title><rect x="818.0" y="1045" width="0.3" height="15.0" fill="rgb(227,104,44)" rx="2" ry="2" />
<text  x="821.01" y="1055.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::SurfaceParams&gt;::~shared_ptr (7,567,775 samples, 0.03%)</title><rect x="246.3" y="1013" width="0.4" height="15.0" fill="rgb(224,103,41)" rx="2" ry="2" />
<text  x="249.30" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator= (3,693,749 samples, 0.01%)</title><rect x="836.6" y="1141" width="0.2" height="15.0" fill="rgb(246,62,22)" rx="2" ry="2" />
<text  x="839.59" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (166,356,150 samples, 0.66%)</title><rect x="699.1" y="901" width="7.7" height="15.0" fill="rgb(254,219,11)" rx="2" ry="2" />
<text  x="702.07" y="911.5" ></text>
</g>
<g >
<title>[unknown] (12,067,708 samples, 0.05%)</title><rect x="12.9" y="1301" width="0.6" height="15.0" fill="rgb(232,172,5)" rx="2" ry="2" />
<text  x="15.89" y="1311.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (6,133,965 samples, 0.02%)</title><rect x="543.7" y="709" width="0.3" height="15.0" fill="rgb(235,67,11)" rx="2" ry="2" />
<text  x="546.68" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,762,331 samples, 0.01%)</title><rect x="1174.1" y="1285" width="0.2" height="15.0" fill="rgb(214,74,0)" rx="2" ry="2" />
<text  x="1177.14" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,377,139 samples, 0.03%)</title><rect x="214.4" y="773" width="0.3" height="15.0" fill="rgb(207,78,52)" rx="2" ry="2" />
<text  x="217.43" y="783.5" ></text>
</g>
<g >
<title>__pthread_mutex_trylock (5,835,951 samples, 0.02%)</title><rect x="855.0" y="1109" width="0.3" height="15.0" fill="rgb(226,71,10)" rx="2" ry="2" />
<text  x="858.04" y="1119.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo::physics::WorldPrivate*, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt; (2,164,189 samples, 0.01%)</title><rect x="260.8" y="949" width="0.1" height="15.0" fill="rgb(245,134,44)" rx="2" ry="2" />
<text  x="263.81" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,071,908 samples, 0.06%)</title><rect x="709.0" y="853" width="0.7" height="15.0" fill="rgb(228,146,12)" rx="2" ry="2" />
<text  x="712.04" y="863.5" ></text>
</g>
<g >
<title>dxGeom::computePosr (12,034,081 samples, 0.05%)</title><rect x="243.0" y="917" width="0.5" height="15.0" fill="rgb(251,79,9)" rx="2" ry="2" />
<text  x="245.98" y="927.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (5,195,452 samples, 0.02%)</title><rect x="77.9" y="1109" width="0.2" height="15.0" fill="rgb(248,43,26)" rx="2" ry="2" />
<text  x="80.87" y="1119.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::operator int (2,242,738 samples, 0.01%)</title><rect x="843.5" y="1141" width="0.2" height="15.0" fill="rgb(206,109,12)" rx="2" ry="2" />
<text  x="846.55" y="1151.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::GetParentJointsLinks (7,970,277 samples, 0.03%)</title><rect x="585.6" y="693" width="0.4" height="15.0" fill="rgb(209,32,12)" rx="2" ry="2" />
<text  x="588.64" y="703.5" ></text>
</g>
<g >
<title>boost::unordered::detail::ptr_node&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;::value (2,172,463 samples, 0.01%)</title><rect x="722.9" y="773" width="0.1" height="15.0" fill="rgb(230,5,40)" rx="2" ry="2" />
<text  x="725.94" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="1061" width="0.2" height="15.0" fill="rgb(222,91,6)" rx="2" ry="2" />
<text  x="849.22" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (20,225,100 samples, 0.08%)</title><rect x="499.1" y="805" width="0.9" height="15.0" fill="rgb(221,128,31)" rx="2" ry="2" />
<text  x="502.06" y="815.5" ></text>
</g>
<g >
<title>gazebo::sensors::RaySensor::RayCount (38,348,375 samples, 0.15%)</title><rect x="44.5" y="1157" width="1.8" height="15.0" fill="rgb(252,90,19)" rx="2" ry="2" />
<text  x="47.55" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (65,478,742 samples, 0.26%)</title><rect x="14.9" y="1125" width="3.0" height="15.0" fill="rgb(222,215,51)" rx="2" ry="2" />
<text  x="17.90" y="1135.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::~LinkData (4,049,499 samples, 0.02%)</title><rect x="719.7" y="901" width="0.2" height="15.0" fill="rgb(252,153,16)" rx="2" ry="2" />
<text  x="722.75" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,815,965 samples, 0.32%)</title><rect x="55.2" y="661" width="3.8" height="15.0" fill="rgb(213,188,48)" rx="2" ry="2" />
<text  x="58.20" y="671.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::OnPublishComplete (13,929,078 samples, 0.05%)</title><rect x="13.7" y="789" width="0.7" height="15.0" fill="rgb(246,53,29)" rx="2" ry="2" />
<text  x="16.71" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,515,845 samples, 0.02%)</title><rect x="73.8" y="853" width="0.2" height="15.0" fill="rgb(235,162,37)" rx="2" ry="2" />
<text  x="76.78" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;decltype (6,727,611 samples, 0.03%)</title><rect x="816.0" y="997" width="0.3" height="15.0" fill="rgb(235,2,33)" rx="2" ry="2" />
<text  x="818.98" y="1007.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (22,498,650 samples, 0.09%)</title><rect x="549.2" y="709" width="1.0" height="15.0" fill="rgb(220,227,21)" rx="2" ry="2" />
<text  x="552.16" y="719.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::publish (5,992,445 samples, 0.02%)</title><rect x="679.5" y="901" width="0.3" height="15.0" fill="rgb(220,7,4)" rx="2" ry="2" />
<text  x="682.50" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,882,600 samples, 0.02%)</title><rect x="666.3" y="773" width="0.1" height="15.0" fill="rgb(242,19,4)" rx="2" ry="2" />
<text  x="669.26" y="783.5" ></text>
</g>
<g >
<title>boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::sensors::ImuSensor, boost::shared_ptr&lt;gazebo::msgs::LinkData const&gt; const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::sensors::ImuSensor*&gt;, boost::arg&lt;1&gt; &gt; &gt;::operator (29,322,656 samples, 0.12%)</title><rect x="74.2" y="1109" width="1.4" height="15.0" fill="rgb(244,211,29)" rx="2" ry="2" />
<text  x="77.22" y="1119.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (6,015,980 samples, 0.02%)</title><rect x="1181.3" y="1269" width="0.3" height="15.0" fill="rgb(237,160,36)" rx="2" ry="2" />
<text  x="1184.33" y="1279.5" ></text>
</g>
<g >
<title>dShortestAngularDistanceUpdate (6,072,950 samples, 0.02%)</title><rect x="579.0" y="757" width="0.3" height="15.0" fill="rgb(249,125,27)" rx="2" ry="2" />
<text  x="582.00" y="767.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, gazebo::physics::LinkPrivate*, false&gt;::_M_head (2,164,975 samples, 0.01%)</title><rect x="591.4" y="661" width="0.1" height="15.0" fill="rgb(243,221,37)" rx="2" ry="2" />
<text  x="594.37" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::get (4,203,159 samples, 0.02%)</title><rect x="43.7" y="1125" width="0.2" height="15.0" fill="rgb(215,217,0)" rx="2" ry="2" />
<text  x="46.66" y="1135.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator+ (6,157,793 samples, 0.02%)</title><rect x="529.3" y="789" width="0.3" height="15.0" fill="rgb(209,111,16)" rx="2" ry="2" />
<text  x="532.28" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,793,254 samples, 0.03%)</title><rect x="185.9" y="981" width="0.4" height="15.0" fill="rgb(240,83,22)" rx="2" ry="2" />
<text  x="188.89" y="991.5" ></text>
</g>
<g >
<title>[unknown] (7,594,639 samples, 0.03%)</title><rect x="117.4" y="1269" width="0.4" height="15.0" fill="rgb(223,196,53)" rx="2" ry="2" />
<text  x="120.42" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,291,093 samples, 0.01%)</title><rect x="521.1" y="661" width="0.1" height="15.0" fill="rgb(210,206,23)" rx="2" ry="2" />
<text  x="524.08" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (5,810,599 samples, 0.02%)</title><rect x="500.3" y="853" width="0.3" height="15.0" fill="rgb(224,83,14)" rx="2" ry="2" />
<text  x="503.32" y="863.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (56,935,916 samples, 0.22%)</title><rect x="204.0" y="1221" width="2.7" height="15.0" fill="rgb(211,96,42)" rx="2" ry="2" />
<text  x="207.03" y="1231.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::shared_ptr (65,709,883 samples, 0.26%)</title><rect x="672.5" y="821" width="3.1" height="15.0" fill="rgb(217,128,34)" rx="2" ry="2" />
<text  x="675.53" y="831.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,537,634 samples, 0.01%)</title><rect x="75.8" y="821" width="0.1" height="15.0" fill="rgb(252,136,1)" rx="2" ry="2" />
<text  x="78.76" y="831.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, gazebo::event::EventT&lt;void  (4,053,633 samples, 0.02%)</title><rect x="731.5" y="933" width="0.2" height="15.0" fill="rgb(231,87,50)" rx="2" ry="2" />
<text  x="734.51" y="943.5" ></text>
</g>
<g >
<title>SingletonT&lt;gazebo::transport::TopicManager&gt;::Instance (4,936,250 samples, 0.02%)</title><rect x="51.2" y="1189" width="0.2" height="15.0" fill="rgb(226,227,12)" rx="2" ry="2" />
<text  x="54.21" y="1199.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (50,111,231 samples, 0.20%)</title><rect x="1171.8" y="1301" width="2.3" height="15.0" fill="rgb(205,8,22)" rx="2" ry="2" />
<text  x="1174.80" y="1311.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::lock (6,145,230 samples, 0.02%)</title><rect x="239.6" y="821" width="0.3" height="15.0" fill="rgb(206,127,14)" rx="2" ry="2" />
<text  x="242.58" y="831.5" ></text>
</g>
<g >
<title>boost::asio::detail::io_object_executor&lt;boost::asio::executor&gt;::dispatch&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (20,830,968 samples, 0.08%)</title><rect x="13.6" y="1125" width="0.9" height="15.0" fill="rgb(238,83,27)" rx="2" ry="2" />
<text  x="16.55" y="1135.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (6,384,335 samples, 0.03%)</title><rect x="430.3" y="901" width="0.3" height="15.0" fill="rgb(226,3,53)" rx="2" ry="2" />
<text  x="433.30" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::ODELink::WorldLinearVel (3,835,573 samples, 0.02%)</title><rect x="779.5" y="885" width="0.2" height="15.0" fill="rgb(206,161,44)" rx="2" ry="2" />
<text  x="782.52" y="895.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::ByteSizeLong (23,043,246 samples, 0.09%)</title><rect x="162.8" y="1205" width="1.1" height="15.0" fill="rgb(218,139,3)" rx="2" ry="2" />
<text  x="165.82" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,602,555 samples, 0.01%)</title><rect x="49.3" y="1141" width="0.1" height="15.0" fill="rgb(249,12,0)" rx="2" ry="2" />
<text  x="52.27" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1173" width="0.4" height="15.0" fill="rgb(241,143,42)" rx="2" ry="2" />
<text  x="1181.27" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,882,600 samples, 0.02%)</title><rect x="666.3" y="821" width="0.1" height="15.0" fill="rgb(235,39,36)" rx="2" ry="2" />
<text  x="669.26" y="831.5" ></text>
</g>
<g >
<title>boost::static_pointer_cast&lt;gazebo::physics::Collision, gazebo::physics::Base&gt; (8,198,888 samples, 0.03%)</title><rect x="227.1" y="1013" width="0.3" height="15.0" fill="rgb(235,31,53)" rx="2" ry="2" />
<text  x="230.05" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,624,031 samples, 0.01%)</title><rect x="22.7" y="901" width="0.2" height="15.0" fill="rgb(233,73,41)" rx="2" ry="2" />
<text  x="25.74" y="911.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (4,947,258 samples, 0.02%)</title><rect x="782.4" y="981" width="0.3" height="15.0" fill="rgb(228,134,37)" rx="2" ry="2" />
<text  x="785.44" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,847,722 samples, 0.03%)</title><rect x="931.5" y="1141" width="0.4" height="15.0" fill="rgb(212,158,21)" rx="2" ry="2" />
<text  x="934.53" y="1151.5" ></text>
</g>
<g >
<title>dWorldQuickStep (4,081,601,164 samples, 16.11%)</title><rect x="261.7" y="1029" width="190.1" height="15.0" fill="rgb(220,182,18)" rx="2" ry="2" />
<text  x="264.74" y="1039.5" >dWorldQuickStep</text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,415,848 samples, 0.03%)</title><rect x="145.2" y="1141" width="0.3" height="15.0" fill="rgb(217,148,11)" rx="2" ry="2" />
<text  x="148.23" y="1151.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (4,539,696 samples, 0.02%)</title><rect x="47.1" y="1157" width="0.2" height="15.0" fill="rgb(216,118,4)" rx="2" ry="2" />
<text  x="50.08" y="1167.5" ></text>
</g>
<g >
<title>gazebo_plugins::GazeboRosDiffDrivePrivate::OnUpdate (28,489,821 samples, 0.11%)</title><rect x="642.2" y="917" width="1.3" height="15.0" fill="rgb(251,148,24)" rx="2" ry="2" />
<text  x="645.20" y="927.5" ></text>
</g>
<g >
<title>boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (20,830,968 samples, 0.08%)</title><rect x="13.6" y="1045" width="0.9" height="15.0" fill="rgb(248,59,23)" rx="2" ry="2" />
<text  x="16.55" y="1055.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::set&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::begin (2,529,277 samples, 0.01%)</title><rect x="63.6" y="1157" width="0.1" height="15.0" fill="rgb(208,109,2)" rx="2" ry="2" />
<text  x="66.57" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,319,048 samples, 0.03%)</title><rect x="886.2" y="533" width="0.4" height="15.0" fill="rgb(219,61,41)" rx="2" ry="2" />
<text  x="889.23" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::end (2,665,526 samples, 0.01%)</title><rect x="82.6" y="1141" width="0.1" height="15.0" fill="rgb(215,156,16)" rx="2" ry="2" />
<text  x="85.59" y="1151.5" ></text>
</g>
<g >
<title>[libgazebo_transport.so.11.10.1] (7,165,550 samples, 0.03%)</title><rect x="62.0" y="1173" width="0.4" height="15.0" fill="rgb(232,90,13)" rx="2" ry="2" />
<text  x="65.05" y="1183.5" ></text>
</g>
<g >
<title>rclcpp::node_interfaces::NodeClock::get_clock (3,851,018 samples, 0.02%)</title><rect x="513.5" y="869" width="0.2" height="15.0" fill="rgb(236,162,49)" rx="2" ry="2" />
<text  x="516.50" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (88,016,529 samples, 0.35%)</title><rect x="882.5" y="725" width="4.1" height="15.0" fill="rgb(234,175,15)" rx="2" ry="2" />
<text  x="885.47" y="735.5" ></text>
</g>
<g >
<title>update_get_addr (11,640,010 samples, 0.05%)</title><rect x="161.5" y="1269" width="0.5" height="15.0" fill="rgb(215,209,52)" rx="2" ry="2" />
<text  x="164.48" y="1279.5" ></text>
</g>
<g >
<title>std::forward&lt;std::piecewise_construct_t const&amp;&gt; (3,530,820 samples, 0.01%)</title><rect x="85.0" y="1045" width="0.2" height="15.0" fill="rgb(221,142,39)" rx="2" ry="2" />
<text  x="88.00" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,446 samples, 0.01%)</title><rect x="681.0" y="789" width="0.1" height="15.0" fill="rgb(213,46,38)" rx="2" ry="2" />
<text  x="683.97" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_S_do_relocate (6,094,437 samples, 0.02%)</title><rect x="694.4" y="853" width="0.3" height="15.0" fill="rgb(206,91,43)" rx="2" ry="2" />
<text  x="697.43" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (7,107,550 samples, 0.03%)</title><rect x="773.7" y="869" width="0.3" height="15.0" fill="rgb(224,51,24)" rx="2" ry="2" />
<text  x="776.65" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,303,114 samples, 0.01%)</title><rect x="62.8" y="1077" width="0.2" height="15.0" fill="rgb(217,218,41)" rx="2" ry="2" />
<text  x="65.82" y="1087.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (2,207,412 samples, 0.01%)</title><rect x="769.3" y="1029" width="0.1" height="15.0" fill="rgb(215,83,1)" rx="2" ry="2" />
<text  x="772.30" y="1039.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::HasType (3,882,205 samples, 0.02%)</title><rect x="239.2" y="885" width="0.2" height="15.0" fill="rgb(225,43,41)" rx="2" ry="2" />
<text  x="242.22" y="895.5" ></text>
</g>
<g >
<title>boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (20,830,968 samples, 0.08%)</title><rect x="13.6" y="1029" width="0.9" height="15.0" fill="rgb(251,210,44)" rx="2" ry="2" />
<text  x="16.55" y="1039.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;google::protobuf::Message&gt;::~shared_ptr (8,739,807 samples, 0.03%)</title><rect x="31.4" y="1093" width="0.4" height="15.0" fill="rgb(236,94,41)" rx="2" ry="2" />
<text  x="34.35" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::push_back (9,940,546 samples, 0.04%)</title><rect x="768.7" y="1045" width="0.5" height="15.0" fill="rgb(230,62,34)" rx="2" ry="2" />
<text  x="771.74" y="1055.5" ></text>
</g>
<g >
<title>std::forward&lt;void  (4,346,444 samples, 0.02%)</title><rect x="725.0" y="949" width="0.2" height="15.0" fill="rgb(211,10,3)" rx="2" ry="2" />
<text  x="728.00" y="959.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::SendMessage (215,901,685 samples, 0.85%)</title><rect x="77.2" y="1157" width="10.0" height="15.0" fill="rgb(243,200,11)" rx="2" ry="2" />
<text  x="80.19" y="1167.5" ></text>
</g>
<g >
<title>gazebo::sensors::SensorManager::Update (147,078,294 samples, 0.58%)</title><rect x="897.7" y="1237" width="6.9" height="15.0" fill="rgb(232,135,18)" rx="2" ry="2" />
<text  x="900.73" y="1247.5" ></text>
</g>
<g >
<title>dxJointLimitMotor::addLimot (8,464,449 samples, 0.03%)</title><rect x="273.9" y="949" width="0.4" height="15.0" fill="rgb(250,223,26)" rx="2" ry="2" />
<text  x="276.94" y="959.5" ></text>
</g>
<g >
<title>hardware_interface::ResourceManager::write (44,871,004 samples, 0.18%)</title><rect x="774.5" y="901" width="2.0" height="15.0" fill="rgb(235,125,28)" rx="2" ry="2" />
<text  x="777.45" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (27,824,067 samples, 0.11%)</title><rect x="1153.7" y="981" width="1.3" height="15.0" fill="rgb(211,220,48)" rx="2" ry="2" />
<text  x="1156.70" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,141,612 samples, 0.02%)</title><rect x="1177.0" y="1237" width="0.2" height="15.0" fill="rgb(227,33,38)" rx="2" ry="2" />
<text  x="1180.00" y="1247.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;int, void&gt; (10,285,171 samples, 0.04%)</title><rect x="864.1" y="1157" width="0.5" height="15.0" fill="rgb(214,24,11)" rx="2" ry="2" />
<text  x="867.08" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,865,199 samples, 0.01%)</title><rect x="32.8" y="1013" width="0.2" height="15.0" fill="rgb(213,225,44)" rx="2" ry="2" />
<text  x="35.84" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (83,566,038 samples, 0.33%)</title><rect x="882.7" y="709" width="3.9" height="15.0" fill="rgb(251,141,14)" rx="2" ry="2" />
<text  x="885.68" y="719.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::X (6,262,041 samples, 0.02%)</title><rect x="22.1" y="1029" width="0.3" height="15.0" fill="rgb(236,102,5)" rx="2" ry="2" />
<text  x="25.13" y="1039.5" ></text>
</g>
<g >
<title>dPlaneSpace (4,039,676 samples, 0.02%)</title><rect x="273.8" y="949" width="0.1" height="15.0" fill="rgb(213,195,17)" rx="2" ry="2" />
<text  x="276.76" y="959.5" ></text>
</g>
<g >
<title>gazebo::event::EventT&lt;void  (75,068,030 samples, 0.30%)</title><rect x="21.0" y="1173" width="3.5" height="15.0" fill="rgb(227,205,7)" rx="2" ry="2" />
<text  x="23.99" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,491,228 samples, 0.06%)</title><rect x="457.0" y="885" width="0.7" height="15.0" fill="rgb(252,77,26)" rx="2" ry="2" />
<text  x="460.02" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (33,706,824 samples, 0.13%)</title><rect x="739.9" y="917" width="1.6" height="15.0" fill="rgb(213,162,23)" rx="2" ry="2" />
<text  x="742.88" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;sdf::v9::ParamPrivate, std::default_delete&lt;sdf::v9::ParamPrivate&gt; &gt;::get (6,729,605 samples, 0.03%)</title><rect x="45.3" y="1029" width="0.4" height="15.0" fill="rgb(221,90,23)" rx="2" ry="2" />
<text  x="48.34" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (52,046,132 samples, 0.21%)</title><rect x="576.1" y="645" width="2.4" height="15.0" fill="rgb(241,146,16)" rx="2" ry="2" />
<text  x="579.12" y="655.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (5,767,950 samples, 0.02%)</title><rect x="447.8" y="901" width="0.2" height="15.0" fill="rgb(245,149,0)" rx="2" ry="2" />
<text  x="450.77" y="911.5" ></text>
</g>
<g >
<title>boost::_mfi::mf0&lt;void, gazebo_ros2_control::GazeboRosControlPrivate&gt;::operator (16,816,282 samples, 0.07%)</title><rect x="776.9" y="949" width="0.8" height="15.0" fill="rgb(230,95,40)" rx="2" ry="2" />
<text  x="779.93" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::vector (2,156,643 samples, 0.01%)</title><rect x="689.4" y="885" width="0.1" height="15.0" fill="rgb(237,206,38)" rx="2" ry="2" />
<text  x="692.38" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,634,833 samples, 0.03%)</title><rect x="796.3" y="949" width="0.3" height="15.0" fill="rgb(206,189,19)" rx="2" ry="2" />
<text  x="799.26" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,284,754 samples, 0.02%)</title><rect x="618.2" y="725" width="0.2" height="15.0" fill="rgb(248,121,18)" rx="2" ry="2" />
<text  x="621.24" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,264,362 samples, 0.20%)</title><rect x="576.2" y="613" width="2.3" height="15.0" fill="rgb(248,7,48)" rx="2" ry="2" />
<text  x="579.20" y="623.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (3,936,376 samples, 0.02%)</title><rect x="272.9" y="901" width="0.2" height="15.0" fill="rgb(247,176,3)" rx="2" ry="2" />
<text  x="275.88" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (12,710,632 samples, 0.05%)</title><rect x="840.3" y="1093" width="0.6" height="15.0" fill="rgb(246,126,21)" rx="2" ry="2" />
<text  x="843.33" y="1103.5" ></text>
</g>
<g >
<title>gazebo::physics::ODERayShape::Update (85,383,928 samples, 0.34%)</title><rect x="39.0" y="1141" width="4.0" height="15.0" fill="rgb(235,105,19)" rx="2" ry="2" />
<text  x="42.00" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (9,051,352 samples, 0.04%)</title><rect x="827.1" y="1013" width="0.4" height="15.0" fill="rgb(245,115,2)" rx="2" ry="2" />
<text  x="830.10" y="1023.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetChildCount (6,097,854 samples, 0.02%)</title><rect x="741.9" y="1029" width="0.3" height="15.0" fill="rgb(239,45,10)" rx="2" ry="2" />
<text  x="744.92" y="1039.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetWorld (4,168,067 samples, 0.02%)</title><rect x="616.4" y="933" width="0.2" height="15.0" fill="rgb(253,113,52)" rx="2" ry="2" />
<text  x="619.39" y="943.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::mutable_time (3,325,405 samples, 0.01%)</title><rect x="27.2" y="1125" width="0.1" height="15.0" fill="rgb(234,229,50)" rx="2" ry="2" />
<text  x="30.19" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (155,690,442 samples, 0.61%)</title><rect x="168.5" y="1077" width="7.2" height="15.0" fill="rgb(230,183,7)" rx="2" ry="2" />
<text  x="171.46" y="1087.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (4,874,447 samples, 0.02%)</title><rect x="828.9" y="1109" width="0.3" height="15.0" fill="rgb(246,215,29)" rx="2" ry="2" />
<text  x="831.95" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (3,867,191 samples, 0.02%)</title><rect x="496.5" y="837" width="0.2" height="15.0" fill="rgb(235,94,38)" rx="2" ry="2" />
<text  x="499.52" y="847.5" ></text>
</g>
<g >
<title>gazebo::msgs::IMU::mutable_angular_velocity (4,539,696 samples, 0.02%)</title><rect x="30.8" y="1077" width="0.2" height="15.0" fill="rgb(227,100,1)" rx="2" ry="2" />
<text  x="33.77" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="949" width="0.1" height="15.0" fill="rgb(235,49,34)" rx="2" ry="2" />
<text  x="848.06" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt;::emplace_back&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; (3,586,923 samples, 0.01%)</title><rect x="197.7" y="997" width="0.2" height="15.0" fill="rgb(254,109,24)" rx="2" ry="2" />
<text  x="200.72" y="1007.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::operator+ (8,349,160 samples, 0.03%)</title><rect x="526.6" y="805" width="0.4" height="15.0" fill="rgb(214,172,28)" rx="2" ry="2" />
<text  x="529.57" y="815.5" ></text>
</g>
<g >
<title>rclcpp::AnyExecutable::AnyExecutable (5,355,349 samples, 0.02%)</title><rect x="789.7" y="1045" width="0.2" height="15.0" fill="rgb(206,61,32)" rx="2" ry="2" />
<text  x="792.65" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,243,735 samples, 0.01%)</title><rect x="266.8" y="709" width="0.1" height="15.0" fill="rgb(213,25,29)" rx="2" ry="2" />
<text  x="269.79" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;::_M_clear (2,537,634 samples, 0.01%)</title><rect x="75.8" y="997" width="0.1" height="15.0" fill="rgb(248,174,20)" rx="2" ry="2" />
<text  x="78.76" y="1007.5" ></text>
</g>
<g >
<title>gazebo::physics::Model::Update (11,249,898 samples, 0.04%)</title><rect x="788.5" y="1029" width="0.5" height="15.0" fill="rgb(214,89,11)" rx="2" ry="2" />
<text  x="791.46" y="1039.5" ></text>
</g>
<g >
<title>gazebo::util::DiagnosticManager::Update (8,505,097 samples, 0.03%)</title><rect x="724.0" y="917" width="0.4" height="15.0" fill="rgb(213,146,8)" rx="2" ry="2" />
<text  x="727.02" y="927.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_guard_condition (7,871,244 samples, 0.03%)</title><rect x="807.4" y="1029" width="0.3" height="15.0" fill="rgb(234,121,40)" rx="2" ry="2" />
<text  x="810.35" y="1039.5" ></text>
</g>
<g >
<title>ipt_do_table (6,367,882 samples, 0.03%)</title><rect x="887.6" y="1045" width="0.3" height="15.0" fill="rgb(219,99,18)" rx="2" ry="2" />
<text  x="890.63" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,850,278 samples, 0.02%)</title><rect x="832.5" y="997" width="0.2" height="15.0" fill="rgb(243,117,25)" rx="2" ry="2" />
<text  x="835.51" y="1007.5" ></text>
</g>
<g >
<title>__gthread_recursive_mutex_unlock (5,985,797 samples, 0.02%)</title><rect x="544.5" y="725" width="0.2" height="15.0" fill="rgb(209,85,0)" rx="2" ry="2" />
<text  x="547.45" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (73,108,482 samples, 0.29%)</title><rect x="914.3" y="1157" width="3.4" height="15.0" fill="rgb(254,23,40)" rx="2" ry="2" />
<text  x="917.33" y="1167.5" ></text>
</g>
<g >
<title>boost::asio::detail::hook_allocator&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (2,286,334 samples, 0.01%)</title><rect x="54.3" y="981" width="0.1" height="15.0" fill="rgb(239,14,36)" rx="2" ry="2" />
<text  x="57.28" y="991.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::_find_ptrs_if_impl&lt;rclcpp::SubscriptionBase, rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (25,364,968 samples, 0.10%)</title><rect x="811.0" y="1013" width="1.2" height="15.0" fill="rgb(205,82,39)" rx="2" ry="2" />
<text  x="814.00" y="1023.5" ></text>
</g>
<g >
<title>realtime_tools::RealtimePublisher&lt;sensor_msgs::msg::JointState_&lt;std::allocator&lt;void&gt; &gt; &gt;::lock (22,450,757 samples, 0.09%)</title><rect x="854.3" y="1141" width="1.0" height="15.0" fill="rgb(218,193,13)" rx="2" ry="2" />
<text  x="857.27" y="1151.5" ></text>
</g>
<g >
<title>ddsi_ipaddr_from_loc (7,496,270 samples, 0.03%)</title><rect x="1157.4" y="1301" width="0.3" height="15.0" fill="rgb(205,29,43)" rx="2" ry="2" />
<text  x="1160.39" y="1311.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator* (6,200,187 samples, 0.02%)</title><rect x="661.5" y="869" width="0.3" height="15.0" fill="rgb(224,82,24)" rx="2" ry="2" />
<text  x="664.49" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt;::__normal_iterator (2,194,298 samples, 0.01%)</title><rect x="586.6" y="661" width="0.1" height="15.0" fill="rgb(218,0,20)" rx="2" ry="2" />
<text  x="589.65" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::physics::WorldPrivate*, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt; (4,561,868 samples, 0.02%)</title><rect x="895.8" y="1189" width="0.2" height="15.0" fill="rgb(216,161,16)" rx="2" ry="2" />
<text  x="898.83" y="1199.5" ></text>
</g>
<g >
<title>_dNormalize3 (3,778,139 samples, 0.01%)</title><rect x="248.7" y="933" width="0.2" height="15.0" fill="rgb(208,188,47)" rx="2" ry="2" />
<text  x="251.73" y="943.5" ></text>
</g>
<g >
<title>[libgazebo_transport.so.11.10.1] (2,336,900 samples, 0.01%)</title><rect x="763.4" y="1029" width="0.1" height="15.0" fill="rgb(210,182,20)" rx="2" ry="2" />
<text  x="766.43" y="1039.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (8,472,957 samples, 0.03%)</title><rect x="147.2" y="1285" width="0.4" height="15.0" fill="rgb(219,160,14)" rx="2" ry="2" />
<text  x="150.16" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,882,600 samples, 0.02%)</title><rect x="666.3" y="837" width="0.1" height="15.0" fill="rgb(244,153,15)" rx="2" ry="2" />
<text  x="669.26" y="847.5" ></text>
</g>
<g >
<title>controller_manager::ControllerSpec::ControllerSpec (34,039,718 samples, 0.13%)</title><rect x="521.4" y="901" width="1.6" height="15.0" fill="rgb(223,137,5)" rx="2" ry="2" />
<text  x="524.37" y="911.5" ></text>
</g>
<g >
<title>gazebo::event::EventT&lt;void  (7,970,955 samples, 0.03%)</title><rect x="788.5" y="981" width="0.3" height="15.0" fill="rgb(227,48,53)" rx="2" ry="2" />
<text  x="791.46" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,363,989 samples, 0.02%)</title><rect x="17.7" y="869" width="0.2" height="15.0" fill="rgb(220,27,22)" rx="2" ry="2" />
<text  x="20.70" y="879.5" ></text>
</g>
<g >
<title>gazebo::physics::World::WorldPoseMutex (12,818,579 samples, 0.05%)</title><rect x="561.2" y="789" width="0.6" height="15.0" fill="rgb(238,158,12)" rx="2" ry="2" />
<text  x="564.19" y="799.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::find_waitable_ptrs_if&lt;rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (7,634,787 samples, 0.03%)</title><rect x="792.8" y="997" width="0.3" height="15.0" fill="rgb(243,148,8)" rx="2" ry="2" />
<text  x="795.78" y="1007.5" ></text>
</g>
<g >
<title>ddsi_serdata_init (5,154,297 samples, 0.02%)</title><rect x="133.1" y="1253" width="0.2" height="15.0" fill="rgb(249,52,32)" rx="2" ry="2" />
<text  x="136.11" y="1263.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, gazebo::physics::WorldPrivate*, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::_M_head (2,286,872 samples, 0.01%)</title><rect x="750.9" y="981" width="0.1" height="15.0" fill="rgb(238,157,22)" rx="2" ry="2" />
<text  x="753.89" y="991.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::swap (7,591,368 samples, 0.03%)</title><rect x="542.3" y="741" width="0.4" height="15.0" fill="rgb(219,38,39)" rx="2" ry="2" />
<text  x="545.30" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (5,472,598 samples, 0.02%)</title><rect x="80.1" y="1077" width="0.3" height="15.0" fill="rgb(240,74,48)" rx="2" ry="2" />
<text  x="83.13" y="1087.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator* (3,676,925 samples, 0.01%)</title><rect x="40.8" y="1109" width="0.1" height="15.0" fill="rgb(222,118,18)" rx="2" ry="2" />
<text  x="43.76" y="1119.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (6,092,557 samples, 0.02%)</title><rect x="226.1" y="981" width="0.3" height="15.0" fill="rgb(244,202,46)" rx="2" ry="2" />
<text  x="229.11" y="991.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::operator (2,237,807 samples, 0.01%)</title><rect x="594.0" y="773" width="0.1" height="15.0" fill="rgb(236,15,41)" rx="2" ry="2" />
<text  x="597.03" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (2,894,351 samples, 0.01%)</title><rect x="840.0" y="1109" width="0.1" height="15.0" fill="rgb(249,5,23)" rx="2" ry="2" />
<text  x="842.96" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,281,711 samples, 0.01%)</title><rect x="841.9" y="997" width="0.2" height="15.0" fill="rgb(224,43,23)" rx="2" ry="2" />
<text  x="844.95" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (119,532,607 samples, 0.47%)</title><rect x="881.4" y="869" width="5.6" height="15.0" fill="rgb(217,7,40)" rx="2" ry="2" />
<text  x="884.39" y="879.5" ></text>
</g>
<g >
<title>dQMultiply1 (3,852,508 samples, 0.02%)</title><rect x="579.5" y="741" width="0.2" height="15.0" fill="rgb(222,40,53)" rx="2" ry="2" />
<text  x="582.48" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::push_back (26,586,402 samples, 0.10%)</title><rect x="692.5" y="901" width="1.3" height="15.0" fill="rgb(252,190,41)" rx="2" ry="2" />
<text  x="695.55" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,272,626 samples, 0.01%)</title><rect x="57.1" y="69" width="0.1" height="15.0" fill="rgb(226,194,9)" rx="2" ry="2" />
<text  x="60.07" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (3,720,229 samples, 0.01%)</title><rect x="766.7" y="773" width="0.2" height="15.0" fill="rgb(212,219,51)" rx="2" ry="2" />
<text  x="769.71" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,284,754 samples, 0.02%)</title><rect x="618.2" y="741" width="0.2" height="15.0" fill="rgb(227,227,33)" rx="2" ry="2" />
<text  x="621.24" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,282,220 samples, 0.03%)</title><rect x="618.1" y="901" width="0.3" height="15.0" fill="rgb(235,220,23)" rx="2" ry="2" />
<text  x="621.05" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::FindAllConnectedLinks (4,271,619 samples, 0.02%)</title><rect x="531.6" y="837" width="0.2" height="15.0" fill="rgb(229,65,0)" rx="2" ry="2" />
<text  x="534.58" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (2,410,805 samples, 0.01%)</title><rect x="778.5" y="901" width="0.2" height="15.0" fill="rgb(235,198,51)" rx="2" ry="2" />
<text  x="781.55" y="911.5" ></text>
</g>
<g >
<title>dxSimpleSpace::collide2 (47,275,610 samples, 0.19%)</title><rect x="236.2" y="885" width="2.2" height="15.0" fill="rgb(219,109,49)" rx="2" ry="2" />
<text  x="239.16" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_timer_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_timer_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_timer_t const&gt; &gt; &gt; &gt;::operator++ (6,005,596 samples, 0.02%)</title><rect x="201.3" y="1013" width="0.3" height="15.0" fill="rgb(220,61,51)" rx="2" ry="2" />
<text  x="204.34" y="1023.5" ></text>
</g>
<g >
<title>boost::detail::function::basic_vtable1&lt;void, unsigned int&gt;::assign_to&lt;gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Publisher, unsigned int&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Publisher*&gt;, boost::arg&lt;1&gt; &gt; &gt;, gazebo::transport::Publisher&gt; &gt; (7,002,136 samples, 0.03%)</title><rect x="78.5" y="1093" width="0.3" height="15.0" fill="rgb(222,131,40)" rx="2" ry="2" />
<text  x="81.52" y="1103.5" ></text>
</g>
<g >
<title>__dynamic_cast (19,091,772 samples, 0.08%)</title><rect x="867.5" y="1301" width="0.9" height="15.0" fill="rgb(214,136,27)" rx="2" ry="2" />
<text  x="870.47" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="1045" width="0.1" height="15.0" fill="rgb(207,158,30)" rx="2" ry="2" />
<text  x="839.31" y="1055.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (12,516,779,584 samples, 49.40%)</title><rect x="206.7" y="1157" width="583.0" height="15.0" fill="rgb(210,32,21)" rx="2" ry="2" />
<text  x="209.69" y="1167.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>google::protobuf::Arena::CreateMaybeMessage&lt;gazebo::msgs::Vector3d&gt; (4,539,696 samples, 0.02%)</title><rect x="30.8" y="1061" width="0.2" height="15.0" fill="rgb(228,221,16)" rx="2" ry="2" />
<text  x="33.77" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,861,709 samples, 0.04%)</title><rect x="741.0" y="805" width="0.5" height="15.0" fill="rgb(233,85,8)" rx="2" ry="2" />
<text  x="743.99" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;gazebo::physics::Entity*, std::allocator&lt;gazebo::physics::Entity*&gt; &gt;::_M_get_Node_allocator (2,176,177 samples, 0.01%)</title><rect x="444.7" y="869" width="0.1" height="15.0" fill="rgb(221,211,23)" rx="2" ry="2" />
<text  x="447.74" y="879.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (2,663,414 samples, 0.01%)</title><rect x="846.7" y="1125" width="0.1" height="15.0" fill="rgb(250,156,19)" rx="2" ry="2" />
<text  x="849.67" y="1135.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (6,337,944 samples, 0.03%)</title><rect x="242.6" y="853" width="0.3" height="15.0" fill="rgb(215,121,34)" rx="2" ry="2" />
<text  x="245.59" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,812,785 samples, 0.05%)</title><rect x="63.0" y="1093" width="0.6" height="15.0" fill="rgb(213,147,42)" rx="2" ry="2" />
<text  x="65.97" y="1103.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;boost::shared_ptr&lt;gazebo::transport::Connection&gt; &gt;::operator++ (2,914,488 samples, 0.01%)</title><rect x="88.4" y="1205" width="0.1" height="15.0" fill="rgb(210,51,50)" rx="2" ry="2" />
<text  x="91.41" y="1215.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (71,625,986 samples, 0.28%)</title><rect x="21.1" y="1061" width="3.4" height="15.0" fill="rgb(246,103,35)" rx="2" ry="2" />
<text  x="24.15" y="1071.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::Waitable,  (7,101,875 samples, 0.03%)</title><rect x="195.4" y="1045" width="0.4" height="15.0" fill="rgb(210,217,19)" rx="2" ry="2" />
<text  x="198.43" y="1055.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::operator (4,382,996 samples, 0.02%)</title><rect x="685.1" y="885" width="0.2" height="15.0" fill="rgb(245,168,21)" rx="2" ry="2" />
<text  x="688.06" y="895.5" ></text>
</g>
<g >
<title>controller_manager::ControllerManager::read (4,183,851 samples, 0.02%)</title><rect x="774.2" y="917" width="0.2" height="15.0" fill="rgb(214,150,21)" rx="2" ry="2" />
<text  x="777.16" y="927.5" ></text>
</g>
<g >
<title>gazebo::transport::TopicManager::AddNodeToProcess (18,316,175 samples, 0.07%)</title><rect x="215.5" y="997" width="0.9" height="15.0" fill="rgb(222,142,8)" rx="2" ry="2" />
<text  x="218.50" y="1007.5" ></text>
</g>
<g >
<title>std::move&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt;&amp;&gt; (2,177,799 samples, 0.01%)</title><rect x="224.1" y="981" width="0.1" height="15.0" fill="rgb(238,226,15)" rx="2" ry="2" />
<text  x="227.08" y="991.5" ></text>
</g>
<g >
<title>gen11_display_irq_handler (2,205,749 samples, 0.01%)</title><rect x="1155.0" y="1013" width="0.1" height="15.0" fill="rgb(245,5,53)" rx="2" ry="2" />
<text  x="1157.99" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::emplace_back&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (7,638,281 samples, 0.03%)</title><rect x="591.6" y="741" width="0.3" height="15.0" fill="rgb(217,93,2)" rx="2" ry="2" />
<text  x="594.55" y="751.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (5,701,371 samples, 0.02%)</title><rect x="496.3" y="837" width="0.2" height="15.0" fill="rgb(229,141,40)" rx="2" ry="2" />
<text  x="499.25" y="847.5" ></text>
</g>
<g >
<title>gazebo::physics::World::PublishModelPose (84,940,569 samples, 0.34%)</title><rect x="544.1" y="773" width="3.9" height="15.0" fill="rgb(239,29,10)" rx="2" ry="2" />
<text  x="547.06" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::World&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::World&gt; &gt; &gt;::end (7,718,103 samples, 0.03%)</title><rect x="47.3" y="1157" width="0.4" height="15.0" fill="rgb(214,225,16)" rx="2" ry="2" />
<text  x="50.30" y="1167.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::_M_ptr (6,006,086 samples, 0.02%)</title><rect x="591.2" y="725" width="0.3" height="15.0" fill="rgb(225,181,20)" rx="2" ry="2" />
<text  x="594.19" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,210,290 samples, 0.01%)</title><rect x="855.7" y="1077" width="0.1" height="15.0" fill="rgb(248,104,34)" rx="2" ry="2" />
<text  x="858.73" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (86,789,020 samples, 0.34%)</title><rect x="600.6" y="741" width="4.1" height="15.0" fill="rgb(239,224,51)" rx="2" ry="2" />
<text  x="603.62" y="751.5" ></text>
</g>
<g >
<title>dSpaceCollide (12,815,481 samples, 0.05%)</title><rect x="781.2" y="1029" width="0.6" height="15.0" fill="rgb(248,6,4)" rx="2" ry="2" />
<text  x="784.19" y="1039.5" ></text>
</g>
<g >
<title>dCollideCylinderBox (36,452,323 samples, 0.14%)</title><rect x="251.0" y="997" width="1.7" height="15.0" fill="rgb(210,222,26)" rx="2" ry="2" />
<text  x="253.96" y="1007.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (4,217,458 samples, 0.02%)</title><rect x="744.5" y="981" width="0.2" height="15.0" fill="rgb(221,184,27)" rx="2" ry="2" />
<text  x="747.46" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,152,963 samples, 0.06%)</title><rect x="116.7" y="1157" width="0.7" height="15.0" fill="rgb(254,91,44)" rx="2" ry="2" />
<text  x="119.71" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,415,848 samples, 0.03%)</title><rect x="145.2" y="1109" width="0.3" height="15.0" fill="rgb(233,128,20)" rx="2" ry="2" />
<text  x="148.23" y="1119.5" ></text>
</g>
<g >
<title>iptable_filter_hook (8,190,749 samples, 0.03%)</title><rect x="886.6" y="837" width="0.4" height="15.0" fill="rgb(232,22,48)" rx="2" ry="2" />
<text  x="889.57" y="847.5" ></text>
</g>
<g >
<title>gazebo::transport::Connection::IsOpen (2,688,974 samples, 0.01%)</title><rect x="51.0" y="1205" width="0.1" height="15.0" fill="rgb(250,165,19)" rx="2" ry="2" />
<text  x="53.98" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,816,086 samples, 0.02%)</title><rect x="43.4" y="1109" width="0.3" height="15.0" fill="rgb(209,68,5)" rx="2" ry="2" />
<text  x="46.39" y="1119.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::operator (5,974,879 samples, 0.02%)</title><rect x="226.5" y="1013" width="0.3" height="15.0" fill="rgb(218,170,13)" rx="2" ry="2" />
<text  x="229.49" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (79,684,575 samples, 0.31%)</title><rect x="207.7" y="1045" width="3.7" height="15.0" fill="rgb(249,192,9)" rx="2" ry="2" />
<text  x="210.72" y="1055.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (6,090,906 samples, 0.02%)</title><rect x="447.4" y="885" width="0.3" height="15.0" fill="rgb(211,211,45)" rx="2" ry="2" />
<text  x="450.38" y="895.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::~unique_lock (19,134,418 samples, 0.08%)</title><rect x="72.4" y="1157" width="0.9" height="15.0" fill="rgb(245,29,2)" rx="2" ry="2" />
<text  x="75.37" y="1167.5" ></text>
</g>
<g >
<title>gazebo::physics::World::Gravity (2,865,199 samples, 0.01%)</title><rect x="25.2" y="1173" width="0.1" height="15.0" fill="rgb(244,157,22)" rx="2" ry="2" />
<text  x="28.20" y="1183.5" ></text>
</g>
<g >
<title>boost::recursive_mutex::lock (5,515,845 samples, 0.02%)</title><rect x="81.0" y="1061" width="0.2" height="15.0" fill="rgb(251,154,13)" rx="2" ry="2" />
<text  x="83.98" y="1071.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::_find_ptrs_if_impl&lt;rclcpp::SubscriptionBase, rclcpp::memory_strategy::MemoryStrategy::get_group_by_subscription (22,104,295 samples, 0.09%)</title><rect x="801.3" y="997" width="1.0" height="15.0" fill="rgb(240,115,38)" rx="2" ry="2" />
<text  x="804.30" y="1007.5" ></text>
</g>
<g >
<title>boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;::operator (17,469,504 samples, 0.07%)</title><rect x="13.7" y="933" width="0.8" height="15.0" fill="rgb(210,229,44)" rx="2" ry="2" />
<text  x="16.71" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (2,262,595 samples, 0.01%)</title><rect x="769.1" y="1029" width="0.1" height="15.0" fill="rgb(205,102,29)" rx="2" ry="2" />
<text  x="772.10" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,076,686 samples, 0.02%)</title><rect x="339.4" y="837" width="0.2" height="15.0" fill="rgb(213,148,30)" rx="2" ry="2" />
<text  x="342.38" y="847.5" ></text>
</g>
<g >
<title>[libgazebo_common.so.11.10.1] (5,850,512 samples, 0.02%)</title><rect x="512.1" y="853" width="0.3" height="15.0" fill="rgb(205,42,30)" rx="2" ry="2" />
<text  x="515.12" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,449,729 samples, 0.02%)</title><rect x="214.5" y="741" width="0.2" height="15.0" fill="rgb(253,17,42)" rx="2" ry="2" />
<text  x="217.52" y="751.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategy::MemoryStrategy::get_timer_by_handle (22,932,433 samples, 0.09%)</title><rect x="189.4" y="1061" width="1.1" height="15.0" fill="rgb(212,35,49)" rx="2" ry="2" />
<text  x="192.41" y="1071.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::operator (7,579,106 samples, 0.03%)</title><rect x="550.9" y="757" width="0.3" height="15.0" fill="rgb(248,223,30)" rx="2" ry="2" />
<text  x="553.86" y="767.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::lock (4,330,544 samples, 0.02%)</title><rect x="620.5" y="901" width="0.2" height="15.0" fill="rgb(230,169,36)" rx="2" ry="2" />
<text  x="623.49" y="911.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (3,115,757 samples, 0.01%)</title><rect x="861.7" y="1109" width="0.1" height="15.0" fill="rgb(206,26,14)" rx="2" ry="2" />
<text  x="864.68" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,574,391 samples, 0.04%)</title><rect x="666.4" y="821" width="0.5" height="15.0" fill="rgb(209,40,39)" rx="2" ry="2" />
<text  x="669.44" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,904 samples, 0.12%)</title><rect x="1181.6" y="1189" width="1.4" height="15.0" fill="rgb(225,77,29)" rx="2" ry="2" />
<text  x="1184.61" y="1199.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (3,362,979 samples, 0.01%)</title><rect x="918.5" y="1301" width="0.1" height="15.0" fill="rgb(223,133,51)" rx="2" ry="2" />
<text  x="921.49" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,634,833 samples, 0.03%)</title><rect x="796.3" y="933" width="0.3" height="15.0" fill="rgb(250,112,8)" rx="2" ry="2" />
<text  x="799.26" y="943.5" ></text>
</g>
<g >
<title>std::move&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;&amp;&gt; (2,152,174 samples, 0.01%)</title><rect x="595.0" y="773" width="0.1" height="15.0" fill="rgb(213,35,36)" rx="2" ry="2" />
<text  x="598.01" y="783.5" ></text>
</g>
<g >
<title>gen11_irq_handler (2,151,809 samples, 0.01%)</title><rect x="339.5" y="821" width="0.1" height="15.0" fill="rgb(242,31,39)" rx="2" ry="2" />
<text  x="342.47" y="831.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::has_position (4,021,069 samples, 0.02%)</title><rect x="765.2" y="965" width="0.2" height="15.0" fill="rgb(232,222,11)" rx="2" ry="2" />
<text  x="768.25" y="975.5" ></text>
</g>
<g >
<title>std::operator!=&lt;gazebo::event::EventT&lt;void  (6,197,676 samples, 0.02%)</title><rect x="788.5" y="965" width="0.3" height="15.0" fill="rgb(222,126,16)" rx="2" ry="2" />
<text  x="791.55" y="975.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (6,165,450 samples, 0.02%)</title><rect x="218.7" y="997" width="0.3" height="15.0" fill="rgb(221,136,19)" rx="2" ry="2" />
<text  x="221.68" y="1007.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::end (5,756,572 samples, 0.02%)</title><rect x="669.8" y="885" width="0.3" height="15.0" fill="rgb(248,86,50)" rx="2" ry="2" />
<text  x="672.80" y="895.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEHingeJoint::PositionImpl (11,488,975 samples, 0.05%)</title><rect x="518.6" y="837" width="0.5" height="15.0" fill="rgb(241,115,18)" rx="2" ry="2" />
<text  x="521.60" y="847.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator= (9,773,285 samples, 0.04%)</title><rect x="606.3" y="789" width="0.5" height="15.0" fill="rgb(239,188,12)" rx="2" ry="2" />
<text  x="609.32" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (194,447,018 samples, 0.77%)</title><rect x="697.8" y="917" width="9.0" height="15.0" fill="rgb(234,89,49)" rx="2" ry="2" />
<text  x="700.77" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,280,761 samples, 0.02%)</title><rect x="207.1" y="1029" width="0.2" height="15.0" fill="rgb(254,41,47)" rx="2" ry="2" />
<text  x="210.06" y="1039.5" ></text>
</g>
<g >
<title>std::operator!=&lt;gazebo::event::EventT&lt;void  (3,769,555 samples, 0.01%)</title><rect x="473.3" y="965" width="0.2" height="15.0" fill="rgb(225,221,29)" rx="2" ry="2" />
<text  x="476.34" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::~vector (13,349,053 samples, 0.05%)</title><rect x="828.6" y="1125" width="0.6" height="15.0" fill="rgb(225,133,3)" rx="2" ry="2" />
<text  x="831.55" y="1135.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;gazebo_ros2_control::GazeboRosControlPlugin::Load (368,172,242 samples, 1.45%)</title><rect x="186.9" y="1205" width="17.1" height="15.0" fill="rgb(206,31,43)" rx="2" ry="2" />
<text  x="189.89" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_service_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; &gt;::push_back (6,390,161 samples, 0.03%)</title><rect x="196.4" y="1013" width="0.3" height="15.0" fill="rgb(246,4,51)" rx="2" ry="2" />
<text  x="199.43" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_realloc_insert&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (6,080,870 samples, 0.02%)</title><rect x="592.4" y="725" width="0.3" height="15.0" fill="rgb(238,208,47)" rx="2" ry="2" />
<text  x="595.44" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,154,483 samples, 0.01%)</title><rect x="724.5" y="821" width="0.1" height="15.0" fill="rgb(228,37,12)" rx="2" ry="2" />
<text  x="727.51" y="831.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::ServerPrivate*, std::default_delete&lt;gazebo::ServerPrivate&gt; &gt; (3,457,696 samples, 0.01%)</title><rect x="906.9" y="1221" width="0.1" height="15.0" fill="rgb(248,81,31)" rx="2" ry="2" />
<text  x="909.88" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,144,958 samples, 0.02%)</title><rect x="842.3" y="997" width="0.2" height="15.0" fill="rgb(219,72,20)" rx="2" ry="2" />
<text  x="845.34" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19,761,189 samples, 0.08%)</title><rect x="146.0" y="1061" width="0.9" height="15.0" fill="rgb(224,8,26)" rx="2" ry="2" />
<text  x="148.97" y="1071.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;controller_interface::ControllerInterface&gt;::shared_ptr (9,892,446 samples, 0.04%)</title><rect x="522.5" y="885" width="0.5" height="15.0" fill="rgb(237,95,18)" rx="2" ry="2" />
<text  x="525.50" y="895.5" ></text>
</g>
<g >
<title>gazebo::msgs::Set (16,491,481 samples, 0.07%)</title><rect x="759.3" y="1029" width="0.7" height="15.0" fill="rgb(218,184,50)" rx="2" ry="2" />
<text  x="762.27" y="1039.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (554,651,533 samples, 2.19%)</title><rect x="793.5" y="1205" width="25.8" height="15.0" fill="rgb(215,169,17)" rx="2" ry="2" />
<text  x="796.52" y="1215.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (36,425,625 samples, 0.14%)</title><rect x="735.9" y="917" width="1.7" height="15.0" fill="rgb(240,199,8)" rx="2" ry="2" />
<text  x="738.91" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::front (2,268,444 samples, 0.01%)</title><rect x="768.6" y="1045" width="0.1" height="15.0" fill="rgb(254,2,36)" rx="2" ry="2" />
<text  x="771.63" y="1055.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (2,169,438 samples, 0.01%)</title><rect x="496.6" y="821" width="0.1" height="15.0" fill="rgb(252,185,4)" rx="2" ry="2" />
<text  x="499.60" y="831.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategy::MemoryStrategy::get_node_by_group (5,587,673 samples, 0.02%)</title><rect x="802.7" y="1029" width="0.3" height="15.0" fill="rgb(244,119,39)" rx="2" ry="2" />
<text  x="805.70" y="1039.5" ></text>
</g>
<g >
<title>std::swap&lt;rclcpp::Waitable*&gt; (14,932,254 samples, 0.06%)</title><rect x="200.0" y="1045" width="0.7" height="15.0" fill="rgb(251,201,42)" rx="2" ry="2" />
<text  x="202.97" y="1055.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (10,113,801 samples, 0.04%)</title><rect x="495.7" y="853" width="0.5" height="15.0" fill="rgb(207,106,9)" rx="2" ry="2" />
<text  x="498.70" y="863.5" ></text>
</g>
<g >
<title>clock_getres@GLIBC_2.2.5 (5,262,379 samples, 0.02%)</title><rect x="928.0" y="1301" width="0.2" height="15.0" fill="rgb(225,26,26)" rx="2" ry="2" />
<text  x="930.96" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,526,646 samples, 0.03%)</title><rect x="830.0" y="1029" width="0.3" height="15.0" fill="rgb(247,51,31)" rx="2" ry="2" />
<text  x="832.99" y="1039.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::MergeFrom (6,466,880 samples, 0.03%)</title><rect x="722.0" y="853" width="0.3" height="15.0" fill="rgb(228,94,31)" rx="2" ry="2" />
<text  x="724.96" y="863.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;rclcpp::executors::MultiThreadedExecutor*, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt;, std::hash&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::equal_to&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::allocator&lt;std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt; &gt; &gt;::operator[] (5,811,521 samples, 0.02%)</title><rect x="819.0" y="1077" width="0.3" height="15.0" fill="rgb(205,19,12)" rx="2" ry="2" />
<text  x="822.01" y="1087.5" ></text>
</g>
<g >
<title>gazebo::physics::ODELink::SetEnabled (10,180,846 samples, 0.04%)</title><rect x="556.1" y="741" width="0.5" height="15.0" fill="rgb(216,59,16)" rx="2" ry="2" />
<text  x="559.12" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,496,532 samples, 0.10%)</title><rect x="11.4" y="1173" width="1.1" height="15.0" fill="rgb(244,103,47)" rx="2" ry="2" />
<text  x="14.36" y="1183.5" ></text>
</g>
<g >
<title>Opcode::MeshInterface::FetchTriangleFromSingles (2,170,695 samples, 0.01%)</title><rect x="117.8" y="1253" width="0.1" height="15.0" fill="rgb(222,2,39)" rx="2" ry="2" />
<text  x="120.77" y="1263.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (10,857,827 samples, 0.04%)</title><rect x="157.2" y="1285" width="0.5" height="15.0" fill="rgb(230,121,34)" rx="2" ry="2" />
<text  x="160.16" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,305,251 samples, 0.01%)</title><rect x="126.3" y="1205" width="0.1" height="15.0" fill="rgb(246,177,40)" rx="2" ry="2" />
<text  x="129.28" y="1215.5" ></text>
</g>
<g >
<title>rclcpp::Duration::nanoseconds (3,745,802 samples, 0.01%)</title><rect x="509.3" y="869" width="0.1" height="15.0" fill="rgb(210,29,51)" rx="2" ry="2" />
<text  x="512.26" y="879.5" ></text>
</g>
<g >
<title>[libgazebo_common.so.11.10.1] (2,525,898 samples, 0.01%)</title><rect x="893.1" y="1237" width="0.1" height="15.0" fill="rgb(215,3,51)" rx="2" ry="2" />
<text  x="896.11" y="1247.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (3,985,156 samples, 0.02%)</title><rect x="228.6" y="965" width="0.2" height="15.0" fill="rgb(221,74,54)" rx="2" ry="2" />
<text  x="231.65" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1093" width="0.1" height="15.0" fill="rgb(231,30,3)" rx="2" ry="2" />
<text  x="135.18" y="1103.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (10,195,111 samples, 0.04%)</title><rect x="256.1" y="981" width="0.5" height="15.0" fill="rgb(253,139,30)" rx="2" ry="2" />
<text  x="259.09" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,124,985 samples, 0.11%)</title><rect x="853.0" y="1045" width="1.3" height="15.0" fill="rgb(237,195,13)" rx="2" ry="2" />
<text  x="855.96" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,180,743 samples, 0.01%)</title><rect x="618.3" y="709" width="0.1" height="15.0" fill="rgb(246,33,7)" rx="2" ry="2" />
<text  x="621.34" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,157,582 samples, 0.01%)</title><rect x="458.0" y="901" width="0.1" height="15.0" fill="rgb(229,3,24)" rx="2" ry="2" />
<text  x="460.96" y="911.5" ></text>
</g>
<g >
<title>boost::asio::detail::socket_ops::non_blocking_send (92,542,284 samples, 0.37%)</title><rect x="54.7" y="933" width="4.3" height="15.0" fill="rgb(211,46,37)" rx="2" ry="2" />
<text  x="57.65" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,866,251 samples, 0.03%)</title><rect x="604.3" y="565" width="0.4" height="15.0" fill="rgb(207,28,17)" rx="2" ry="2" />
<text  x="607.30" y="575.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::msgs::LinkData const&gt;::swap (2,272,626 samples, 0.01%)</title><rect x="74.2" y="1029" width="0.1" height="15.0" fill="rgb(243,212,32)" rx="2" ry="2" />
<text  x="77.22" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,744,160 samples, 0.03%)</title><rect x="852.0" y="1029" width="0.4" height="15.0" fill="rgb(233,97,38)" rx="2" ry="2" />
<text  x="854.99" y="1039.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::find_service_ptrs_if&lt;rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (41,050,466 samples, 0.16%)</title><rect x="809.1" y="1029" width="1.9" height="15.0" fill="rgb(252,226,53)" rx="2" ry="2" />
<text  x="812.09" y="1039.5" ></text>
</g>
<g >
<title>boost::unordered::detail::compressed_base&lt;std::allocator&lt;boost::unordered::detail::ptr_node&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt;, 2&gt;::get (3,236,320 samples, 0.01%)</title><rect x="32.2" y="1045" width="0.1" height="15.0" fill="rgb(212,162,49)" rx="2" ry="2" />
<text  x="35.16" y="1055.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator* (8,278,635 samples, 0.03%)</title><rect x="605.7" y="773" width="0.4" height="15.0" fill="rgb(219,117,30)" rx="2" ry="2" />
<text  x="608.67" y="783.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt; &gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;*, boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; (20,717,087 samples, 0.08%)</title><rect x="654.4" y="869" width="1.0" height="15.0" fill="rgb(242,19,48)" rx="2" ry="2" />
<text  x="657.39" y="879.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::InternalSerializeWithCachedSizesToArray (2,734,777 samples, 0.01%)</title><rect x="1159.5" y="1253" width="0.1" height="15.0" fill="rgb(212,117,49)" rx="2" ry="2" />
<text  x="1162.50" y="1263.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt; &gt;, builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt;&amp;&gt; (12,884,002 samples, 0.05%)</title><rect x="798.3" y="821" width="0.6" height="15.0" fill="rgb(249,90,40)" rx="2" ry="2" />
<text  x="801.26" y="831.5" ></text>
</g>
<g >
<title>std::function&lt;void  (6,663,558 samples, 0.03%)</title><rect x="795.3" y="1045" width="0.4" height="15.0" fill="rgb(222,58,17)" rx="2" ry="2" />
<text  x="798.34" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (57,608,920 samples, 0.23%)</title><rect x="15.3" y="1061" width="2.6" height="15.0" fill="rgb(238,191,54)" rx="2" ry="2" />
<text  x="18.26" y="1071.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::operator (8,385,512 samples, 0.03%)</title><rect x="723.4" y="901" width="0.4" height="15.0" fill="rgb(244,128,19)" rx="2" ry="2" />
<text  x="726.44" y="911.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::~unique_lock (10,376,886 samples, 0.04%)</title><rect x="78.8" y="1141" width="0.5" height="15.0" fill="rgb(213,157,47)" rx="2" ry="2" />
<text  x="81.84" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37,982,977 samples, 0.15%)</title><rect x="537.3" y="789" width="1.8" height="15.0" fill="rgb(241,24,27)" rx="2" ry="2" />
<text  x="540.30" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::event::EventT&lt;void  (6,197,676 samples, 0.02%)</title><rect x="788.5" y="933" width="0.3" height="15.0" fill="rgb(242,74,10)" rx="2" ry="2" />
<text  x="791.55" y="943.5" ></text>
</g>
<g >
<title>gazebo::physics::ContactManager::ResetCount (3,945,060 samples, 0.02%)</title><rect x="217.1" y="1045" width="0.2" height="15.0" fill="rgb(239,224,24)" rx="2" ry="2" />
<text  x="220.13" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;gazebo::msgs::Wrench, std::allocator&lt;gazebo::msgs::Wrench&gt; &gt;::empty (16,412,131 samples, 0.06%)</title><rect x="640.5" y="901" width="0.7" height="15.0" fill="rgb(243,67,11)" rx="2" ry="2" />
<text  x="643.47" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::emplace_back&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (8,328,804 samples, 0.03%)</title><rect x="592.4" y="741" width="0.4" height="15.0" fill="rgb(229,34,2)" rx="2" ry="2" />
<text  x="595.44" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,440,838 samples, 0.02%)</title><rect x="510.9" y="709" width="0.3" height="15.0" fill="rgb(228,32,30)" rx="2" ry="2" />
<text  x="513.91" y="719.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::Update (61,045,620 samples, 0.24%)</title><rect x="639.1" y="917" width="2.8" height="15.0" fill="rgb(231,28,3)" rx="2" ry="2" />
<text  x="642.07" y="927.5" ></text>
</g>
<g >
<title>std::abs (2,151,610 samples, 0.01%)</title><rect x="559.2" y="725" width="0.1" height="15.0" fill="rgb(209,223,51)" rx="2" ry="2" />
<text  x="562.18" y="735.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (2,929,018 samples, 0.01%)</title><rect x="848.0" y="1093" width="0.1" height="15.0" fill="rgb(240,16,26)" rx="2" ry="2" />
<text  x="850.97" y="1103.5" ></text>
</g>
<g >
<title>sTrimeshBoxColliderData::TestCollisionForSingleTriangle (25,711,997 samples, 0.10%)</title><rect x="248.4" y="981" width="1.2" height="15.0" fill="rgb(214,5,33)" rx="2" ry="2" />
<text  x="251.36" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,227,017 samples, 0.02%)</title><rect x="478.2" y="645" width="0.2" height="15.0" fill="rgb(222,168,31)" rx="2" ry="2" />
<text  x="481.16" y="655.5" ></text>
</g>
<g >
<title>dds_entity_unlock (2,151,257 samples, 0.01%)</title><rect x="157.9" y="1285" width="0.1" height="15.0" fill="rgb(245,26,27)" rx="2" ry="2" />
<text  x="160.85" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;gazebo::physics::Entity*, std::allocator&lt;gazebo::physics::Entity*&gt; &gt;::clear (14,994,255 samples, 0.06%)</title><rect x="744.4" y="1045" width="0.7" height="15.0" fill="rgb(227,123,13)" rx="2" ry="2" />
<text  x="747.36" y="1055.5" ></text>
</g>
<g >
<title>boost::operator&lt; &lt;gazebo::physics::Model, gazebo::physics::Model&gt; (4,076,742 samples, 0.02%)</title><rect x="221.0" y="933" width="0.2" height="15.0" fill="rgb(214,17,7)" rx="2" ry="2" />
<text  x="224.04" y="943.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (3,933,021 samples, 0.02%)</title><rect x="39.9" y="1061" width="0.2" height="15.0" fill="rgb(243,139,11)" rx="2" ry="2" />
<text  x="42.90" y="1071.5" ></text>
</g>
<g >
<title>dJointGetHingeAnchor (9,918,824 samples, 0.04%)</title><rect x="579.8" y="789" width="0.5" height="15.0" fill="rgb(253,82,32)" rx="2" ry="2" />
<text  x="582.84" y="799.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::recursive_mutex&gt;::lock_guard (6,364,390 samples, 0.03%)</title><rect x="544.2" y="757" width="0.3" height="15.0" fill="rgb(224,167,49)" rx="2" ry="2" />
<text  x="547.16" y="767.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_deallocate (7,377,648 samples, 0.03%)</title><rect x="677.7" y="869" width="0.3" height="15.0" fill="rgb(218,191,27)" rx="2" ry="2" />
<text  x="680.66" y="879.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;rclcpp::Executor::execute_subscription (6,663,558 samples, 0.03%)</title><rect x="795.3" y="1013" width="0.4" height="15.0" fill="rgb(228,149,9)" rx="2" ry="2" />
<text  x="798.34" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,666,830 samples, 0.08%)</title><rect x="56.5" y="197" width="1.0" height="15.0" fill="rgb(254,28,32)" rx="2" ry="2" />
<text  x="59.49" y="207.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt;*&gt; (24,693,854 samples, 0.10%)</title><rect x="769.9" y="1013" width="1.2" height="15.0" fill="rgb(213,172,36)" rx="2" ry="2" />
<text  x="772.90" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,585,715 samples, 0.03%)</title><rect x="852.1" y="965" width="0.3" height="15.0" fill="rgb(245,30,40)" rx="2" ry="2" />
<text  x="855.09" y="975.5" ></text>
</g>
<g >
<title>rclcpp::Executor::spin_once_impl (359,837,343 samples, 1.42%)</title><rect x="187.3" y="1125" width="16.7" height="15.0" fill="rgb(245,63,10)" rx="2" ry="2" />
<text  x="190.28" y="1135.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (4,108,094 samples, 0.02%)</title><rect x="472.4" y="773" width="0.2" height="15.0" fill="rgb(247,81,16)" rx="2" ry="2" />
<text  x="475.39" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,572,522 samples, 0.07%)</title><rect x="456.9" y="917" width="0.8" height="15.0" fill="rgb(244,53,48)" rx="2" ry="2" />
<text  x="459.92" y="927.5" ></text>
</g>
<g >
<title>boost::unordered::unordered_set&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt;::emplace&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; const&amp;&gt; (4,234,238 samples, 0.02%)</title><rect x="722.9" y="837" width="0.2" height="15.0" fill="rgb(213,130,8)" rx="2" ry="2" />
<text  x="725.94" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,286,132 samples, 0.02%)</title><rect x="927.7" y="1269" width="0.2" height="15.0" fill="rgb(225,151,5)" rx="2" ry="2" />
<text  x="930.67" y="1279.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_331 (6,216,133 samples, 0.02%)</title><rect x="528.3" y="773" width="0.2" height="15.0" fill="rgb(218,7,21)" rx="2" ry="2" />
<text  x="531.26" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (63,852,517 samples, 0.25%)</title><rect x="460.2" y="981" width="3.0" height="15.0" fill="rgb(235,21,29)" rx="2" ry="2" />
<text  x="463.21" y="991.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::set_name (2,159,047 samples, 0.01%)</title><rect x="752.3" y="1045" width="0.1" height="15.0" fill="rgb(234,177,2)" rx="2" ry="2" />
<text  x="755.35" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,790,508 samples, 0.01%)</title><rect x="469.2" y="917" width="0.1" height="15.0" fill="rgb(249,217,34)" rx="2" ry="2" />
<text  x="472.17" y="927.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (3,924,570 samples, 0.02%)</title><rect x="590.9" y="741" width="0.2" height="15.0" fill="rgb(241,155,28)" rx="2" ry="2" />
<text  x="593.91" y="751.5" ></text>
</g>
<g >
<title>gazebo::msgs::WorldStatistics::has_log_playback_stats (4,356,428 samples, 0.02%)</title><rect x="771.7" y="1045" width="0.2" height="15.0" fill="rgb(247,109,39)" rx="2" ry="2" />
<text  x="774.74" y="1055.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Normalize (4,203,488 samples, 0.02%)</title><rect x="762.5" y="997" width="0.2" height="15.0" fill="rgb(254,84,21)" rx="2" ry="2" />
<text  x="765.55" y="1007.5" ></text>
</g>
<g >
<title>dMultiply0_333 (6,337,944 samples, 0.03%)</title><rect x="242.6" y="917" width="0.3" height="15.0" fill="rgb(235,135,22)" rx="2" ry="2" />
<text  x="245.59" y="927.5" ></text>
</g>
<g >
<title>[libgazebo_ros_state.so] (4,032,271 samples, 0.02%)</title><rect x="680.5" y="901" width="0.2" height="15.0" fill="rgb(205,139,51)" rx="2" ry="2" />
<text  x="683.52" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,910,423 samples, 0.01%)</title><rect x="779.1" y="837" width="0.1" height="15.0" fill="rgb(226,64,5)" rx="2" ry="2" />
<text  x="782.11" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;gazebo::msgs::ServerControl, std::allocator&lt;gazebo::msgs::ServerControl&gt; &gt;::begin (4,830,047 samples, 0.02%)</title><rect x="905.0" y="1253" width="0.2" height="15.0" fill="rgb(229,21,36)" rx="2" ry="2" />
<text  x="908.02" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,150,356 samples, 0.02%)</title><rect x="616.1" y="853" width="0.3" height="15.0" fill="rgb(231,193,38)" rx="2" ry="2" />
<text  x="619.10" y="863.5" ></text>
</g>
<g >
<title>[libgazebo_transport.so.11.10.1] (9,854,672 samples, 0.04%)</title><rect x="77.4" y="1141" width="0.5" height="15.0" fill="rgb(245,38,0)" rx="2" ry="2" />
<text  x="80.41" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,154,483 samples, 0.01%)</title><rect x="724.5" y="789" width="0.1" height="15.0" fill="rgb(231,124,50)" rx="2" ry="2" />
<text  x="727.51" y="799.5" ></text>
</g>
<g >
<title>boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Publisher, unsigned int&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Publisher*&gt;, boost::arg&lt;1&gt; &gt; &gt;::operator (5,433,391 samples, 0.02%)</title><rect x="79.9" y="1077" width="0.2" height="15.0" fill="rgb(226,127,16)" rx="2" ry="2" />
<text  x="82.88" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (81,162,592 samples, 0.32%)</title><rect x="1185.5" y="1253" width="3.8" height="15.0" fill="rgb(206,193,26)" rx="2" ry="2" />
<text  x="1188.51" y="1263.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Axis (13,898,635 samples, 0.05%)</title><rect x="581.3" y="789" width="0.7" height="15.0" fill="rgb(210,131,40)" rx="2" ry="2" />
<text  x="584.33" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::ServiceBase,  (6,293,732 samples, 0.02%)</title><rect x="810.3" y="981" width="0.3" height="15.0" fill="rgb(244,39,7)" rx="2" ry="2" />
<text  x="813.32" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,896,962 samples, 0.02%)</title><rect x="737.4" y="757" width="0.2" height="15.0" fill="rgb(229,102,20)" rx="2" ry="2" />
<text  x="740.42" y="767.5" ></text>
</g>
<g >
<title>gazebo_ros2_control::GazeboSystem::read (3,695,070 samples, 0.01%)</title><rect x="517.8" y="885" width="0.2" height="15.0" fill="rgb(252,153,35)" rx="2" ry="2" />
<text  x="520.81" y="895.5" ></text>
</g>
<g >
<title>dxSimpleSpace::collide2 (28,712,088 samples, 0.11%)</title><rect x="36.8" y="965" width="1.3" height="15.0" fill="rgb(246,152,31)" rx="2" ry="2" />
<text  x="39.79" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt;*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt; &gt; &gt; &gt;::__normal_iterator (2,191,626 samples, 0.01%)</title><rect x="226.4" y="1013" width="0.1" height="15.0" fill="rgb(242,184,47)" rx="2" ry="2" />
<text  x="229.39" y="1023.5" ></text>
</g>
<g >
<title>joint_trajectory_controller::JointTrajectoryController::update (5,649,939 samples, 0.02%)</title><rect x="507.5" y="885" width="0.3" height="15.0" fill="rgb(228,52,53)" rx="2" ry="2" />
<text  x="510.51" y="895.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_ready_executable (56,196,615 samples, 0.22%)</title><rect x="188.6" y="1093" width="2.7" height="15.0" fill="rgb(211,58,9)" rx="2" ry="2" />
<text  x="191.64" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,154,483 samples, 0.01%)</title><rect x="724.5" y="805" width="0.1" height="15.0" fill="rgb(216,130,19)" rx="2" ry="2" />
<text  x="727.51" y="815.5" ></text>
</g>
<g >
<title>__libc_recvmsg (29,212,904 samples, 0.12%)</title><rect x="1181.6" y="1285" width="1.4" height="15.0" fill="rgb(240,31,12)" rx="2" ry="2" />
<text  x="1184.61" y="1295.5" ></text>
</g>
<g >
<title>gazebo::physics::Collision::SetWorldPoseDirty (4,154,059 samples, 0.02%)</title><rect x="228.2" y="1013" width="0.2" height="15.0" fill="rgb(251,115,40)" rx="2" ry="2" />
<text  x="231.17" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, int&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::find (2,154,874 samples, 0.01%)</title><rect x="79.9" y="1013" width="0.1" height="15.0" fill="rgb(207,41,0)" rx="2" ry="2" />
<text  x="82.88" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="1029" width="0.1" height="15.0" fill="rgb(226,119,47)" rx="2" ry="2" />
<text  x="839.31" y="1039.5" ></text>
</g>
<g >
<title>gazebo::common::Time::operator- (2,158,292 samples, 0.01%)</title><rect x="752.1" y="1045" width="0.1" height="15.0" fill="rgb(209,186,39)" rx="2" ry="2" />
<text  x="755.15" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::end (4,068,091 samples, 0.02%)</title><rect x="584.7" y="725" width="0.2" height="15.0" fill="rgb(247,82,22)" rx="2" ry="2" />
<text  x="587.74" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,440,838 samples, 0.02%)</title><rect x="510.9" y="725" width="0.3" height="15.0" fill="rgb(249,117,10)" rx="2" ry="2" />
<text  x="513.91" y="735.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (2,159,542 samples, 0.01%)</title><rect x="728.8" y="949" width="0.1" height="15.0" fill="rgb(244,35,17)" rx="2" ry="2" />
<text  x="731.79" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,882,600 samples, 0.02%)</title><rect x="666.3" y="789" width="0.1" height="15.0" fill="rgb(208,172,44)" rx="2" ry="2" />
<text  x="669.26" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_insert&lt;unsigned int const&amp;&gt; (5,623,817 samples, 0.02%)</title><rect x="83.6" y="1125" width="0.3" height="15.0" fill="rgb(212,49,25)" rx="2" ry="2" />
<text  x="86.61" y="1135.5" ></text>
</g>
<g >
<title>ode::quickstep::sum6 (6,268,071 samples, 0.02%)</title><rect x="787.0" y="949" width="0.2" height="15.0" fill="rgb(236,123,35)" rx="2" ry="2" />
<text  x="789.95" y="959.5" ></text>
</g>
<g >
<title>gazebo::physics::ODECollision::GetODESurface (8,163,036 samples, 0.03%)</title><rect x="260.0" y="1013" width="0.3" height="15.0" fill="rgb(210,205,17)" rx="2" ry="2" />
<text  x="262.96" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,067,708 samples, 0.05%)</title><rect x="12.9" y="1141" width="0.6" height="15.0" fill="rgb(254,79,19)" rx="2" ry="2" />
<text  x="15.89" y="1151.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEHingeJoint::PositionImpl (15,902,358 samples, 0.06%)</title><rect x="471.4" y="837" width="0.7" height="15.0" fill="rgb(209,59,7)" rx="2" ry="2" />
<text  x="474.38" y="847.5" ></text>
</g>
<g >
<title>boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo::transport::ConnectionManager&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::transport::ConnectionManager*&gt; &gt; &gt;::operator (858,181,318 samples, 3.39%)</title><rect x="48.6" y="1269" width="39.9" height="15.0" fill="rgb(207,142,31)" rx="2" ry="2" />
<text  x="51.58" y="1279.5" >boo..</text>
</g>
<g >
<title>[unknown] (35,163,670 samples, 0.14%)</title><rect x="162.4" y="1269" width="1.6" height="15.0" fill="rgb(253,108,31)" rx="2" ry="2" />
<text  x="165.38" y="1279.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator-= (14,075,362 samples, 0.06%)</title><rect x="447.4" y="917" width="0.6" height="15.0" fill="rgb(238,34,16)" rx="2" ry="2" />
<text  x="450.38" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,434,575 samples, 0.02%)</title><rect x="54.0" y="997" width="0.3" height="15.0" fill="rgb(228,124,20)" rx="2" ry="2" />
<text  x="57.03" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,624,031 samples, 0.01%)</title><rect x="22.7" y="885" width="0.2" height="15.0" fill="rgb(248,178,10)" rx="2" ry="2" />
<text  x="25.74" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (72,671,362 samples, 0.29%)</title><rect x="475.0" y="997" width="3.4" height="15.0" fill="rgb(233,10,15)" rx="2" ry="2" />
<text  x="477.97" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,243,735 samples, 0.01%)</title><rect x="266.8" y="773" width="0.1" height="15.0" fill="rgb(214,224,5)" rx="2" ry="2" />
<text  x="269.79" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,839,504 samples, 0.02%)</title><rect x="1171.6" y="1093" width="0.2" height="15.0" fill="rgb(211,144,25)" rx="2" ry="2" />
<text  x="1174.62" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (227,213,914 samples, 0.90%)</title><rect x="175.7" y="1269" width="10.6" height="15.0" fill="rgb(247,4,1)" rx="2" ry="2" />
<text  x="178.71" y="1279.5" ></text>
</g>
<g >
<title>gazebo::physics::MultiRayShape::GetRetro (5,398,487 samples, 0.02%)</title><rect x="24.9" y="1173" width="0.3" height="15.0" fill="rgb(234,64,35)" rx="2" ry="2" />
<text  x="27.95" y="1183.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::CreateMaybeMessage&lt;gazebo::msgs::Time&gt; (3,325,405 samples, 0.01%)</title><rect x="27.2" y="1109" width="0.1" height="15.0" fill="rgb(251,104,47)" rx="2" ry="2" />
<text  x="30.19" y="1119.5" ></text>
</g>
<g >
<title>__ieee754_log_fma (6,415,848 samples, 0.03%)</title><rect x="145.2" y="1285" width="0.3" height="15.0" fill="rgb(249,28,7)" rx="2" ry="2" />
<text  x="148.23" y="1295.5" ></text>
</g>
<g >
<title>boost::dynamic_pointer_cast&lt;gazebo::physics::Model, gazebo::physics::Base&gt; (12,207,782 samples, 0.05%)</title><rect x="541.1" y="757" width="0.6" height="15.0" fill="rgb(206,196,20)" rx="2" ry="2" />
<text  x="544.10" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,411,266 samples, 0.01%)</title><rect x="830.2" y="901" width="0.1" height="15.0" fill="rgb(213,37,38)" rx="2" ry="2" />
<text  x="833.18" y="911.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (6,036,546 samples, 0.02%)</title><rect x="861.4" y="1125" width="0.3" height="15.0" fill="rgb(239,50,21)" rx="2" ry="2" />
<text  x="864.40" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,650,359,144 samples, 6.51%)</title><rect x="1078.3" y="1061" width="76.8" height="15.0" fill="rgb(219,161,52)" rx="2" ry="2" />
<text  x="1081.28" y="1071.5" >[[kernel..</text>
</g>
<g >
<title>[libjoint_state_broadcaster.so] (4,400,878 samples, 0.02%)</title><rect x="831.4" y="1109" width="0.2" height="15.0" fill="rgb(249,110,45)" rx="2" ry="2" />
<text  x="834.37" y="1119.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::Position (13,318,052 samples, 0.05%)</title><rect x="518.5" y="853" width="0.6" height="15.0" fill="rgb(222,149,0)" rx="2" ry="2" />
<text  x="521.52" y="863.5" ></text>
</g>
<g >
<title>std::function&lt;void  (75,068,030 samples, 0.30%)</title><rect x="21.0" y="1141" width="3.5" height="15.0" fill="rgb(217,217,44)" rx="2" ry="2" />
<text  x="23.99" y="1151.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (4,741,425 samples, 0.02%)</title><rect x="49.6" y="1141" width="0.3" height="15.0" fill="rgb(234,9,2)" rx="2" ry="2" />
<text  x="52.65" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,861,709 samples, 0.04%)</title><rect x="741.0" y="789" width="0.5" height="15.0" fill="rgb(229,209,6)" rx="2" ry="2" />
<text  x="743.99" y="799.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (83,220,309 samples, 0.33%)</title><rect x="97.8" y="1301" width="3.9" height="15.0" fill="rgb(205,97,3)" rx="2" ry="2" />
<text  x="100.80" y="1311.5" ></text>
</g>
<g >
<title>sCylinderTrimeshColliderData::_cldTestSeparatingAxes (21,190,090 samples, 0.08%)</title><rect x="253.6" y="949" width="1.0" height="15.0" fill="rgb(214,25,38)" rx="2" ry="2" />
<text  x="256.62" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,434,575 samples, 0.02%)</title><rect x="54.0" y="1013" width="0.3" height="15.0" fill="rgb(237,211,31)" rx="2" ry="2" />
<text  x="57.03" y="1023.5" ></text>
</g>
<g >
<title>gazebo::msgs::IMU::has_angular_velocity (4,317,039 samples, 0.02%)</title><rect x="26.3" y="1157" width="0.2" height="15.0" fill="rgb(210,11,41)" rx="2" ry="2" />
<text  x="29.32" y="1167.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (3,954,315 samples, 0.02%)</title><rect x="688.8" y="821" width="0.2" height="15.0" fill="rgb(239,149,17)" rx="2" ry="2" />
<text  x="691.82" y="831.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (7,000,066 samples, 0.03%)</title><rect x="34.1" y="1157" width="0.3" height="15.0" fill="rgb(222,111,48)" rx="2" ry="2" />
<text  x="37.06" y="1167.5" ></text>
</g>
<g >
<title>boost::condition_variable::wait (15,047,314 samples, 0.06%)</title><rect x="18.3" y="1205" width="0.7" height="15.0" fill="rgb(237,116,24)" rx="2" ry="2" />
<text  x="21.29" y="1215.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt;*, boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (24,693,854 samples, 0.10%)</title><rect x="769.9" y="1029" width="1.2" height="15.0" fill="rgb(224,188,24)" rx="2" ry="2" />
<text  x="772.90" y="1039.5" ></text>
</g>
<g >
<title>hardware_interface::System::write (1,922,953,527 samples, 7.59%)</title><rect x="524.0" y="885" width="89.5" height="15.0" fill="rgb(232,30,52)" rx="2" ry="2" />
<text  x="526.99" y="895.5" >hardware_i..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo::physics::Link*&gt; (4,236,775 samples, 0.02%)</title><rect x="725.7" y="933" width="0.2" height="15.0" fill="rgb(252,116,51)" rx="2" ry="2" />
<text  x="728.69" y="943.5" ></text>
</g>
<g >
<title>gazebo::transport::TopicManager::AddNodeToProcess (16,967,754 samples, 0.07%)</title><rect x="722.4" y="869" width="0.7" height="15.0" fill="rgb(246,77,5)" rx="2" ry="2" />
<text  x="725.35" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_erase (2,379,565 samples, 0.01%)</title><rect x="769.5" y="1013" width="0.1" height="15.0" fill="rgb(224,3,47)" rx="2" ry="2" />
<text  x="772.50" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (221,260,663 samples, 0.87%)</title><rect x="176.0" y="1141" width="10.3" height="15.0" fill="rgb(252,211,31)" rx="2" ry="2" />
<text  x="178.98" y="1151.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::transport::Publisher&gt;::shared_ptr&lt;gazebo::transport::Publisher&gt; (5,195,452 samples, 0.02%)</title><rect x="77.9" y="1125" width="0.2" height="15.0" fill="rgb(227,143,17)" rx="2" ry="2" />
<text  x="80.87" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,850,278 samples, 0.02%)</title><rect x="832.5" y="1125" width="0.2" height="15.0" fill="rgb(232,164,14)" rx="2" ry="2" />
<text  x="835.51" y="1135.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (987,863,774 samples, 3.90%)</title><rect x="819.3" y="1189" width="46.1" height="15.0" fill="rgb(233,85,36)" rx="2" ry="2" />
<text  x="822.35" y="1199.5" >std:..</text>
</g>
<g >
<title>gazebo::msgs::LinkData::CopyFrom (19,794,413 samples, 0.08%)</title><rect x="26.8" y="1157" width="0.9" height="15.0" fill="rgb(251,203,50)" rx="2" ry="2" />
<text  x="29.80" y="1167.5" ></text>
</g>
<g >
<title>gazebo::physics::Model::GetLinks (3,935,473 samples, 0.02%)</title><rect x="653.7" y="901" width="0.1" height="15.0" fill="rgb(249,162,45)" rx="2" ry="2" />
<text  x="656.65" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,952,087 samples, 0.02%)</title><rect x="487.2" y="981" width="0.2" height="15.0" fill="rgb(244,49,16)" rx="2" ry="2" />
<text  x="490.20" y="991.5" ></text>
</g>
<g >
<title>gazebo::msgs::Quaternion::Quaternion (4,477,017 samples, 0.02%)</title><rect x="758.4" y="997" width="0.2" height="15.0" fill="rgb(222,67,37)" rx="2" ry="2" />
<text  x="761.40" y="1007.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (4,151,006 samples, 0.02%)</title><rect x="741.7" y="981" width="0.2" height="15.0" fill="rgb(205,198,51)" rx="2" ry="2" />
<text  x="744.73" y="991.5" ></text>
</g>
<g >
<title>SingletonT&lt;gazebo::util::LogRecord&gt;::Instance (2,180,557 samples, 0.01%)</title><rect x="459.5" y="1045" width="0.1" height="15.0" fill="rgb(254,70,17)" rx="2" ry="2" />
<text  x="462.46" y="1055.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_133 (6,337,944 samples, 0.03%)</title><rect x="242.6" y="901" width="0.3" height="15.0" fill="rgb(215,54,15)" rx="2" ry="2" />
<text  x="245.59" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_S_do_relocate (8,452,734 samples, 0.03%)</title><rect x="588.3" y="693" width="0.3" height="15.0" fill="rgb(209,14,23)" rx="2" ry="2" />
<text  x="591.25" y="703.5" ></text>
</g>
<g >
<title>Opcode::OBBCollider::_Collide (43,278,480 samples, 0.17%)</title><rect x="118.0" y="1253" width="2.0" height="15.0" fill="rgb(234,197,49)" rx="2" ry="2" />
<text  x="120.97" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt;::operator++ (4,392,086 samples, 0.02%)</title><rect x="563.2" y="821" width="0.2" height="15.0" fill="rgb(241,58,28)" rx="2" ry="2" />
<text  x="566.16" y="831.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::~RepeatedPtrField (48,055,424 samples, 0.19%)</title><rect x="755.7" y="1029" width="2.3" height="15.0" fill="rgb(233,120,48)" rx="2" ry="2" />
<text  x="758.75" y="1039.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::Update (100,035,863 samples, 0.39%)</title><rect x="473.7" y="1029" width="4.7" height="15.0" fill="rgb(239,108,20)" rx="2" ry="2" />
<text  x="476.70" y="1039.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;nav_msgs::msg::Odometry_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::publish (15,999,673 samples, 0.06%)</title><rect x="635.3" y="885" width="0.7" height="15.0" fill="rgb(237,196,8)" rx="2" ry="2" />
<text  x="638.25" y="895.5" ></text>
</g>
<g >
<title>rclcpp::Context::is_valid (4,736,497 samples, 0.02%)</title><rect x="790.3" y="1045" width="0.2" height="15.0" fill="rgb(247,171,52)" rx="2" ry="2" />
<text  x="793.26" y="1055.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::~unique_lock (6,647,097 samples, 0.03%)</title><rect x="60.3" y="1173" width="0.3" height="15.0" fill="rgb(230,46,16)" rx="2" ry="2" />
<text  x="63.27" y="1183.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (5,078,644 samples, 0.02%)</title><rect x="828.0" y="1045" width="0.3" height="15.0" fill="rgb(229,2,10)" rx="2" ry="2" />
<text  x="831.03" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,889,694 samples, 0.06%)</title><rect x="458.1" y="981" width="0.7" height="15.0" fill="rgb(223,67,37)" rx="2" ry="2" />
<text  x="461.06" y="991.5" ></text>
</g>
<g >
<title>dCollideRTL (8,230,872 samples, 0.03%)</title><rect x="37.1" y="885" width="0.4" height="15.0" fill="rgb(217,178,16)" rx="2" ry="2" />
<text  x="40.10" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="1125" width="0.2" height="15.0" fill="rgb(243,170,10)" rx="2" ry="2" />
<text  x="823.95" y="1135.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt;,  (7,017,392 samples, 0.03%)</title><rect x="790.9" y="789" width="0.3" height="15.0" fill="rgb(228,78,20)" rx="2" ry="2" />
<text  x="793.86" y="799.5" ></text>
</g>
<g >
<title>gazebo_ros2_control::GazeboSystem::write (44,871,004 samples, 0.18%)</title><rect x="774.5" y="869" width="2.0" height="15.0" fill="rgb(210,131,37)" rx="2" ry="2" />
<text  x="777.45" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="1093" width="0.2" height="15.0" fill="rgb(224,43,25)" rx="2" ry="2" />
<text  x="823.95" y="1103.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::node_interfaces::NodeLoggingInterface,  (3,986,710 samples, 0.02%)</title><rect x="497.4" y="853" width="0.2" height="15.0" fill="rgb(243,0,7)" rx="2" ry="2" />
<text  x="500.38" y="863.5" ></text>
</g>
<g >
<title>gazebo::sensors::RaySensor::UpdateImpl (268,288,320 samples, 1.06%)</title><rect x="34.4" y="1173" width="12.5" height="15.0" fill="rgb(233,48,22)" rx="2" ry="2" />
<text  x="37.38" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,157,582 samples, 0.01%)</title><rect x="458.0" y="837" width="0.1" height="15.0" fill="rgb(211,84,10)" rx="2" ry="2" />
<text  x="460.96" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;rclcpp::executors::MultiThreadedExecutor*, std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt;, std::allocator&lt;std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::hash&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (8,176,813 samples, 0.03%)</title><rect x="793.1" y="1029" width="0.4" height="15.0" fill="rgb(251,129,18)" rx="2" ry="2" />
<text  x="796.13" y="1039.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (5,985,092 samples, 0.02%)</title><rect x="610.5" y="725" width="0.2" height="15.0" fill="rgb(209,25,22)" rx="2" ry="2" />
<text  x="613.46" y="735.5" ></text>
</g>
<g >
<title>std::_List_node&lt;std::weak_ptr&lt;rclcpp::node_interfaces::NodeBaseInterface&gt; &gt;::_M_valptr (8,086,961 samples, 0.03%)</title><rect x="802.3" y="1013" width="0.4" height="15.0" fill="rgb(223,190,2)" rx="2" ry="2" />
<text  x="805.33" y="1023.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::physics::WorldPrivate*, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt; (6,234,928 samples, 0.02%)</title><rect x="561.5" y="725" width="0.3" height="15.0" fill="rgb(236,23,39)" rx="2" ry="2" />
<text  x="564.49" y="735.5" ></text>
</g>
<g >
<title>[libgazebo_ros_node.so] (2,614,041 samples, 0.01%)</title><rect x="823.7" y="1141" width="0.1" height="15.0" fill="rgb(208,157,29)" rx="2" ry="2" />
<text  x="826.68" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,636,810 samples, 0.03%)</title><rect x="615.3" y="837" width="0.3" height="15.0" fill="rgb(246,154,32)" rx="2" ry="2" />
<text  x="618.27" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,281,711 samples, 0.01%)</title><rect x="841.9" y="1045" width="0.2" height="15.0" fill="rgb(209,38,51)" rx="2" ry="2" />
<text  x="844.95" y="1055.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::AssignWithDefault (3,922,629 samples, 0.02%)</title><rect x="764.5" y="869" width="0.2" height="15.0" fill="rgb(220,128,29)" rx="2" ry="2" />
<text  x="767.51" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,150,199 samples, 0.01%)</title><rect x="13.5" y="1237" width="0.1" height="15.0" fill="rgb(220,90,16)" rx="2" ry="2" />
<text  x="16.45" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,243,735 samples, 0.01%)</title><rect x="266.8" y="837" width="0.1" height="15.0" fill="rgb(209,118,43)" rx="2" ry="2" />
<text  x="269.79" y="847.5" ></text>
</g>
<g >
<title>std::forward&lt;std::tuple&lt;&gt; &gt; (3,597,363 samples, 0.01%)</title><rect x="86.1" y="1125" width="0.2" height="15.0" fill="rgb(208,218,0)" rx="2" ry="2" />
<text  x="89.09" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (108,134,401 samples, 0.43%)</title><rect x="1178.9" y="1301" width="5.0" height="15.0" fill="rgb(218,45,50)" rx="2" ry="2" />
<text  x="1181.86" y="1311.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::Update (210,300,518 samples, 0.83%)</title><rect x="697.0" y="933" width="9.8" height="15.0" fill="rgb(238,167,1)" rx="2" ry="2" />
<text  x="700.03" y="943.5" ></text>
</g>
<g >
<title>entidx_lookup_guid_untyped (42,887,430 samples, 0.17%)</title><rect x="160.0" y="1285" width="2.0" height="15.0" fill="rgb(244,219,14)" rx="2" ry="2" />
<text  x="163.02" y="1295.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::set&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::node_alloc (3,236,320 samples, 0.01%)</title><rect x="32.2" y="1061" width="0.1" height="15.0" fill="rgb(233,174,15)" rx="2" ry="2" />
<text  x="35.16" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,282,220 samples, 0.03%)</title><rect x="618.1" y="853" width="0.3" height="15.0" fill="rgb(205,151,42)" rx="2" ry="2" />
<text  x="621.05" y="863.5" ></text>
</g>
<g >
<title>boost::detail::get_current_thread_data (3,442,044 samples, 0.01%)</title><rect x="18.3" y="1189" width="0.1" height="15.0" fill="rgb(222,131,49)" rx="2" ry="2" />
<text  x="21.29" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (227,213,914 samples, 0.90%)</title><rect x="175.7" y="1253" width="10.6" height="15.0" fill="rgb(249,91,14)" rx="2" ry="2" />
<text  x="178.71" y="1263.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::operator (4,096,517 samples, 0.02%)</title><rect x="555.9" y="725" width="0.2" height="15.0" fill="rgb(213,173,8)" rx="2" ry="2" />
<text  x="558.93" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt;*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt; &gt; &gt; &gt;::__normal_iterator (2,208,845 samples, 0.01%)</title><rect x="559.0" y="741" width="0.1" height="15.0" fill="rgb(216,123,50)" rx="2" ry="2" />
<text  x="561.97" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,953,363 samples, 0.02%)</title><rect x="616.2" y="821" width="0.2" height="15.0" fill="rgb(209,172,26)" rx="2" ry="2" />
<text  x="619.20" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (7,843,523 samples, 0.03%)</title><rect x="803.1" y="885" width="0.3" height="15.0" fill="rgb(233,213,25)" rx="2" ry="2" />
<text  x="806.08" y="895.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_subscription_t,  (7,843,523 samples, 0.03%)</title><rect x="803.1" y="933" width="0.3" height="15.0" fill="rgb(216,63,22)" rx="2" ry="2" />
<text  x="806.08" y="943.5" ></text>
</g>
<g >
<title>dxSpace::dirty (2,439,912 samples, 0.01%)</title><rect x="553.8" y="709" width="0.1" height="15.0" fill="rgb(220,93,30)" rx="2" ry="2" />
<text  x="556.79" y="719.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2,894,351 samples, 0.01%)</title><rect x="840.0" y="1093" width="0.1" height="15.0" fill="rgb(254,147,38)" rx="2" ry="2" />
<text  x="842.96" y="1103.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, gazebo::physics::LinkPrivate*, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::_M_head (4,310,872 samples, 0.02%)</title><rect x="591.3" y="677" width="0.2" height="15.0" fill="rgb(209,133,45)" rx="2" ry="2" />
<text  x="594.27" y="687.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::HasType (4,224,384 samples, 0.02%)</title><rect x="237.5" y="821" width="0.2" height="15.0" fill="rgb(248,11,53)" rx="2" ry="2" />
<text  x="240.54" y="831.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;boost::shared_ptr&lt;gazebo::transport::Connection&gt; &gt;::_List_iterator (7,614,840 samples, 0.03%)</title><rect x="88.1" y="1205" width="0.3" height="15.0" fill="rgb(254,107,17)" rx="2" ry="2" />
<text  x="91.06" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (87,697,037 samples, 0.35%)</title><rect x="54.9" y="693" width="4.1" height="15.0" fill="rgb(246,224,17)" rx="2" ry="2" />
<text  x="57.88" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (288,944,160 samples, 1.14%)</title><rect x="875.8" y="1093" width="13.4" height="15.0" fill="rgb(227,84,14)" rx="2" ry="2" />
<text  x="878.79" y="1103.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::OnPoseChange (7,803,359 samples, 0.03%)</title><rect x="555.8" y="741" width="0.3" height="15.0" fill="rgb(235,124,31)" rx="2" ry="2" />
<text  x="558.76" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,515,845 samples, 0.02%)</title><rect x="73.8" y="805" width="0.2" height="15.0" fill="rgb(217,183,49)" rx="2" ry="2" />
<text  x="76.78" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,213,530 samples, 0.01%)</title><rect x="666.9" y="789" width="0.1" height="15.0" fill="rgb(213,99,7)" rx="2" ry="2" />
<text  x="669.93" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,350,425 samples, 0.03%)</title><rect x="707.0" y="853" width="0.3" height="15.0" fill="rgb(233,134,32)" rx="2" ry="2" />
<text  x="710.00" y="863.5" ></text>
</g>
<g >
<title>[libgazebo_ros_vacuum_gripper.so] (10,320,106 samples, 0.04%)</title><rect x="637.1" y="917" width="0.5" height="15.0" fill="rgb(213,69,48)" rx="2" ry="2" />
<text  x="640.10" y="927.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::SetPositionMaximal (1,697,379,510 samples, 6.70%)</title><rect x="532.0" y="837" width="79.0" height="15.0" fill="rgb(225,30,15)" rx="2" ry="2" />
<text  x="534.96" y="847.5" >gazebo::p..</text>
</g>
<g >
<title>gazebo::physics::Model::Update (97,002,718 samples, 0.38%)</title><rect x="478.4" y="1029" width="4.5" height="15.0" fill="rgb(254,172,37)" rx="2" ry="2" />
<text  x="481.36" y="1039.5" ></text>
</g>
<g >
<title>std::this_thread::sleep_for&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (68,430,040 samples, 0.27%)</title><rect x="845.2" y="1141" width="3.2" height="15.0" fill="rgb(235,73,3)" rx="2" ry="2" />
<text  x="848.24" y="1151.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (5,472,598 samples, 0.02%)</title><rect x="80.1" y="1013" width="0.3" height="15.0" fill="rgb(210,45,0)" rx="2" ry="2" />
<text  x="83.13" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,446 samples, 0.01%)</title><rect x="681.0" y="853" width="0.1" height="15.0" fill="rgb(253,179,28)" rx="2" ry="2" />
<text  x="683.97" y="863.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::release (6,165,450 samples, 0.02%)</title><rect x="218.7" y="981" width="0.3" height="15.0" fill="rgb(249,45,43)" rx="2" ry="2" />
<text  x="221.68" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,415,562,713 samples, 17.43%)</title><rect x="949.5" y="1157" width="205.6" height="15.0" fill="rgb(208,191,25)" rx="2" ry="2" />
<text  x="952.49" y="1167.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (2,382,939 samples, 0.01%)</title><rect x="547.4" y="741" width="0.1" height="15.0" fill="rgb(251,14,53)" rx="2" ry="2" />
<text  x="550.38" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,032,103 samples, 0.02%)</title><rect x="831.1" y="1013" width="0.3" height="15.0" fill="rgb(214,105,8)" rx="2" ry="2" />
<text  x="834.09" y="1023.5" ></text>
</g>
<g >
<title>rclcpp::message_memory_strategy::MessageMemoryStrategy&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::borrow_message (12,939,044 samples, 0.05%)</title><rect x="794.7" y="1029" width="0.6" height="15.0" fill="rgb(208,207,53)" rx="2" ry="2" />
<text  x="797.74" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26,300,482 samples, 0.10%)</title><rect x="853.0" y="1029" width="1.3" height="15.0" fill="rgb(251,36,35)" rx="2" ry="2" />
<text  x="856.04" y="1039.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::FrictionPyramid&gt;::shared_ptr (3,978,498 samples, 0.02%)</title><rect x="260.5" y="997" width="0.2" height="15.0" fill="rgb(207,138,15)" rx="2" ry="2" />
<text  x="263.52" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,368,669 samples, 0.03%)</title><rect x="833.6" y="1045" width="0.3" height="15.0" fill="rgb(210,9,53)" rx="2" ry="2" />
<text  x="836.60" y="1055.5" ></text>
</g>
<g >
<title>controller_manager::ControllerManager::write (10,533,557 samples, 0.04%)</title><rect x="777.2" y="917" width="0.5" height="15.0" fill="rgb(215,136,19)" rx="2" ry="2" />
<text  x="780.22" y="927.5" ></text>
</g>
<g >
<title>boost::_mfi::mf1&lt;void, gazebo_plugins::GazeboRosRaySensorPrivate, boost::shared_ptr&lt;gazebo::msgs::LaserScanStamped const&gt; const&amp;&gt;::operator (16,489,393 samples, 0.07%)</title><rect x="73.3" y="1077" width="0.7" height="15.0" fill="rgb(237,83,21)" rx="2" ry="2" />
<text  x="76.27" y="1087.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_ready_executable (126,007,585 samples, 0.50%)</title><rect x="800.0" y="1061" width="5.9" height="15.0" fill="rgb(246,17,48)" rx="2" ry="2" />
<text  x="803.04" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,896,962 samples, 0.02%)</title><rect x="737.4" y="789" width="0.2" height="15.0" fill="rgb(205,195,23)" rx="2" ry="2" />
<text  x="740.42" y="799.5" ></text>
</g>
<g >
<title>dBodyGetRelPointVel (16,300,082 samples, 0.06%)</title><rect x="683.4" y="869" width="0.8" height="15.0" fill="rgb(226,191,25)" rx="2" ry="2" />
<text  x="686.42" y="879.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::event::EventT&lt;void  (3,769,555 samples, 0.01%)</title><rect x="473.3" y="917" width="0.2" height="15.0" fill="rgb(207,217,31)" rx="2" ry="2" />
<text  x="476.34" y="927.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (6,778,683 samples, 0.03%)</title><rect x="811.4" y="933" width="0.3" height="15.0" fill="rgb(236,3,4)" rx="2" ry="2" />
<text  x="814.38" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,156,643 samples, 0.01%)</title><rect x="689.4" y="757" width="0.1" height="15.0" fill="rgb(212,95,42)" rx="2" ry="2" />
<text  x="692.38" y="767.5" ></text>
</g>
<g >
<title>gazebo::msgs::Quaternion::MergeFrom (2,196,688 samples, 0.01%)</title><rect x="754.2" y="933" width="0.1" height="15.0" fill="rgb(210,218,4)" rx="2" ry="2" />
<text  x="757.19" y="943.5" ></text>
</g>
<g >
<title>[librclcpp.so] (4,531,445 samples, 0.02%)</title><rect x="798.6" y="725" width="0.2" height="15.0" fill="rgb(216,199,40)" rx="2" ry="2" />
<text  x="801.59" y="735.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, boost::shared_ptr&lt;google::protobuf::Message&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;::operator[] (8,374,284 samples, 0.03%)</title><rect x="215.1" y="981" width="0.4" height="15.0" fill="rgb(211,94,39)" rx="2" ry="2" />
<text  x="218.11" y="991.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt; (8,069,732 samples, 0.03%)</title><rect x="794.2" y="709" width="0.3" height="15.0" fill="rgb(243,213,15)" rx="2" ry="2" />
<text  x="797.16" y="719.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,843,523 samples, 0.03%)</title><rect x="803.1" y="917" width="0.3" height="15.0" fill="rgb(248,39,30)" rx="2" ry="2" />
<text  x="806.08" y="927.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetScopedName[abi:cxx11] (8,069,732 samples, 0.03%)</title><rect x="794.2" y="757" width="0.3" height="15.0" fill="rgb(234,99,48)" rx="2" ry="2" />
<text  x="797.16" y="767.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::Pose3 (51,361,464 samples, 0.20%)</title><rect x="655.8" y="901" width="2.4" height="15.0" fill="rgb(243,56,7)" rx="2" ry="2" />
<text  x="658.82" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,574 samples, 0.12%)</title><rect x="145.5" y="1157" width="1.4" height="15.0" fill="rgb(236,9,53)" rx="2" ry="2" />
<text  x="148.53" y="1167.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (15,170,245 samples, 0.06%)</title><rect x="268.0" y="917" width="0.7" height="15.0" fill="rgb(212,221,26)" rx="2" ry="2" />
<text  x="271.00" y="927.5" ></text>
</g>
<g >
<title>dxQuickStepper (47,300,937 samples, 0.19%)</title><rect x="746.7" y="981" width="2.2" height="15.0" fill="rgb(215,141,25)" rx="2" ry="2" />
<text  x="749.71" y="991.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (3,128,536 samples, 0.01%)</title><rect x="781.0" y="965" width="0.2" height="15.0" fill="rgb(206,196,9)" rx="2" ry="2" />
<text  x="784.04" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_clear (2,648,545 samples, 0.01%)</title><rect x="84.1" y="1125" width="0.1" height="15.0" fill="rgb(253,219,6)" rx="2" ry="2" />
<text  x="87.06" y="1135.5" ></text>
</g>
<g >
<title>std::__invoke&lt;gazebo_ros2_control::GazeboRosControlPlugin::Load (368,172,242 samples, 1.45%)</title><rect x="186.9" y="1189" width="17.1" height="15.0" fill="rgb(207,179,51)" rx="2" ry="2" />
<text  x="189.89" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt; &gt; &gt;::begin (6,453,542 samples, 0.03%)</title><rect x="225.5" y="997" width="0.3" height="15.0" fill="rgb(224,190,51)" rx="2" ry="2" />
<text  x="228.45" y="1007.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::X (2,196,272 samples, 0.01%)</title><rect x="660.0" y="869" width="0.1" height="15.0" fill="rgb(228,106,9)" rx="2" ry="2" />
<text  x="662.96" y="879.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::operator+ (11,825,932 samples, 0.05%)</title><rect x="527.1" y="805" width="0.5" height="15.0" fill="rgb(210,84,26)" rx="2" ry="2" />
<text  x="530.05" y="815.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::SetWorldPoseDefault (54,466,303 samples, 0.21%)</title><rect x="226.4" y="1029" width="2.5" height="15.0" fill="rgb(218,94,32)" rx="2" ry="2" />
<text  x="229.39" y="1039.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (2,202,589 samples, 0.01%)</title><rect x="620.5" y="885" width="0.1" height="15.0" fill="rgb(207,77,23)" rx="2" ry="2" />
<text  x="623.49" y="895.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (59,753,129 samples, 0.24%)</title><rect x="129.7" y="1253" width="2.8" height="15.0" fill="rgb(219,71,37)" rx="2" ry="2" />
<text  x="132.68" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,647,282 samples, 0.02%)</title><rect x="691.3" y="837" width="0.3" height="15.0" fill="rgb(248,10,18)" rx="2" ry="2" />
<text  x="694.31" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;rclcpp::executors::MultiThreadedExecutor*, std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt;, std::__detail::_Select1st, std::hash&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (5,811,521 samples, 0.02%)</title><rect x="819.0" y="1013" width="0.3" height="15.0" fill="rgb(253,125,27)" rx="2" ry="2" />
<text  x="822.01" y="1023.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_timer_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_timer_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_timer_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;decltype (6,005,596 samples, 0.02%)</title><rect x="201.3" y="1045" width="0.3" height="15.0" fill="rgb(239,85,15)" rx="2" ry="2" />
<text  x="204.34" y="1055.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_node_base*&amp;&gt; (4,182,135 samples, 0.02%)</title><rect x="545.9" y="709" width="0.2" height="15.0" fill="rgb(225,128,15)" rx="2" ry="2" />
<text  x="548.94" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,381,905 samples, 0.02%)</title><rect x="796.0" y="917" width="0.3" height="15.0" fill="rgb(227,152,54)" rx="2" ry="2" />
<text  x="799.01" y="927.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2,536,199 samples, 0.01%)</title><rect x="828.7" y="981" width="0.2" height="15.0" fill="rgb(208,179,44)" rx="2" ry="2" />
<text  x="831.74" y="991.5" ></text>
</g>
<g >
<title>[librclcpp.so] (4,134,566 samples, 0.02%)</title><rect x="617.0" y="917" width="0.1" height="15.0" fill="rgb(237,94,27)" rx="2" ry="2" />
<text  x="619.96" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,810,692 samples, 0.10%)</title><rect x="477.2" y="869" width="1.2" height="15.0" fill="rgb(217,206,15)" rx="2" ry="2" />
<text  x="480.20" y="879.5" ></text>
</g>
<g >
<title>gazebo::transport::Connection::IsOpen (16,298,941 samples, 0.06%)</title><rect x="204.3" y="1061" width="0.8" height="15.0" fill="rgb(209,110,47)" rx="2" ry="2" />
<text  x="207.31" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,952,087 samples, 0.02%)</title><rect x="487.2" y="997" width="0.2" height="15.0" fill="rgb(230,33,23)" rx="2" ry="2" />
<text  x="490.20" y="1007.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (6,367,882 samples, 0.03%)</title><rect x="887.6" y="1061" width="0.3" height="15.0" fill="rgb(215,44,40)" rx="2" ry="2" />
<text  x="890.63" y="1071.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (10,435,553 samples, 0.04%)</title><rect x="499.5" y="789" width="0.5" height="15.0" fill="rgb(230,23,33)" rx="2" ry="2" />
<text  x="502.52" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,515,845 samples, 0.02%)</title><rect x="73.8" y="837" width="0.2" height="15.0" fill="rgb(209,107,39)" rx="2" ry="2" />
<text  x="76.78" y="847.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt; &gt;::allocate (7,618,899 samples, 0.03%)</title><rect x="85.6" y="1077" width="0.4" height="15.0" fill="rgb(205,190,5)" rx="2" ry="2" />
<text  x="88.64" y="1087.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::CoordPositionSub (3,935,633 samples, 0.02%)</title><rect x="778.9" y="885" width="0.2" height="15.0" fill="rgb(213,153,22)" rx="2" ry="2" />
<text  x="781.93" y="895.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (4,223,879 samples, 0.02%)</title><rect x="530.8" y="821" width="0.2" height="15.0" fill="rgb(205,50,40)" rx="2" ry="2" />
<text  x="533.84" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,652,014 samples, 0.04%)</title><rect x="722.4" y="629" width="0.5" height="15.0" fill="rgb(215,194,29)" rx="2" ry="2" />
<text  x="725.45" y="639.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::release (3,906,154 samples, 0.02%)</title><rect x="219.8" y="965" width="0.2" height="15.0" fill="rgb(214,83,10)" rx="2" ry="2" />
<text  x="222.84" y="975.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::UpdatePhysicsPose (192,525,496 samples, 0.76%)</title><rect x="550.2" y="773" width="9.0" height="15.0" fill="rgb(207,26,21)" rx="2" ry="2" />
<text  x="553.21" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,213,530 samples, 0.01%)</title><rect x="666.9" y="805" width="0.1" height="15.0" fill="rgb(252,170,4)" rx="2" ry="2" />
<text  x="669.93" y="815.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_timer_t,  (8,026,533 samples, 0.03%)</title><rect x="188.3" y="1077" width="0.3" height="15.0" fill="rgb(237,222,26)" rx="2" ry="2" />
<text  x="191.27" y="1087.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (3,851,484 samples, 0.02%)</title><rect x="541.9" y="725" width="0.2" height="15.0" fill="rgb(226,57,44)" rx="2" ry="2" />
<text  x="544.92" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,368,835 samples, 0.02%)</title><rect x="722.7" y="597" width="0.2" height="15.0" fill="rgb(247,160,54)" rx="2" ry="2" />
<text  x="725.74" y="607.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::_find_ptrs_if_impl&lt;rclcpp::TimerBase, rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (6,912,390 samples, 0.03%)</title><rect x="198.3" y="1045" width="0.3" height="15.0" fill="rgb(223,96,3)" rx="2" ry="2" />
<text  x="201.26" y="1055.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, boost::shared_ptr&lt;gazebo::physics::Link&gt;*, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; (8,452,734 samples, 0.03%)</title><rect x="588.3" y="677" width="0.3" height="15.0" fill="rgb(217,193,16)" rx="2" ry="2" />
<text  x="591.25" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="1061" width="0.1" height="15.0" fill="rgb(208,182,0)" rx="2" ry="2" />
<text  x="839.31" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (81,413,008 samples, 0.32%)</title><rect x="882.8" y="661" width="3.8" height="15.0" fill="rgb(252,218,5)" rx="2" ry="2" />
<text  x="885.78" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,291,093 samples, 0.01%)</title><rect x="521.1" y="725" width="0.1" height="15.0" fill="rgb(228,223,21)" rx="2" ry="2" />
<text  x="524.08" y="735.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::OnPublishComplete (5,433,391 samples, 0.02%)</title><rect x="79.9" y="1029" width="0.2" height="15.0" fill="rgb(227,15,12)" rx="2" ry="2" />
<text  x="82.88" y="1039.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::find_subscription_ptrs_if&lt;rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (19,077,570 samples, 0.08%)</title><rect x="197.4" y="1061" width="0.9" height="15.0" fill="rgb(217,42,47)" rx="2" ry="2" />
<text  x="200.37" y="1071.5" ></text>
</g>
<g >
<title>dCollide (3,664,541 samples, 0.01%)</title><rect x="746.5" y="1013" width="0.2" height="15.0" fill="rgb(241,36,42)" rx="2" ry="2" />
<text  x="749.54" y="1023.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;joint_trajectory_controller::Trajectory,  (2,156,282 samples, 0.01%)</title><rect x="514.1" y="885" width="0.1" height="15.0" fill="rgb(208,120,32)" rx="2" ry="2" />
<text  x="517.05" y="895.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (7,942,088 samples, 0.03%)</title><rect x="444.1" y="885" width="0.4" height="15.0" fill="rgb(254,6,7)" rx="2" ry="2" />
<text  x="447.09" y="895.5" ></text>
</g>
<g >
<title>controller_manager::ControllerManager::read (7,636,810 samples, 0.03%)</title><rect x="615.3" y="933" width="0.3" height="15.0" fill="rgb(252,218,11)" rx="2" ry="2" />
<text  x="618.27" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (34,290,963 samples, 0.14%)</title><rect x="56.1" y="421" width="1.6" height="15.0" fill="rgb(205,119,46)" rx="2" ry="2" />
<text  x="59.05" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (6,982,008 samples, 0.03%)</title><rect x="101.7" y="1301" width="0.3" height="15.0" fill="rgb(238,216,51)" rx="2" ry="2" />
<text  x="104.68" y="1311.5" ></text>
</g>
<g >
<title>gazebo::msgs::Vector3d::set_x (4,362,047 samples, 0.02%)</title><rect x="760.0" y="1029" width="0.2" height="15.0" fill="rgb(216,70,53)" rx="2" ry="2" />
<text  x="763.04" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,628,552 samples, 0.03%)</title><rect x="138.3" y="1253" width="0.3" height="15.0" fill="rgb(229,73,47)" rx="2" ry="2" />
<text  x="141.29" y="1263.5" ></text>
</g>
<g >
<title>std::pair&lt;boost::function&lt;void  (2,485,233 samples, 0.01%)</title><rect x="81.4" y="1077" width="0.1" height="15.0" fill="rgb(245,89,53)" rx="2" ry="2" />
<text  x="84.38" y="1087.5" ></text>
</g>
<g >
<title>[libjoint_trajectory_controller.so] (2,223,271 samples, 0.01%)</title><rect x="505.1" y="805" width="0.1" height="15.0" fill="rgb(241,223,49)" rx="2" ry="2" />
<text  x="508.06" y="815.5" ></text>
</g>
<g >
<title>rclcpp::executors::MultiThreadedExecutor::run (554,651,533 samples, 2.19%)</title><rect x="793.5" y="1269" width="25.8" height="15.0" fill="rgb(205,171,49)" rx="2" ry="2" />
<text  x="796.52" y="1279.5" >r..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo_plugins::GazeboRosVacuumGripperPrivate*, std::_Placeholder&lt;1&gt; &gt; (6,921,908 samples, 0.03%)</title><rect x="625.9" y="949" width="0.3" height="15.0" fill="rgb(233,198,2)" rx="2" ry="2" />
<text  x="628.91" y="959.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;::async_write_some&lt;boost::asio::const_buffers_1, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (100,583,021 samples, 0.40%)</title><rect x="54.3" y="1077" width="4.7" height="15.0" fill="rgb(251,219,32)" rx="2" ry="2" />
<text  x="57.28" y="1087.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::World&gt;::operator (8,119,008 samples, 0.03%)</title><rect x="443.1" y="917" width="0.4" height="15.0" fill="rgb(225,82,42)" rx="2" ry="2" />
<text  x="446.14" y="927.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; const*, std::vector&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt;, control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;*, control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; (44,668,268 samples, 0.18%)</title><rect x="825.7" y="1093" width="2.1" height="15.0" fill="rgb(254,125,29)" rx="2" ry="2" />
<text  x="828.74" y="1103.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::operator- (9,798,023 samples, 0.04%)</title><rect x="778.7" y="901" width="0.4" height="15.0" fill="rgb(242,135,54)" rx="2" ry="2" />
<text  x="781.66" y="911.5" ></text>
</g>
<g >
<title>[libgazebo_ros_utils.so] (5,837,664 samples, 0.02%)</title><rect x="649.3" y="901" width="0.3" height="15.0" fill="rgb(239,184,24)" rx="2" ry="2" />
<text  x="652.28" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,197,577 samples, 0.09%)</title><rect x="480.0" y="853" width="1.1" height="15.0" fill="rgb(251,76,23)" rx="2" ry="2" />
<text  x="483.05" y="863.5" ></text>
</g>
<g >
<title>gazebo::sensors::Noise::Apply (7,987,079 samples, 0.03%)</title><rect x="43.9" y="1157" width="0.3" height="15.0" fill="rgb(254,201,8)" rx="2" ry="2" />
<text  x="46.86" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,984,392 samples, 0.02%)</title><rect x="707.4" y="805" width="0.2" height="15.0" fill="rgb(242,197,4)" rx="2" ry="2" />
<text  x="710.39" y="815.5" ></text>
</g>
<g >
<title>gazebo::transport::Publication::SetPrevMsg (16,691,117 samples, 0.07%)</title><rect x="214.7" y="997" width="0.8" height="15.0" fill="rgb(230,198,51)" rx="2" ry="2" />
<text  x="217.73" y="1007.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::operator= (21,400,129 samples, 0.08%)</title><rect x="541.7" y="757" width="1.0" height="15.0" fill="rgb(208,116,52)" rx="2" ry="2" />
<text  x="544.75" y="767.5" ></text>
</g>
<g >
<title>ode::quickstep::multiply_invM_JT (51,240,749 samples, 0.20%)</title><rect x="433.4" y="949" width="2.4" height="15.0" fill="rgb(214,158,30)" rx="2" ry="2" />
<text  x="436.39" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,415,848 samples, 0.03%)</title><rect x="145.2" y="1173" width="0.3" height="15.0" fill="rgb(205,18,5)" rx="2" ry="2" />
<text  x="148.23" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,440,838 samples, 0.02%)</title><rect x="510.9" y="693" width="0.3" height="15.0" fill="rgb(238,182,4)" rx="2" ry="2" />
<text  x="513.91" y="703.5" ></text>
</g>
<g >
<title>[libgazebo.so.11.10.1] (3,543,293 samples, 0.01%)</title><rect x="900.8" y="1221" width="0.1" height="15.0" fill="rgb(225,156,4)" rx="2" ry="2" />
<text  x="903.78" y="1231.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GenericTypeHandler&lt;gazebo::msgs::Pose&gt;::Delete (48,055,424 samples, 0.19%)</title><rect x="755.7" y="997" width="2.3" height="15.0" fill="rgb(250,217,28)" rx="2" ry="2" />
<text  x="758.75" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,952,087 samples, 0.02%)</title><rect x="487.2" y="901" width="0.2" height="15.0" fill="rgb(231,38,26)" rx="2" ry="2" />
<text  x="490.20" y="911.5" ></text>
</g>
<g >
<title>iptable_filter_hook (4,144,990 samples, 0.02%)</title><rect x="57.5" y="373" width="0.2" height="15.0" fill="rgb(217,185,28)" rx="2" ry="2" />
<text  x="60.46" y="383.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (13,832,601 samples, 0.05%)</title><rect x="10.0" y="1301" width="0.6" height="15.0" fill="rgb(214,190,22)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (67,687,311 samples, 0.27%)</title><rect x="914.6" y="1125" width="3.1" height="15.0" fill="rgb(245,80,4)" rx="2" ry="2" />
<text  x="917.58" y="1135.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (16,848,573 samples, 0.07%)</title><rect x="42.0" y="1093" width="0.7" height="15.0" fill="rgb(218,166,37)" rx="2" ry="2" />
<text  x="44.95" y="1103.5" ></text>
</g>
<g >
<title>gazebo::msgs::Quaternion::MergeFrom (4,143,869 samples, 0.02%)</title><rect x="764.3" y="869" width="0.2" height="15.0" fill="rgb(246,84,13)" rx="2" ry="2" />
<text  x="767.31" y="879.5" ></text>
</g>
<g >
<title>rclcpp::Duration::Duration (12,010,541 samples, 0.05%)</title><rect x="508.7" y="869" width="0.6" height="15.0" fill="rgb(237,113,4)" rx="2" ry="2" />
<text  x="511.70" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,426,497 samples, 0.08%)</title><rect x="379.5" y="869" width="1.0" height="15.0" fill="rgb(237,115,14)" rx="2" ry="2" />
<text  x="382.52" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="997" width="0.1" height="15.0" fill="rgb(206,64,50)" rx="2" ry="2" />
<text  x="839.31" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (56,935,916 samples, 0.22%)</title><rect x="204.0" y="1109" width="2.7" height="15.0" fill="rgb(215,219,10)" rx="2" ry="2" />
<text  x="207.03" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,377,139 samples, 0.03%)</title><rect x="214.4" y="837" width="0.3" height="15.0" fill="rgb(217,196,54)" rx="2" ry="2" />
<text  x="217.43" y="847.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::node_interfaces::NodeBaseInterface&gt;::shared_ptr (5,355,349 samples, 0.02%)</title><rect x="789.7" y="1013" width="0.2" height="15.0" fill="rgb(243,175,5)" rx="2" ry="2" />
<text  x="792.65" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (5,515,845 samples, 0.02%)</title><rect x="1174.6" y="1301" width="0.2" height="15.0" fill="rgb(230,168,25)" rx="2" ry="2" />
<text  x="1177.56" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,958,587 samples, 0.02%)</title><rect x="851.4" y="1045" width="0.2" height="15.0" fill="rgb(218,130,52)" rx="2" ry="2" />
<text  x="854.38" y="1055.5" ></text>
</g>
<g >
<title>MakeMatrix (2,169,061 samples, 0.01%)</title><rect x="256.0" y="981" width="0.1" height="15.0" fill="rgb(208,137,24)" rx="2" ry="2" />
<text  x="258.98" y="991.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (8,739,807 samples, 0.03%)</title><rect x="31.4" y="1077" width="0.4" height="15.0" fill="rgb(218,112,37)" rx="2" ry="2" />
<text  x="34.35" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,375,756 samples, 0.11%)</title><rect x="479.8" y="917" width="1.3" height="15.0" fill="rgb(238,111,4)" rx="2" ry="2" />
<text  x="482.76" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,803,424 samples, 0.09%)</title><rect x="462.1" y="917" width="1.1" height="15.0" fill="rgb(237,28,6)" rx="2" ry="2" />
<text  x="465.13" y="927.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (4,352,612 samples, 0.02%)</title><rect x="273.4" y="933" width="0.2" height="15.0" fill="rgb(248,173,51)" rx="2" ry="2" />
<text  x="276.35" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,647,282 samples, 0.02%)</title><rect x="691.3" y="821" width="0.3" height="15.0" fill="rgb(242,146,21)" rx="2" ry="2" />
<text  x="694.31" y="831.5" ></text>
</g>
<g >
<title>rcl_take (14,049,089 samples, 0.06%)</title><rect x="796.6" y="981" width="0.6" height="15.0" fill="rgb(206,63,31)" rx="2" ry="2" />
<text  x="799.57" y="991.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (56,935,916 samples, 0.22%)</title><rect x="204.0" y="1141" width="2.7" height="15.0" fill="rgb(212,128,16)" rx="2" ry="2" />
<text  x="207.03" y="1151.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::Waitable,  (8,556,546 samples, 0.03%)</title><rect x="812.2" y="981" width="0.4" height="15.0" fill="rgb(221,36,26)" rx="2" ry="2" />
<text  x="815.18" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,628,552 samples, 0.03%)</title><rect x="138.3" y="1189" width="0.3" height="15.0" fill="rgb(238,137,34)" rx="2" ry="2" />
<text  x="141.29" y="1199.5" ></text>
</g>
<g >
<title>dVector3Subtract (3,560,357 samples, 0.01%)</title><rect x="254.4" y="901" width="0.2" height="15.0" fill="rgb(225,32,50)" rx="2" ry="2" />
<text  x="257.44" y="911.5" ></text>
</g>
<g >
<title>boost::asio::detail::io_object_impl&lt;boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;, boost::asio::executor&gt;::get_service (2,688,974 samples, 0.01%)</title><rect x="51.0" y="1189" width="0.1" height="15.0" fill="rgb(241,38,0)" rx="2" ry="2" />
<text  x="53.98" y="1199.5" ></text>
</g>
<g >
<title>rclcpp::Duration::~Duration (5,586,780 samples, 0.02%)</title><rect x="612.5" y="869" width="0.3" height="15.0" fill="rgb(237,72,30)" rx="2" ry="2" />
<text  x="615.54" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,177,135 samples, 0.02%)</title><rect x="117.2" y="1029" width="0.2" height="15.0" fill="rgb(246,41,26)" rx="2" ry="2" />
<text  x="120.22" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (70,691,548 samples, 0.28%)</title><rect x="475.1" y="949" width="3.3" height="15.0" fill="rgb(213,13,54)" rx="2" ry="2" />
<text  x="478.07" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (221,260,663 samples, 0.87%)</title><rect x="176.0" y="1157" width="10.3" height="15.0" fill="rgb(254,137,26)" rx="2" ry="2" />
<text  x="178.98" y="1167.5" ></text>
</g>
<g >
<title>dDQfromW (4,392,611 samples, 0.02%)</title><rect x="439.9" y="949" width="0.2" height="15.0" fill="rgb(228,153,38)" rx="2" ry="2" />
<text  x="442.87" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,918,687 samples, 0.02%)</title><rect x="620.7" y="853" width="0.2" height="15.0" fill="rgb(247,101,3)" rx="2" ry="2" />
<text  x="623.69" y="863.5" ></text>
</g>
<g >
<title>gazebo::physics::ODELink::WorldLinearVel (14,284,903 samples, 0.06%)</title><rect x="686.2" y="869" width="0.6" height="15.0" fill="rgb(244,81,6)" rx="2" ry="2" />
<text  x="689.17" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,200,275 samples, 0.02%)</title><rect x="117.1" y="1061" width="0.3" height="15.0" fill="rgb(233,133,33)" rx="2" ry="2" />
<text  x="120.13" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (6,101,183 samples, 0.02%)</title><rect x="828.0" y="1109" width="0.3" height="15.0" fill="rgb(215,208,7)" rx="2" ry="2" />
<text  x="830.99" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::size (28,623,753 samples, 0.11%)</title><rect x="675.9" y="885" width="1.3" height="15.0" fill="rgb(223,174,30)" rx="2" ry="2" />
<text  x="678.87" y="895.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, std::_List_iterator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt;, std::back_insert_iterator&lt;std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; (8,775,095 samples, 0.03%)</title><rect x="84.5" y="1109" width="0.4" height="15.0" fill="rgb(221,137,7)" rx="2" ry="2" />
<text  x="87.48" y="1119.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::MessageLite (3,782,285 samples, 0.01%)</title><rect x="27.7" y="1125" width="0.2" height="15.0" fill="rgb(253,71,27)" rx="2" ry="2" />
<text  x="30.72" y="1135.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::~_Vector_base (2,241,923 samples, 0.01%)</title><rect x="691.7" y="901" width="0.1" height="15.0" fill="rgb(248,122,30)" rx="2" ry="2" />
<text  x="694.66" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,878,910 samples, 0.06%)</title><rect x="830.3" y="1061" width="0.7" height="15.0" fill="rgb(210,103,21)" rx="2" ry="2" />
<text  x="833.29" y="1071.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (3,851,484 samples, 0.02%)</title><rect x="541.9" y="709" width="0.2" height="15.0" fill="rgb(249,129,28)" rx="2" ry="2" />
<text  x="544.92" y="719.5" ></text>
</g>
<g >
<title>[[uprobes]] (6,092,013 samples, 0.02%)</title><rect x="774.7" y="821" width="0.3" height="15.0" fill="rgb(243,75,45)" rx="2" ry="2" />
<text  x="777.72" y="831.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (40,378,635 samples, 0.16%)</title><rect x="673.6" y="773" width="1.9" height="15.0" fill="rgb(217,150,14)" rx="2" ry="2" />
<text  x="676.62" y="783.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;gazebo_msgs::msg::ModelStates_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::publish (17,966,479 samples, 0.07%)</title><rect x="690.7" y="901" width="0.9" height="15.0" fill="rgb(233,20,46)" rx="2" ry="2" />
<text  x="693.73" y="911.5" ></text>
</g>
<g >
<title>gazebo::event::EventT&lt;void  (8,119,980 samples, 0.03%)</title><rect x="483.9" y="1013" width="0.4" height="15.0" fill="rgb(254,201,26)" rx="2" ry="2" />
<text  x="486.93" y="1023.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::CallbackGroup,  (8,304,082 samples, 0.03%)</title><rect x="803.8" y="981" width="0.4" height="15.0" fill="rgb(231,121,51)" rx="2" ry="2" />
<text  x="806.80" y="991.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::InternalSerializeWithCachedSizesToArray (2,734,777 samples, 0.01%)</title><rect x="1159.5" y="1285" width="0.1" height="15.0" fill="rgb(246,221,7)" rx="2" ry="2" />
<text  x="1162.50" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (126,904,026 samples, 0.50%)</title><rect x="911.8" y="1221" width="5.9" height="15.0" fill="rgb(250,77,3)" rx="2" ry="2" />
<text  x="914.82" y="1231.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator= (8,061,931 samples, 0.03%)</title><rect x="228.5" y="997" width="0.3" height="15.0" fill="rgb(216,61,52)" rx="2" ry="2" />
<text  x="231.46" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,303,114 samples, 0.01%)</title><rect x="62.8" y="1093" width="0.2" height="15.0" fill="rgb(223,45,53)" rx="2" ry="2" />
<text  x="65.82" y="1103.5" ></text>
</g>
<g >
<title>google::protobuf::internal::call_once&lt;std::once_flag&amp;, void  (4,660,333 samples, 0.02%)</title><rect x="32.5" y="1093" width="0.2" height="15.0" fill="rgb(205,210,53)" rx="2" ry="2" />
<text  x="35.47" y="1103.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::common::UpdateInfo const&amp;&gt; (14,146,203 samples, 0.06%)</title><rect x="625.2" y="933" width="0.6" height="15.0" fill="rgb(211,28,13)" rx="2" ry="2" />
<text  x="628.16" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,666,830 samples, 0.08%)</title><rect x="56.5" y="213" width="1.0" height="15.0" fill="rgb(233,3,0)" rx="2" ry="2" />
<text  x="59.49" y="223.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (3,832,789 samples, 0.02%)</title><rect x="540.5" y="757" width="0.1" height="15.0" fill="rgb(214,121,19)" rx="2" ry="2" />
<text  x="543.46" y="767.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned int const&amp;&gt; (3,626,237 samples, 0.01%)</title><rect x="85.3" y="1029" width="0.1" height="15.0" fill="rgb(240,151,31)" rx="2" ry="2" />
<text  x="88.26" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,597,363 samples, 0.01%)</title><rect x="86.1" y="981" width="0.2" height="15.0" fill="rgb(213,207,42)" rx="2" ry="2" />
<text  x="89.09" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,032,103 samples, 0.02%)</title><rect x="831.1" y="965" width="0.3" height="15.0" fill="rgb(229,186,41)" rx="2" ry="2" />
<text  x="834.09" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (330,145,171 samples, 1.30%)</title><rect x="873.9" y="1141" width="15.3" height="15.0" fill="rgb(228,141,20)" rx="2" ry="2" />
<text  x="876.87" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (8,082,420 samples, 0.03%)</title><rect x="596.0" y="789" width="0.3" height="15.0" fill="rgb(248,48,4)" rx="2" ry="2" />
<text  x="598.95" y="799.5" ></text>
</g>
<g >
<title>rcl_service_is_valid (6,809,922 samples, 0.03%)</title><rect x="792.5" y="965" width="0.3" height="15.0" fill="rgb(226,15,39)" rx="2" ry="2" />
<text  x="795.46" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,865,199 samples, 0.01%)</title><rect x="32.8" y="1125" width="0.2" height="15.0" fill="rgb(208,204,29)" rx="2" ry="2" />
<text  x="35.84" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (11,112,142 samples, 0.04%)</title><rect x="826.5" y="1013" width="0.5" height="15.0" fill="rgb(238,194,22)" rx="2" ry="2" />
<text  x="829.46" y="1023.5" ></text>
</g>
<g >
<title>gazebo::event::EventT&lt;void  (87,220,611 samples, 0.34%)</title><rect x="469.5" y="997" width="4.1" height="15.0" fill="rgb(231,60,22)" rx="2" ry="2" />
<text  x="472.55" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_subscription_t const,  (6,101,434 samples, 0.02%)</title><rect x="815.7" y="1013" width="0.3" height="15.0" fill="rgb(230,172,39)" rx="2" ry="2" />
<text  x="818.70" y="1023.5" ></text>
</g>
<g >
<title>std::operator!= (6,551,015 samples, 0.03%)</title><rect x="621.2" y="917" width="0.3" height="15.0" fill="rgb(212,90,33)" rx="2" ry="2" />
<text  x="624.24" y="927.5" ></text>
</g>
<g >
<title>std::mutex::try_lock (20,873,862 samples, 0.08%)</title><rect x="854.3" y="1125" width="1.0" height="15.0" fill="rgb(210,143,1)" rx="2" ry="2" />
<text  x="857.34" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,602,555 samples, 0.01%)</title><rect x="49.3" y="1157" width="0.1" height="15.0" fill="rgb(227,135,34)" rx="2" ry="2" />
<text  x="52.27" y="1167.5" ></text>
</g>
<g >
<title>[libgazebo_ros_vacuum_gripper.so] (2,304,528 samples, 0.01%)</title><rect x="490.1" y="997" width="0.1" height="15.0" fill="rgb(250,57,23)" rx="2" ry="2" />
<text  x="493.12" y="1007.5" ></text>
</g>
<g >
<title>joint_state_broadcaster::get_value (25,294,512 samples, 0.10%)</title><rect x="495.5" y="885" width="1.2" height="15.0" fill="rgb(209,116,26)" rx="2" ry="2" />
<text  x="498.52" y="895.5" ></text>
</g>
<g >
<title>_dequal (52,637,363 samples, 0.21%)</title><rect x="339.7" y="933" width="2.4" height="15.0" fill="rgb(210,187,19)" rx="2" ry="2" />
<text  x="342.66" y="943.5" ></text>
</g>
<g >
<title>gazebo::transport::Publication::GetCallbackCount (3,952,519 samples, 0.02%)</title><rect x="238.1" y="789" width="0.2" height="15.0" fill="rgb(238,69,44)" rx="2" ry="2" />
<text  x="241.08" y="799.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (2,195,446 samples, 0.01%)</title><rect x="681.0" y="885" width="0.1" height="15.0" fill="rgb(208,116,18)" rx="2" ry="2" />
<text  x="683.97" y="895.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (4,166,231 samples, 0.02%)</title><rect x="274.3" y="885" width="0.2" height="15.0" fill="rgb(244,208,2)" rx="2" ry="2" />
<text  x="277.34" y="895.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_service_t,  (4,495,038 samples, 0.02%)</title><rect x="794.5" y="917" width="0.2" height="15.0" fill="rgb(225,164,19)" rx="2" ry="2" />
<text  x="797.53" y="927.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7,943,874 samples, 0.03%)</title><rect x="261.9" y="981" width="0.4" height="15.0" fill="rgb(243,177,36)" rx="2" ry="2" />
<text  x="264.92" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::~vector (7,538,637 samples, 0.03%)</title><rect x="588.6" y="741" width="0.4" height="15.0" fill="rgb(216,176,47)" rx="2" ry="2" />
<text  x="591.64" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::event::EventT&lt;void  (3,769,555 samples, 0.01%)</title><rect x="473.3" y="933" width="0.2" height="15.0" fill="rgb(246,203,18)" rx="2" ry="2" />
<text  x="476.34" y="943.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo_ros2_control::GazeboSystemPrivate*, std::default_delete&lt;gazebo_ros2_control::GazeboSystemPrivate&gt; &gt; (6,002,028 samples, 0.02%)</title><rect x="612.1" y="805" width="0.3" height="15.0" fill="rgb(217,167,45)" rx="2" ry="2" />
<text  x="615.08" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,496,532 samples, 0.10%)</title><rect x="11.4" y="1125" width="1.1" height="15.0" fill="rgb(238,31,35)" rx="2" ry="2" />
<text  x="14.36" y="1135.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::IsStatic (15,945,123 samples, 0.06%)</title><rect x="639.3" y="901" width="0.8" height="15.0" fill="rgb(214,178,26)" rx="2" ry="2" />
<text  x="642.34" y="911.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3,116,103 samples, 0.01%)</title><rect x="195.3" y="1029" width="0.1" height="15.0" fill="rgb(215,50,22)" rx="2" ry="2" />
<text  x="198.28" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,318,641 samples, 0.01%)</title><rect x="272.5" y="917" width="0.1" height="15.0" fill="rgb(214,93,6)" rx="2" ry="2" />
<text  x="275.50" y="927.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4,345,558 samples, 0.02%)</title><rect x="812.0" y="917" width="0.2" height="15.0" fill="rgb(244,106,50)" rx="2" ry="2" />
<text  x="814.98" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,151,257 samples, 0.01%)</title><rect x="864.0" y="1045" width="0.1" height="15.0" fill="rgb(221,220,18)" rx="2" ry="2" />
<text  x="866.98" y="1055.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::_find_ptrs_if_impl&lt;rclcpp::Waitable, rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (9,247,408 samples, 0.04%)</title><rect x="198.6" y="1045" width="0.4" height="15.0" fill="rgb(225,149,30)" rx="2" ry="2" />
<text  x="201.58" y="1055.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (8,094,995 samples, 0.03%)</title><rect x="61.1" y="1173" width="0.3" height="15.0" fill="rgb(254,8,46)" rx="2" ry="2" />
<text  x="64.06" y="1183.5" ></text>
</g>
<g >
<title>gazebo::sensors::RaySensor::RangeMax (6,814,207 samples, 0.03%)</title><rect x="44.2" y="1157" width="0.3" height="15.0" fill="rgb(217,83,36)" rx="2" ry="2" />
<text  x="47.23" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,179,357 samples, 0.02%)</title><rect x="889.2" y="1141" width="0.3" height="15.0" fill="rgb(239,13,35)" rx="2" ry="2" />
<text  x="892.25" y="1151.5" ></text>
</g>
<g >
<title>ddsrt_avl_find_succ (2,773,731 samples, 0.01%)</title><rect x="139.2" y="1269" width="0.1" height="15.0" fill="rgb(211,107,29)" rx="2" ry="2" />
<text  x="142.22" y="1279.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::sensors::RaySensorPrivate*, std::default_delete&lt;gazebo::sensors::RaySensorPrivate&gt; &gt; (3,143,021 samples, 0.01%)</title><rect x="46.6" y="1077" width="0.1" height="15.0" fill="rgb(250,3,14)" rx="2" ry="2" />
<text  x="49.58" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1125" width="0.1" height="15.0" fill="rgb(247,147,3)" rx="2" ry="2" />
<text  x="135.18" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (90,649,946 samples, 0.36%)</title><rect x="54.7" y="741" width="4.3" height="15.0" fill="rgb(224,4,47)" rx="2" ry="2" />
<text  x="57.74" y="751.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::RelativePose (31,016,316 samples, 0.12%)</title><rect x="761.6" y="1045" width="1.4" height="15.0" fill="rgb(243,68,37)" rx="2" ry="2" />
<text  x="764.59" y="1055.5" ></text>
</g>
<g >
<title>boost::unordered::detail::functions&lt;boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt;::current_functions (3,844,214 samples, 0.02%)</title><rect x="215.7" y="917" width="0.2" height="15.0" fill="rgb(254,14,25)" rx="2" ry="2" />
<text  x="218.71" y="927.5" ></text>
</g>
<g >
<title>__sqrt_finite@GLIBC_2.15 (2,168,655 samples, 0.01%)</title><rect x="270.0" y="949" width="0.1" height="15.0" fill="rgb(241,11,15)" rx="2" ry="2" />
<text  x="272.98" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Base&gt; &gt; &gt;::size (3,928,851 samples, 0.02%)</title><rect x="742.0" y="1013" width="0.2" height="15.0" fill="rgb(209,79,4)" rx="2" ry="2" />
<text  x="745.02" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,604,577 samples, 0.01%)</title><rect x="840.5" y="965" width="0.2" height="15.0" fill="rgb(237,178,3)" rx="2" ry="2" />
<text  x="843.51" y="975.5" ></text>
</g>
<g >
<title>[[uprobes]] (11,724,977 samples, 0.05%)</title><rect x="635.3" y="869" width="0.5" height="15.0" fill="rgb(214,118,22)" rx="2" ry="2" />
<text  x="638.25" y="879.5" ></text>
</g>
<g >
<title>dMultiplyHelper1_331 (5,976,866 samples, 0.02%)</title><rect x="243.3" y="869" width="0.2" height="15.0" fill="rgb(223,11,35)" rx="2" ry="2" />
<text  x="246.27" y="879.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (987,863,774 samples, 3.90%)</title><rect x="819.3" y="1237" width="46.1" height="15.0" fill="rgb(230,18,11)" rx="2" ry="2" />
<text  x="822.35" y="1247.5" >std:..</text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (6,024,988 samples, 0.02%)</title><rect x="226.8" y="997" width="0.3" height="15.0" fill="rgb(248,31,21)" rx="2" ry="2" />
<text  x="229.77" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26,223,569 samples, 0.10%)</title><rect x="11.3" y="1237" width="1.2" height="15.0" fill="rgb(218,169,42)" rx="2" ry="2" />
<text  x="14.32" y="1247.5" ></text>
</g>
<g >
<title>std::atomic&lt;int&gt;::atomic (2,183,638 samples, 0.01%)</title><rect x="212.6" y="997" width="0.1" height="15.0" fill="rgb(250,83,54)" rx="2" ry="2" />
<text  x="215.56" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,159,904 samples, 0.05%)</title><rect x="634.5" y="821" width="0.6" height="15.0" fill="rgb(252,51,11)" rx="2" ry="2" />
<text  x="637.50" y="831.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (11,665,239 samples, 0.05%)</title><rect x="522.0" y="853" width="0.5" height="15.0" fill="rgb(214,109,31)" rx="2" ry="2" />
<text  x="524.96" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,889,694 samples, 0.06%)</title><rect x="458.1" y="1045" width="0.7" height="15.0" fill="rgb(235,130,9)" rx="2" ry="2" />
<text  x="461.06" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,525,761 samples, 0.03%)</title><rect x="478.0" y="725" width="0.4" height="15.0" fill="rgb(220,124,0)" rx="2" ry="2" />
<text  x="480.96" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="1013" width="0.1" height="15.0" fill="rgb(241,57,45)" rx="2" ry="2" />
<text  x="839.31" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (73,142,036 samples, 0.29%)</title><rect x="713.9" y="869" width="3.4" height="15.0" fill="rgb(205,106,19)" rx="2" ry="2" />
<text  x="716.90" y="879.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (24,252,778 samples, 0.10%)</title><rect x="765.8" y="965" width="1.1" height="15.0" fill="rgb(248,77,1)" rx="2" ry="2" />
<text  x="768.76" y="975.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned int const&amp;&gt;::tuple&lt;void, true&gt; (3,869,867 samples, 0.02%)</title><rect x="87.1" y="1141" width="0.1" height="15.0" fill="rgb(215,45,3)" rx="2" ry="2" />
<text  x="90.07" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (237,982,947 samples, 0.94%)</title><rect x="1143.9" y="1029" width="11.1" height="15.0" fill="rgb(224,131,6)" rx="2" ry="2" />
<text  x="1146.91" y="1039.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (20,194,227 samples, 0.08%)</title><rect x="128.7" y="1253" width="1.0" height="15.0" fill="rgb(236,55,49)" rx="2" ry="2" />
<text  x="131.74" y="1263.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;::~pair (2,537,634 samples, 0.01%)</title><rect x="75.8" y="1045" width="0.1" height="15.0" fill="rgb(233,126,51)" rx="2" ry="2" />
<text  x="78.76" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,305,251 samples, 0.01%)</title><rect x="126.3" y="1077" width="0.1" height="15.0" fill="rgb(236,147,14)" rx="2" ry="2" />
<text  x="129.28" y="1087.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (5,003,063 samples, 0.02%)</title><rect x="804.5" y="949" width="0.2" height="15.0" fill="rgb(248,28,9)" rx="2" ry="2" />
<text  x="807.51" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (2,272,626 samples, 0.01%)</title><rect x="1174.8" y="1301" width="0.1" height="15.0" fill="rgb(244,37,52)" rx="2" ry="2" />
<text  x="1177.81" y="1311.5" ></text>
</g>
<g >
<title>std::tuple&lt;gazebo::common::UpdateInfo const&amp;&gt;::tuple&lt;void, true&gt; (6,320,954 samples, 0.02%)</title><rect x="728.0" y="949" width="0.3" height="15.0" fill="rgb(212,165,8)" rx="2" ry="2" />
<text  x="731.05" y="959.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (15,194,205 samples, 0.06%)</title><rect x="790.5" y="981" width="0.7" height="15.0" fill="rgb(216,200,8)" rx="2" ry="2" />
<text  x="793.48" y="991.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;gazebo::msgs::Time&gt; (2,665,526 samples, 0.01%)</title><rect x="163.9" y="1221" width="0.1" height="15.0" fill="rgb(213,4,1)" rx="2" ry="2" />
<text  x="166.90" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,446 samples, 0.01%)</title><rect x="681.0" y="725" width="0.1" height="15.0" fill="rgb(235,20,7)" rx="2" ry="2" />
<text  x="683.97" y="735.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::CollisionCallback (4,175,437 samples, 0.02%)</title><rect x="781.4" y="917" width="0.2" height="15.0" fill="rgb(244,9,48)" rx="2" ry="2" />
<text  x="784.37" y="927.5" ></text>
</g>
<g >
<title>boost::dynamic_pointer_cast&lt;gazebo::physics::Link, gazebo::physics::Base&gt; (5,786,678 samples, 0.02%)</title><rect x="680.8" y="901" width="0.3" height="15.0" fill="rgb(224,68,32)" rx="2" ry="2" />
<text  x="683.81" y="911.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, gazebo::physics::LinkPrivate*, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::_M_head (2,237,807 samples, 0.01%)</title><rect x="594.0" y="693" width="0.1" height="15.0" fill="rgb(251,78,43)" rx="2" ry="2" />
<text  x="597.03" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (2,520,020 samples, 0.01%)</title><rect x="827.0" y="1013" width="0.1" height="15.0" fill="rgb(246,34,23)" rx="2" ry="2" />
<text  x="829.98" y="1023.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator- (4,097,964 samples, 0.02%)</title><rect x="721.0" y="869" width="0.2" height="15.0" fill="rgb(209,76,12)" rx="2" ry="2" />
<text  x="724.00" y="879.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (106,241,582 samples, 0.42%)</title><rect x="121.8" y="1285" width="4.9" height="15.0" fill="rgb(254,16,17)" rx="2" ry="2" />
<text  x="124.80" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,334,647 samples, 0.01%)</title><rect x="150.1" y="1269" width="0.1" height="15.0" fill="rgb(233,149,41)" rx="2" ry="2" />
<text  x="153.06" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,733,516 samples, 0.05%)</title><rect x="722.4" y="773" width="0.5" height="15.0" fill="rgb(235,45,5)" rx="2" ry="2" />
<text  x="725.35" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,829,890 samples, 0.02%)</title><rect x="854.8" y="981" width="0.2" height="15.0" fill="rgb(244,118,21)" rx="2" ry="2" />
<text  x="857.78" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,305,251 samples, 0.01%)</title><rect x="126.3" y="1269" width="0.1" height="15.0" fill="rgb(209,147,22)" rx="2" ry="2" />
<text  x="129.28" y="1279.5" ></text>
</g>
<g >
<title>control_msgs::msg::DynamicJointState_&lt;std::allocator&lt;void&gt; &gt;::DynamicJointState_ (8,880,384 samples, 0.04%)</title><rect x="824.4" y="1141" width="0.4" height="15.0" fill="rgb(231,162,51)" rx="2" ry="2" />
<text  x="827.43" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,596,349 samples, 0.01%)</title><rect x="220.3" y="885" width="0.2" height="15.0" fill="rgb(237,124,19)" rx="2" ry="2" />
<text  x="223.31" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,179,357 samples, 0.02%)</title><rect x="889.2" y="1269" width="0.3" height="15.0" fill="rgb(241,91,44)" rx="2" ry="2" />
<text  x="892.25" y="1279.5" ></text>
</g>
<g >
<title>realtime_tools::RealtimePublisher&lt;sensor_msgs::msg::JointState_&lt;std::allocator&lt;void&gt; &gt; &gt;::lock (4,961,329 samples, 0.02%)</title><rect x="849.4" y="1157" width="0.2" height="15.0" fill="rgb(249,2,49)" rx="2" ry="2" />
<text  x="852.36" y="1167.5" ></text>
</g>
<g >
<title>gazebo::msgs::WorldStatistics::has_sim_time (3,877,789 samples, 0.02%)</title><rect x="771.9" y="1045" width="0.2" height="15.0" fill="rgb(237,62,32)" rx="2" ry="2" />
<text  x="774.94" y="1055.5" ></text>
</g>
<g >
<title>gazebo_ros2_control::GazeboSystem::write (1,882,389,643 samples, 7.43%)</title><rect x="524.8" y="869" width="87.6" height="15.0" fill="rgb(242,144,14)" rx="2" ry="2" />
<text  x="527.77" y="879.5" >gazebo_ros..</text>
</g>
<g >
<title>sdf::v9::Element::Get&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (15,477,941 samples, 0.06%)</title><rect x="19.5" y="1157" width="0.7" height="15.0" fill="rgb(224,224,43)" rx="2" ry="2" />
<text  x="22.52" y="1167.5" ></text>
</g>
<g >
<title>rclcpp::Service&lt;gazebo_msgs::srv::GetEntityState&gt;::handle_request (12,564,770 samples, 0.05%)</title><rect x="794.2" y="981" width="0.5" height="15.0" fill="rgb(228,98,35)" rx="2" ry="2" />
<text  x="797.16" y="991.5" ></text>
</g>
<g >
<title>gazebo::sensors::ImuSensor::Orientation (8,126,554 samples, 0.03%)</title><rect x="21.8" y="1029" width="0.3" height="15.0" fill="rgb(247,96,42)" rx="2" ry="2" />
<text  x="24.75" y="1039.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEHingeJoint::SetForceImpl (4,108,094 samples, 0.02%)</title><rect x="472.4" y="853" width="0.2" height="15.0" fill="rgb(227,39,25)" rx="2" ry="2" />
<text  x="475.39" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,368,669 samples, 0.03%)</title><rect x="833.6" y="1061" width="0.3" height="15.0" fill="rgb(250,182,51)" rx="2" ry="2" />
<text  x="836.60" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,839,504 samples, 0.02%)</title><rect x="1171.6" y="1109" width="0.2" height="15.0" fill="rgb(247,222,23)" rx="2" ry="2" />
<text  x="1174.62" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1189" width="0.4" height="15.0" fill="rgb(244,225,35)" rx="2" ry="2" />
<text  x="1181.27" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (45,421,546 samples, 0.18%)</title><rect x="884.5" y="565" width="2.1" height="15.0" fill="rgb(243,185,4)" rx="2" ry="2" />
<text  x="887.46" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,291,598 samples, 0.04%)</title><rect x="789.1" y="1013" width="0.5" height="15.0" fill="rgb(220,224,37)" rx="2" ry="2" />
<text  x="792.09" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (92,542,284 samples, 0.37%)</title><rect x="54.7" y="885" width="4.3" height="15.0" fill="rgb(233,183,15)" rx="2" ry="2" />
<text  x="57.65" y="895.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::operator (2,192,874 samples, 0.01%)</title><rect x="526.3" y="821" width="0.1" height="15.0" fill="rgb(218,191,23)" rx="2" ry="2" />
<text  x="529.28" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,496,532 samples, 0.10%)</title><rect x="11.4" y="1157" width="1.1" height="15.0" fill="rgb(245,84,48)" rx="2" ry="2" />
<text  x="14.36" y="1167.5" ></text>
</g>
<g >
<title>[[uprobes]] (3,744,828 samples, 0.01%)</title><rect x="851.8" y="1109" width="0.1" height="15.0" fill="rgb(212,153,48)" rx="2" ry="2" />
<text  x="854.77" y="1119.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (3,674,057 samples, 0.01%)</title><rect x="559.9" y="725" width="0.2" height="15.0" fill="rgb(253,82,23)" rx="2" ry="2" />
<text  x="562.93" y="735.5" ></text>
</g>
<g >
<title>gazebo::msgs::Time::Time (3,325,405 samples, 0.01%)</title><rect x="27.2" y="1077" width="0.1" height="15.0" fill="rgb(218,93,6)" rx="2" ry="2" />
<text  x="30.19" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,850,278 samples, 0.02%)</title><rect x="832.5" y="1093" width="0.2" height="15.0" fill="rgb(231,86,27)" rx="2" ry="2" />
<text  x="835.51" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,350,425 samples, 0.03%)</title><rect x="707.0" y="901" width="0.3" height="15.0" fill="rgb(205,221,7)" rx="2" ry="2" />
<text  x="710.00" y="911.5" ></text>
</g>
<g >
<title>__libc_recvfrom (12,143,840 samples, 0.05%)</title><rect x="871.4" y="1301" width="0.6" height="15.0" fill="rgb(251,28,30)" rx="2" ry="2" />
<text  x="874.45" y="1311.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;unsigned int&gt; &gt; &gt;::allocate (3,283,138 samples, 0.01%)</title><rect x="83.7" y="1077" width="0.2" height="15.0" fill="rgb(217,32,31)" rx="2" ry="2" />
<text  x="86.72" y="1087.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;unsigned int&gt;::_List_iterator (2,519,689 samples, 0.01%)</title><rect x="82.1" y="1125" width="0.1" height="15.0" fill="rgb(230,46,39)" rx="2" ry="2" />
<text  x="85.10" y="1135.5" ></text>
</g>
<g >
<title>boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::sensors::SimTimeEventHandler, gazebo::common::UpdateInfo const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::sensors::SimTimeEventHandler*&gt;, boost::arg&lt;1&gt; &gt; &gt;::operator (47,604,337 samples, 0.19%)</title><rect x="619.6" y="981" width="2.2" height="15.0" fill="rgb(246,121,1)" rx="2" ry="2" />
<text  x="622.61" y="991.5" ></text>
</g>
<g >
<title>dGeomGetSpace (8,191,340 samples, 0.03%)</title><rect x="35.7" y="997" width="0.4" height="15.0" fill="rgb(226,215,1)" rx="2" ry="2" />
<text  x="38.67" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,636,810 samples, 0.03%)</title><rect x="615.3" y="885" width="0.3" height="15.0" fill="rgb(237,111,8)" rx="2" ry="2" />
<text  x="618.27" y="895.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::~_Vector_base (3,930,952 samples, 0.02%)</title><rect x="610.8" y="805" width="0.2" height="15.0" fill="rgb(252,139,32)" rx="2" ry="2" />
<text  x="613.84" y="815.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (2,241,233 samples, 0.01%)</title><rect x="840.7" y="1013" width="0.1" height="15.0" fill="rgb(229,227,37)" rx="2" ry="2" />
<text  x="843.68" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (47,267,486 samples, 0.19%)</title><rect x="739.3" y="981" width="2.2" height="15.0" fill="rgb(214,186,12)" rx="2" ry="2" />
<text  x="742.25" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="1077" width="0.1" height="15.0" fill="rgb(251,41,25)" rx="2" ry="2" />
<text  x="848.06" y="1087.5" ></text>
</g>
<g >
<title>boost::recursive_mutex::lock (3,141,268 samples, 0.01%)</title><rect x="52.1" y="1173" width="0.1" height="15.0" fill="rgb(246,121,1)" rx="2" ry="2" />
<text  x="55.05" y="1183.5" ></text>
</g>
<g >
<title>google::protobuf::internal::CachedSize::Set (3,602,555 samples, 0.01%)</title><rect x="163.7" y="1141" width="0.2" height="15.0" fill="rgb(226,86,12)" rx="2" ry="2" />
<text  x="166.73" y="1151.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (6,027,309 samples, 0.02%)</title><rect x="502.8" y="837" width="0.3" height="15.0" fill="rgb(253,196,37)" rx="2" ry="2" />
<text  x="505.79" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,303,114 samples, 0.01%)</title><rect x="62.8" y="1045" width="0.2" height="15.0" fill="rgb(218,23,47)" rx="2" ry="2" />
<text  x="65.82" y="1055.5" ></text>
</g>
<g >
<title>dCollideCylinderTrimesh (59,446,285 samples, 0.23%)</title><rect x="252.7" y="997" width="2.7" height="15.0" fill="rgb(219,193,19)" rx="2" ry="2" />
<text  x="255.66" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::emplace_back&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (9,011,344 samples, 0.04%)</title><rect x="594.2" y="757" width="0.4" height="15.0" fill="rgb(223,160,36)" rx="2" ry="2" />
<text  x="597.23" y="767.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::GetChildJointsLinks (3,947,068 samples, 0.02%)</title><rect x="775.8" y="789" width="0.2" height="15.0" fill="rgb(224,47,1)" rx="2" ry="2" />
<text  x="778.80" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (165,739,373 samples, 0.65%)</title><rect x="910.0" y="1237" width="7.7" height="15.0" fill="rgb(242,96,23)" rx="2" ry="2" />
<text  x="913.01" y="1247.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::UpdatePhysics (47,300,937 samples, 0.19%)</title><rect x="746.7" y="1045" width="2.2" height="15.0" fill="rgb(236,11,22)" rx="2" ry="2" />
<text  x="749.71" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::~_Vector_base (9,349,603 samples, 0.04%)</title><rect x="677.6" y="885" width="0.4" height="15.0" fill="rgb(211,139,25)" rx="2" ry="2" />
<text  x="680.57" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,928,290 samples, 0.01%)</title><rect x="1185.4" y="1253" width="0.1" height="15.0" fill="rgb(218,205,18)" rx="2" ry="2" />
<text  x="1188.38" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,624,359,664 samples, 18.25%)</title><rect x="939.8" y="1221" width="215.3" height="15.0" fill="rgb(235,81,16)" rx="2" ry="2" />
<text  x="942.76" y="1231.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::sensors::RaySensorPrivate, std::default_delete&lt;gazebo::sensors::RaySensorPrivate&gt; &gt;::_M_ptr (3,143,021 samples, 0.01%)</title><rect x="46.6" y="1093" width="0.1" height="15.0" fill="rgb(240,183,47)" rx="2" ry="2" />
<text  x="49.58" y="1103.5" ></text>
</g>
<g >
<title>boost::_mfi::mf0&lt;unsigned long, boost::asio::io_context&gt;::operator (94,393,818 samples, 0.37%)</title><rect x="13.6" y="1237" width="4.3" height="15.0" fill="rgb(218,57,26)" rx="2" ry="2" />
<text  x="16.55" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26,223,569 samples, 0.10%)</title><rect x="11.3" y="1221" width="1.2" height="15.0" fill="rgb(244,34,35)" rx="2" ry="2" />
<text  x="14.32" y="1231.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::sensors::ImuSensorPrivate, std::default_delete&lt;gazebo::sensors::ImuSensorPrivate&gt; &gt;::operator (4,610,904 samples, 0.02%)</title><rect x="21.5" y="1013" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="24.54" y="1023.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::clear (7,442,632 samples, 0.03%)</title><rect x="75.8" y="1157" width="0.3" height="15.0" fill="rgb(233,95,50)" rx="2" ry="2" />
<text  x="78.76" y="1167.5" ></text>
</g>
<g >
<title>__tls_get_addr (8,117,798 samples, 0.03%)</title><rect x="1189.6" y="1301" width="0.4" height="15.0" fill="rgb(238,168,22)" rx="2" ry="2" />
<text  x="1192.62" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,165,751 samples, 0.02%)</title><rect x="520.9" y="805" width="0.3" height="15.0" fill="rgb(233,139,23)" rx="2" ry="2" />
<text  x="523.90" y="815.5" ></text>
</g>
<g >
<title>boost::detail::atomic_decrement (4,110,741 samples, 0.02%)</title><rect x="610.5" y="693" width="0.2" height="15.0" fill="rgb(243,166,28)" rx="2" ry="2" />
<text  x="613.55" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,291,598 samples, 0.04%)</title><rect x="789.1" y="1061" width="0.5" height="15.0" fill="rgb(244,132,6)" rx="2" ry="2" />
<text  x="792.09" y="1071.5" ></text>
</g>
<g >
<title>collideAABBs (126,230,905 samples, 0.50%)</title><rect x="234.3" y="997" width="5.8" height="15.0" fill="rgb(249,204,40)" rx="2" ry="2" />
<text  x="237.27" y="1007.5" ></text>
</g>
<g >
<title>joint_trajectory_controller::JointTrajectoryController::update (6,282,725 samples, 0.02%)</title><rect x="776.9" y="901" width="0.3" height="15.0" fill="rgb(207,12,11)" rx="2" ry="2" />
<text  x="779.93" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,575,197 samples, 0.01%)</title><rect x="776.5" y="837" width="0.2" height="15.0" fill="rgb(238,166,31)" rx="2" ry="2" />
<text  x="779.54" y="847.5" ></text>
</g>
<g >
<title>[libgazebo_sensors.so.11.10.1] (10,600,342 samples, 0.04%)</title><rect x="619.6" y="933" width="0.5" height="15.0" fill="rgb(237,5,1)" rx="2" ry="2" />
<text  x="622.61" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::operator= (57,290,286 samples, 0.23%)</title><rect x="825.1" y="1125" width="2.7" height="15.0" fill="rgb(222,130,28)" rx="2" ry="2" />
<text  x="828.15" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (49,578,582 samples, 0.20%)</title><rect x="500.9" y="869" width="2.3" height="15.0" fill="rgb(214,194,46)" rx="2" ry="2" />
<text  x="503.87" y="879.5" ></text>
</g>
<g >
<title>gazebo::common::Time::operator+ (3,236,320 samples, 0.01%)</title><rect x="19.4" y="1189" width="0.1" height="15.0" fill="rgb(228,149,5)" rx="2" ry="2" />
<text  x="22.37" y="1199.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::recursive_mutex&gt;::~lock_guard (2,171,942 samples, 0.01%)</title><rect x="224.3" y="981" width="0.1" height="15.0" fill="rgb(218,31,2)" rx="2" ry="2" />
<text  x="227.28" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,243,735 samples, 0.01%)</title><rect x="266.8" y="725" width="0.1" height="15.0" fill="rgb(209,42,24)" rx="2" ry="2" />
<text  x="269.79" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,179,357 samples, 0.02%)</title><rect x="889.2" y="1173" width="0.3" height="15.0" fill="rgb(214,24,13)" rx="2" ry="2" />
<text  x="892.25" y="1183.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::util::LogRecordPrivate*, std::default_delete&lt;gazebo::util::LogRecordPrivate&gt; &gt; (4,187,249 samples, 0.02%)</title><rect x="743.9" y="997" width="0.2" height="15.0" fill="rgb(240,137,47)" rx="2" ry="2" />
<text  x="746.89" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,362,860 samples, 0.04%)</title><rect x="614.5" y="837" width="0.4" height="15.0" fill="rgb(215,143,43)" rx="2" ry="2" />
<text  x="617.45" y="847.5" ></text>
</g>
<g >
<title>std::copy&lt;std::_List_iterator&lt;gazebo::msgs::Light&gt;, std::back_insert_iterator&lt;std::__cxx11::list&lt;gazebo::msgs::Light, std::allocator&lt;gazebo::msgs::Light&gt; &gt; &gt; &gt; (2,170,625 samples, 0.01%)</title><rect x="763.0" y="1029" width="0.1" height="15.0" fill="rgb(211,35,14)" rx="2" ry="2" />
<text  x="766.03" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,918,687 samples, 0.02%)</title><rect x="620.7" y="773" width="0.2" height="15.0" fill="rgb(250,148,4)" rx="2" ry="2" />
<text  x="623.69" y="783.5" ></text>
</g>
<g >
<title>__cos_fma (4,337,929 samples, 0.02%)</title><rect x="252.8" y="981" width="0.2" height="15.0" fill="rgb(222,129,37)" rx="2" ry="2" />
<text  x="255.76" y="991.5" ></text>
</g>
<g >
<title>dCollide (12,163,893 samples, 0.05%)</title><rect x="37.1" y="901" width="0.6" height="15.0" fill="rgb(208,182,15)" rx="2" ry="2" />
<text  x="40.10" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,770,981 samples, 0.01%)</title><rect x="493.5" y="853" width="0.2" height="15.0" fill="rgb(222,122,36)" rx="2" ry="2" />
<text  x="496.50" y="863.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (5,845,810 samples, 0.02%)</title><rect x="840.5" y="1045" width="0.3" height="15.0" fill="rgb(238,140,7)" rx="2" ry="2" />
<text  x="843.51" y="1055.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (2,220,415,664 samples, 8.76%)</title><rect x="623.6" y="965" width="103.4" height="15.0" fill="rgb(236,89,4)" rx="2" ry="2" />
<text  x="626.58" y="975.5" >std::_Bind&lt;v..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,362,860 samples, 0.04%)</title><rect x="614.5" y="869" width="0.4" height="15.0" fill="rgb(210,42,14)" rx="2" ry="2" />
<text  x="617.45" y="879.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4,495,038 samples, 0.02%)</title><rect x="794.5" y="901" width="0.2" height="15.0" fill="rgb(227,207,51)" rx="2" ry="2" />
<text  x="797.53" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,904 samples, 0.12%)</title><rect x="1181.6" y="1253" width="1.4" height="15.0" fill="rgb(246,126,1)" rx="2" ry="2" />
<text  x="1184.61" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (46,367,145 samples, 0.18%)</title><rect x="55.5" y="549" width="2.2" height="15.0" fill="rgb(218,123,21)" rx="2" ry="2" />
<text  x="58.49" y="559.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (7,781,473 samples, 0.03%)</title><rect x="211.4" y="1045" width="0.4" height="15.0" fill="rgb(232,204,45)" rx="2" ry="2" />
<text  x="214.43" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,666,978 samples, 0.01%)</title><rect x="23.8" y="901" width="0.2" height="15.0" fill="rgb(240,5,28)" rx="2" ry="2" />
<text  x="26.82" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,628,552 samples, 0.03%)</title><rect x="138.3" y="1141" width="0.3" height="15.0" fill="rgb(243,88,12)" rx="2" ry="2" />
<text  x="141.29" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,305,251 samples, 0.01%)</title><rect x="126.3" y="1093" width="0.1" height="15.0" fill="rgb(225,152,16)" rx="2" ry="2" />
<text  x="129.28" y="1103.5" ></text>
</g>
<g >
<title>[libjoint_state_broadcaster.so] (13,230,296 samples, 0.05%)</title><rect x="823.8" y="1141" width="0.6" height="15.0" fill="rgb(221,125,37)" rx="2" ry="2" />
<text  x="826.80" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (57,625,425 samples, 0.23%)</title><rect x="460.5" y="965" width="2.7" height="15.0" fill="rgb(218,96,5)" rx="2" ry="2" />
<text  x="463.50" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::_M_destroy_node (2,537,634 samples, 0.01%)</title><rect x="75.8" y="1093" width="0.1" height="15.0" fill="rgb(211,6,31)" rx="2" ry="2" />
<text  x="78.76" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;unsigned int&gt; &gt;::max_size (3,283,138 samples, 0.01%)</title><rect x="83.7" y="1061" width="0.2" height="15.0" fill="rgb(225,59,31)" rx="2" ry="2" />
<text  x="86.72" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,354,229 samples, 0.10%)</title><rect x="16.8" y="933" width="1.1" height="15.0" fill="rgb(235,59,42)" rx="2" ry="2" />
<text  x="19.77" y="943.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (3,931,963 samples, 0.02%)</title><rect x="219.2" y="949" width="0.1" height="15.0" fill="rgb(250,19,30)" rx="2" ry="2" />
<text  x="222.16" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (36,703,256 samples, 0.14%)</title><rect x="1187.6" y="1061" width="1.7" height="15.0" fill="rgb(207,210,24)" rx="2" ry="2" />
<text  x="1190.58" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,596,349 samples, 0.01%)</title><rect x="220.3" y="821" width="0.2" height="15.0" fill="rgb(234,125,29)" rx="2" ry="2" />
<text  x="223.31" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,150,938 samples, 0.02%)</title><rect x="708.8" y="709" width="0.1" height="15.0" fill="rgb(241,130,38)" rx="2" ry="2" />
<text  x="711.75" y="719.5" ></text>
</g>
<g >
<title>gazebo::msgs::Vector3d::Vector3d (5,302,558 samples, 0.02%)</title><rect x="26.9" y="1093" width="0.3" height="15.0" fill="rgb(251,26,24)" rx="2" ry="2" />
<text  x="29.94" y="1103.5" ></text>
</g>
<g >
<title>std::operator&amp; (3,303,114 samples, 0.01%)</title><rect x="78.0" y="1077" width="0.1" height="15.0" fill="rgb(254,218,48)" rx="2" ry="2" />
<text  x="80.96" y="1087.5" ></text>
</g>
<g >
<title>gazebo::msgs::Time::~Time (3,644,236 samples, 0.01%)</title><rect x="74.4" y="901" width="0.2" height="15.0" fill="rgb(226,8,48)" rx="2" ry="2" />
<text  x="77.43" y="911.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::~LinkData (15,510,083 samples, 0.06%)</title><rect x="74.3" y="949" width="0.7" height="15.0" fill="rgb(234,85,42)" rx="2" ry="2" />
<text  x="77.32" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (67,900,655 samples, 0.27%)</title><rect x="55.5" y="613" width="3.2" height="15.0" fill="rgb(227,8,39)" rx="2" ry="2" />
<text  x="58.49" y="623.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,281,711 samples, 0.01%)</title><rect x="841.9" y="1077" width="0.2" height="15.0" fill="rgb(246,172,53)" rx="2" ry="2" />
<text  x="844.95" y="1087.5" ></text>
</g>
<g >
<title>[libzmq.so.5.2.2] (9,315,762 samples, 0.04%)</title><rect x="102.0" y="1301" width="0.4" height="15.0" fill="rgb(251,9,35)" rx="2" ry="2" />
<text  x="105.00" y="1311.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (7,227,653 samples, 0.03%)</title><rect x="827.2" y="949" width="0.3" height="15.0" fill="rgb(232,9,13)" rx="2" ry="2" />
<text  x="830.18" y="959.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (4,026,760 samples, 0.02%)</title><rect x="527.4" y="773" width="0.2" height="15.0" fill="rgb(233,31,48)" rx="2" ry="2" />
<text  x="530.41" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (66,225,543 samples, 0.26%)</title><rect x="463.5" y="1029" width="3.1" height="15.0" fill="rgb(219,198,49)" rx="2" ry="2" />
<text  x="466.47" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (192,458,736 samples, 0.76%)</title><rect x="166.7" y="1157" width="9.0" height="15.0" fill="rgb(210,225,7)" rx="2" ry="2" />
<text  x="169.74" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,850,278 samples, 0.02%)</title><rect x="832.5" y="933" width="0.2" height="15.0" fill="rgb(253,55,32)" rx="2" ry="2" />
<text  x="835.51" y="943.5" ></text>
</g>
<g >
<title>gazebo::Server::Run (360,849,296 samples, 1.42%)</title><rect x="890.3" y="1269" width="16.8" height="15.0" fill="rgb(251,102,50)" rx="2" ry="2" />
<text  x="893.30" y="1279.5" ></text>
</g>
<g >
<title>std::mutex::try_lock (7,337,753 samples, 0.03%)</title><rect x="842.8" y="1125" width="0.4" height="15.0" fill="rgb(211,198,36)" rx="2" ry="2" />
<text  x="845.82" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,329,161 samples, 0.02%)</title><rect x="462.8" y="821" width="0.3" height="15.0" fill="rgb(247,137,25)" rx="2" ry="2" />
<text  x="465.79" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,918,687 samples, 0.02%)</title><rect x="620.7" y="805" width="0.2" height="15.0" fill="rgb(245,157,37)" rx="2" ry="2" />
<text  x="623.69" y="815.5" ></text>
</g>
<g >
<title>__sin_fma (4,266,701 samples, 0.02%)</title><rect x="918.6" y="1301" width="0.2" height="15.0" fill="rgb(235,45,6)" rx="2" ry="2" />
<text  x="921.65" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,850,278 samples, 0.02%)</title><rect x="832.5" y="1109" width="0.2" height="15.0" fill="rgb(234,62,31)" rx="2" ry="2" />
<text  x="835.51" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19,439,574 samples, 0.08%)</title><rect x="1182.1" y="1141" width="0.9" height="15.0" fill="rgb(230,135,19)" rx="2" ry="2" />
<text  x="1185.06" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (54,918,708 samples, 0.22%)</title><rect x="1169.2" y="1285" width="2.6" height="15.0" fill="rgb(252,17,3)" rx="2" ry="2" />
<text  x="1172.24" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (338,718,040 samples, 1.34%)</title><rect x="873.5" y="1157" width="15.7" height="15.0" fill="rgb(229,123,50)" rx="2" ry="2" />
<text  x="876.47" y="1167.5" ></text>
</g>
<g >
<title>std::forward&lt;gazebo::common::UpdateInfo const&amp;&gt; (2,176,394 samples, 0.01%)</title><rect x="730.1" y="997" width="0.1" height="15.0" fill="rgb(238,131,16)" rx="2" ry="2" />
<text  x="733.07" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,141,612 samples, 0.02%)</title><rect x="1177.0" y="1221" width="0.2" height="15.0" fill="rgb(233,32,27)" rx="2" ry="2" />
<text  x="1180.00" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="901" width="0.1" height="15.0" fill="rgb(208,155,30)" rx="2" ry="2" />
<text  x="848.06" y="911.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMaybeMessage&lt;gazebo::msgs::Time&gt; (3,325,405 samples, 0.01%)</title><rect x="27.2" y="1093" width="0.1" height="15.0" fill="rgb(205,202,4)" rx="2" ry="2" />
<text  x="30.19" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,585,715 samples, 0.03%)</title><rect x="852.1" y="933" width="0.3" height="15.0" fill="rgb(247,38,34)" rx="2" ry="2" />
<text  x="855.09" y="943.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete (28,915,076 samples, 0.11%)</title><rect x="13.6" y="1173" width="1.3" height="15.0" fill="rgb(225,47,3)" rx="2" ry="2" />
<text  x="16.55" y="1183.5" ></text>
</g>
<g >
<title>boost::detail::interruption_checker::unlock_if_locked (9,194,864 samples, 0.04%)</title><rect x="49.4" y="1173" width="0.5" height="15.0" fill="rgb(214,134,30)" rx="2" ry="2" />
<text  x="52.44" y="1183.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::lock (12,542,768 samples, 0.05%)</title><rect x="899.6" y="1157" width="0.6" height="15.0" fill="rgb(216,195,7)" rx="2" ry="2" />
<text  x="902.59" y="1167.5" ></text>
</g>
<g >
<title>printf_positional (9,319,109 samples, 0.04%)</title><rect x="153.0" y="1253" width="0.4" height="15.0" fill="rgb(214,2,36)" rx="2" ry="2" />
<text  x="155.97" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (23,473,315 samples, 0.09%)</title><rect x="11.4" y="1061" width="1.1" height="15.0" fill="rgb(231,88,28)" rx="2" ry="2" />
<text  x="14.45" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,067,708 samples, 0.05%)</title><rect x="12.9" y="1157" width="0.6" height="15.0" fill="rgb(207,211,47)" rx="2" ry="2" />
<text  x="15.89" y="1167.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (5,074,314 samples, 0.02%)</title><rect x="440.3" y="901" width="0.2" height="15.0" fill="rgb(231,69,8)" rx="2" ry="2" />
<text  x="443.28" y="911.5" ></text>
</g>
<g >
<title>boost::checked_delete&lt;google::protobuf::Message&gt; (24,252,778 samples, 0.10%)</title><rect x="765.8" y="917" width="1.1" height="15.0" fill="rgb(247,143,20)" rx="2" ry="2" />
<text  x="768.76" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1205" width="0.1" height="15.0" fill="rgb(225,193,16)" rx="2" ry="2" />
<text  x="135.18" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,694,278 samples, 0.06%)</title><rect x="709.7" y="917" width="0.7" height="15.0" fill="rgb(205,104,19)" rx="2" ry="2" />
<text  x="712.70" y="927.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::add_pose (19,016,805 samples, 0.08%)</title><rect x="754.6" y="1045" width="0.9" height="15.0" fill="rgb(251,65,3)" rx="2" ry="2" />
<text  x="757.57" y="1055.5" ></text>
</g>
<g >
<title>boost::asio::async_write&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (100,583,021 samples, 0.40%)</title><rect x="54.3" y="1173" width="4.7" height="15.0" fill="rgb(206,57,7)" rx="2" ry="2" />
<text  x="57.28" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (116,529,869 samples, 0.46%)</title><rect x="732.2" y="1029" width="5.4" height="15.0" fill="rgb(243,130,49)" rx="2" ry="2" />
<text  x="735.18" y="1039.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_331 (2,173,369 samples, 0.01%)</title><rect x="273.7" y="933" width="0.1" height="15.0" fill="rgb(230,44,3)" rx="2" ry="2" />
<text  x="276.65" y="943.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (12,939,044 samples, 0.05%)</title><rect x="794.7" y="965" width="0.6" height="15.0" fill="rgb(220,120,9)" rx="2" ry="2" />
<text  x="797.74" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;gazebo::msgs::ServerControl, std::allocator&lt;gazebo::msgs::ServerControl&gt; &gt;::_M_clear (6,841,582 samples, 0.03%)</title><rect x="892.2" y="1237" width="0.3" height="15.0" fill="rgb(237,127,8)" rx="2" ry="2" />
<text  x="895.16" y="1247.5" ></text>
</g>
<g >
<title>__dynamic_cast (3,248,428 samples, 0.01%)</title><rect x="137.7" y="1253" width="0.1" height="15.0" fill="rgb(211,43,32)" rx="2" ry="2" />
<text  x="140.69" y="1263.5" ></text>
</g>
<g >
<title>boost::recursive_mutex::lock (2,173,567 samples, 0.01%)</title><rect x="563.7" y="805" width="0.1" height="15.0" fill="rgb(207,10,11)" rx="2" ry="2" />
<text  x="566.74" y="815.5" ></text>
</g>
<g >
<title>[libgazebo_ros_factory.so] (7,733,003 samples, 0.03%)</title><rect x="789.9" y="1029" width="0.4" height="15.0" fill="rgb(246,11,15)" rx="2" ry="2" />
<text  x="792.90" y="1039.5" ></text>
</g>
<g >
<title>gazebo::msgs::IMU::angular_velocity (9,937,842 samples, 0.04%)</title><rect x="24.5" y="1173" width="0.4" height="15.0" fill="rgb(241,164,11)" rx="2" ry="2" />
<text  x="27.48" y="1183.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::set&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::emplace_unique&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; const&amp;&gt; (3,236,320 samples, 0.01%)</title><rect x="32.2" y="1077" width="0.1" height="15.0" fill="rgb(247,106,1)" rx="2" ry="2" />
<text  x="35.16" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (43,104,486 samples, 0.17%)</title><rect x="1172.1" y="1189" width="2.0" height="15.0" fill="rgb(210,130,17)" rx="2" ry="2" />
<text  x="1175.13" y="1199.5" ></text>
</g>
<g >
<title>std::set&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::clear (2,379,565 samples, 0.01%)</title><rect x="769.5" y="1045" width="0.1" height="15.0" fill="rgb(232,212,30)" rx="2" ry="2" />
<text  x="772.50" y="1055.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (5,426,780 samples, 0.02%)</title><rect x="826.7" y="981" width="0.2" height="15.0" fill="rgb(220,97,35)" rx="2" ry="2" />
<text  x="829.66" y="991.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::GetParentJointsLinks (12,316,296 samples, 0.05%)</title><rect x="587.3" y="741" width="0.6" height="15.0" fill="rgb(252,87,10)" rx="2" ry="2" />
<text  x="590.29" y="751.5" ></text>
</g>
<g >
<title>ignition::transport::v8::Discovery&lt;ignition::transport::v8::ServicePublisher&gt;::UpdateHeartbeat (5,310,055 samples, 0.02%)</title><rect x="164.2" y="1285" width="0.3" height="15.0" fill="rgb(220,172,11)" rx="2" ry="2" />
<text  x="167.20" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,694,278 samples, 0.06%)</title><rect x="709.7" y="885" width="0.7" height="15.0" fill="rgb(243,76,38)" rx="2" ry="2" />
<text  x="712.70" y="895.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;rcl_service_t const&gt;*, std::shared_ptr&lt;rcl_service_t const&gt; &gt; (4,016,876 samples, 0.02%)</title><rect x="202.0" y="1013" width="0.2" height="15.0" fill="rgb(234,202,39)" rx="2" ry="2" />
<text  x="204.99" y="1023.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (5,074,314 samples, 0.02%)</title><rect x="440.3" y="917" width="0.2" height="15.0" fill="rgb(222,164,2)" rx="2" ry="2" />
<text  x="443.28" y="927.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Quaternion (3,676,925 samples, 0.01%)</title><rect x="40.8" y="1093" width="0.1" height="15.0" fill="rgb(247,47,22)" rx="2" ry="2" />
<text  x="43.76" y="1103.5" ></text>
</g>
<g >
<title>dds_write_impl (3,901,683 samples, 0.02%)</title><rect x="158.3" y="1285" width="0.2" height="15.0" fill="rgb(224,130,36)" rx="2" ry="2" />
<text  x="161.33" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,179,357 samples, 0.02%)</title><rect x="889.2" y="1237" width="0.3" height="15.0" fill="rgb(233,58,52)" rx="2" ry="2" />
<text  x="892.25" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,904 samples, 0.12%)</title><rect x="1181.6" y="1173" width="1.4" height="15.0" fill="rgb(218,110,7)" rx="2" ry="2" />
<text  x="1184.61" y="1183.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned int const&amp;&gt;::tuple (2,537,634 samples, 0.01%)</title><rect x="85.5" y="1045" width="0.1" height="15.0" fill="rgb(232,125,5)" rx="2" ry="2" />
<text  x="88.52" y="1055.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (5,625,442 samples, 0.02%)</title><rect x="843.3" y="1109" width="0.2" height="15.0" fill="rgb(227,95,43)" rx="2" ry="2" />
<text  x="846.28" y="1119.5" ></text>
</g>
<g >
<title>gazebo::physics::ODELink::WorldLinearVel (6,156,420 samples, 0.02%)</title><rect x="720.9" y="885" width="0.3" height="15.0" fill="rgb(251,214,18)" rx="2" ry="2" />
<text  x="723.90" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="997" width="0.2" height="15.0" fill="rgb(250,25,3)" rx="2" ry="2" />
<text  x="823.95" y="1007.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::PublishImpl (69,702,552 samples, 0.28%)</title><rect x="763.8" y="1029" width="3.3" height="15.0" fill="rgb(253,159,15)" rx="2" ry="2" />
<text  x="766.83" y="1039.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4,109,885 samples, 0.02%)</title><rect x="495.1" y="821" width="0.2" height="15.0" fill="rgb(246,212,13)" rx="2" ry="2" />
<text  x="498.14" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (81,162,592 samples, 0.32%)</title><rect x="1185.5" y="1269" width="3.8" height="15.0" fill="rgb(242,23,32)" rx="2" ry="2" />
<text  x="1188.51" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;rclcpp::executors::MultiThreadedExecutor*, std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt;, std::allocator&lt;std::pair&lt;rclcpp::executors::MultiThreadedExecutor* const, std::shared_ptr&lt;rclcpp::detail::MutexTwoPriorities&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::hash&lt;rclcpp::executors::MultiThreadedExecutor*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (5,811,521 samples, 0.02%)</title><rect x="819.0" y="1061" width="0.3" height="15.0" fill="rgb(225,90,10)" rx="2" ry="2" />
<text  x="822.01" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,307,925 samples, 0.06%)</title><rect x="634.3" y="837" width="0.8" height="15.0" fill="rgb(254,127,8)" rx="2" ry="2" />
<text  x="637.31" y="847.5" ></text>
</g>
<g >
<title>rclcpp_action::ServerBase::add_to_wait_set (6,549,345 samples, 0.03%)</title><rect x="202.6" y="1077" width="0.3" height="15.0" fill="rgb(214,140,14)" rx="2" ry="2" />
<text  x="205.61" y="1087.5" ></text>
</g>
<g >
<title>rclcpp::Executor::wait_for_work (14,444,709 samples, 0.06%)</title><rect x="792.5" y="1029" width="0.6" height="15.0" fill="rgb(232,142,4)" rx="2" ry="2" />
<text  x="795.46" y="1039.5" ></text>
</g>
<g >
<title>google::protobuf::Message::Message (4,310,267 samples, 0.02%)</title><rect x="753.2" y="853" width="0.2" height="15.0" fill="rgb(209,157,6)" rx="2" ry="2" />
<text  x="756.23" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (71,480,882 samples, 0.28%)</title><rect x="454.4" y="1013" width="3.3" height="15.0" fill="rgb(208,56,26)" rx="2" ry="2" />
<text  x="457.36" y="1023.5" ></text>
</g>
<g >
<title>google::protobuf::Message::GetTypeName[abi:cxx11] (2,215,430 samples, 0.01%)</title><rect x="723.2" y="885" width="0.1" height="15.0" fill="rgb(240,130,20)" rx="2" ry="2" />
<text  x="726.24" y="895.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (4,133,382 samples, 0.02%)</title><rect x="583.3" y="789" width="0.2" height="15.0" fill="rgb(244,212,21)" rx="2" ry="2" />
<text  x="586.35" y="799.5" ></text>
</g>
<g >
<title>q_omg_participant_is_secure (3,007,762 samples, 0.01%)</title><rect x="186.5" y="1285" width="0.1" height="15.0" fill="rgb(205,7,52)" rx="2" ry="2" />
<text  x="189.47" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,609,527 samples, 0.08%)</title><rect x="477.4" y="805" width="1.0" height="15.0" fill="rgb(252,225,17)" rx="2" ry="2" />
<text  x="480.40" y="815.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::lock (13,130,685 samples, 0.05%)</title><rect x="80.6" y="1077" width="0.6" height="15.0" fill="rgb(209,189,18)" rx="2" ry="2" />
<text  x="83.63" y="1087.5" ></text>
</g>
<g >
<title>std::function&lt;void  (15,194,205 samples, 0.06%)</title><rect x="790.5" y="917" width="0.7" height="15.0" fill="rgb(239,88,14)" rx="2" ry="2" />
<text  x="793.48" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rclcpp::Waitable&gt;*, std::vector&lt;std::shared_ptr&lt;rclcpp::Waitable&gt;, std::allocator&lt;std::shared_ptr&lt;rclcpp::Waitable&gt; &gt; &gt; &gt;::__normal_iterator (5,995,416 samples, 0.02%)</title><rect x="202.3" y="1013" width="0.3" height="15.0" fill="rgb(230,226,23)" rx="2" ry="2" />
<text  x="205.33" y="1023.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::UpdateCollision (31,719,434 samples, 0.13%)</title><rect x="781.2" y="1045" width="1.5" height="15.0" fill="rgb(247,8,50)" rx="2" ry="2" />
<text  x="784.19" y="1055.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (6,013,373 samples, 0.02%)</title><rect x="57.2" y="133" width="0.3" height="15.0" fill="rgb(239,38,54)" rx="2" ry="2" />
<text  x="60.18" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2,536,199 samples, 0.01%)</title><rect x="828.7" y="965" width="0.2" height="15.0" fill="rgb(206,180,12)" rx="2" ry="2" />
<text  x="831.74" y="975.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (5,078,644 samples, 0.02%)</title><rect x="828.0" y="1093" width="0.3" height="15.0" fill="rgb(223,108,15)" rx="2" ry="2" />
<text  x="831.03" y="1103.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (3,859,336 samples, 0.02%)</title><rect x="761.9" y="997" width="0.2" height="15.0" fill="rgb(225,209,15)" rx="2" ry="2" />
<text  x="764.88" y="1007.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*, double&gt; (7,857,844 samples, 0.03%)</title><rect x="856.1" y="1093" width="0.4" height="15.0" fill="rgb(235,142,29)" rx="2" ry="2" />
<text  x="859.09" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,624,239 samples, 0.09%)</title><rect x="145.8" y="1077" width="1.1" height="15.0" fill="rgb(242,146,36)" rx="2" ry="2" />
<text  x="148.83" y="1087.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt;*&gt; (22,604,246 samples, 0.09%)</title><rect x="770.0" y="997" width="1.1" height="15.0" fill="rgb(231,227,16)" rx="2" ry="2" />
<text  x="773.00" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; &gt;::_M_v (2,168,549 samples, 0.01%)</title><rect x="503.1" y="853" width="0.1" height="15.0" fill="rgb(252,158,52)" rx="2" ry="2" />
<text  x="506.07" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,281,711 samples, 0.01%)</title><rect x="841.9" y="933" width="0.2" height="15.0" fill="rgb(218,214,14)" rx="2" ry="2" />
<text  x="844.95" y="943.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::deallocate (3,951,241 samples, 0.02%)</title><rect x="588.8" y="693" width="0.2" height="15.0" fill="rgb(211,52,42)" rx="2" ry="2" />
<text  x="591.81" y="703.5" ></text>
</g>
<g >
<title>dxStepBody (6,044,363 samples, 0.02%)</title><rect x="787.2" y="949" width="0.3" height="15.0" fill="rgb(212,178,31)" rx="2" ry="2" />
<text  x="790.25" y="959.5" ></text>
</g>
<g >
<title>gazebo::transport::TopicManager::ProcessNodes (557,798,322 samples, 2.20%)</title><rect x="61.4" y="1189" width="26.0" height="15.0" fill="rgb(254,155,13)" rx="2" ry="2" />
<text  x="64.44" y="1199.5" >g..</text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (3,828,230 samples, 0.02%)</title><rect x="589.5" y="741" width="0.2" height="15.0" fill="rgb(225,97,34)" rx="2" ry="2" />
<text  x="592.52" y="751.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Inverse (3,948,883 samples, 0.02%)</title><rect x="658.9" y="869" width="0.2" height="15.0" fill="rgb(251,7,2)" rx="2" ry="2" />
<text  x="661.87" y="879.5" ></text>
</g>
<g >
<title>boost::function1&lt;void, unsigned int&gt;::operator (5,433,391 samples, 0.02%)</title><rect x="79.9" y="1125" width="0.2" height="15.0" fill="rgb(206,140,8)" rx="2" ry="2" />
<text  x="82.88" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,426,742 samples, 0.03%)</title><rect x="618.1" y="837" width="0.3" height="15.0" fill="rgb(211,136,34)" rx="2" ry="2" />
<text  x="621.14" y="847.5" ></text>
</g>
<g >
<title>_dSafeNormalize4 (8,051,647 samples, 0.03%)</title><rect x="554.0" y="709" width="0.4" height="15.0" fill="rgb(242,143,2)" rx="2" ry="2" />
<text  x="557.00" y="719.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Normalize (6,886,038 samples, 0.03%)</title><rect x="41.5" y="1125" width="0.3" height="15.0" fill="rgb(231,228,21)" rx="2" ry="2" />
<text  x="44.49" y="1135.5" ></text>
</g>
<g >
<title>google::protobuf::internal::AllAreInitialized&lt;google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt; &gt; (2,179,884 samples, 0.01%)</title><rect x="767.0" y="1013" width="0.1" height="15.0" fill="rgb(236,228,42)" rx="2" ry="2" />
<text  x="769.98" y="1023.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::ContainsLink (5,975,739 samples, 0.02%)</title><rect x="584.5" y="757" width="0.2" height="15.0" fill="rgb(225,41,10)" rx="2" ry="2" />
<text  x="587.46" y="767.5" ></text>
</g>
<g >
<title>[librclcpp.so] (6,536,713 samples, 0.03%)</title><rect x="200.9" y="1045" width="0.3" height="15.0" fill="rgb(233,33,21)" rx="2" ry="2" />
<text  x="203.89" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (55,256,551 samples, 0.22%)</title><rect x="142.5" y="1269" width="2.6" height="15.0" fill="rgb(225,144,30)" rx="2" ry="2" />
<text  x="145.48" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,172,459 samples, 0.01%)</title><rect x="690.6" y="853" width="0.1" height="15.0" fill="rgb(209,200,12)" rx="2" ry="2" />
<text  x="693.63" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (31,339,326 samples, 0.12%)</title><rect x="916.3" y="1077" width="1.4" height="15.0" fill="rgb(220,47,20)" rx="2" ry="2" />
<text  x="919.27" y="1087.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::shared_ptr (20,407,607 samples, 0.08%)</title><rect x="770.0" y="965" width="0.9" height="15.0" fill="rgb(237,150,53)" rx="2" ry="2" />
<text  x="773.00" y="975.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator= (4,347,557 samples, 0.02%)</title><rect x="529.6" y="789" width="0.2" height="15.0" fill="rgb(240,43,36)" rx="2" ry="2" />
<text  x="532.57" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,829,890 samples, 0.02%)</title><rect x="854.8" y="1045" width="0.2" height="15.0" fill="rgb(237,181,26)" rx="2" ry="2" />
<text  x="857.78" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,375,756 samples, 0.11%)</title><rect x="479.8" y="933" width="1.3" height="15.0" fill="rgb(240,166,38)" rx="2" ry="2" />
<text  x="482.76" y="943.5" ></text>
</g>
<g >
<title>[unknown] (16,384,103,871 samples, 64.67%)</title><rect x="102.4" y="1301" width="763.1" height="15.0" fill="rgb(211,161,54)" rx="2" ry="2" />
<text  x="105.44" y="1311.5" >[unknown]</text>
</g>
<g >
<title>__lll_lock_wait (7,628,552 samples, 0.03%)</title><rect x="138.3" y="1269" width="0.3" height="15.0" fill="rgb(232,217,3)" rx="2" ry="2" />
<text  x="141.29" y="1279.5" ></text>
</g>
<g >
<title>dJointAddHingeTorque (4,108,094 samples, 0.02%)</title><rect x="472.4" y="837" width="0.2" height="15.0" fill="rgb(237,8,16)" rx="2" ry="2" />
<text  x="475.39" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="1045" width="0.2" height="15.0" fill="rgb(250,160,39)" rx="2" ry="2" />
<text  x="849.22" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,600,739 samples, 0.01%)</title><rect x="863.3" y="1141" width="0.2" height="15.0" fill="rgb(248,41,12)" rx="2" ry="2" />
<text  x="866.31" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,303,114 samples, 0.01%)</title><rect x="62.8" y="1061" width="0.2" height="15.0" fill="rgb(238,128,2)" rx="2" ry="2" />
<text  x="65.82" y="1071.5" ></text>
</g>
<g >
<title>malloc (3,235,410 samples, 0.01%)</title><rect x="85.8" y="1061" width="0.2" height="15.0" fill="rgb(231,196,43)" rx="2" ry="2" />
<text  x="88.84" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,357,977,807 samples, 5.36%)</title><rect x="1091.8" y="1045" width="63.3" height="15.0" fill="rgb(231,222,22)" rx="2" ry="2" />
<text  x="1094.85" y="1055.5" >[[kern..</text>
</g>
<g >
<title>std::operator==&lt;char&gt; (2,217,137 samples, 0.01%)</title><rect x="499.9" y="773" width="0.1" height="15.0" fill="rgb(212,190,27)" rx="2" ry="2" />
<text  x="502.90" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,150,356 samples, 0.02%)</title><rect x="616.1" y="885" width="0.3" height="15.0" fill="rgb(241,42,12)" rx="2" ry="2" />
<text  x="619.10" y="895.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::LinkData (3,782,285 samples, 0.01%)</title><rect x="27.7" y="1157" width="0.2" height="15.0" fill="rgb(245,60,11)" rx="2" ry="2" />
<text  x="30.72" y="1167.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::find_subscription_ptrs_if&lt;rclcpp::memory_strategy::MemoryStrategy::get_subscription_by_handle (7,843,523 samples, 0.03%)</title><rect x="803.1" y="1013" width="0.3" height="15.0" fill="rgb(230,164,13)" rx="2" ry="2" />
<text  x="806.08" y="1023.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop&lt;google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::TypeHandler&gt; (24,404,641 samples, 0.10%)</title><rect x="764.0" y="917" width="1.2" height="15.0" fill="rgb(214,185,3)" rx="2" ry="2" />
<text  x="767.03" y="927.5" ></text>
</g>
<g >
<title>gazebo::transport::TopicManager::AddNodeToProcess (3,831,822 samples, 0.02%)</title><rect x="32.1" y="1125" width="0.2" height="15.0" fill="rgb(219,176,43)" rx="2" ry="2" />
<text  x="35.14" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1269" width="0.4" height="15.0" fill="rgb(246,62,23)" rx="2" ry="2" />
<text  x="1181.27" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::vector (10,115,714 samples, 0.04%)</title><rect x="514.5" y="869" width="0.5" height="15.0" fill="rgb(231,162,35)" rx="2" ry="2" />
<text  x="517.51" y="879.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::CoordPositionSub (35,281,975 samples, 0.14%)</title><rect x="658.7" y="885" width="1.6" height="15.0" fill="rgb(212,99,8)" rx="2" ry="2" />
<text  x="661.68" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::max_size (4,047,910 samples, 0.02%)</title><rect x="777.0" y="853" width="0.2" height="15.0" fill="rgb(253,23,12)" rx="2" ry="2" />
<text  x="780.03" y="863.5" ></text>
</g>
<g >
<title>dxHashSpace::collide (12,815,481 samples, 0.05%)</title><rect x="781.2" y="1013" width="0.6" height="15.0" fill="rgb(233,86,18)" rx="2" ry="2" />
<text  x="784.19" y="1023.5" ></text>
</g>
<g >
<title>[[uprobes]] (2,326,240 samples, 0.01%)</title><rect x="829.5" y="1109" width="0.1" height="15.0" fill="rgb(245,146,39)" rx="2" ry="2" />
<text  x="832.49" y="1119.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::swap (2,368,635 samples, 0.01%)</title><rect x="542.7" y="757" width="0.2" height="15.0" fill="rgb(223,130,13)" rx="2" ry="2" />
<text  x="545.74" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,426,742 samples, 0.03%)</title><rect x="618.1" y="789" width="0.3" height="15.0" fill="rgb(235,44,8)" rx="2" ry="2" />
<text  x="621.14" y="799.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, gazebo::physics::WorldPrivate*, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::_M_head (3,599,293 samples, 0.01%)</title><rect x="547.9" y="677" width="0.1" height="15.0" fill="rgb(236,96,25)" rx="2" ry="2" />
<text  x="550.85" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;gazebo::sensors::SensorNoiseType, std::pair&lt;gazebo::sensors::SensorNoiseType const, std::shared_ptr&lt;gazebo::sensors::Noise&gt; &gt;, std::_Select1st&lt;std::pair&lt;gazebo::sensors::SensorNoiseType const, std::shared_ptr&lt;gazebo::sensors::Noise&gt; &gt; &gt;, std::less&lt;gazebo::sensors::SensorNoiseType&gt;, std::allocator&lt;std::pair&lt;gazebo::sensors::SensorNoiseType const, std::shared_ptr&lt;gazebo::sensors::Noise&gt; &gt; &gt; &gt;::find (3,282,249 samples, 0.01%)</title><rect x="46.7" y="1141" width="0.2" height="15.0" fill="rgb(225,192,44)" rx="2" ry="2" />
<text  x="49.73" y="1151.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt;*&gt; (88,190,905 samples, 0.35%)</title><rect x="671.6" y="869" width="4.1" height="15.0" fill="rgb(244,216,43)" rx="2" ry="2" />
<text  x="674.57" y="879.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Entity&gt;::swap (4,086,721 samples, 0.02%)</title><rect x="222.2" y="997" width="0.2" height="15.0" fill="rgb(205,145,11)" rx="2" ry="2" />
<text  x="225.24" y="1007.5" ></text>
</g>
<g >
<title>gazebo::transport::CallbackHelperT&lt;gazebo::msgs::LaserScanStamped&gt;::HandleMessage (16,489,393 samples, 0.07%)</title><rect x="73.3" y="1157" width="0.7" height="15.0" fill="rgb(232,139,9)" rx="2" ry="2" />
<text  x="76.27" y="1167.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2,536,199 samples, 0.01%)</title><rect x="828.7" y="1013" width="0.2" height="15.0" fill="rgb(244,6,54)" rx="2" ry="2" />
<text  x="831.74" y="1023.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;void  (56,935,916 samples, 0.22%)</title><rect x="204.0" y="1189" width="2.7" height="15.0" fill="rgb(218,185,20)" rx="2" ry="2" />
<text  x="207.03" y="1199.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::swap (7,788,287 samples, 0.03%)</title><rect x="777.3" y="757" width="0.4" height="15.0" fill="rgb(241,39,40)" rx="2" ry="2" />
<text  x="780.35" y="767.5" ></text>
</g>
<g >
<title>sensor_msgs::msg::JointState_&lt;std::allocator&lt;void&gt; &gt;::operator= (32,649,317 samples, 0.13%)</title><rect x="855.8" y="1141" width="1.6" height="15.0" fill="rgb(221,23,21)" rx="2" ry="2" />
<text  x="858.83" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (4,547,111 samples, 0.02%)</title><rect x="205.1" y="1061" width="0.2" height="15.0" fill="rgb(231,136,40)" rx="2" ry="2" />
<text  x="208.07" y="1071.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, sdf::v9::ParamPrivate*, std::default_delete&lt;sdf::v9::ParamPrivate&gt; &gt;::_M_head (6,729,605 samples, 0.03%)</title><rect x="45.3" y="965" width="0.4" height="15.0" fill="rgb(235,91,20)" rx="2" ry="2" />
<text  x="48.34" y="975.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::ByteSizeLong (29,647,825 samples, 0.12%)</title><rect x="162.6" y="1237" width="1.4" height="15.0" fill="rgb(225,151,13)" rx="2" ry="2" />
<text  x="165.64" y="1247.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::FindAllConnectedLinksHelper (17,627,084 samples, 0.07%)</title><rect x="775.2" y="805" width="0.8" height="15.0" fill="rgb(235,20,9)" rx="2" ry="2" />
<text  x="778.16" y="815.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::node_interfaces::NodeBaseInterface&gt;::shared_ptr (5,937,575 samples, 0.02%)</title><rect x="812.6" y="1013" width="0.3" height="15.0" fill="rgb(206,40,22)" rx="2" ry="2" />
<text  x="815.58" y="1023.5" ></text>
</g>
<g >
<title>boost::unordered::unordered_set&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt;::clear (5,725,481 samples, 0.02%)</title><rect x="63.7" y="1173" width="0.3" height="15.0" fill="rgb(211,22,51)" rx="2" ry="2" />
<text  x="66.69" y="1183.5" ></text>
</g>
<g >
<title>[libgazebo_sensors.so.11.10.1] (7,000,066 samples, 0.03%)</title><rect x="48.0" y="1141" width="0.4" height="15.0" fill="rgb(213,125,46)" rx="2" ry="2" />
<text  x="51.04" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,847,722 samples, 0.03%)</title><rect x="931.5" y="1189" width="0.4" height="15.0" fill="rgb(238,6,19)" rx="2" ry="2" />
<text  x="934.53" y="1199.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::_M_ptr (4,203,159 samples, 0.02%)</title><rect x="43.7" y="1109" width="0.2" height="15.0" fill="rgb(209,143,22)" rx="2" ry="2" />
<text  x="46.66" y="1119.5" ></text>
</g>
<g >
<title>dJointGetHingeAxis (2,237,572 samples, 0.01%)</title><rect x="527.9" y="805" width="0.1" height="15.0" fill="rgb(234,192,35)" rx="2" ry="2" />
<text  x="530.89" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,850,278 samples, 0.02%)</title><rect x="832.5" y="1029" width="0.2" height="15.0" fill="rgb(240,10,38)" rx="2" ry="2" />
<text  x="835.51" y="1039.5" ></text>
</g>
<g >
<title>Opcode::RayCollider::Collide (3,917,714 samples, 0.02%)</title><rect x="117.4" y="1253" width="0.2" height="15.0" fill="rgb(210,33,10)" rx="2" ry="2" />
<text  x="120.42" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,666,830 samples, 0.08%)</title><rect x="56.5" y="229" width="1.0" height="15.0" fill="rgb(207,143,32)" rx="2" ry="2" />
<text  x="59.49" y="239.5" ></text>
</g>
<g >
<title>std::operator&amp; (6,915,155 samples, 0.03%)</title><rect x="844.9" y="1141" width="0.3" height="15.0" fill="rgb(225,196,6)" rx="2" ry="2" />
<text  x="847.92" y="1151.5" ></text>
</g>
<g >
<title>[libcontroller_manager.so] (3,949,602 samples, 0.02%)</title><rect x="517.0" y="917" width="0.2" height="15.0" fill="rgb(229,194,41)" rx="2" ry="2" />
<text  x="519.99" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,580,330 samples, 0.01%)</title><rect x="675.3" y="677" width="0.2" height="15.0" fill="rgb(250,138,52)" rx="2" ry="2" />
<text  x="678.34" y="687.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEJoint::SetParam (3,893,392 samples, 0.02%)</title><rect x="642.6" y="901" width="0.2" height="15.0" fill="rgb(218,174,5)" rx="2" ry="2" />
<text  x="645.59" y="911.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;double&gt; (2,766,416 samples, 0.01%)</title><rect x="856.3" y="1013" width="0.1" height="15.0" fill="rgb(241,227,51)" rx="2" ry="2" />
<text  x="859.26" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::clear (2,379,565 samples, 0.01%)</title><rect x="769.5" y="1029" width="0.1" height="15.0" fill="rgb(229,168,27)" rx="2" ry="2" />
<text  x="772.50" y="1039.5" ></text>
</g>
<g >
<title>__nanosleep (5,607,431 samples, 0.02%)</title><rect x="839.4" y="1141" width="0.3" height="15.0" fill="rgb(230,46,40)" rx="2" ry="2" />
<text  x="842.42" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;gazebo::physics::Entity*, std::allocator&lt;gazebo::physics::Entity*&gt; &gt;::_M_create_node&lt;gazebo::physics::Entity* const&amp;&gt; (2,220,276 samples, 0.01%)</title><rect x="444.6" y="885" width="0.1" height="15.0" fill="rgb(220,120,16)" rx="2" ry="2" />
<text  x="447.64" y="895.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::ServiceBase,  (13,777,972 samples, 0.05%)</title><rect x="196.7" y="997" width="0.7" height="15.0" fill="rgb(242,27,15)" rx="2" ry="2" />
<text  x="199.73" y="1007.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::zero (2,929,018 samples, 0.01%)</title><rect x="847.0" y="1125" width="0.2" height="15.0" fill="rgb(244,145,29)" rx="2" ry="2" />
<text  x="850.03" y="1135.5" ></text>
</g>
<g >
<title>dxGeom::spaceRemove (2,741,870 samples, 0.01%)</title><rect x="787.2" y="901" width="0.2" height="15.0" fill="rgb(216,98,44)" rx="2" ry="2" />
<text  x="790.25" y="911.5" ></text>
</g>
<g >
<title>dxHashSpace::collide (294,990,706 samples, 1.16%)</title><rect x="230.8" y="1013" width="13.7" height="15.0" fill="rgb(205,121,48)" rx="2" ry="2" />
<text  x="233.80" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,463,925 samples, 0.03%)</title><rect x="13.1" y="1109" width="0.4" height="15.0" fill="rgb(217,185,23)" rx="2" ry="2" />
<text  x="16.10" y="1119.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (14,329,695 samples, 0.06%)</title><rect x="241.9" y="885" width="0.7" height="15.0" fill="rgb(254,114,18)" rx="2" ry="2" />
<text  x="244.92" y="895.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMaybeMessage&lt;gazebo::msgs::Vector3d&gt; (2,245,988 samples, 0.01%)</title><rect x="759.2" y="997" width="0.1" height="15.0" fill="rgb(205,94,37)" rx="2" ry="2" />
<text  x="762.17" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;rclcpp::CallbackGroup,  (3,879,164 samples, 0.02%)</title><rect x="199.0" y="1061" width="0.2" height="15.0" fill="rgb(212,64,5)" rx="2" ry="2" />
<text  x="202.01" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,291,093 samples, 0.01%)</title><rect x="521.1" y="645" width="0.1" height="15.0" fill="rgb(224,226,39)" rx="2" ry="2" />
<text  x="524.08" y="655.5" ></text>
</g>
<g >
<title>rcl_publish (4,612,022 samples, 0.02%)</title><rect x="829.7" y="1109" width="0.2" height="15.0" fill="rgb(217,37,48)" rx="2" ry="2" />
<text  x="832.69" y="1119.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::Pos (2,151,732 samples, 0.01%)</title><rect x="655.7" y="901" width="0.1" height="15.0" fill="rgb(225,189,37)" rx="2" ry="2" />
<text  x="658.72" y="911.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::shared_ptr&lt;gazebo::common::NumericAnimation&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;gazebo::common::NumericAnimation&gt; &gt; &gt; &gt;::empty (2,271,114 samples, 0.01%)</title><rect x="482.7" y="1013" width="0.1" height="15.0" fill="rgb(240,115,33)" rx="2" ry="2" />
<text  x="485.68" y="1023.5" ></text>
</g>
<g >
<title>__gthread_active_p (4,128,482 samples, 0.02%)</title><rect x="855.4" y="1093" width="0.2" height="15.0" fill="rgb(210,18,34)" rx="2" ry="2" />
<text  x="858.40" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,992,783 samples, 0.02%)</title><rect x="707.3" y="885" width="0.3" height="15.0" fill="rgb(220,172,28)" rx="2" ry="2" />
<text  x="710.29" y="895.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::operator= (16,544,778 samples, 0.07%)</title><rect x="559.8" y="773" width="0.8" height="15.0" fill="rgb(206,186,44)" rx="2" ry="2" />
<text  x="562.83" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,733,516 samples, 0.05%)</title><rect x="722.4" y="805" width="0.5" height="15.0" fill="rgb(249,140,25)" rx="2" ry="2" />
<text  x="725.35" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_S_do_relocate (3,994,229 samples, 0.02%)</title><rect x="593.2" y="725" width="0.2" height="15.0" fill="rgb(212,96,53)" rx="2" ry="2" />
<text  x="596.21" y="735.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator- (3,870,305 samples, 0.02%)</title><rect x="530.0" y="805" width="0.2" height="15.0" fill="rgb(235,208,23)" rx="2" ry="2" />
<text  x="533.01" y="815.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_subscription (10,595,523 samples, 0.04%)</title><rect x="193.8" y="1061" width="0.5" height="15.0" fill="rgb(231,203,17)" rx="2" ry="2" />
<text  x="196.79" y="1071.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::GetChildJointsLinks (15,131,414 samples, 0.06%)</title><rect x="589.0" y="757" width="0.7" height="15.0" fill="rgb(246,85,23)" rx="2" ry="2" />
<text  x="592.00" y="767.5" ></text>
</g>
<g >
<title>rclcpp::Publisher&lt;std_msgs::msg::Bool_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt;::publish (37,040,725 samples, 0.15%)</title><rect x="665.5" y="901" width="1.7" height="15.0" fill="rgb(240,84,30)" rx="2" ry="2" />
<text  x="668.51" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::size (2,151,658 samples, 0.01%)</title><rect x="613.4" y="869" width="0.1" height="15.0" fill="rgb(226,212,33)" rx="2" ry="2" />
<text  x="616.45" y="879.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (2,837,598 samples, 0.01%)</title><rect x="847.6" y="1125" width="0.1" height="15.0" fill="rgb(233,213,5)" rx="2" ry="2" />
<text  x="850.61" y="1135.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (7,190,060 samples, 0.03%)</title><rect x="190.1" y="933" width="0.4" height="15.0" fill="rgb(234,111,40)" rx="2" ry="2" />
<text  x="193.14" y="943.5" ></text>
</g>
<g >
<title>[[uprobes]] (11,569,362,474 samples, 45.66%)</title><rect x="206.7" y="1077" width="538.8" height="15.0" fill="rgb(237,148,14)" rx="2" ry="2" />
<text  x="209.69" y="1087.5" >[[uprobes]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,752,010 samples, 0.16%)</title><rect x="55.8" y="517" width="1.9" height="15.0" fill="rgb(249,59,26)" rx="2" ry="2" />
<text  x="58.75" y="527.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,415,848 samples, 0.03%)</title><rect x="145.2" y="1189" width="0.3" height="15.0" fill="rgb(244,113,42)" rx="2" ry="2" />
<text  x="148.23" y="1199.5" ></text>
</g>
<g >
<title>__gthread_mutex_trylock (4,256,772 samples, 0.02%)</title><rect x="842.8" y="1109" width="0.2" height="15.0" fill="rgb(234,100,37)" rx="2" ry="2" />
<text  x="845.82" y="1119.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::lower_bound (5,187,114 samples, 0.02%)</title><rect x="80.4" y="1093" width="0.2" height="15.0" fill="rgb(224,173,42)" rx="2" ry="2" />
<text  x="83.39" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (47,755,923 samples, 0.19%)</title><rect x="715.1" y="805" width="2.2" height="15.0" fill="rgb(227,201,37)" rx="2" ry="2" />
<text  x="718.08" y="815.5" ></text>
</g>
<g >
<title>boost::asio::detail::io_object_impl&lt;boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;, boost::asio::executor&gt;::get_service (3,640,791 samples, 0.01%)</title><rect x="204.9" y="1029" width="0.2" height="15.0" fill="rgb(227,131,10)" rx="2" ry="2" />
<text  x="207.90" y="1039.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Length (2,341,519 samples, 0.01%)</title><rect x="695.8" y="917" width="0.1" height="15.0" fill="rgb(230,158,33)" rx="2" ry="2" />
<text  x="698.84" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_realloc_insert&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; const&amp;&gt; (2,148,434 samples, 0.01%)</title><rect x="590.6" y="741" width="0.1" height="15.0" fill="rgb(243,222,53)" rx="2" ry="2" />
<text  x="593.63" y="751.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::add_handles_to_wait_set (6,809,922 samples, 0.03%)</title><rect x="792.5" y="1013" width="0.3" height="15.0" fill="rgb(215,105,25)" rx="2" ry="2" />
<text  x="795.46" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,381,905 samples, 0.02%)</title><rect x="796.0" y="949" width="0.3" height="15.0" fill="rgb(224,211,32)" rx="2" ry="2" />
<text  x="799.01" y="959.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::SharedDtor (4,157,138 samples, 0.02%)</title><rect x="755.6" y="1029" width="0.1" height="15.0" fill="rgb(222,141,46)" rx="2" ry="2" />
<text  x="758.56" y="1039.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::CollisionCallback (4,175,437 samples, 0.02%)</title><rect x="781.4" y="853" width="0.2" height="15.0" fill="rgb(235,36,13)" rx="2" ry="2" />
<text  x="784.37" y="863.5" ></text>
</g>
<g >
<title>drm_update_vblank_count (2,205,749 samples, 0.01%)</title><rect x="1155.0" y="949" width="0.1" height="15.0" fill="rgb(245,4,16)" rx="2" ry="2" />
<text  x="1157.99" y="959.5" ></text>
</g>
<g >
<title>builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt;::Time_ (3,442,044 samples, 0.01%)</title><rect x="21.4" y="1029" width="0.1" height="15.0" fill="rgb(236,102,30)" rx="2" ry="2" />
<text  x="24.38" y="1039.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEMultiRayShape::UpdateRays (80,172,377 samples, 0.32%)</title><rect x="35.3" y="1141" width="3.7" height="15.0" fill="rgb(223,191,50)" rx="2" ry="2" />
<text  x="38.26" y="1151.5" ></text>
</g>
<g >
<title>std::mutex::try_lock (18,694,622 samples, 0.07%)</title><rect x="844.0" y="1141" width="0.9" height="15.0" fill="rgb(209,182,14)" rx="2" ry="2" />
<text  x="847.04" y="1151.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Inverse (2,865,199 samples, 0.01%)</title><rect x="32.8" y="1141" width="0.2" height="15.0" fill="rgb(235,121,50)" rx="2" ry="2" />
<text  x="35.84" y="1151.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::transport::Node&gt;::operator (9,403,109 samples, 0.04%)</title><rect x="62.4" y="1173" width="0.4" height="15.0" fill="rgb(254,79,50)" rx="2" ry="2" />
<text  x="65.38" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (140,071,035 samples, 0.55%)</title><rect x="880.6" y="917" width="6.5" height="15.0" fill="rgb(241,144,24)" rx="2" ry="2" />
<text  x="883.62" y="927.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, int, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::find (10,527,037 samples, 0.04%)</title><rect x="13.9" y="773" width="0.5" height="15.0" fill="rgb(238,187,47)" rx="2" ry="2" />
<text  x="16.87" y="783.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::GetParentModel (7,788,287 samples, 0.03%)</title><rect x="777.3" y="773" width="0.4" height="15.0" fill="rgb(234,27,2)" rx="2" ry="2" />
<text  x="780.35" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::transport::Publisher&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Publisher&gt; &gt; &gt;::size (3,665,983 samples, 0.01%)</title><rect x="87.2" y="1157" width="0.2" height="15.0" fill="rgb(252,13,35)" rx="2" ry="2" />
<text  x="90.25" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,213,530 samples, 0.01%)</title><rect x="666.9" y="821" width="0.1" height="15.0" fill="rgb(232,144,1)" rx="2" ry="2" />
<text  x="669.93" y="831.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;gazebo::msgs::Pose&gt; (23,043,246 samples, 0.09%)</title><rect x="162.8" y="1221" width="1.1" height="15.0" fill="rgb(236,162,34)" rx="2" ry="2" />
<text  x="165.82" y="1231.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (4,352,612 samples, 0.02%)</title><rect x="273.4" y="949" width="0.2" height="15.0" fill="rgb(251,14,30)" rx="2" ry="2" />
<text  x="276.35" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,144,958 samples, 0.02%)</title><rect x="842.3" y="1013" width="0.2" height="15.0" fill="rgb(210,215,19)" rx="2" ry="2" />
<text  x="845.34" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_Vector_base (8,240,306 samples, 0.03%)</title><rect x="671.0" y="885" width="0.4" height="15.0" fill="rgb(224,20,10)" rx="2" ry="2" />
<text  x="674.00" y="895.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; (6,877,656 samples, 0.03%)</title><rect x="828.6" y="1061" width="0.3" height="15.0" fill="rgb(225,17,42)" rx="2" ry="2" />
<text  x="831.63" y="1071.5" ></text>
</g>
<g >
<title>[libboost_thread.so.1.71.0] (1,610,305,981 samples, 6.36%)</title><rect x="13.6" y="1301" width="74.9" height="15.0" fill="rgb(234,6,23)" rx="2" ry="2" />
<text  x="16.55" y="1311.5" >[libboos..</text>
</g>
<g >
<title>std::weak_ptr&lt;rclcpp::SubscriptionBase&gt;::lock (4,345,558 samples, 0.02%)</title><rect x="812.0" y="997" width="0.2" height="15.0" fill="rgb(209,49,22)" rx="2" ry="2" />
<text  x="814.98" y="1007.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;gazebo::sensors::SensorNoiseType const, std::shared_ptr&lt;gazebo::sensors::Noise&gt; &gt; &gt;::operator (3,282,249 samples, 0.01%)</title><rect x="46.7" y="1109" width="0.2" height="15.0" fill="rgb(222,201,28)" rx="2" ry="2" />
<text  x="49.73" y="1119.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::UpdatePhysicsPose (3,935,166 samples, 0.02%)</title><rect x="560.8" y="789" width="0.2" height="15.0" fill="rgb(225,194,14)" rx="2" ry="2" />
<text  x="563.79" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,245,627 samples, 0.02%)</title><rect x="615.6" y="901" width="0.3" height="15.0" fill="rgb(234,159,41)" rx="2" ry="2" />
<text  x="618.62" y="911.5" ></text>
</g>
<g >
<title>request_wait_wake (2,243,735 samples, 0.01%)</title><rect x="266.8" y="741" width="0.1" height="15.0" fill="rgb(251,145,27)" rx="2" ry="2" />
<text  x="269.79" y="751.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;rclcpp::Executor::execute_subscription (6,663,558 samples, 0.03%)</title><rect x="795.3" y="1029" width="0.4" height="15.0" fill="rgb(210,100,31)" rx="2" ry="2" />
<text  x="798.34" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,574,391 samples, 0.04%)</title><rect x="666.4" y="853" width="0.5" height="15.0" fill="rgb(237,33,50)" rx="2" ry="2" />
<text  x="669.44" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,733,516 samples, 0.05%)</title><rect x="722.4" y="757" width="0.5" height="15.0" fill="rgb(227,20,12)" rx="2" ry="2" />
<text  x="725.35" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,838,386 samples, 0.02%)</title><rect x="765.5" y="949" width="0.3" height="15.0" fill="rgb(222,32,11)" rx="2" ry="2" />
<text  x="768.53" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt;::construct&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; (6,217,256 samples, 0.02%)</title><rect x="811.7" y="933" width="0.3" height="15.0" fill="rgb(219,112,32)" rx="2" ry="2" />
<text  x="814.69" y="943.5" ></text>
</g>
<g >
<title>gazebo::sensors::run_once (179,114,297 samples, 0.71%)</title><rect x="896.5" y="1253" width="8.4" height="15.0" fill="rgb(249,68,43)" rx="2" ry="2" />
<text  x="899.52" y="1263.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Correct (6,134,984 samples, 0.02%)</title><rect x="559.4" y="757" width="0.3" height="15.0" fill="rgb(216,12,49)" rx="2" ry="2" />
<text  x="562.37" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (2,179,997 samples, 0.01%)</title><rect x="780.0" y="901" width="0.1" height="15.0" fill="rgb(248,26,2)" rx="2" ry="2" />
<text  x="783.03" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (12,496,939 samples, 0.05%)</title><rect x="688.6" y="885" width="0.6" height="15.0" fill="rgb(253,116,3)" rx="2" ry="2" />
<text  x="691.62" y="895.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (2,148,899 samples, 0.01%)</title><rect x="588.9" y="677" width="0.1" height="15.0" fill="rgb(205,49,44)" rx="2" ry="2" />
<text  x="591.90" y="687.5" ></text>
</g>
<g >
<title>[libgazebo_ros_state.so] (2,372,259 samples, 0.01%)</title><rect x="692.1" y="869" width="0.2" height="15.0" fill="rgb(209,113,13)" rx="2" ry="2" />
<text  x="695.14" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,411,266 samples, 0.01%)</title><rect x="830.2" y="949" width="0.1" height="15.0" fill="rgb(208,15,12)" rx="2" ry="2" />
<text  x="833.18" y="959.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::Pose (4,744,901 samples, 0.02%)</title><rect x="754.9" y="949" width="0.2" height="15.0" fill="rgb(220,19,20)" rx="2" ry="2" />
<text  x="757.88" y="959.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::CoordRotationSub (20,560,413 samples, 0.08%)</title><rect x="608.0" y="789" width="1.0" height="15.0" fill="rgb(253,10,48)" rx="2" ry="2" />
<text  x="611.02" y="799.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_M_allocate (3,892,195 samples, 0.02%)</title><rect x="840.3" y="1077" width="0.2" height="15.0" fill="rgb(246,128,50)" rx="2" ry="2" />
<text  x="843.33" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (165,104,090 samples, 0.65%)</title><rect x="168.0" y="1109" width="7.7" height="15.0" fill="rgb(254,199,9)" rx="2" ry="2" />
<text  x="171.02" y="1119.5" ></text>
</g>
<g >
<title>std::forward&lt;gazebo::physics::Link*&amp;&gt; (2,214,666 samples, 0.01%)</title><rect x="724.9" y="949" width="0.1" height="15.0" fill="rgb(228,72,31)" rx="2" ry="2" />
<text  x="727.90" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,213,530 samples, 0.01%)</title><rect x="666.9" y="773" width="0.1" height="15.0" fill="rgb(211,75,0)" rx="2" ry="2" />
<text  x="669.93" y="783.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::release (24,252,778 samples, 0.10%)</title><rect x="765.8" y="949" width="1.1" height="15.0" fill="rgb(229,116,43)" rx="2" ry="2" />
<text  x="768.76" y="959.5" ></text>
</g>
<g >
<title>collideAABBs (22,258,059 samples, 0.09%)</title><rect x="37.1" y="949" width="1.0" height="15.0" fill="rgb(246,178,34)" rx="2" ry="2" />
<text  x="40.10" y="959.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_event (9,205,660 samples, 0.04%)</title><rect x="194.5" y="1045" width="0.5" height="15.0" fill="rgb(220,34,6)" rx="2" ry="2" />
<text  x="197.53" y="1055.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (12,652,778 samples, 0.05%)</title><rect x="856.8" y="1061" width="0.6" height="15.0" fill="rgb(219,9,21)" rx="2" ry="2" />
<text  x="859.76" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,076,686 samples, 0.02%)</title><rect x="339.4" y="917" width="0.2" height="15.0" fill="rgb(241,58,27)" rx="2" ry="2" />
<text  x="342.38" y="927.5" ></text>
</g>
<g >
<title>dxSpace::dirty (2,741,870 samples, 0.01%)</title><rect x="787.2" y="917" width="0.2" height="15.0" fill="rgb(251,90,33)" rx="2" ry="2" />
<text  x="790.25" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,124,985 samples, 0.11%)</title><rect x="853.0" y="1061" width="1.3" height="15.0" fill="rgb(235,48,27)" rx="2" ry="2" />
<text  x="855.96" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,910,423 samples, 0.01%)</title><rect x="779.1" y="821" width="0.1" height="15.0" fill="rgb(234,183,8)" rx="2" ry="2" />
<text  x="782.11" y="831.5" ></text>
</g>
<g >
<title>std::set&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::insert (14,732,912 samples, 0.06%)</title><rect x="224.4" y="981" width="0.7" height="15.0" fill="rgb(238,40,12)" rx="2" ry="2" />
<text  x="227.38" y="991.5" ></text>
</g>
<g >
<title>std::get_if&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, unsigned long, unsigned int, double, float, sdf::v9::Time, ignition::math::v6::Angle, ignition::math::v6::Color, ignition::math::v6::Vector2&lt;int&gt;, ignition::math::v6::Vector2&lt;double&gt;, ignition::math::v6::Vector3&lt;double&gt;, ignition::math::v6::Quaternion&lt;double&gt;, ignition::math::v6::Pose3&lt;double&gt; &gt; (9,472,901 samples, 0.04%)</title><rect x="19.5" y="1125" width="0.5" height="15.0" fill="rgb(225,79,18)" rx="2" ry="2" />
<text  x="22.52" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,318,465 samples, 0.02%)</title><rect x="457.9" y="1029" width="0.2" height="15.0" fill="rgb(230,212,32)" rx="2" ry="2" />
<text  x="460.86" y="1039.5" ></text>
</g>
<g >
<title>boost::unordered::detail::node_constructor&lt;std::allocator&lt;boost::unordered::detail::ptr_node&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::create_node (2,288,567 samples, 0.01%)</title><rect x="215.6" y="917" width="0.1" height="15.0" fill="rgb(249,6,2)" rx="2" ry="2" />
<text  x="218.60" y="927.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (4,133,886 samples, 0.02%)</title><rect x="529.0" y="773" width="0.2" height="15.0" fill="rgb(205,173,35)" rx="2" ry="2" />
<text  x="532.00" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,179,357 samples, 0.02%)</title><rect x="889.2" y="1125" width="0.3" height="15.0" fill="rgb(236,53,30)" rx="2" ry="2" />
<text  x="892.25" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,596,349 samples, 0.01%)</title><rect x="220.3" y="837" width="0.2" height="15.0" fill="rgb(248,28,42)" rx="2" ry="2" />
<text  x="223.31" y="847.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (2,972,627 samples, 0.01%)</title><rect x="840.8" y="1045" width="0.1" height="15.0" fill="rgb(232,22,43)" rx="2" ry="2" />
<text  x="843.78" y="1055.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, int, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::operator[] (46,732,029 samples, 0.18%)</title><rect x="84.9" y="1141" width="2.2" height="15.0" fill="rgb(216,223,29)" rx="2" ry="2" />
<text  x="87.89" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator= (11,781,977 samples, 0.05%)</title><rect x="856.0" y="1125" width="0.6" height="15.0" fill="rgb(245,207,10)" rx="2" ry="2" />
<text  x="859.03" y="1135.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, boost::shared_ptr&lt;gazebo::physics::Link&gt;*, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; (3,994,229 samples, 0.02%)</title><rect x="593.2" y="693" width="0.2" height="15.0" fill="rgb(218,20,48)" rx="2" ry="2" />
<text  x="596.21" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,652,819 samples, 0.07%)</title><rect x="1182.1" y="1013" width="0.9" height="15.0" fill="rgb(214,88,21)" rx="2" ry="2" />
<text  x="1185.10" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,882,600 samples, 0.02%)</title><rect x="666.3" y="741" width="0.1" height="15.0" fill="rgb(218,105,6)" rx="2" ry="2" />
<text  x="669.26" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,440,838 samples, 0.02%)</title><rect x="510.9" y="805" width="0.3" height="15.0" fill="rgb(245,86,26)" rx="2" ry="2" />
<text  x="513.91" y="815.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::CallbackGroup&gt;::shared_ptr (8,304,082 samples, 0.03%)</title><rect x="803.8" y="997" width="0.4" height="15.0" fill="rgb(224,166,10)" rx="2" ry="2" />
<text  x="806.80" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;rcl_timer_t const&gt; &gt;::construct&lt;std::shared_ptr&lt;rcl_timer_t const&gt;, std::shared_ptr&lt;rcl_timer_t const&gt; &gt; (6,912,390 samples, 0.03%)</title><rect x="198.3" y="981" width="0.3" height="15.0" fill="rgb(236,38,52)" rx="2" ry="2" />
<text  x="201.26" y="991.5" ></text>
</g>
<g >
<title>rcl_take (5,381,905 samples, 0.02%)</title><rect x="796.0" y="965" width="0.3" height="15.0" fill="rgb(228,180,28)" rx="2" ry="2" />
<text  x="799.01" y="975.5" ></text>
</g>
<g >
<title>gazebo::common::Time::~Time (2,382,498 samples, 0.01%)</title><rect x="894.8" y="1253" width="0.1" height="15.0" fill="rgb(243,219,47)" rx="2" ry="2" />
<text  x="897.80" y="1263.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator!= (10,366,652 samples, 0.04%)</title><rect x="261.2" y="1013" width="0.5" height="15.0" fill="rgb(244,47,16)" rx="2" ry="2" />
<text  x="264.18" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,580,330 samples, 0.01%)</title><rect x="675.3" y="693" width="0.2" height="15.0" fill="rgb(229,157,6)" rx="2" ry="2" />
<text  x="678.34" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (207,648,136 samples, 0.82%)</title><rect x="166.0" y="1253" width="9.7" height="15.0" fill="rgb(215,26,3)" rx="2" ry="2" />
<text  x="169.04" y="1263.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::shared_ptr (8,140,022 samples, 0.03%)</title><rect x="541.9" y="741" width="0.4" height="15.0" fill="rgb(220,29,48)" rx="2" ry="2" />
<text  x="544.92" y="751.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (60,918,113 samples, 0.24%)</title><rect x="777.7" y="965" width="2.8" height="15.0" fill="rgb(230,157,37)" rx="2" ry="2" />
<text  x="780.71" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,775,840 samples, 0.01%)</title><rect x="691.4" y="789" width="0.2" height="15.0" fill="rgb(225,131,45)" rx="2" ry="2" />
<text  x="694.39" y="799.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::Collide (5,433,845 samples, 0.02%)</title><rect x="746.5" y="1029" width="0.2" height="15.0" fill="rgb(237,132,34)" rx="2" ry="2" />
<text  x="749.46" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,067,708 samples, 0.05%)</title><rect x="12.9" y="1205" width="0.6" height="15.0" fill="rgb(206,63,7)" rx="2" ry="2" />
<text  x="15.89" y="1215.5" ></text>
</g>
<g >
<title>nn_xmsg_setdstN (2,499,765 samples, 0.01%)</title><rect x="140.1" y="1269" width="0.1" height="15.0" fill="rgb(236,153,29)" rx="2" ry="2" />
<text  x="143.08" y="1279.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, unsigned long, unsigned int, double, float, sdf::v9::Time, ignition::math::v6::Angle, ignition::math::v6::Color, ignition::math::v6::Vector2&lt;int&gt;, ignition::math::v6::Vector2&lt;double&gt;, ignition::math::v6::Vector3&lt;double&gt;, ignition::math::v6::Quaternion&lt;double&gt;, ignition::math::v6::Pose3&lt;double&gt; &gt;&amp;&gt; (4,501,474 samples, 0.02%)</title><rect x="45.0" y="981" width="0.2" height="15.0" fill="rgb(239,160,39)" rx="2" ry="2" />
<text  x="47.96" y="991.5" ></text>
</g>
<g >
<title>gazebo::transport::Publication::GetCallbackCount (3,104,227 samples, 0.01%)</title><rect x="77.0" y="1157" width="0.2" height="15.0" fill="rgb(227,41,37)" rx="2" ry="2" />
<text  x="80.05" y="1167.5" ></text>
</g>
<g >
<title>boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::sensors::SimTimeEventHandler*&gt;, boost::arg&lt;1&gt; &gt;::operator (47,604,337 samples, 0.19%)</title><rect x="619.6" y="965" width="2.2" height="15.0" fill="rgb(254,124,5)" rx="2" ry="2" />
<text  x="622.61" y="975.5" ></text>
</g>
<g >
<title>[librcutils.so] (12,577,433 samples, 0.05%)</title><rect x="126.7" y="1285" width="0.6" height="15.0" fill="rgb(254,9,14)" rx="2" ry="2" />
<text  x="129.75" y="1295.5" ></text>
</g>
<g >
<title>gazebo::common::Time::operator&gt;= (3,640,791 samples, 0.01%)</title><rect x="205.9" y="1045" width="0.2" height="15.0" fill="rgb(205,109,7)" rx="2" ry="2" />
<text  x="208.94" y="1055.5" ></text>
</g>
<g >
<title>operator new (5,912,865 samples, 0.02%)</title><rect x="133.5" y="1253" width="0.3" height="15.0" fill="rgb(215,54,41)" rx="2" ry="2" />
<text  x="136.52" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (207,648,136 samples, 0.82%)</title><rect x="166.0" y="1205" width="9.7" height="15.0" fill="rgb(233,15,17)" rx="2" ry="2" />
<text  x="169.04" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,816,086 samples, 0.02%)</title><rect x="43.4" y="1045" width="0.3" height="15.0" fill="rgb(210,37,47)" rx="2" ry="2" />
<text  x="46.39" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (80,549,321 samples, 0.32%)</title><rect x="1185.5" y="1125" width="3.8" height="15.0" fill="rgb(242,133,4)" rx="2" ry="2" />
<text  x="1188.54" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,867,309 samples, 0.02%)</title><rect x="469.1" y="933" width="0.2" height="15.0" fill="rgb(218,124,46)" rx="2" ry="2" />
<text  x="472.08" y="943.5" ></text>
</g>
<g >
<title>dxSimpleSpace::cleanGeoms (30,174,578 samples, 0.12%)</title><rect x="242.9" y="965" width="1.4" height="15.0" fill="rgb(229,186,21)" rx="2" ry="2" />
<text  x="245.89" y="975.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::lock (28,063,418 samples, 0.11%)</title><rect x="59.0" y="1157" width="1.3" height="15.0" fill="rgb(248,132,21)" rx="2" ry="2" />
<text  x="61.96" y="1167.5" ></text>
</g>
<g >
<title>__cxxabiv1::__class_type_info::__do_dyncast (8,483,298 samples, 0.03%)</title><rect x="865.8" y="1301" width="0.4" height="15.0" fill="rgb(250,67,47)" rx="2" ry="2" />
<text  x="868.81" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,646 samples, 0.01%)</title><rect x="724.0" y="725" width="0.1" height="15.0" fill="rgb(234,71,33)" rx="2" ry="2" />
<text  x="727.02" y="735.5" ></text>
</g>
<g >
<title>hardware_interface::System::write (10,533,557 samples, 0.04%)</title><rect x="777.2" y="885" width="0.5" height="15.0" fill="rgb(231,110,20)" rx="2" ry="2" />
<text  x="780.22" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rclcpp::Waitable&gt;, std::allocator&lt;std::shared_ptr&lt;rclcpp::Waitable&gt; &gt; &gt;::_M_erase (5,995,416 samples, 0.02%)</title><rect x="202.3" y="1045" width="0.3" height="15.0" fill="rgb(220,102,25)" rx="2" ry="2" />
<text  x="205.33" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,446 samples, 0.01%)</title><rect x="681.0" y="757" width="0.1" height="15.0" fill="rgb(209,56,54)" rx="2" ry="2" />
<text  x="683.97" y="767.5" ></text>
</g>
<g >
<title>__select (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1285" width="0.4" height="15.0" fill="rgb(254,149,26)" rx="2" ry="2" />
<text  x="1181.27" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,225,905 samples, 0.01%)</title><rect x="829.7" y="1029" width="0.1" height="15.0" fill="rgb(208,10,45)" rx="2" ry="2" />
<text  x="832.69" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; const*, std::vector&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt; &gt; (44,668,268 samples, 0.18%)</title><rect x="825.7" y="1109" width="2.1" height="15.0" fill="rgb(253,179,50)" rx="2" ry="2" />
<text  x="828.74" y="1119.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_331 (25,828,777 samples, 0.10%)</title><rect x="267.5" y="949" width="1.2" height="15.0" fill="rgb(242,170,45)" rx="2" ry="2" />
<text  x="270.50" y="959.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (5,122,719 samples, 0.02%)</title><rect x="58.4" y="565" width="0.3" height="15.0" fill="rgb(233,117,23)" rx="2" ry="2" />
<text  x="61.41" y="575.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (18,349,954 samples, 0.07%)</title><rect x="798.0" y="917" width="0.9" height="15.0" fill="rgb(229,54,34)" rx="2" ry="2" />
<text  x="801.00" y="927.5" ></text>
</g>
<g >
<title>sdf::v9::Param::GetKey[abi:cxx11] (9,196,261 samples, 0.04%)</title><rect x="141.3" y="1269" width="0.5" height="15.0" fill="rgb(209,221,44)" rx="2" ry="2" />
<text  x="144.33" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,305,251 samples, 0.01%)</title><rect x="126.3" y="1253" width="0.1" height="15.0" fill="rgb(254,126,21)" rx="2" ry="2" />
<text  x="129.28" y="1263.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::HasType (8,222,499 samples, 0.03%)</title><rect x="564.0" y="821" width="0.4" height="15.0" fill="rgb(243,106,11)" rx="2" ry="2" />
<text  x="567.04" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (145,821,481 samples, 0.58%)</title><rect x="880.3" y="981" width="6.8" height="15.0" fill="rgb(230,24,2)" rx="2" ry="2" />
<text  x="883.35" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,151,257 samples, 0.01%)</title><rect x="864.0" y="1141" width="0.1" height="15.0" fill="rgb(235,112,5)" rx="2" ry="2" />
<text  x="866.98" y="1151.5" ></text>
</g>
<g >
<title>sdf::v9::Element::Get&lt;ignition::math::v6::Vector3&lt;double&gt; &gt; (31,231,335 samples, 0.12%)</title><rect x="28.9" y="1125" width="1.5" height="15.0" fill="rgb(222,127,44)" rx="2" ry="2" />
<text  x="31.93" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (63,852,517 samples, 0.25%)</title><rect x="460.2" y="1013" width="3.0" height="15.0" fill="rgb(207,106,26)" rx="2" ry="2" />
<text  x="463.21" y="1023.5" ></text>
</g>
<g >
<title>std::mutex::lock (4,557,018 samples, 0.02%)</title><rect x="809.9" y="981" width="0.2" height="15.0" fill="rgb(212,97,17)" rx="2" ry="2" />
<text  x="812.89" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (74,900,364 samples, 0.30%)</title><rect x="182.8" y="1045" width="3.5" height="15.0" fill="rgb(240,89,47)" rx="2" ry="2" />
<text  x="185.80" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,766,416 samples, 0.01%)</title><rect x="856.3" y="901" width="0.1" height="15.0" fill="rgb(246,132,5)" rx="2" ry="2" />
<text  x="859.26" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,816,086 samples, 0.02%)</title><rect x="43.4" y="1125" width="0.3" height="15.0" fill="rgb(241,70,41)" rx="2" ry="2" />
<text  x="46.39" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,154,483 samples, 0.01%)</title><rect x="724.5" y="773" width="0.1" height="15.0" fill="rgb(216,225,47)" rx="2" ry="2" />
<text  x="727.51" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt; (9,204,855 samples, 0.04%)</title><rect x="650.6" y="901" width="0.4" height="15.0" fill="rgb(207,137,41)" rx="2" ry="2" />
<text  x="653.56" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,449,729 samples, 0.02%)</title><rect x="214.5" y="725" width="0.2" height="15.0" fill="rgb(239,62,49)" rx="2" ry="2" />
<text  x="217.52" y="735.5" ></text>
</g>
<g >
<title>signal_irq_work (2,243,735 samples, 0.01%)</title><rect x="266.8" y="757" width="0.1" height="15.0" fill="rgb(241,95,27)" rx="2" ry="2" />
<text  x="269.79" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,215,686 samples, 0.05%)</title><rect x="480.5" y="805" width="0.6" height="15.0" fill="rgb(221,229,27)" rx="2" ry="2" />
<text  x="483.51" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt;::base (4,020,803 samples, 0.02%)</title><rect x="672.1" y="837" width="0.1" height="15.0" fill="rgb(217,146,45)" rx="2" ry="2" />
<text  x="675.05" y="847.5" ></text>
</g>
<g >
<title>boost::condition_variable::notify_all (4,838,386 samples, 0.02%)</title><rect x="765.5" y="997" width="0.3" height="15.0" fill="rgb(215,52,37)" rx="2" ry="2" />
<text  x="768.53" y="1007.5" ></text>
</g>
<g >
<title>[libgazebo_util.so.11.10.1] (4,442,749 samples, 0.02%)</title><rect x="743.1" y="1013" width="0.2" height="15.0" fill="rgb(209,47,15)" rx="2" ry="2" />
<text  x="746.13" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,838,386 samples, 0.02%)</title><rect x="765.5" y="901" width="0.3" height="15.0" fill="rgb(253,150,50)" rx="2" ry="2" />
<text  x="768.53" y="911.5" ></text>
</g>
<g >
<title>dxReallocateWorldProcessContext (10,438,825 samples, 0.04%)</title><rect x="787.5" y="1013" width="0.5" height="15.0" fill="rgb(209,134,0)" rx="2" ry="2" />
<text  x="790.53" y="1023.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (6,384,335 samples, 0.03%)</title><rect x="430.3" y="885" width="0.3" height="15.0" fill="rgb(240,116,43)" rx="2" ry="2" />
<text  x="433.30" y="895.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (6,013,373 samples, 0.02%)</title><rect x="57.2" y="165" width="0.3" height="15.0" fill="rgb(227,87,33)" rx="2" ry="2" />
<text  x="60.18" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;gazebo::sensors::SensorManager::SensorContainer*, std::allocator&lt;gazebo::sensors::SensorManager::SensorContainer*&gt; &gt;::operator[] (5,697,290 samples, 0.02%)</title><rect x="903.8" y="1221" width="0.3" height="15.0" fill="rgb(231,14,53)" rx="2" ry="2" />
<text  x="906.85" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,878,910 samples, 0.06%)</title><rect x="830.3" y="1077" width="0.7" height="15.0" fill="rgb(226,4,4)" rx="2" ry="2" />
<text  x="833.29" y="1087.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::event::EventT&lt;void  (12,180,292 samples, 0.05%)</title><rect x="730.6" y="997" width="0.5" height="15.0" fill="rgb(228,163,39)" rx="2" ry="2" />
<text  x="733.55" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (7,116,932 samples, 0.03%)</title><rect x="20.4" y="1173" width="0.3" height="15.0" fill="rgb(208,51,40)" rx="2" ry="2" />
<text  x="23.39" y="1183.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::IsDefault (2,159,047 samples, 0.01%)</title><rect x="752.3" y="1013" width="0.1" height="15.0" fill="rgb(234,214,38)" rx="2" ry="2" />
<text  x="755.35" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,049,089 samples, 0.06%)</title><rect x="796.6" y="949" width="0.6" height="15.0" fill="rgb(207,101,27)" rx="2" ry="2" />
<text  x="799.57" y="959.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (5,809,569 samples, 0.02%)</title><rect x="657.9" y="885" width="0.3" height="15.0" fill="rgb(217,168,43)" rx="2" ry="2" />
<text  x="660.94" y="895.5" ></text>
</g>
<g >
<title>[libjoint_state_broadcaster.so] (36,728,999 samples, 0.14%)</title><rect x="819.3" y="1157" width="1.8" height="15.0" fill="rgb(220,175,28)" rx="2" ry="2" />
<text  x="822.35" y="1167.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GenericTypeHandler&lt;gazebo::msgs::Pose&gt;::NewFromPrototype (8,128,910 samples, 0.03%)</title><rect x="764.8" y="901" width="0.4" height="15.0" fill="rgb(224,33,28)" rx="2" ry="2" />
<text  x="767.79" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,762,331 samples, 0.01%)</title><rect x="1174.1" y="1125" width="0.2" height="15.0" fill="rgb(246,121,34)" rx="2" ry="2" />
<text  x="1177.14" y="1135.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::operator- (3,917,758 samples, 0.02%)</title><rect x="225.9" y="997" width="0.2" height="15.0" fill="rgb(244,129,43)" rx="2" ry="2" />
<text  x="228.93" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,197,577 samples, 0.09%)</title><rect x="480.0" y="869" width="1.1" height="15.0" fill="rgb(251,214,30)" rx="2" ry="2" />
<text  x="483.05" y="879.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (12,516,779,584 samples, 49.40%)</title><rect x="206.7" y="1109" width="583.0" height="15.0" fill="rgb(219,34,9)" rx="2" ry="2" />
<text  x="209.69" y="1119.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (8,215,015 samples, 0.03%)</title><rect x="562.5" y="789" width="0.4" height="15.0" fill="rgb(219,154,1)" rx="2" ry="2" />
<text  x="565.50" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (3,955,510 samples, 0.02%)</title><rect x="590.1" y="741" width="0.2" height="15.0" fill="rgb(244,8,18)" rx="2" ry="2" />
<text  x="593.15" y="751.5" ></text>
</g>
<g >
<title>__gthread_recursive_mutex_unlock (2,171,942 samples, 0.01%)</title><rect x="224.3" y="949" width="0.1" height="15.0" fill="rgb(232,61,4)" rx="2" ry="2" />
<text  x="227.28" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,126,400 samples, 0.02%)</title><rect x="708.7" y="757" width="0.2" height="15.0" fill="rgb(253,46,29)" rx="2" ry="2" />
<text  x="711.66" y="767.5" ></text>
</g>
<g >
<title>boost::asio::async_initiate&lt;gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (100,583,021 samples, 0.40%)</title><rect x="54.3" y="1157" width="4.7" height="15.0" fill="rgb(254,193,16)" rx="2" ry="2" />
<text  x="57.28" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,334,647 samples, 0.01%)</title><rect x="150.1" y="1109" width="0.1" height="15.0" fill="rgb(233,196,20)" rx="2" ry="2" />
<text  x="153.06" y="1119.5" ></text>
</g>
<g >
<title>google::protobuf::internal::CachedSize::CachedSize (2,183,638 samples, 0.01%)</title><rect x="212.6" y="1013" width="0.1" height="15.0" fill="rgb(216,64,45)" rx="2" ry="2" />
<text  x="215.56" y="1023.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;rclcpp::Waitable,  (9,524,456 samples, 0.04%)</title><rect x="199.2" y="1061" width="0.4" height="15.0" fill="rgb(241,39,9)" rx="2" ry="2" />
<text  x="202.19" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,766,416 samples, 0.01%)</title><rect x="856.3" y="837" width="0.1" height="15.0" fill="rgb(246,145,25)" rx="2" ry="2" />
<text  x="859.26" y="847.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::~PosesStamped (52,212,562 samples, 0.21%)</title><rect x="755.6" y="1045" width="2.4" height="15.0" fill="rgb(212,78,22)" rx="2" ry="2" />
<text  x="758.56" y="1055.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;boost::shared_ptr&lt;gazebo::transport::Connection&gt; &gt;::_List_iterator (2,272,626 samples, 0.01%)</title><rect x="87.4" y="1189" width="0.1" height="15.0" fill="rgb(246,184,23)" rx="2" ry="2" />
<text  x="90.42" y="1199.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::_M_ptr (2,181,135 samples, 0.01%)</title><rect x="611.3" y="805" width="0.1" height="15.0" fill="rgb(239,77,17)" rx="2" ry="2" />
<text  x="614.31" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (221,260,663 samples, 0.87%)</title><rect x="176.0" y="1173" width="10.3" height="15.0" fill="rgb(223,191,34)" rx="2" ry="2" />
<text  x="178.98" y="1183.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::physics::LinkPrivate*, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt; (3,920,893 samples, 0.02%)</title><rect x="640.3" y="853" width="0.2" height="15.0" fill="rgb(212,161,35)" rx="2" ry="2" />
<text  x="643.28" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;hardware_interface::SystemInterface, std::default_delete&lt;hardware_interface::SystemInterface&gt; &gt;::operator (9,930,811 samples, 0.04%)</title><rect x="519.5" y="869" width="0.5" height="15.0" fill="rgb(225,0,45)" rx="2" ry="2" />
<text  x="522.51" y="879.5" ></text>
</g>
<g >
<title>gazebo::physics::World::EntityByName (8,069,732 samples, 0.03%)</title><rect x="794.2" y="837" width="0.3" height="15.0" fill="rgb(251,120,24)" rx="2" ry="2" />
<text  x="797.16" y="847.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInternal (41,457,249 samples, 0.16%)</title><rect x="752.5" y="981" width="2.0" height="15.0" fill="rgb(243,38,23)" rx="2" ry="2" />
<text  x="755.55" y="991.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (5,561,468 samples, 0.02%)</title><rect x="220.2" y="949" width="0.3" height="15.0" fill="rgb(234,107,54)" rx="2" ry="2" />
<text  x="223.22" y="959.5" ></text>
</g>
<g >
<title>dSpaceCollide2 (61,580,894 samples, 0.24%)</title><rect x="35.3" y="1045" width="2.8" height="15.0" fill="rgb(238,225,38)" rx="2" ry="2" />
<text  x="38.26" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,762,331 samples, 0.01%)</title><rect x="1174.1" y="1189" width="0.2" height="15.0" fill="rgb(227,116,14)" rx="2" ry="2" />
<text  x="1177.14" y="1199.5" ></text>
</g>
<g >
<title>boost::detail::function::void_function_obj_invoker1&lt;gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Publisher, unsigned int&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Publisher*&gt;, boost::arg&lt;1&gt; &gt; &gt;, gazebo::transport::Publisher&gt;, void, unsigned int&gt;::invoke (13,929,078 samples, 0.05%)</title><rect x="13.7" y="869" width="0.7" height="15.0" fill="rgb(230,140,11)" rx="2" ry="2" />
<text  x="16.71" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,067,708 samples, 0.05%)</title><rect x="12.9" y="1173" width="0.6" height="15.0" fill="rgb(223,124,50)" rx="2" ry="2" />
<text  x="15.89" y="1183.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;rclcpp::SubscriptionBase&gt;::lock (6,052,277 samples, 0.02%)</title><rect x="802.0" y="981" width="0.3" height="15.0" fill="rgb(228,216,54)" rx="2" ry="2" />
<text  x="805.05" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (84,418,520 samples, 0.33%)</title><rect x="55.0" y="677" width="4.0" height="15.0" fill="rgb(227,190,11)" rx="2" ry="2" />
<text  x="58.03" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,407,956 samples, 0.01%)</title><rect x="614.7" y="805" width="0.2" height="15.0" fill="rgb(217,184,46)" rx="2" ry="2" />
<text  x="617.73" y="815.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::SetWorldPose (4,116,544 samples, 0.02%)</title><rect x="774.8" y="805" width="0.2" height="15.0" fill="rgb(234,209,41)" rx="2" ry="2" />
<text  x="777.81" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,243,735 samples, 0.01%)</title><rect x="266.8" y="821" width="0.1" height="15.0" fill="rgb(213,205,18)" rx="2" ry="2" />
<text  x="269.79" y="831.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4,795,289 samples, 0.02%)</title><rect x="810.1" y="965" width="0.2" height="15.0" fill="rgb(248,154,24)" rx="2" ry="2" />
<text  x="813.10" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,652,819 samples, 0.07%)</title><rect x="1182.1" y="981" width="0.9" height="15.0" fill="rgb(222,193,35)" rx="2" ry="2" />
<text  x="1185.10" y="991.5" ></text>
</g>
<g >
<title>gazebo::msgs::Set (9,762,006 samples, 0.04%)</title><rect x="28.2" y="1157" width="0.5" height="15.0" fill="rgb(208,161,51)" rx="2" ry="2" />
<text  x="31.21" y="1167.5" ></text>
</g>
<g >
<title>std::_Construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (5,197,574 samples, 0.02%)</title><rect x="857.1" y="1045" width="0.3" height="15.0" fill="rgb(231,178,7)" rx="2" ry="2" />
<text  x="860.11" y="1055.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::MergeFrom (4,392,485 samples, 0.02%)</title><rect x="722.1" y="837" width="0.2" height="15.0" fill="rgb(235,22,27)" rx="2" ry="2" />
<text  x="725.05" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,515,845 samples, 0.02%)</title><rect x="73.8" y="821" width="0.2" height="15.0" fill="rgb(233,35,45)" rx="2" ry="2" />
<text  x="76.78" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;::push_back (8,775,095 samples, 0.03%)</title><rect x="84.5" y="1061" width="0.4" height="15.0" fill="rgb(208,106,33)" rx="2" ry="2" />
<text  x="87.48" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26,223,569 samples, 0.10%)</title><rect x="11.3" y="1253" width="1.2" height="15.0" fill="rgb(206,217,47)" rx="2" ry="2" />
<text  x="14.32" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,272,626 samples, 0.01%)</title><rect x="57.1" y="85" width="0.1" height="15.0" fill="rgb(254,46,15)" rx="2" ry="2" />
<text  x="60.07" y="95.5" ></text>
</g>
<g >
<title>Opcode::AABBTreeCollider::Collide (6,261,630 samples, 0.02%)</title><rect x="247.0" y="997" width="0.3" height="15.0" fill="rgb(224,71,33)" rx="2" ry="2" />
<text  x="250.03" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,144,958 samples, 0.02%)</title><rect x="842.3" y="981" width="0.2" height="15.0" fill="rgb(237,92,13)" rx="2" ry="2" />
<text  x="845.34" y="991.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_timer (29,280,319 samples, 0.12%)</title><rect x="187.3" y="1093" width="1.3" height="15.0" fill="rgb(230,228,8)" rx="2" ry="2" />
<text  x="190.28" y="1103.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (18,349,954 samples, 0.07%)</title><rect x="798.0" y="869" width="0.9" height="15.0" fill="rgb(228,193,30)" rx="2" ry="2" />
<text  x="801.00" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,652,014 samples, 0.04%)</title><rect x="722.4" y="709" width="0.5" height="15.0" fill="rgb(215,40,5)" rx="2" ry="2" />
<text  x="725.45" y="719.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (3,922,626 samples, 0.02%)</title><rect x="447.5" y="869" width="0.2" height="15.0" fill="rgb(216,181,27)" rx="2" ry="2" />
<text  x="450.48" y="879.5" ></text>
</g>
<g >
<title>gazebo_ros::Convert&lt;geometry_msgs::msg::Point_&lt;std::allocator&lt;void&gt; &gt; &gt; (3,829,977 samples, 0.02%)</title><rect x="689.5" y="901" width="0.2" height="15.0" fill="rgb(206,177,23)" rx="2" ry="2" />
<text  x="692.48" y="911.5" ></text>
</g>
<g >
<title>gazebo::msgs::Quaternion::set_x (3,325,405 samples, 0.01%)</title><rect x="28.2" y="1141" width="0.2" height="15.0" fill="rgb(217,84,15)" rx="2" ry="2" />
<text  x="31.21" y="1151.5" ></text>
</g>
<g >
<title>GZCOdeTls::GetTrimeshCollidersCache (2,160,969 samples, 0.01%)</title><rect x="247.6" y="965" width="0.1" height="15.0" fill="rgb(245,198,6)" rx="2" ry="2" />
<text  x="250.59" y="975.5" ></text>
</g>
<g >
<title>dCollideBoxBox (30,242,324 samples, 0.12%)</title><rect x="249.6" y="997" width="1.4" height="15.0" fill="rgb(228,222,40)" rx="2" ry="2" />
<text  x="252.56" y="1007.5" ></text>
</g>
<g >
<title>dxGeom::recomputeAABB (18,591,483 samples, 0.07%)</title><rect x="38.1" y="1061" width="0.9" height="15.0" fill="rgb(231,84,16)" rx="2" ry="2" />
<text  x="41.13" y="1071.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::_M_ptr (2,237,807 samples, 0.01%)</title><rect x="594.0" y="741" width="0.1" height="15.0" fill="rgb(212,11,37)" rx="2" ry="2" />
<text  x="597.03" y="751.5" ></text>
</g>
<g >
<title>getHingeAngle (9,560,769 samples, 0.04%)</title><rect x="471.7" y="805" width="0.4" height="15.0" fill="rgb(215,0,31)" rx="2" ry="2" />
<text  x="474.67" y="815.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategy::MemoryStrategy::get_node_by_group (9,247,408 samples, 0.04%)</title><rect x="189.0" y="1061" width="0.4" height="15.0" fill="rgb(222,180,18)" rx="2" ry="2" />
<text  x="191.98" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,635,319 samples, 0.12%)</title><rect x="740.1" y="853" width="1.4" height="15.0" fill="rgb(237,142,47)" rx="2" ry="2" />
<text  x="743.07" y="863.5" ></text>
</g>
<g >
<title>boost::condition_variable::do_wait_until (24,679,674 samples, 0.10%)</title><rect x="48.9" y="1189" width="1.2" height="15.0" fill="rgb(233,8,37)" rx="2" ry="2" />
<text  x="51.91" y="1199.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GenericTypeHandler&lt;gazebo::msgs::Pose&gt;::NewFromPrototype (4,093,243 samples, 0.02%)</title><rect x="754.3" y="949" width="0.2" height="15.0" fill="rgb(215,193,50)" rx="2" ry="2" />
<text  x="757.29" y="959.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2,169,438 samples, 0.01%)</title><rect x="496.6" y="805" width="0.1" height="15.0" fill="rgb(213,0,31)" rx="2" ry="2" />
<text  x="499.60" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,526,646 samples, 0.03%)</title><rect x="830.0" y="1061" width="0.3" height="15.0" fill="rgb(221,149,8)" rx="2" ry="2" />
<text  x="832.99" y="1071.5" ></text>
</g>
<g >
<title>gazebo::common::Time::~Time (7,002,503 samples, 0.03%)</title><rect x="206.4" y="1093" width="0.3" height="15.0" fill="rgb(252,145,25)" rx="2" ry="2" />
<text  x="209.36" y="1103.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_331 (12,064,126 samples, 0.05%)</title><rect x="683.6" y="837" width="0.6" height="15.0" fill="rgb(212,169,20)" rx="2" ry="2" />
<text  x="686.62" y="847.5" ></text>
</g>
<g >
<title>rclcpp::QOSEventHandlerBase::add_to_wait_set (9,205,660 samples, 0.04%)</title><rect x="194.5" y="1061" width="0.5" height="15.0" fill="rgb(213,203,29)" rx="2" ry="2" />
<text  x="197.53" y="1071.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::number_of_ready_clients (14,022,236 samples, 0.06%)</title><rect x="812.9" y="1045" width="0.6" height="15.0" fill="rgb(206,205,44)" rx="2" ry="2" />
<text  x="815.86" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,958,587 samples, 0.02%)</title><rect x="851.4" y="949" width="0.2" height="15.0" fill="rgb(226,175,43)" rx="2" ry="2" />
<text  x="854.38" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,141,612 samples, 0.02%)</title><rect x="1177.0" y="1141" width="0.2" height="15.0" fill="rgb(234,8,24)" rx="2" ry="2" />
<text  x="1180.00" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (2,148,434 samples, 0.01%)</title><rect x="590.6" y="757" width="0.1" height="15.0" fill="rgb(245,90,23)" rx="2" ry="2" />
<text  x="593.63" y="767.5" ></text>
</g>
<g >
<title>__sqrt_finite@GLIBC_2.15 (2,179,612 samples, 0.01%)</title><rect x="273.2" y="949" width="0.1" height="15.0" fill="rgb(227,183,15)" rx="2" ry="2" />
<text  x="276.16" y="959.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (2,529,277 samples, 0.01%)</title><rect x="908.0" y="1301" width="0.1" height="15.0" fill="rgb(247,191,11)" rx="2" ry="2" />
<text  x="910.98" y="1311.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Vector3 (2,173,576 samples, 0.01%)</title><rect x="226.0" y="965" width="0.1" height="15.0" fill="rgb(241,79,15)" rx="2" ry="2" />
<text  x="229.01" y="975.5" ></text>
</g>
<g >
<title>__vfprintf_internal (9,319,109 samples, 0.04%)</title><rect x="153.0" y="1269" width="0.4" height="15.0" fill="rgb(241,168,45)" rx="2" ry="2" />
<text  x="155.97" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (13,571,111 samples, 0.05%)</title><rect x="815.1" y="965" width="0.6" height="15.0" fill="rgb(219,45,25)" rx="2" ry="2" />
<text  x="818.07" y="975.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (3,937,822 samples, 0.02%)</title><rect x="663.5" y="869" width="0.2" height="15.0" fill="rgb(245,107,0)" rx="2" ry="2" />
<text  x="666.47" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,646 samples, 0.01%)</title><rect x="724.0" y="741" width="0.1" height="15.0" fill="rgb(227,179,50)" rx="2" ry="2" />
<text  x="727.02" y="751.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::HasConnections (6,306,477 samples, 0.02%)</title><rect x="763.1" y="1045" width="0.3" height="15.0" fill="rgb(240,92,52)" rx="2" ry="2" />
<text  x="766.13" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37,935,199 samples, 0.15%)</title><rect x="55.9" y="501" width="1.8" height="15.0" fill="rgb(228,173,53)" rx="2" ry="2" />
<text  x="58.88" y="511.5" ></text>
</g>
<g >
<title>joint_trajectory_controller::Trajectory::has_trajectory_msg (8,406,721 samples, 0.03%)</title><rect x="515.4" y="901" width="0.4" height="15.0" fill="rgb(240,157,51)" rx="2" ry="2" />
<text  x="518.37" y="911.5" ></text>
</g>
<g >
<title>rcl_publish (4,080,614 samples, 0.02%)</title><rect x="666.0" y="869" width="0.2" height="15.0" fill="rgb(227,54,15)" rx="2" ry="2" />
<text  x="668.97" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,434,575 samples, 0.02%)</title><rect x="54.0" y="1061" width="0.3" height="15.0" fill="rgb(241,72,35)" rx="2" ry="2" />
<text  x="57.03" y="1071.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::~LinkData (2,537,634 samples, 0.01%)</title><rect x="75.8" y="853" width="0.1" height="15.0" fill="rgb(253,161,23)" rx="2" ry="2" />
<text  x="78.76" y="863.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Model&gt;::owner_before&lt;gazebo::physics::Model&gt; (6,036,202 samples, 0.02%)</title><rect x="546.4" y="677" width="0.3" height="15.0" fill="rgb(252,44,51)" rx="2" ry="2" />
<text  x="549.43" y="687.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::~RepeatedPtrField (22,510,268 samples, 0.09%)</title><rect x="765.8" y="869" width="1.1" height="15.0" fill="rgb(234,103,31)" rx="2" ry="2" />
<text  x="768.84" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,838,386 samples, 0.02%)</title><rect x="765.5" y="789" width="0.3" height="15.0" fill="rgb(230,139,30)" rx="2" ry="2" />
<text  x="768.53" y="799.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;*, geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;*, std::allocator&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; (10,334,307 samples, 0.04%)</title><rect x="693.3" y="821" width="0.5" height="15.0" fill="rgb(213,114,22)" rx="2" ry="2" />
<text  x="696.30" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,634,833 samples, 0.03%)</title><rect x="796.3" y="901" width="0.3" height="15.0" fill="rgb(245,73,12)" rx="2" ry="2" />
<text  x="799.26" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::WorldLinearVel (4,160,711 samples, 0.02%)</title><rect x="718.0" y="869" width="0.2" height="15.0" fill="rgb(244,90,49)" rx="2" ry="2" />
<text  x="721.02" y="879.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::~shared_ptr (6,015,434 samples, 0.02%)</title><rect x="219.8" y="997" width="0.3" height="15.0" fill="rgb(233,97,12)" rx="2" ry="2" />
<text  x="222.84" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (73,142,036 samples, 0.29%)</title><rect x="713.9" y="885" width="3.4" height="15.0" fill="rgb(244,98,50)" rx="2" ry="2" />
<text  x="716.90" y="895.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::SharedDtor (34,123,755 samples, 0.13%)</title><rect x="756.2" y="949" width="1.6" height="15.0" fill="rgb(205,35,48)" rx="2" ry="2" />
<text  x="759.21" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="917" width="0.1" height="15.0" fill="rgb(245,192,20)" rx="2" ry="2" />
<text  x="839.31" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;gazebo::physics::Entity*, std::allocator&lt;gazebo::physics::Entity*&gt; &gt;::_M_put_node (2,158,912 samples, 0.01%)</title><rect x="744.9" y="1029" width="0.1" height="15.0" fill="rgb(224,97,24)" rx="2" ry="2" />
<text  x="747.86" y="1039.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetScopedName[abi:cxx11] (16,240,918 samples, 0.06%)</title><rect x="682.6" y="901" width="0.7" height="15.0" fill="rgb(218,23,49)" rx="2" ry="2" />
<text  x="685.57" y="911.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt;::find (11,915,548 samples, 0.05%)</title><rect x="495.7" y="869" width="0.6" height="15.0" fill="rgb(226,126,47)" rx="2" ry="2" />
<text  x="498.70" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,515,845 samples, 0.02%)</title><rect x="73.8" y="901" width="0.2" height="15.0" fill="rgb(206,39,16)" rx="2" ry="2" />
<text  x="76.78" y="911.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt; &gt;,  (4,975,899 samples, 0.02%)</title><rect x="794.7" y="949" width="0.3" height="15.0" fill="rgb(223,91,21)" rx="2" ry="2" />
<text  x="797.74" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (48,590,556 samples, 0.19%)</title><rect x="173.4" y="1029" width="2.3" height="15.0" fill="rgb(247,187,44)" rx="2" ry="2" />
<text  x="176.44" y="1039.5" ></text>
</g>
<g >
<title>[libcontroller_manager.so] (6,589,854 samples, 0.03%)</title><rect x="846.1" y="1125" width="0.3" height="15.0" fill="rgb(211,119,13)" rx="2" ry="2" />
<text  x="849.11" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (87,526,544 samples, 0.35%)</title><rect x="733.5" y="997" width="4.1" height="15.0" fill="rgb(216,78,53)" rx="2" ry="2" />
<text  x="736.53" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,210,290 samples, 0.01%)</title><rect x="855.7" y="965" width="0.1" height="15.0" fill="rgb(219,174,28)" rx="2" ry="2" />
<text  x="858.73" y="975.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (2,457,342 samples, 0.01%)</title><rect x="782.9" y="901" width="0.1" height="15.0" fill="rgb(228,58,54)" rx="2" ry="2" />
<text  x="785.93" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::World&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::World&gt; &gt; &gt;::end (4,861,997 samples, 0.02%)</title><rect x="47.7" y="1173" width="0.2" height="15.0" fill="rgb(219,184,42)" rx="2" ry="2" />
<text  x="50.66" y="1183.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::transport::Publication&gt;::operator bool (4,345,461 samples, 0.02%)</title><rect x="763.1" y="1029" width="0.2" height="15.0" fill="rgb(227,203,53)" rx="2" ry="2" />
<text  x="766.13" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (83,714,144 samples, 0.33%)</title><rect x="733.7" y="949" width="3.9" height="15.0" fill="rgb(237,59,12)" rx="2" ry="2" />
<text  x="736.70" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,528,796 samples, 0.10%)</title><rect x="468.2" y="981" width="1.1" height="15.0" fill="rgb(215,176,18)" rx="2" ry="2" />
<text  x="471.21" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (147,538,709 samples, 0.58%)</title><rect x="880.3" y="997" width="6.8" height="15.0" fill="rgb(207,59,34)" rx="2" ry="2" />
<text  x="883.27" y="1007.5" ></text>
</g>
<g >
<title>dNormalizeAnglePositive (2,156,607 samples, 0.01%)</title><rect x="579.2" y="725" width="0.1" height="15.0" fill="rgb(214,162,26)" rx="2" ry="2" />
<text  x="582.18" y="735.5" ></text>
</g>
<g >
<title>__lll_lock_wait (3,303,114 samples, 0.01%)</title><rect x="62.8" y="1141" width="0.2" height="15.0" fill="rgb(248,169,19)" rx="2" ry="2" />
<text  x="65.82" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_realloc_insert&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (5,923,549 samples, 0.02%)</title><rect x="591.6" y="725" width="0.3" height="15.0" fill="rgb(243,19,47)" rx="2" ry="2" />
<text  x="594.63" y="735.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator= (6,092,557 samples, 0.02%)</title><rect x="226.1" y="997" width="0.3" height="15.0" fill="rgb(248,214,28)" rx="2" ry="2" />
<text  x="229.11" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;sdf::v9::Param,  (2,624,031 samples, 0.01%)</title><rect x="20.1" y="1141" width="0.1" height="15.0" fill="rgb(231,15,19)" rx="2" ry="2" />
<text  x="23.12" y="1151.5" ></text>
</g>
<g >
<title>ipv4_conntrack_defrag (2,161,329 samples, 0.01%)</title><rect x="889.1" y="1077" width="0.1" height="15.0" fill="rgb(238,0,51)" rx="2" ry="2" />
<text  x="892.05" y="1087.5" ></text>
</g>
<g >
<title>[libgazebo_util.so.11.10.1] (9,732,019 samples, 0.04%)</title><rect x="624.6" y="949" width="0.5" height="15.0" fill="rgb(208,110,28)" rx="2" ry="2" />
<text  x="627.61" y="959.5" ></text>
</g>
<g >
<title>rclcpp::Executor::spin_once (359,837,343 samples, 1.42%)</title><rect x="187.3" y="1141" width="16.7" height="15.0" fill="rgb(232,68,39)" rx="2" ry="2" />
<text  x="190.28" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (58,356,136 samples, 0.23%)</title><rect x="714.6" y="821" width="2.7" height="15.0" fill="rgb(211,43,21)" rx="2" ry="2" />
<text  x="717.59" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,515,845 samples, 0.02%)</title><rect x="73.8" y="981" width="0.2" height="15.0" fill="rgb(240,184,11)" rx="2" ry="2" />
<text  x="76.78" y="991.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (4,083,181 samples, 0.02%)</title><rect x="562.6" y="757" width="0.2" height="15.0" fill="rgb(249,209,13)" rx="2" ry="2" />
<text  x="565.59" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,281,711 samples, 0.01%)</title><rect x="841.9" y="1093" width="0.2" height="15.0" fill="rgb(208,44,22)" rx="2" ry="2" />
<text  x="844.95" y="1103.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::operator- (54,671,493 samples, 0.22%)</title><rect x="606.9" y="805" width="2.5" height="15.0" fill="rgb(227,35,34)" rx="2" ry="2" />
<text  x="609.88" y="815.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (3,587,396 samples, 0.01%)</title><rect x="588.6" y="725" width="0.2" height="15.0" fill="rgb(225,51,50)" rx="2" ry="2" />
<text  x="591.64" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;gazebo::common::Battery&gt;, std::allocator&lt;std::shared_ptr&lt;gazebo::common::Battery&gt; &gt; &gt;::begin (3,889,205 samples, 0.02%)</title><rect x="696.8" y="917" width="0.2" height="15.0" fill="rgb(253,54,33)" rx="2" ry="2" />
<text  x="699.85" y="927.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator* (2,745,270 samples, 0.01%)</title><rect x="777.2" y="805" width="0.1" height="15.0" fill="rgb(233,27,49)" rx="2" ry="2" />
<text  x="780.22" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,644,693 samples, 0.05%)</title><rect x="426.7" y="885" width="0.6" height="15.0" fill="rgb(226,124,54)" rx="2" ry="2" />
<text  x="429.70" y="895.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (5,816,639 samples, 0.02%)</title><rect x="522.7" y="853" width="0.3" height="15.0" fill="rgb(243,62,25)" rx="2" ry="2" />
<text  x="525.69" y="863.5" ></text>
</g>
<g >
<title>boost::dynamic_pointer_cast&lt;gazebo::physics::ODESurfaceParams, gazebo::physics::SurfaceParams&gt; (4,048,484 samples, 0.02%)</title><rect x="260.1" y="997" width="0.1" height="15.0" fill="rgb(220,30,13)" rx="2" ry="2" />
<text  x="263.05" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,754,759 samples, 0.02%)</title><rect x="73.4" y="981" width="0.3" height="15.0" fill="rgb(205,202,45)" rx="2" ry="2" />
<text  x="76.45" y="991.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::transport::Publisher&gt;::operator (4,434,108 samples, 0.02%)</title><rect x="76.8" y="1157" width="0.2" height="15.0" fill="rgb(214,172,46)" rx="2" ry="2" />
<text  x="79.84" y="1167.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom&lt;google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::TypeHandler&gt; (24,404,641 samples, 0.10%)</title><rect x="764.0" y="949" width="1.2" height="15.0" fill="rgb(238,117,36)" rx="2" ry="2" />
<text  x="767.03" y="959.5" ></text>
</g>
<g >
<title>gazebo::physics::Inertial::CoG (12,233,963 samples, 0.05%)</title><rect x="443.5" y="917" width="0.6" height="15.0" fill="rgb(208,175,33)" rx="2" ry="2" />
<text  x="446.52" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,172,459 samples, 0.01%)</title><rect x="690.6" y="821" width="0.1" height="15.0" fill="rgb(248,215,6)" rx="2" ry="2" />
<text  x="693.63" y="831.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::unique_lock (6,145,230 samples, 0.02%)</title><rect x="239.6" y="837" width="0.3" height="15.0" fill="rgb(228,18,14)" rx="2" ry="2" />
<text  x="242.58" y="847.5" ></text>
</g>
<g >
<title>[[uprobes]] (8,741,944 samples, 0.03%)</title><rect x="841.6" y="1125" width="0.5" height="15.0" fill="rgb(250,45,7)" rx="2" ry="2" />
<text  x="844.65" y="1135.5" ></text>
</g>
<g >
<title>boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo::sensors::SensorManager::SensorContainer&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::sensors::SensorManager::SensorContainer*&gt; &gt; &gt;::operator (657,730,845 samples, 2.60%)</title><rect x="17.9" y="1269" width="30.7" height="15.0" fill="rgb(234,112,14)" rx="2" ry="2" />
<text  x="20.95" y="1279.5" >bo..</text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;::~_List_base (2,537,634 samples, 0.01%)</title><rect x="75.8" y="1013" width="0.1" height="15.0" fill="rgb(238,226,11)" rx="2" ry="2" />
<text  x="78.76" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,823,147 samples, 0.02%)</title><rect x="830.9" y="1013" width="0.1" height="15.0" fill="rgb(240,19,29)" rx="2" ry="2" />
<text  x="833.85" y="1023.5" ></text>
</g>
<g >
<title>[librclcpp.so] (7,141,100 samples, 0.03%)</title><rect x="199.6" y="1029" width="0.4" height="15.0" fill="rgb(227,193,21)" rx="2" ry="2" />
<text  x="202.63" y="1039.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::UpdateCollision (700,123,590 samples, 2.76%)</title><rect x="229.1" y="1045" width="32.6" height="15.0" fill="rgb(250,157,54)" rx="2" ry="2" />
<text  x="232.13" y="1055.5" >ga..</text>
</g>
<g >
<title>std::weak_ptr&lt;rclcpp::CallbackGroup&gt;::lock (8,304,082 samples, 0.03%)</title><rect x="803.8" y="1013" width="0.4" height="15.0" fill="rgb(205,50,45)" rx="2" ry="2" />
<text  x="806.80" y="1023.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::operator+ (6,139,598 samples, 0.02%)</title><rect x="32.7" y="1157" width="0.3" height="15.0" fill="rgb(248,55,24)" rx="2" ry="2" />
<text  x="35.68" y="1167.5" ></text>
</g>
<g >
<title>gazebo::sensors::ImuSensor::OnLinkData (11,539,947 samples, 0.05%)</title><rect x="75.0" y="1077" width="0.6" height="15.0" fill="rgb(216,136,54)" rx="2" ry="2" />
<text  x="78.05" y="1087.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo::physics::LinkPrivate*, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt; (4,103,928 samples, 0.02%)</title><rect x="587.5" y="661" width="0.2" height="15.0" fill="rgb(244,158,1)" rx="2" ry="2" />
<text  x="590.48" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (44,474,807 samples, 0.18%)</title><rect x="55.6" y="533" width="2.1" height="15.0" fill="rgb(219,55,42)" rx="2" ry="2" />
<text  x="58.58" y="543.5" ></text>
</g>
<g >
<title>trajectory_msgs::msg::JointTrajectoryPoint_&lt;std::allocator&lt;void&gt; &gt;::operator= (4,321,107 samples, 0.02%)</title><rect x="515.0" y="885" width="0.2" height="15.0" fill="rgb(234,119,41)" rx="2" ry="2" />
<text  x="517.98" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,184,532 samples, 0.11%)</title><rect x="716.0" y="741" width="1.3" height="15.0" fill="rgb(220,189,31)" rx="2" ry="2" />
<text  x="718.99" y="751.5" ></text>
</g>
<g >
<title>boost::detail::variant::visitation_impl_invoke_impl&lt;boost::detail::variant::invoke_visitor&lt;boost::detail::variant::get_visitor&lt;std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt; &gt;, false&gt;, void*, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt; &gt; (3,946,163 samples, 0.02%)</title><rect x="73.3" y="949" width="0.1" height="15.0" fill="rgb(238,81,22)" rx="2" ry="2" />
<text  x="76.27" y="959.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt; &gt;,  (4,975,899 samples, 0.02%)</title><rect x="794.7" y="933" width="0.3" height="15.0" fill="rgb(228,72,15)" rx="2" ry="2" />
<text  x="797.74" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,446 samples, 0.01%)</title><rect x="681.0" y="837" width="0.1" height="15.0" fill="rgb(234,139,28)" rx="2" ry="2" />
<text  x="683.97" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="1077" width="0.1" height="15.0" fill="rgb(215,98,18)" rx="2" ry="2" />
<text  x="839.31" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,368,669 samples, 0.03%)</title><rect x="833.6" y="1077" width="0.3" height="15.0" fill="rgb(226,123,27)" rx="2" ry="2" />
<text  x="836.60" y="1087.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (8,379,359 samples, 0.03%)</title><rect x="688.6" y="837" width="0.4" height="15.0" fill="rgb(227,190,14)" rx="2" ry="2" />
<text  x="691.62" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::InertialPrivate, std::default_delete&lt;gazebo::physics::InertialPrivate&gt; &gt;::operator (8,399,883 samples, 0.03%)</title><rect x="686.4" y="837" width="0.4" height="15.0" fill="rgb(236,227,46)" rx="2" ry="2" />
<text  x="689.36" y="847.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::PhysicsEngine&gt;::operator (5,770,390 samples, 0.02%)</title><rect x="483.1" y="1045" width="0.2" height="15.0" fill="rgb(215,225,9)" rx="2" ry="2" />
<text  x="486.07" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,150,938 samples, 0.02%)</title><rect x="708.8" y="725" width="0.1" height="15.0" fill="rgb(237,82,50)" rx="2" ry="2" />
<text  x="711.75" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1205" width="0.4" height="15.0" fill="rgb(246,148,7)" rx="2" ry="2" />
<text  x="1181.27" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,647,282 samples, 0.02%)</title><rect x="691.3" y="869" width="0.3" height="15.0" fill="rgb(244,46,17)" rx="2" ry="2" />
<text  x="694.31" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_put_node (5,926,179 samples, 0.02%)</title><rect x="82.3" y="1109" width="0.3" height="15.0" fill="rgb(220,43,46)" rx="2" ry="2" />
<text  x="85.32" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;gazebo::sensors::SimTimeEvent*, std::allocator&lt;gazebo::sensors::SimTimeEvent*&gt; &gt;::push_back (11,610,970 samples, 0.05%)</title><rect x="48.0" y="1189" width="0.6" height="15.0" fill="rgb(222,167,37)" rx="2" ry="2" />
<text  x="51.04" y="1199.5" ></text>
</g>
<g >
<title>gazebo_ros2_control::GazeboSystem::read (25,281,167 samples, 0.10%)</title><rect x="518.3" y="869" width="1.2" height="15.0" fill="rgb(212,203,29)" rx="2" ry="2" />
<text  x="521.33" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,141,612 samples, 0.02%)</title><rect x="1177.0" y="1189" width="0.2" height="15.0" fill="rgb(210,62,44)" rx="2" ry="2" />
<text  x="1180.00" y="1199.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::Pose3 (5,671,873 samples, 0.02%)</title><rect x="606.1" y="789" width="0.2" height="15.0" fill="rgb(236,61,43)" rx="2" ry="2" />
<text  x="609.06" y="799.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (56,935,916 samples, 0.22%)</title><rect x="204.0" y="1253" width="2.7" height="15.0" fill="rgb(233,220,22)" rx="2" ry="2" />
<text  x="207.03" y="1263.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;rclcpp::Waitable,  (9,524,456 samples, 0.04%)</title><rect x="199.2" y="1045" width="0.4" height="15.0" fill="rgb(239,147,53)" rx="2" ry="2" />
<text  x="202.19" y="1055.5" ></text>
</g>
<g >
<title>gazebo::msgs::Contacts::mutable_time (10,294,976 samples, 0.04%)</title><rect x="212.7" y="1029" width="0.4" height="15.0" fill="rgb(209,38,15)" rx="2" ry="2" />
<text  x="215.66" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,076,686 samples, 0.02%)</title><rect x="339.4" y="901" width="0.2" height="15.0" fill="rgb(234,198,16)" rx="2" ry="2" />
<text  x="342.38" y="911.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (2,173,369 samples, 0.01%)</title><rect x="273.7" y="917" width="0.1" height="15.0" fill="rgb(247,189,10)" rx="2" ry="2" />
<text  x="276.65" y="927.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;controller_manager::ControllerManager,  (2,652,862 samples, 0.01%)</title><rect x="776.8" y="901" width="0.1" height="15.0" fill="rgb(219,191,34)" rx="2" ry="2" />
<text  x="779.80" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (47,267,486 samples, 0.19%)</title><rect x="739.3" y="997" width="2.2" height="15.0" fill="rgb(217,142,5)" rx="2" ry="2" />
<text  x="742.25" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (46,367,145 samples, 0.18%)</title><rect x="55.5" y="597" width="2.2" height="15.0" fill="rgb(222,185,14)" rx="2" ry="2" />
<text  x="58.49" y="607.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::get (2,161,035 samples, 0.01%)</title><rect x="219.3" y="997" width="0.1" height="15.0" fill="rgb(211,219,13)" rx="2" ry="2" />
<text  x="222.35" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::size (3,633,233 samples, 0.01%)</title><rect x="828.4" y="1125" width="0.2" height="15.0" fill="rgb(252,90,4)" rx="2" ry="2" />
<text  x="831.38" y="1135.5" ></text>
</g>
<g >
<title>realtime_tools::RealtimePublisher&lt;sensor_msgs::msg::JointState_&lt;std::allocator&lt;void&gt; &gt; &gt;::unlock (6,772,943 samples, 0.03%)</title><rect x="855.3" y="1141" width="0.3" height="15.0" fill="rgb(230,81,29)" rx="2" ry="2" />
<text  x="858.31" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,644,693 samples, 0.05%)</title><rect x="426.7" y="869" width="0.6" height="15.0" fill="rgb(206,193,28)" rx="2" ry="2" />
<text  x="429.70" y="879.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::lock (4,009,638 samples, 0.02%)</title><rect x="481.4" y="997" width="0.1" height="15.0" fill="rgb(242,227,21)" rx="2" ry="2" />
<text  x="484.36" y="1007.5" ></text>
</g>
<g >
<title>__poll (196,437,662 samples, 0.78%)</title><rect x="908.6" y="1301" width="9.1" height="15.0" fill="rgb(221,91,16)" rx="2" ry="2" />
<text  x="911.58" y="1311.5" ></text>
</g>
<g >
<title>boost::date_time::time_duration&lt;boost::posix_time::time_duration, boost::date_time::time_resolution_traits&lt;boost::date_time::time_resolution_traits_adapted64_impl,  (8,547,278 samples, 0.03%)</title><rect x="50.1" y="1189" width="0.4" height="15.0" fill="rgb(225,9,39)" rx="2" ry="2" />
<text  x="53.05" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,528,796 samples, 0.10%)</title><rect x="468.2" y="997" width="1.1" height="15.0" fill="rgb(247,64,41)" rx="2" ry="2" />
<text  x="471.21" y="1007.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator* (11,574,418 samples, 0.05%)</title><rect x="659.4" y="869" width="0.6" height="15.0" fill="rgb(241,136,2)" rx="2" ry="2" />
<text  x="662.42" y="879.5" ></text>
</g>
<g >
<title>boost::enable_shared_from_this&lt;gazebo::transport::Publisher&gt;::shared_from_this (5,195,452 samples, 0.02%)</title><rect x="77.9" y="1141" width="0.2" height="15.0" fill="rgb(219,142,34)" rx="2" ry="2" />
<text  x="80.87" y="1151.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::Add (13,348,165 samples, 0.05%)</title><rect x="754.6" y="1029" width="0.6" height="15.0" fill="rgb(205,111,40)" rx="2" ry="2" />
<text  x="757.57" y="1039.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, int, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::lower_bound (14,733,790 samples, 0.06%)</title><rect x="86.4" y="1125" width="0.7" height="15.0" fill="rgb(251,175,52)" rx="2" ry="2" />
<text  x="89.38" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,213,530 samples, 0.01%)</title><rect x="666.9" y="869" width="0.1" height="15.0" fill="rgb(228,180,17)" rx="2" ry="2" />
<text  x="669.93" y="879.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::HasType (2,158,046 samples, 0.01%)</title><rect x="218.2" y="1029" width="0.1" height="15.0" fill="rgb(223,205,52)" rx="2" ry="2" />
<text  x="221.21" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (58,148,793 samples, 0.23%)</title><rect x="466.6" y="1013" width="2.7" height="15.0" fill="rgb(225,199,15)" rx="2" ry="2" />
<text  x="469.64" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (85,740,901 samples, 0.34%)</title><rect x="733.6" y="965" width="4.0" height="15.0" fill="rgb(234,129,5)" rx="2" ry="2" />
<text  x="736.61" y="975.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;*, control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; (8,387,558 samples, 0.03%)</title><rect x="825.3" y="1109" width="0.4" height="15.0" fill="rgb(250,129,12)" rx="2" ry="2" />
<text  x="828.34" y="1119.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt; &gt; &gt; (4,795,289 samples, 0.02%)</title><rect x="804.7" y="997" width="0.3" height="15.0" fill="rgb(245,43,33)" rx="2" ry="2" />
<text  x="807.75" y="1007.5" ></text>
</g>
<g >
<title>gazebo_ros2_control::GazeboRosControlPlugin::Load (359,837,343 samples, 1.42%)</title><rect x="187.3" y="1157" width="16.7" height="15.0" fill="rgb(239,116,42)" rx="2" ry="2" />
<text  x="190.28" y="1167.5" ></text>
</g>
<g >
<title>[libgazebo.so.11.10.1] (3,640,791 samples, 0.01%)</title><rect x="204.0" y="1093" width="0.2" height="15.0" fill="rgb(215,122,20)" rx="2" ry="2" />
<text  x="207.03" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (273,839,706 samples, 1.08%)</title><rect x="565.8" y="805" width="12.7" height="15.0" fill="rgb(208,107,40)" rx="2" ry="2" />
<text  x="568.79" y="815.5" ></text>
</g>
<g >
<title>boost::function&lt;void  (15,641,918 samples, 0.06%)</title><rect x="78.1" y="1141" width="0.7" height="15.0" fill="rgb(213,49,3)" rx="2" ry="2" />
<text  x="81.11" y="1151.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_any_executable (29,280,319 samples, 0.12%)</title><rect x="187.3" y="1109" width="1.3" height="15.0" fill="rgb(215,128,3)" rx="2" ry="2" />
<text  x="190.28" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,243,735 samples, 0.01%)</title><rect x="266.8" y="869" width="0.1" height="15.0" fill="rgb(253,51,7)" rx="2" ry="2" />
<text  x="269.79" y="879.5" ></text>
</g>
<g >
<title>gazebo::sensors::ImuSensor::OnLinkData (17,782,709 samples, 0.07%)</title><rect x="74.2" y="1061" width="0.8" height="15.0" fill="rgb(235,84,41)" rx="2" ry="2" />
<text  x="77.22" y="1071.5" ></text>
</g>
<g >
<title>boost::operator&lt; &lt;gazebo::physics::Model, gazebo::physics::Model&gt; (12,229,558 samples, 0.05%)</title><rect x="546.1" y="693" width="0.6" height="15.0" fill="rgb(229,35,38)" rx="2" ry="2" />
<text  x="549.14" y="703.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategy::MemoryStrategy::get_group_by_subscription (37,286,903 samples, 0.15%)</title><rect x="801.0" y="1029" width="1.7" height="15.0" fill="rgb(213,147,43)" rx="2" ry="2" />
<text  x="803.97" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::vector (143,141,949 samples, 0.56%)</title><rect x="670.5" y="901" width="6.7" height="15.0" fill="rgb(212,114,48)" rx="2" ry="2" />
<text  x="673.54" y="911.5" ></text>
</g>
<g >
<title>[libgazebo_sensors.so.11.10.1] (3,882,859 samples, 0.02%)</title><rect x="902.4" y="1189" width="0.2" height="15.0" fill="rgb(223,47,19)" rx="2" ry="2" />
<text  x="905.40" y="1199.5" ></text>
</g>
<g >
<title>dJointGetHingeAngleRate (2,190,730 samples, 0.01%)</title><rect x="471.2" y="853" width="0.1" height="15.0" fill="rgb(254,151,34)" rx="2" ry="2" />
<text  x="474.19" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (49,382,591 samples, 0.19%)</title><rect x="485.1" y="1013" width="2.3" height="15.0" fill="rgb(238,210,32)" rx="2" ry="2" />
<text  x="488.09" y="1023.5" ></text>
</g>
<g >
<title>[libgazebo_rendering.so.11.10.1] (6,700,855 samples, 0.03%)</title><rect x="29.3" y="1093" width="0.3" height="15.0" fill="rgb(209,228,32)" rx="2" ry="2" />
<text  x="32.32" y="1103.5" ></text>
</g>
<g >
<title>boost::thread_cv_detail::lock_on_exit&lt;boost::unique_lock&lt;boost::mutex&gt; &gt;::activate (2,154,874 samples, 0.01%)</title><rect x="50.0" y="1173" width="0.1" height="15.0" fill="rgb(231,42,18)" rx="2" ry="2" />
<text  x="52.95" y="1183.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_service_t const,  (28,047,359 samples, 0.11%)</title><rect x="814.4" y="1029" width="1.3" height="15.0" fill="rgb(210,162,28)" rx="2" ry="2" />
<text  x="817.39" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,604,577 samples, 0.01%)</title><rect x="840.5" y="933" width="0.2" height="15.0" fill="rgb(218,86,37)" rx="2" ry="2" />
<text  x="843.51" y="943.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetByName (8,069,732 samples, 0.03%)</title><rect x="794.2" y="805" width="0.3" height="15.0" fill="rgb(242,133,19)" rx="2" ry="2" />
<text  x="797.16" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,762,331 samples, 0.01%)</title><rect x="1174.1" y="1221" width="0.2" height="15.0" fill="rgb(209,194,26)" rx="2" ry="2" />
<text  x="1177.14" y="1231.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (71,625,986 samples, 0.28%)</title><rect x="21.1" y="1093" width="3.4" height="15.0" fill="rgb(217,88,33)" rx="2" ry="2" />
<text  x="24.15" y="1103.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::util::LogRecordPrivate, std::default_delete&lt;gazebo::util::LogRecordPrivate&gt; &gt;::get (5,979,213 samples, 0.02%)</title><rect x="743.8" y="1013" width="0.3" height="15.0" fill="rgb(247,166,22)" rx="2" ry="2" />
<text  x="746.80" y="1023.5" ></text>
</g>
<g >
<title>gazebo::physics::World::IsPaused (2,286,872 samples, 0.01%)</title><rect x="750.9" y="1061" width="0.1" height="15.0" fill="rgb(248,171,0)" rx="2" ry="2" />
<text  x="753.89" y="1071.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::ByteSizeLong (3,939,053 samples, 0.02%)</title><rect x="162.6" y="1221" width="0.2" height="15.0" fill="rgb(245,105,31)" rx="2" ry="2" />
<text  x="165.64" y="1231.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (50,687,162 samples, 0.20%)</title><rect x="797.7" y="1013" width="2.3" height="15.0" fill="rgb(242,34,35)" rx="2" ry="2" />
<text  x="800.68" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,032,103 samples, 0.02%)</title><rect x="831.1" y="997" width="0.3" height="15.0" fill="rgb(246,229,43)" rx="2" ry="2" />
<text  x="834.09" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,812,785 samples, 0.05%)</title><rect x="63.0" y="1077" width="0.6" height="15.0" fill="rgb(226,70,42)" rx="2" ry="2" />
<text  x="65.97" y="1087.5" ></text>
</g>
<g >
<title>dSubtractVectors3 (3,560,357 samples, 0.01%)</title><rect x="254.4" y="885" width="0.2" height="15.0" fill="rgb(223,35,48)" rx="2" ry="2" />
<text  x="257.44" y="895.5" ></text>
</g>
<g >
<title>gazebo::msgs::WorldStatistics::SharedDtor (7,490,463 samples, 0.03%)</title><rect x="772.1" y="1029" width="0.4" height="15.0" fill="rgb(235,228,31)" rx="2" ry="2" />
<text  x="775.12" y="1039.5" ></text>
</g>
<g >
<title>boost::function1&lt;void, unsigned int&gt;::clear (8,639,782 samples, 0.03%)</title><rect x="78.1" y="1125" width="0.4" height="15.0" fill="rgb(214,187,44)" rx="2" ry="2" />
<text  x="81.11" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (71,480,882 samples, 0.28%)</title><rect x="454.4" y="981" width="3.3" height="15.0" fill="rgb(215,137,22)" rx="2" ry="2" />
<text  x="457.36" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::TimerBase,  (7,190,060 samples, 0.03%)</title><rect x="190.1" y="981" width="0.4" height="15.0" fill="rgb(222,167,50)" rx="2" ry="2" />
<text  x="193.14" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_get_insert_unique_pos (36,100,110 samples, 0.14%)</title><rect x="545.1" y="725" width="1.7" height="15.0" fill="rgb(249,93,50)" rx="2" ry="2" />
<text  x="548.11" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,496,532 samples, 0.10%)</title><rect x="11.4" y="1109" width="1.1" height="15.0" fill="rgb(249,202,42)" rx="2" ry="2" />
<text  x="14.36" y="1119.5" ></text>
</g>
<g >
<title>std::_List_node&lt;boost::shared_ptr&lt;gazebo::transport::Connection&gt; &gt;::_M_valptr (2,605,039 samples, 0.01%)</title><rect x="87.5" y="1173" width="0.1" height="15.0" fill="rgb(253,203,28)" rx="2" ry="2" />
<text  x="90.52" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="1093" width="0.1" height="15.0" fill="rgb(230,196,18)" rx="2" ry="2" />
<text  x="848.06" y="1103.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (4,189,640 samples, 0.02%)</title><rect x="766.2" y="773" width="0.2" height="15.0" fill="rgb(229,106,27)" rx="2" ry="2" />
<text  x="769.22" y="783.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::RotateVector (23,676,950 samples, 0.09%)</title><rect x="557.3" y="741" width="1.1" height="15.0" fill="rgb(239,26,23)" rx="2" ry="2" />
<text  x="560.32" y="751.5" ></text>
</g>
<g >
<title>rcl_subscription_get_rmw_handle (9,034,749 samples, 0.04%)</title><rect x="808.3" y="1013" width="0.4" height="15.0" fill="rgb(228,107,19)" rx="2" ry="2" />
<text  x="811.28" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,091,609 samples, 0.11%)</title><rect x="603.4" y="597" width="1.3" height="15.0" fill="rgb(216,93,3)" rx="2" ry="2" />
<text  x="606.36" y="607.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; &gt; &gt;::at (9,568,562 samples, 0.04%)</title><rect x="496.3" y="869" width="0.4" height="15.0" fill="rgb(205,41,43)" rx="2" ry="2" />
<text  x="499.25" y="879.5" ></text>
</g>
<g >
<title>[librclcpp.so] (7,833,605 samples, 0.03%)</title><rect x="494.5" y="885" width="0.4" height="15.0" fill="rgb(249,174,17)" rx="2" ry="2" />
<text  x="497.51" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::emplace_back&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (5,723,840 samples, 0.02%)</title><rect x="587.0" y="709" width="0.3" height="15.0" fill="rgb(236,24,35)" rx="2" ry="2" />
<text  x="590.02" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;gazebo::sensors::SimTimeEvent*&gt;::_M_ptr (4,610,904 samples, 0.02%)</title><rect x="48.4" y="1141" width="0.2" height="15.0" fill="rgb(207,26,34)" rx="2" ry="2" />
<text  x="51.37" y="1151.5" ></text>
</g>
<g >
<title>gazebo_ros::Convert&lt;geometry_msgs::msg::Point_&lt;std::allocator&lt;void&gt; &gt; &gt; (4,310,505 samples, 0.02%)</title><rect x="689.8" y="885" width="0.2" height="15.0" fill="rgb(238,225,49)" rx="2" ry="2" />
<text  x="692.76" y="895.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::Waitable,  (7,141,100 samples, 0.03%)</title><rect x="199.6" y="1045" width="0.4" height="15.0" fill="rgb(214,181,8)" rx="2" ry="2" />
<text  x="202.63" y="1055.5" ></text>
</g>
<g >
<title>gazebo::physics::World::RunLoop (12,516,779,584 samples, 49.40%)</title><rect x="206.7" y="1269" width="583.0" height="15.0" fill="rgb(235,1,54)" rx="2" ry="2" />
<text  x="209.69" y="1279.5" >gazebo::physics::World::RunLoop</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,754,759 samples, 0.02%)</title><rect x="73.4" y="933" width="0.3" height="15.0" fill="rgb(221,151,46)" rx="2" ry="2" />
<text  x="76.45" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,076,686 samples, 0.02%)</title><rect x="339.4" y="885" width="0.2" height="15.0" fill="rgb(227,63,15)" rx="2" ry="2" />
<text  x="342.38" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,150,938 samples, 0.02%)</title><rect x="708.8" y="741" width="0.1" height="15.0" fill="rgb(236,99,38)" rx="2" ry="2" />
<text  x="711.75" y="751.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::set&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::clear_impl (5,725,481 samples, 0.02%)</title><rect x="63.7" y="1157" width="0.3" height="15.0" fill="rgb(236,118,30)" rx="2" ry="2" />
<text  x="66.69" y="1167.5" ></text>
</g>
<g >
<title>dxJointHinge::getInfo1 (2,457,342 samples, 0.01%)</title><rect x="782.9" y="965" width="0.1" height="15.0" fill="rgb(217,197,53)" rx="2" ry="2" />
<text  x="785.93" y="975.5" ></text>
</g>
<g >
<title>ipt_do_table (8,190,749 samples, 0.03%)</title><rect x="886.6" y="821" width="0.4" height="15.0" fill="rgb(233,55,48)" rx="2" ry="2" />
<text  x="889.57" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,829,113 samples, 0.20%)</title><rect x="1169.4" y="1269" width="2.4" height="15.0" fill="rgb(216,221,21)" rx="2" ry="2" />
<text  x="1172.43" y="1279.5" ></text>
</g>
<g >
<title>sCylinderBoxData::_cldClipBoxToCylinder (6,019,252 samples, 0.02%)</title><rect x="251.2" y="965" width="0.3" height="15.0" fill="rgb(224,227,42)" rx="2" ry="2" />
<text  x="254.24" y="975.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_deallocate (3,951,241 samples, 0.02%)</title><rect x="588.8" y="709" width="0.2" height="15.0" fill="rgb(244,226,21)" rx="2" ry="2" />
<text  x="591.81" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_S_right (2,188,687 samples, 0.01%)</title><rect x="545.7" y="709" width="0.1" height="15.0" fill="rgb(223,6,26)" rx="2" ry="2" />
<text  x="548.74" y="719.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (3,959,860 samples, 0.02%)</title><rect x="528.4" y="757" width="0.1" height="15.0" fill="rgb(233,23,23)" rx="2" ry="2" />
<text  x="531.36" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,245,627 samples, 0.02%)</title><rect x="615.6" y="917" width="0.3" height="15.0" fill="rgb(216,51,11)" rx="2" ry="2" />
<text  x="618.62" y="927.5" ></text>
</g>
<g >
<title>dxQuickStepper (104,334,220 samples, 0.41%)</title><rect x="782.7" y="981" width="4.8" height="15.0" fill="rgb(210,185,33)" rx="2" ry="2" />
<text  x="785.67" y="991.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (5,078,644 samples, 0.02%)</title><rect x="828.0" y="1077" width="0.3" height="15.0" fill="rgb(240,190,0)" rx="2" ry="2" />
<text  x="831.03" y="1087.5" ></text>
</g>
<g >
<title>_dSetZero (3,921,366 samples, 0.02%)</title><rect x="256.9" y="949" width="0.2" height="15.0" fill="rgb(235,170,51)" rx="2" ry="2" />
<text  x="259.92" y="959.5" ></text>
</g>
<g >
<title>__sqrt (2,172,131 samples, 0.01%)</title><rect x="253.7" y="933" width="0.1" height="15.0" fill="rgb(251,43,47)" rx="2" ry="2" />
<text  x="256.71" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37,935,199 samples, 0.15%)</title><rect x="55.9" y="453" width="1.8" height="15.0" fill="rgb(249,163,46)" rx="2" ry="2" />
<text  x="58.88" y="463.5" ></text>
</g>
<g >
<title>gazebo::physics::Model::WorldLinearVel (45,768,613 samples, 0.18%)</title><rect x="685.8" y="901" width="2.1" height="15.0" fill="rgb(225,57,27)" rx="2" ry="2" />
<text  x="688.81" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1093" width="0.4" height="15.0" fill="rgb(239,106,53)" rx="2" ry="2" />
<text  x="1181.27" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (52,046,132 samples, 0.21%)</title><rect x="576.1" y="629" width="2.4" height="15.0" fill="rgb(232,17,35)" rx="2" ry="2" />
<text  x="579.12" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="1125" width="0.1" height="15.0" fill="rgb(209,1,19)" rx="2" ry="2" />
<text  x="848.06" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,377,139 samples, 0.03%)</title><rect x="214.4" y="901" width="0.3" height="15.0" fill="rgb(251,58,23)" rx="2" ry="2" />
<text  x="217.43" y="911.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Vector3 (8,380,776 samples, 0.03%)</title><rect x="30.0" y="1093" width="0.4" height="15.0" fill="rgb(237,36,19)" rx="2" ry="2" />
<text  x="33.00" y="1103.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (2,383,998 samples, 0.01%)</title><rect x="826.8" y="965" width="0.1" height="15.0" fill="rgb(253,112,34)" rx="2" ry="2" />
<text  x="829.80" y="975.5" ></text>
</g>
<g >
<title>gazebo::msgs::Set (6,147,192 samples, 0.02%)</title><rect x="718.9" y="917" width="0.3" height="15.0" fill="rgb(234,41,52)" rx="2" ry="2" />
<text  x="721.90" y="927.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;gazebo::msgs::Any  (4,442,749 samples, 0.02%)</title><rect x="743.1" y="1029" width="0.2" height="15.0" fill="rgb(209,95,18)" rx="2" ry="2" />
<text  x="746.13" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, int&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::_M_get_node (7,618,899 samples, 0.03%)</title><rect x="85.6" y="1093" width="0.4" height="15.0" fill="rgb(216,19,15)" rx="2" ry="2" />
<text  x="88.64" y="1103.5" ></text>
</g>
<g >
<title>dxTriMesh::computeAABB (4,073,042 samples, 0.02%)</title><rect x="244.1" y="949" width="0.2" height="15.0" fill="rgb(231,7,39)" rx="2" ry="2" />
<text  x="247.10" y="959.5" ></text>
</g>
<g >
<title>[[uprobes]] (52,073,351 samples, 0.21%)</title><rect x="777.7" y="933" width="2.4" height="15.0" fill="rgb(223,49,23)" rx="2" ry="2" />
<text  x="780.71" y="943.5" ></text>
</g>
<g >
<title>[libgazebo_ros_factory.so] (2,210,853 samples, 0.01%)</title><rect x="673.3" y="805" width="0.1" height="15.0" fill="rgb(245,72,47)" rx="2" ry="2" />
<text  x="676.35" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,421,589 samples, 0.10%)</title><rect x="56.3" y="341" width="1.2" height="15.0" fill="rgb(206,179,30)" rx="2" ry="2" />
<text  x="59.27" y="351.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (12,204,091 samples, 0.05%)</title><rect x="770.4" y="933" width="0.5" height="15.0" fill="rgb(231,64,22)" rx="2" ry="2" />
<text  x="773.38" y="943.5" ></text>
</g>
<g >
<title>dMultiply0_331 (4,321,963 samples, 0.02%)</title><rect x="273.6" y="949" width="0.2" height="15.0" fill="rgb(242,79,21)" rx="2" ry="2" />
<text  x="276.55" y="959.5" ></text>
</g>
<g >
<title>dxJointContact::getInfo1 (2,207,405 samples, 0.01%)</title><rect x="262.5" y="981" width="0.1" height="15.0" fill="rgb(246,32,7)" rx="2" ry="2" />
<text  x="265.49" y="991.5" ></text>
</g>
<g >
<title>[libgazebo_ros_ray_sensor.so] (3,946,163 samples, 0.02%)</title><rect x="73.3" y="917" width="0.1" height="15.0" fill="rgb(221,70,40)" rx="2" ry="2" />
<text  x="76.27" y="927.5" ></text>
</g>
<g >
<title>rclcpp::Subscription&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt;, rclcpp::message_memory_strategy::MessageMemoryStrategy&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;::create_message (12,939,044 samples, 0.05%)</title><rect x="794.7" y="1045" width="0.6" height="15.0" fill="rgb(227,112,44)" rx="2" ry="2" />
<text  x="797.74" y="1055.5" ></text>
</g>
<g >
<title>ddsrt_fibheap_extract_min (6,304,338 samples, 0.02%)</title><rect x="1184.4" y="1285" width="0.3" height="15.0" fill="rgb(236,193,19)" rx="2" ry="2" />
<text  x="1187.39" y="1295.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (554,651,533 samples, 2.19%)</title><rect x="793.5" y="1141" width="25.8" height="15.0" fill="rgb(216,69,36)" rx="2" ry="2" />
<text  x="796.52" y="1151.5" >s..</text>
</g>
<g >
<title>BuildIslandsAndEstimateStepperMemoryRequirements (39,900,437 samples, 0.16%)</title><rect x="449.8" y="997" width="1.9" height="15.0" fill="rgb(248,56,32)" rx="2" ry="2" />
<text  x="452.81" y="1007.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategy::MemoryStrategy::get_subscription_by_handle (26,213,560 samples, 0.10%)</title><rect x="803.0" y="1029" width="1.2" height="15.0" fill="rgb(245,78,35)" rx="2" ry="2" />
<text  x="805.97" y="1039.5" ></text>
</g>
<g >
<title>Opcode::Model::~Model (7,594,639 samples, 0.03%)</title><rect x="117.4" y="1285" width="0.4" height="15.0" fill="rgb(244,23,35)" rx="2" ry="2" />
<text  x="120.42" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;gazebo::msgs::Wrench const*, std::vector&lt;gazebo::msgs::Wrench, std::allocator&lt;gazebo::msgs::Wrench&gt; &gt; &gt;::__normal_iterator (5,960,710 samples, 0.02%)</title><rect x="640.6" y="885" width="0.3" height="15.0" fill="rgb(230,96,22)" rx="2" ry="2" />
<text  x="643.58" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,793,254 samples, 0.03%)</title><rect x="185.9" y="965" width="0.4" height="15.0" fill="rgb(241,172,0)" rx="2" ry="2" />
<text  x="188.89" y="975.5" ></text>
</g>
<g >
<title>boost::unordered::unordered_set&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt;::emplace&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; const&amp;&gt; (3,236,320 samples, 0.01%)</title><rect x="32.2" y="1093" width="0.1" height="15.0" fill="rgb(254,204,44)" rx="2" ry="2" />
<text  x="35.16" y="1103.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;void  (12,516,779,584 samples, 49.40%)</title><rect x="206.7" y="1189" width="583.0" height="15.0" fill="rgb(226,156,3)" rx="2" ry="2" />
<text  x="209.69" y="1199.5" >std::__invoke&lt;std::_Bind&lt;void </text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::InertialPrivate, std::default_delete&lt;gazebo::physics::InertialPrivate&gt; &gt;::get (8,399,883 samples, 0.03%)</title><rect x="686.4" y="821" width="0.4" height="15.0" fill="rgb(228,117,27)" rx="2" ry="2" />
<text  x="689.36" y="831.5" ></text>
</g>
<g >
<title>gazebo::physics::MultiRayShape::GetSampleCount (29,056,842 samples, 0.11%)</title><rect x="44.5" y="1141" width="1.4" height="15.0" fill="rgb(206,160,40)" rx="2" ry="2" />
<text  x="47.55" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,520,509 samples, 0.04%)</title><rect x="619.1" y="821" width="0.4" height="15.0" fill="rgb(247,47,0)" rx="2" ry="2" />
<text  x="622.07" y="831.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (7,567,775 samples, 0.03%)</title><rect x="246.3" y="997" width="0.4" height="15.0" fill="rgb(218,200,2)" rx="2" ry="2" />
<text  x="249.30" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (201,558,302 samples, 0.80%)</title><rect x="176.9" y="1109" width="9.4" height="15.0" fill="rgb(220,49,34)" rx="2" ry="2" />
<text  x="179.90" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,878,910 samples, 0.06%)</title><rect x="830.3" y="1045" width="0.7" height="15.0" fill="rgb(252,50,42)" rx="2" ry="2" />
<text  x="833.29" y="1055.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, gazebo::physics::Link*, std::_Placeholder&lt;1&gt; &gt;::_M_head (6,346,628 samples, 0.03%)</title><rect x="725.3" y="933" width="0.3" height="15.0" fill="rgb(217,41,2)" rx="2" ry="2" />
<text  x="728.30" y="943.5" ></text>
</g>
<g >
<title>boost::dynamic_pointer_cast&lt;gazebo::physics::Link, gazebo::physics::Base&gt; (4,037,865 samples, 0.02%)</title><rect x="637.9" y="917" width="0.1" height="15.0" fill="rgb(211,53,8)" rx="2" ry="2" />
<text  x="640.86" y="927.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (7,677,951 samples, 0.03%)</title><rect x="768.7" y="933" width="0.4" height="15.0" fill="rgb(234,104,24)" rx="2" ry="2" />
<text  x="771.74" y="943.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (3,822,095 samples, 0.02%)</title><rect x="556.8" y="693" width="0.1" height="15.0" fill="rgb(230,112,12)" rx="2" ry="2" />
<text  x="559.76" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,624,031 samples, 0.01%)</title><rect x="22.7" y="869" width="0.2" height="15.0" fill="rgb(210,130,9)" rx="2" ry="2" />
<text  x="25.74" y="879.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (20,830,968 samples, 0.08%)</title><rect x="13.6" y="1013" width="0.9" height="15.0" fill="rgb(249,190,46)" rx="2" ry="2" />
<text  x="16.55" y="1023.5" ></text>
</g>
<g >
<title>std::allocator&lt;double&gt;::allocator (2,520,020 samples, 0.01%)</title><rect x="826.5" y="981" width="0.1" height="15.0" fill="rgb(218,83,51)" rx="2" ry="2" />
<text  x="829.50" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,156,643 samples, 0.01%)</title><rect x="689.4" y="837" width="0.1" height="15.0" fill="rgb(235,38,3)" rx="2" ry="2" />
<text  x="692.38" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator= (17,282,985 samples, 0.07%)</title><rect x="840.2" y="1109" width="0.8" height="15.0" fill="rgb(244,196,20)" rx="2" ry="2" />
<text  x="843.20" y="1119.5" ></text>
</g>
<g >
<title>boost::detail::function::basic_vtable1&lt;void, unsigned int&gt;::assign_to&lt;gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Publisher, unsigned int&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Publisher*&gt;, boost::arg&lt;1&gt; &gt; &gt;, gazebo::transport::Publisher&gt; &gt; (7,002,136 samples, 0.03%)</title><rect x="78.5" y="1077" width="0.3" height="15.0" fill="rgb(254,60,22)" rx="2" ry="2" />
<text  x="81.52" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,634,833 samples, 0.03%)</title><rect x="796.3" y="917" width="0.3" height="15.0" fill="rgb(229,222,17)" rx="2" ry="2" />
<text  x="799.26" y="927.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInternal (24,404,641 samples, 0.10%)</title><rect x="764.0" y="933" width="1.2" height="15.0" fill="rgb(224,169,36)" rx="2" ry="2" />
<text  x="767.03" y="943.5" ></text>
</g>
<g >
<title>boost::thread_detail::enter_once_region (3,615,937 samples, 0.01%)</title><rect x="18.8" y="1189" width="0.2" height="15.0" fill="rgb(232,104,19)" rx="2" ry="2" />
<text  x="21.82" y="1199.5" ></text>
</g>
<g >
<title>std::reference_wrapper&lt;hardware_interface::LoanedStateInterface&gt;::get (5,890,892 samples, 0.02%)</title><rect x="505.6" y="853" width="0.3" height="15.0" fill="rgb(248,82,29)" rx="2" ry="2" />
<text  x="508.63" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::World&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::World&gt; &gt; &gt;::begin (3,060,286 samples, 0.01%)</title><rect x="896.0" y="1237" width="0.2" height="15.0" fill="rgb(216,208,10)" rx="2" ry="2" />
<text  x="899.04" y="1247.5" ></text>
</g>
<g >
<title>gc (12,067,708 samples, 0.05%)</title><rect x="12.9" y="1317" width="0.6" height="15.0" fill="rgb(216,43,51)" rx="2" ry="2" />
<text  x="15.89" y="1327.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::~unique_lock (3,918,687 samples, 0.02%)</title><rect x="620.7" y="917" width="0.2" height="15.0" fill="rgb(237,186,43)" rx="2" ry="2" />
<text  x="623.69" y="927.5" ></text>
</g>
<g >
<title>boost::_bi::list1&lt;boost::_bi::value&lt;boost::asio::io_context*&gt; &gt;::operator (94,393,818 samples, 0.37%)</title><rect x="13.6" y="1253" width="4.3" height="15.0" fill="rgb(248,206,0)" rx="2" ry="2" />
<text  x="16.55" y="1263.5" ></text>
</g>
<g >
<title>getHingeAngleFromRelativeQuat (3,936,376 samples, 0.02%)</title><rect x="272.9" y="933" width="0.2" height="15.0" fill="rgb(212,53,25)" rx="2" ry="2" />
<text  x="275.88" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,597,363 samples, 0.01%)</title><rect x="86.1" y="949" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="89.09" y="959.5" ></text>
</g>
<g >
<title>clock_nanosleep@@GLIBC_2.17 (4,793,233,711 samples, 18.92%)</title><rect x="931.9" y="1301" width="223.2" height="15.0" fill="rgb(221,17,43)" rx="2" ry="2" />
<text  x="934.90" y="1311.5" >clock_nanosleep@@GLIBC_2.17</text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::TimerBase,  (8,911,916 samples, 0.04%)</title><rect x="190.5" y="1061" width="0.4" height="15.0" fill="rgb(244,124,38)" rx="2" ry="2" />
<text  x="193.48" y="1071.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (8,484,255 samples, 0.03%)</title><rect x="694.9" y="885" width="0.4" height="15.0" fill="rgb(209,46,22)" rx="2" ry="2" />
<text  x="697.90" y="895.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (32,307,525 samples, 0.13%)</title><rect x="652.0" y="885" width="1.5" height="15.0" fill="rgb(242,77,19)" rx="2" ry="2" />
<text  x="654.97" y="895.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (6,396,551 samples, 0.03%)</title><rect x="142.1" y="1269" width="0.3" height="15.0" fill="rgb(211,11,30)" rx="2" ry="2" />
<text  x="145.10" y="1279.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt;*, std::default_delete&lt;realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt; (8,334,378 samples, 0.03%)</title><rect x="505.1" y="821" width="0.3" height="15.0" fill="rgb(212,130,28)" rx="2" ry="2" />
<text  x="508.06" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,878,910 samples, 0.06%)</title><rect x="830.3" y="1093" width="0.7" height="15.0" fill="rgb(223,146,4)" rx="2" ry="2" />
<text  x="833.29" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,318,465 samples, 0.02%)</title><rect x="457.9" y="965" width="0.2" height="15.0" fill="rgb(212,25,48)" rx="2" ry="2" />
<text  x="460.86" y="975.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (23,246,154 samples, 0.09%)</title><rect x="870.1" y="1301" width="1.1" height="15.0" fill="rgb(233,139,15)" rx="2" ry="2" />
<text  x="873.07" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (101,600,988 samples, 0.40%)</title><rect x="573.8" y="693" width="4.7" height="15.0" fill="rgb(231,190,26)" rx="2" ry="2" />
<text  x="576.81" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,896,208 samples, 0.11%)</title><rect x="916.4" y="1061" width="1.3" height="15.0" fill="rgb(240,49,32)" rx="2" ry="2" />
<text  x="919.39" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,739,345,561 samples, 18.71%)</title><rect x="934.4" y="1285" width="220.7" height="15.0" fill="rgb(245,167,52)" rx="2" ry="2" />
<text  x="937.41" y="1295.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (78,784,650 samples, 0.31%)</title><rect x="1185.6" y="1077" width="3.7" height="15.0" fill="rgb(209,2,9)" rx="2" ry="2" />
<text  x="1188.62" y="1087.5" ></text>
</g>
<g >
<title>operator new (4,096,832 samples, 0.02%)</title><rect x="857.1" y="1029" width="0.2" height="15.0" fill="rgb(209,4,12)" rx="2" ry="2" />
<text  x="860.11" y="1039.5" ></text>
</g>
<g >
<title>gazebo::msgs::Set (50,486,405 samples, 0.20%)</title><rect x="758.0" y="1045" width="2.3" height="15.0" fill="rgb(250,216,2)" rx="2" ry="2" />
<text  x="760.99" y="1055.5" ></text>
</g>
<g >
<title>gazebo::physics::World::PublishModelPose (27,918,419 samples, 0.11%)</title><rect x="220.5" y="1013" width="1.3" height="15.0" fill="rgb(238,164,17)" rx="2" ry="2" />
<text  x="223.48" y="1023.5" ></text>
</g>
<g >
<title>[librclcpp.so] (6,217,256 samples, 0.02%)</title><rect x="811.7" y="917" width="0.3" height="15.0" fill="rgb(218,225,51)" rx="2" ry="2" />
<text  x="814.69" y="927.5" ></text>
</g>
<g >
<title>[libgazebo_sensors.so.11.10.1] (2,361,518 samples, 0.01%)</title><rect x="621.0" y="901" width="0.2" height="15.0" fill="rgb(208,93,11)" rx="2" ry="2" />
<text  x="624.04" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rclcpp::Waitable&gt;, std::allocator&lt;std::shared_ptr&lt;rclcpp::Waitable&gt; &gt; &gt;::erase (5,995,416 samples, 0.02%)</title><rect x="202.3" y="1061" width="0.3" height="15.0" fill="rgb(240,158,27)" rx="2" ry="2" />
<text  x="205.33" y="1071.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator- (4,208,630 samples, 0.02%)</title><rect x="684.6" y="869" width="0.2" height="15.0" fill="rgb(230,41,13)" rx="2" ry="2" />
<text  x="687.57" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (8,069,732 samples, 0.03%)</title><rect x="794.2" y="741" width="0.3" height="15.0" fill="rgb(247,157,9)" rx="2" ry="2" />
<text  x="797.16" y="751.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (73,683,035 samples, 0.29%)</title><rect x="195.8" y="1077" width="3.4" height="15.0" fill="rgb(221,181,29)" rx="2" ry="2" />
<text  x="198.76" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,762,010 samples, 0.02%)</title><rect x="72.1" y="1109" width="0.2" height="15.0" fill="rgb(220,46,12)" rx="2" ry="2" />
<text  x="75.06" y="1119.5" ></text>
</g>
<g >
<title>ddsi_tkmap_instance_unref (3,126,781 samples, 0.01%)</title><rect x="138.0" y="1253" width="0.2" height="15.0" fill="rgb(209,18,42)" rx="2" ry="2" />
<text  x="141.01" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,816,086 samples, 0.02%)</title><rect x="43.4" y="997" width="0.3" height="15.0" fill="rgb(233,122,19)" rx="2" ry="2" />
<text  x="46.39" y="1007.5" ></text>
</g>
<g >
<title>gazebo::physics::World::ProcessLightFactoryMsgs (2,170,625 samples, 0.01%)</title><rect x="763.0" y="1045" width="0.1" height="15.0" fill="rgb(218,77,2)" rx="2" ry="2" />
<text  x="766.03" y="1055.5" ></text>
</g>
<g >
<title>[[uprobes]] (12,319,197 samples, 0.05%)</title><rect x="690.7" y="885" width="0.6" height="15.0" fill="rgb(216,174,0)" rx="2" ry="2" />
<text  x="693.73" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,952,087 samples, 0.02%)</title><rect x="487.2" y="885" width="0.2" height="15.0" fill="rgb(251,203,45)" rx="2" ry="2" />
<text  x="490.20" y="895.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (26,065,827 samples, 0.10%)</title><rect x="796.0" y="1029" width="1.2" height="15.0" fill="rgb(226,181,34)" rx="2" ry="2" />
<text  x="799.01" y="1039.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo_plugins::GazeboRosVacuumGripperPrivate*, std::_Placeholder&lt;1&gt; &gt; (4,205,925 samples, 0.02%)</title><rect x="726.2" y="933" width="0.2" height="15.0" fill="rgb(228,144,25)" rx="2" ry="2" />
<text  x="729.17" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,947,411 samples, 0.02%)</title><rect x="1164.9" y="1285" width="0.2" height="15.0" fill="rgb(234,91,22)" rx="2" ry="2" />
<text  x="1167.92" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;::push_back (4,106,431 samples, 0.02%)</title><rect x="216.4" y="997" width="0.1" height="15.0" fill="rgb(234,99,50)" rx="2" ry="2" />
<text  x="219.36" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,282,220 samples, 0.03%)</title><rect x="618.1" y="869" width="0.3" height="15.0" fill="rgb(218,99,53)" rx="2" ry="2" />
<text  x="621.05" y="879.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (2,173,576 samples, 0.01%)</title><rect x="226.0" y="949" width="0.1" height="15.0" fill="rgb(228,20,9)" rx="2" ry="2" />
<text  x="229.01" y="959.5" ></text>
</g>
<g >
<title>std::pair&lt;ignition::math::v6::Vector3&lt;double&gt;, bool&gt;::pair&lt;bool, true&gt; (8,380,776 samples, 0.03%)</title><rect x="30.0" y="1109" width="0.4" height="15.0" fill="rgb(245,196,12)" rx="2" ry="2" />
<text  x="33.00" y="1119.5" ></text>
</g>
<g >
<title>[libgazebo_ros_vacuum_gripper.so] (7,596,968 samples, 0.03%)</title><rect x="649.6" y="901" width="0.3" height="15.0" fill="rgb(225,228,54)" rx="2" ry="2" />
<text  x="652.55" y="911.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::CreateMaybeMessage&lt;gazebo::msgs::Quaternion&gt; (14,758,478 samples, 0.06%)</title><rect x="758.3" y="1013" width="0.7" height="15.0" fill="rgb(219,21,23)" rx="2" ry="2" />
<text  x="761.30" y="1023.5" ></text>
</g>
<g >
<title>clock_nanosleep@@GLIBC_2.17 (7,275,174 samples, 0.03%)</title><rect x="205.6" y="1061" width="0.3" height="15.0" fill="rgb(230,168,17)" rx="2" ry="2" />
<text  x="208.60" y="1071.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*&gt; (3,998,700 samples, 0.02%)</title><rect x="677.2" y="853" width="0.2" height="15.0" fill="rgb(249,122,41)" rx="2" ry="2" />
<text  x="680.20" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1253" width="0.4" height="15.0" fill="rgb(217,120,8)" rx="2" ry="2" />
<text  x="1181.27" y="1263.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (36,440,171 samples, 0.14%)</title><rect x="487.5" y="1013" width="1.7" height="15.0" fill="rgb(224,71,13)" rx="2" ry="2" />
<text  x="490.48" y="1023.5" ></text>
</g>
<g >
<title>gazebo::transport::Publication::Publish (52,240,926 samples, 0.21%)</title><rect x="79.3" y="1141" width="2.5" height="15.0" fill="rgb(218,201,1)" rx="2" ry="2" />
<text  x="82.33" y="1151.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*&gt; (8,131,691 samples, 0.03%)</title><rect x="610.4" y="773" width="0.3" height="15.0" fill="rgb(224,141,43)" rx="2" ry="2" />
<text  x="613.36" y="783.5" ></text>
</g>
<g >
<title>[libgazebo_transport.so.11.10.1] (5,623,437 samples, 0.02%)</title><rect x="898.2" y="1205" width="0.3" height="15.0" fill="rgb(249,28,38)" rx="2" ry="2" />
<text  x="901.21" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,705,525 samples, 0.07%)</title><rect x="1173.4" y="1045" width="0.7" height="15.0" fill="rgb(238,132,27)" rx="2" ry="2" />
<text  x="1176.36" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,143,840 samples, 0.05%)</title><rect x="871.4" y="1237" width="0.6" height="15.0" fill="rgb(206,191,43)" rx="2" ry="2" />
<text  x="874.45" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,312,958 samples, 0.06%)</title><rect x="379.6" y="821" width="0.8" height="15.0" fill="rgb(221,105,26)" rx="2" ry="2" />
<text  x="382.61" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4,385,232 samples, 0.02%)</title><rect x="46.9" y="1189" width="0.2" height="15.0" fill="rgb(219,71,13)" rx="2" ry="2" />
<text  x="49.88" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,575,197 samples, 0.01%)</title><rect x="776.5" y="853" width="0.2" height="15.0" fill="rgb(218,171,24)" rx="2" ry="2" />
<text  x="779.54" y="863.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (12,064,126 samples, 0.05%)</title><rect x="683.6" y="805" width="0.6" height="15.0" fill="rgb(216,197,7)" rx="2" ry="2" />
<text  x="686.62" y="815.5" ></text>
</g>
<g >
<title>__nanosleep (6,839,222 samples, 0.03%)</title><rect x="851.2" y="1141" width="0.4" height="15.0" fill="rgb(220,130,52)" rx="2" ry="2" />
<text  x="854.24" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (343,095,291 samples, 1.35%)</title><rect x="873.3" y="1173" width="15.9" height="15.0" fill="rgb(254,41,1)" rx="2" ry="2" />
<text  x="876.27" y="1183.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (11,474,616 samples, 0.05%)</title><rect x="187.3" y="997" width="0.5" height="15.0" fill="rgb(227,69,22)" rx="2" ry="2" />
<text  x="190.28" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,179,357 samples, 0.02%)</title><rect x="889.2" y="1157" width="0.3" height="15.0" fill="rgb(253,225,39)" rx="2" ry="2" />
<text  x="892.25" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21,162,786 samples, 0.08%)</title><rect x="618.5" y="901" width="1.0" height="15.0" fill="rgb(251,108,33)" rx="2" ry="2" />
<text  x="621.53" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,150,199 samples, 0.01%)</title><rect x="13.5" y="1205" width="0.1" height="15.0" fill="rgb(242,82,13)" rx="2" ry="2" />
<text  x="16.45" y="1215.5" ></text>
</g>
<g >
<title>take_and_do_error_handling (12,564,770 samples, 0.05%)</title><rect x="794.2" y="1045" width="0.5" height="15.0" fill="rgb(239,78,17)" rx="2" ry="2" />
<text  x="797.16" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,762,010 samples, 0.02%)</title><rect x="72.1" y="1013" width="0.2" height="15.0" fill="rgb(208,68,25)" rx="2" ry="2" />
<text  x="75.06" y="1023.5" ></text>
</g>
<g >
<title>operator delete (2,311,038 samples, 0.01%)</title><rect x="744.7" y="981" width="0.1" height="15.0" fill="rgb(235,82,49)" rx="2" ry="2" />
<text  x="747.65" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::~vector (4,439,832 samples, 0.02%)</title><rect x="857.4" y="1125" width="0.2" height="15.0" fill="rgb(214,196,43)" rx="2" ry="2" />
<text  x="860.35" y="1135.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator+ (2,745,270 samples, 0.01%)</title><rect x="777.2" y="789" width="0.1" height="15.0" fill="rgb(235,4,40)" rx="2" ry="2" />
<text  x="780.22" y="799.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;decltype (5,350,596 samples, 0.02%)</title><rect x="816.3" y="1013" width="0.2" height="15.0" fill="rgb(231,224,3)" rx="2" ry="2" />
<text  x="819.30" y="1023.5" ></text>
</g>
<g >
<title>gazebo_plugins::GazeboRosVacuumGripperPrivate::OnUpdate (29,501,196 samples, 0.12%)</title><rect x="707.6" y="933" width="1.3" height="15.0" fill="rgb(205,22,36)" rx="2" ry="2" />
<text  x="710.57" y="943.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (4,208,630 samples, 0.02%)</title><rect x="684.6" y="853" width="0.2" height="15.0" fill="rgb(210,203,6)" rx="2" ry="2" />
<text  x="687.57" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,152,963 samples, 0.06%)</title><rect x="116.7" y="1093" width="0.7" height="15.0" fill="rgb(253,194,43)" rx="2" ry="2" />
<text  x="119.71" y="1103.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InitSCC (3,796,756 samples, 0.01%)</title><rect x="758.8" y="965" width="0.2" height="15.0" fill="rgb(250,147,45)" rx="2" ry="2" />
<text  x="761.81" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,172,459 samples, 0.01%)</title><rect x="690.6" y="869" width="0.1" height="15.0" fill="rgb(251,40,20)" rx="2" ry="2" />
<text  x="693.63" y="879.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, gazebo_plugins::GazeboRosVacuumGripperPrivate*, std::_Placeholder&lt;1&gt; &gt;::_M_head (3,901,476 samples, 0.02%)</title><rect x="726.0" y="933" width="0.2" height="15.0" fill="rgb(211,25,33)" rx="2" ry="2" />
<text  x="728.99" y="943.5" ></text>
</g>
<g >
<title>dxSpace::computeAABB (18,591,483 samples, 0.07%)</title><rect x="38.1" y="1077" width="0.9" height="15.0" fill="rgb(214,219,52)" rx="2" ry="2" />
<text  x="41.13" y="1087.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo::physics::LinkPrivate*, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt; (2,363,247 samples, 0.01%)</title><rect x="723.7" y="837" width="0.1" height="15.0" fill="rgb(248,116,35)" rx="2" ry="2" />
<text  x="726.72" y="847.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;controller_interface::ControllerInterface,  (4,135,669 samples, 0.02%)</title><rect x="523.4" y="901" width="0.2" height="15.0" fill="rgb(210,52,34)" rx="2" ry="2" />
<text  x="526.42" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (5,298,369 samples, 0.02%)</title><rect x="45.7" y="1125" width="0.2" height="15.0" fill="rgb(237,58,1)" rx="2" ry="2" />
<text  x="48.66" y="1135.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::CollisionCallback (25,852,236 samples, 0.10%)</title><rect x="238.9" y="901" width="1.2" height="15.0" fill="rgb(244,32,18)" rx="2" ry="2" />
<text  x="241.85" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (57,900,269 samples, 0.23%)</title><rect x="632.4" y="901" width="2.7" height="15.0" fill="rgb(245,140,19)" rx="2" ry="2" />
<text  x="635.37" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,350,425 samples, 0.03%)</title><rect x="707.0" y="869" width="0.3" height="15.0" fill="rgb(207,210,51)" rx="2" ry="2" />
<text  x="710.00" y="879.5" ></text>
</g>
<g >
<title>[libgazebo_common.so.11.10.1] (3,625,435 samples, 0.01%)</title><rect x="841.1" y="1109" width="0.1" height="15.0" fill="rgb(205,158,30)" rx="2" ry="2" />
<text  x="844.08" y="1119.5" ></text>
</g>
<g >
<title>[libgazebo.so.11.10.1] (5,925,992 samples, 0.02%)</title><rect x="890.6" y="1253" width="0.2" height="15.0" fill="rgb(232,13,44)" rx="2" ry="2" />
<text  x="893.55" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,958,587 samples, 0.02%)</title><rect x="851.4" y="1061" width="0.2" height="15.0" fill="rgb(206,84,31)" rx="2" ry="2" />
<text  x="854.38" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1013" width="0.1" height="15.0" fill="rgb(206,10,6)" rx="2" ry="2" />
<text  x="135.18" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,280,761 samples, 0.02%)</title><rect x="207.1" y="1013" width="0.2" height="15.0" fill="rgb(235,11,19)" rx="2" ry="2" />
<text  x="210.06" y="1023.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::sensors::RaySensorPrivate, std::default_delete&lt;gazebo::sensors::RaySensorPrivate&gt; &gt;::get (3,941,521 samples, 0.02%)</title><rect x="46.2" y="1125" width="0.1" height="15.0" fill="rgb(216,45,38)" rx="2" ry="2" />
<text  x="49.15" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,179,357 samples, 0.02%)</title><rect x="889.2" y="1285" width="0.3" height="15.0" fill="rgb(244,122,32)" rx="2" ry="2" />
<text  x="892.25" y="1295.5" ></text>
</g>
<g >
<title>[libgazebo_util.so.11.10.1] (4,279,581 samples, 0.02%)</title><rect x="623.4" y="965" width="0.2" height="15.0" fill="rgb(218,134,37)" rx="2" ry="2" />
<text  x="626.38" y="975.5" ></text>
</g>
<g >
<title>gazebo::transport::Node::HandleMessage (10,659,712 samples, 0.04%)</title><rect x="80.1" y="1125" width="0.5" height="15.0" fill="rgb(212,79,22)" rx="2" ry="2" />
<text  x="83.13" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::size (4,400,762 samples, 0.02%)</title><rect x="771.1" y="1029" width="0.2" height="15.0" fill="rgb(229,154,54)" rx="2" ry="2" />
<text  x="774.05" y="1039.5" ></text>
</g>
<g >
<title>dxGeom::recomputeAABB (18,591,483 samples, 0.07%)</title><rect x="38.1" y="1093" width="0.9" height="15.0" fill="rgb(208,88,32)" rx="2" ry="2" />
<text  x="41.13" y="1103.5" ></text>
</g>
<g >
<title>[[uprobes]] (29,455,561 samples, 0.12%)</title><rect x="635.1" y="917" width="1.3" height="15.0" fill="rgb(229,229,13)" rx="2" ry="2" />
<text  x="638.07" y="927.5" ></text>
</g>
<g >
<title>dCopyVector3 (3,872,077 samples, 0.02%)</title><rect x="255.0" y="949" width="0.2" height="15.0" fill="rgb(248,101,46)" rx="2" ry="2" />
<text  x="257.98" y="959.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::SurfaceParams&gt;::shared_ptr (37,426,912 samples, 0.15%)</title><rect x="257.5" y="997" width="1.7" height="15.0" fill="rgb(214,190,0)" rx="2" ry="2" />
<text  x="260.46" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,646 samples, 0.01%)</title><rect x="724.0" y="853" width="0.1" height="15.0" fill="rgb(242,93,16)" rx="2" ry="2" />
<text  x="727.02" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,624,031 samples, 0.01%)</title><rect x="22.7" y="933" width="0.2" height="15.0" fill="rgb(216,43,26)" rx="2" ry="2" />
<text  x="25.74" y="943.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::operator (4,008,173 samples, 0.02%)</title><rect x="745.3" y="1061" width="0.2" height="15.0" fill="rgb(213,173,23)" rx="2" ry="2" />
<text  x="748.34" y="1071.5" ></text>
</g>
<g >
<title>gazebo::transport::Publication::GetCallbackCount (7,807,129 samples, 0.03%)</title><rect x="239.5" y="853" width="0.4" height="15.0" fill="rgb(214,204,34)" rx="2" ry="2" />
<text  x="242.50" y="863.5" ></text>
</g>
<g >
<title>boost::detail::variant::visitation_impl_invoke&lt;boost::detail::variant::invoke_visitor&lt;boost::detail::variant::get_visitor&lt;std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt; &gt;, false&gt;, void*, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, boost::variant&lt;std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::LaserScan_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::PointCloud_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::PointCloud2_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;, std::shared_ptr&lt;rclcpp::Publisher&lt;sensor_msgs::msg::Range_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt; &gt;::has_fallback_type_&gt; (3,946,163 samples, 0.02%)</title><rect x="73.3" y="965" width="0.1" height="15.0" fill="rgb(208,43,46)" rx="2" ry="2" />
<text  x="76.27" y="975.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::SetWorldPoseCanonicalLink (99,106,788 samples, 0.39%)</title><rect x="221.8" y="1029" width="4.6" height="15.0" fill="rgb(232,19,50)" rx="2" ry="2" />
<text  x="224.78" y="1039.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::InertialPrivate, std::default_delete&lt;gazebo::physics::InertialPrivate&gt; &gt;::_M_ptr (8,399,883 samples, 0.03%)</title><rect x="686.4" y="805" width="0.4" height="15.0" fill="rgb(243,151,10)" rx="2" ry="2" />
<text  x="689.36" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (34,290,963 samples, 0.14%)</title><rect x="56.1" y="389" width="1.6" height="15.0" fill="rgb(232,189,31)" rx="2" ry="2" />
<text  x="59.05" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,693,477 samples, 0.09%)</title><rect x="456.6" y="933" width="1.1" height="15.0" fill="rgb(217,129,4)" rx="2" ry="2" />
<text  x="459.63" y="943.5" ></text>
</g>
<g >
<title>trajectory_msgs::msg::JointTrajectoryPoint_&lt;std::allocator&lt;void&gt; &gt;::~JointTrajectoryPoint_ (5,377,327 samples, 0.02%)</title><rect x="841.1" y="1125" width="0.2" height="15.0" fill="rgb(232,48,17)" rx="2" ry="2" />
<text  x="844.08" y="1135.5" ></text>
</g>
<g >
<title>_dSetZero (3,738,883 samples, 0.01%)</title><rect x="782.7" y="965" width="0.1" height="15.0" fill="rgb(239,157,2)" rx="2" ry="2" />
<text  x="785.67" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,426,742 samples, 0.03%)</title><rect x="618.1" y="805" width="0.3" height="15.0" fill="rgb(229,24,52)" rx="2" ry="2" />
<text  x="621.14" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26,718,216 samples, 0.11%)</title><rect x="633.8" y="853" width="1.3" height="15.0" fill="rgb(222,95,12)" rx="2" ry="2" />
<text  x="636.82" y="863.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2,894,351 samples, 0.01%)</title><rect x="840.0" y="1061" width="0.1" height="15.0" fill="rgb(248,142,35)" rx="2" ry="2" />
<text  x="842.96" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,759,600 samples, 0.03%)</title><rect x="796.9" y="917" width="0.3" height="15.0" fill="rgb(234,133,37)" rx="2" ry="2" />
<text  x="799.86" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,446 samples, 0.01%)</title><rect x="681.0" y="709" width="0.1" height="15.0" fill="rgb(241,69,35)" rx="2" ry="2" />
<text  x="683.97" y="719.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (3,139,032 samples, 0.01%)</title><rect x="843.9" y="1141" width="0.1" height="15.0" fill="rgb(210,53,11)" rx="2" ry="2" />
<text  x="846.90" y="1151.5" ></text>
</g>
<g >
<title>gazebo_plugins::GazeboRosJointStatePublisherPrivate::OnUpdate (17,499,622 samples, 0.07%)</title><rect x="643.6" y="917" width="0.8" height="15.0" fill="rgb(248,129,2)" rx="2" ry="2" />
<text  x="646.62" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (221,260,663 samples, 0.87%)</title><rect x="176.0" y="1189" width="10.3" height="15.0" fill="rgb(238,147,45)" rx="2" ry="2" />
<text  x="178.98" y="1199.5" ></text>
</g>
<g >
<title>dShortestAngularDistance (12,089,935 samples, 0.05%)</title><rect x="271.7" y="933" width="0.5" height="15.0" fill="rgb(217,177,50)" rx="2" ry="2" />
<text  x="274.66" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,179,357 samples, 0.02%)</title><rect x="889.2" y="1109" width="0.3" height="15.0" fill="rgb(239,143,25)" rx="2" ry="2" />
<text  x="892.25" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (63,852,517 samples, 0.25%)</title><rect x="460.2" y="1029" width="3.0" height="15.0" fill="rgb(222,134,30)" rx="2" ry="2" />
<text  x="463.21" y="1039.5" ></text>
</g>
<g >
<title>dBodyGetRelPointVel (4,424,080 samples, 0.02%)</title><rect x="720.7" y="885" width="0.2" height="15.0" fill="rgb(213,58,24)" rx="2" ry="2" />
<text  x="723.69" y="895.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::operator (6,006,086 samples, 0.02%)</title><rect x="591.2" y="757" width="0.3" height="15.0" fill="rgb(211,11,21)" rx="2" ry="2" />
<text  x="594.19" y="767.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (4,288,538 samples, 0.02%)</title><rect x="542.1" y="725" width="0.2" height="15.0" fill="rgb(220,179,52)" rx="2" ry="2" />
<text  x="545.10" y="735.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (15,194,205 samples, 0.06%)</title><rect x="790.5" y="853" width="0.7" height="15.0" fill="rgb(246,144,7)" rx="2" ry="2" />
<text  x="793.48" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,592,164 samples, 0.04%)</title><rect x="851.9" y="1093" width="0.5" height="15.0" fill="rgb(235,169,47)" rx="2" ry="2" />
<text  x="854.95" y="1103.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (3,627,660 samples, 0.01%)</title><rect x="440.9" y="933" width="0.2" height="15.0" fill="rgb(233,70,28)" rx="2" ry="2" />
<text  x="443.92" y="943.5" ></text>
</g>
<g >
<title>boost::function1&lt;void, unsigned int&gt;::operator (13,929,078 samples, 0.05%)</title><rect x="13.7" y="885" width="0.7" height="15.0" fill="rgb(234,188,4)" rx="2" ry="2" />
<text  x="16.71" y="895.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;google::protobuf::Message&gt;::operator (4,852,904 samples, 0.02%)</title><rect x="30.4" y="1141" width="0.2" height="15.0" fill="rgb(233,89,48)" rx="2" ry="2" />
<text  x="33.39" y="1151.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (13,100,149 samples, 0.05%)</title><rect x="10.6" y="1285" width="0.7" height="15.0" fill="rgb(210,2,21)" rx="2" ry="2" />
<text  x="13.64" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,597,363 samples, 0.01%)</title><rect x="86.1" y="965" width="0.2" height="15.0" fill="rgb(252,136,26)" rx="2" ry="2" />
<text  x="89.09" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (46,015,110 samples, 0.18%)</title><rect x="602.5" y="677" width="2.2" height="15.0" fill="rgb(226,42,10)" rx="2" ry="2" />
<text  x="605.52" y="687.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::SetWorldPose (303,295,700 samples, 1.20%)</title><rect x="564.4" y="821" width="14.1" height="15.0" fill="rgb(245,166,31)" rx="2" ry="2" />
<text  x="567.42" y="831.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (3,128,536 samples, 0.01%)</title><rect x="781.0" y="949" width="0.2" height="15.0" fill="rgb(232,186,54)" rx="2" ry="2" />
<text  x="784.04" y="959.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;gazebo::msgs::Quaternion&gt; (6,656,115 samples, 0.03%)</title><rect x="162.8" y="1189" width="0.3" height="15.0" fill="rgb(240,200,14)" rx="2" ry="2" />
<text  x="165.82" y="1199.5" ></text>
</g>
<g >
<title>__vdso_clock_getres (10,631,829 samples, 0.04%)</title><rect x="918.9" y="1301" width="0.5" height="15.0" fill="rgb(217,98,46)" rx="2" ry="2" />
<text  x="921.95" y="1311.5" ></text>
</g>
<g >
<title>dClipPolyToPlane (6,019,252 samples, 0.02%)</title><rect x="251.2" y="949" width="0.3" height="15.0" fill="rgb(213,216,44)" rx="2" ry="2" />
<text  x="254.24" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,377,139 samples, 0.03%)</title><rect x="214.4" y="789" width="0.3" height="15.0" fill="rgb(226,100,53)" rx="2" ry="2" />
<text  x="217.43" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (23,038,048 samples, 0.09%)</title><rect x="618.4" y="933" width="1.1" height="15.0" fill="rgb(209,7,18)" rx="2" ry="2" />
<text  x="621.44" y="943.5" ></text>
</g>
<g >
<title>dxJointContact::dxJointContact (5,931,875 samples, 0.02%)</title><rect x="256.8" y="981" width="0.3" height="15.0" fill="rgb(222,205,25)" rx="2" ry="2" />
<text  x="259.83" y="991.5" ></text>
</g>
<g >
<title>boost::detail::atomic_decrement (2,171,526 samples, 0.01%)</title><rect x="591.0" y="709" width="0.1" height="15.0" fill="rgb(232,225,43)" rx="2" ry="2" />
<text  x="593.99" y="719.5" ></text>
</g>
<g >
<title>std::_Construct&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt; const&amp;&gt; (69,515,601 samples, 0.27%)</title><rect x="672.4" y="837" width="3.3" height="15.0" fill="rgb(254,213,18)" rx="2" ry="2" />
<text  x="675.44" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,740,333 samples, 0.09%)</title><rect x="477.3" y="853" width="1.1" height="15.0" fill="rgb(245,37,12)" rx="2" ry="2" />
<text  x="480.30" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (207,648,136 samples, 0.82%)</title><rect x="166.0" y="1269" width="9.7" height="15.0" fill="rgb(248,65,33)" rx="2" ry="2" />
<text  x="169.04" y="1279.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (11,474,616 samples, 0.05%)</title><rect x="187.3" y="1013" width="0.5" height="15.0" fill="rgb(221,82,23)" rx="2" ry="2" />
<text  x="190.28" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,411,266 samples, 0.01%)</title><rect x="830.2" y="917" width="0.1" height="15.0" fill="rgb(230,196,4)" rx="2" ry="2" />
<text  x="833.18" y="927.5" ></text>
</g>
<g >
<title>joint_trajectory_controller::JointTrajectoryController::read_state_from_hardware (11,758,660 samples, 0.05%)</title><rect x="505.4" y="869" width="0.6" height="15.0" fill="rgb(220,207,9)" rx="2" ry="2" />
<text  x="508.45" y="879.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::operator= (10,158,763 samples, 0.04%)</title><rect x="228.4" y="1013" width="0.4" height="15.0" fill="rgb(239,11,25)" rx="2" ry="2" />
<text  x="231.36" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;::_M_lower_bound (4,203,405 samples, 0.02%)</title><rect x="215.3" y="933" width="0.2" height="15.0" fill="rgb(232,94,40)" rx="2" ry="2" />
<text  x="218.31" y="943.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,017,392 samples, 0.03%)</title><rect x="790.9" y="773" width="0.3" height="15.0" fill="rgb(247,121,3)" rx="2" ry="2" />
<text  x="793.86" y="783.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (9,051,352 samples, 0.04%)</title><rect x="827.1" y="965" width="0.4" height="15.0" fill="rgb(233,134,53)" rx="2" ry="2" />
<text  x="830.10" y="975.5" ></text>
</g>
<g >
<title>gazebo::physics::World::ModelUpdateSingleLoop (100,673,333 samples, 0.40%)</title><rect x="737.6" y="1045" width="4.7" height="15.0" fill="rgb(233,89,27)" rx="2" ry="2" />
<text  x="740.60" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,498,585 samples, 0.02%)</title><rect x="830.0" y="1013" width="0.3" height="15.0" fill="rgb(212,200,21)" rx="2" ry="2" />
<text  x="833.03" y="1023.5" ></text>
</g>
<g >
<title>gazebo::common::Time::MSleep (39,680,037 samples, 0.16%)</title><rect x="892.8" y="1253" width="1.9" height="15.0" fill="rgb(240,92,21)" rx="2" ry="2" />
<text  x="895.82" y="1263.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::HasConnections (6,006,531 samples, 0.02%)</title><rect x="721.4" y="901" width="0.3" height="15.0" fill="rgb(233,78,9)" rx="2" ry="2" />
<text  x="724.38" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (5,298,369 samples, 0.02%)</title><rect x="45.7" y="1109" width="0.2" height="15.0" fill="rgb(207,24,12)" rx="2" ry="2" />
<text  x="48.66" y="1119.5" ></text>
</g>
<g >
<title>[libgazebo_common.so.11.10.1] (3,042,782 samples, 0.01%)</title><rect x="826.7" y="965" width="0.1" height="15.0" fill="rgb(224,71,51)" rx="2" ry="2" />
<text  x="829.66" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (207,648,136 samples, 0.82%)</title><rect x="166.0" y="1237" width="9.7" height="15.0" fill="rgb(240,39,42)" rx="2" ry="2" />
<text  x="169.04" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (83,118,030 samples, 0.33%)</title><rect x="600.8" y="725" width="3.9" height="15.0" fill="rgb(235,0,53)" rx="2" ry="2" />
<text  x="603.80" y="735.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::construct&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;, geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt; (3,971,085 samples, 0.02%)</title><rect x="693.5" y="789" width="0.2" height="15.0" fill="rgb(231,12,3)" rx="2" ry="2" />
<text  x="696.50" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,829,113 samples, 0.20%)</title><rect x="1169.4" y="1253" width="2.4" height="15.0" fill="rgb(210,158,0)" rx="2" ry="2" />
<text  x="1172.43" y="1263.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (5,078,644 samples, 0.02%)</title><rect x="828.0" y="1061" width="0.3" height="15.0" fill="rgb(234,168,6)" rx="2" ry="2" />
<text  x="831.03" y="1071.5" ></text>
</g>
<g >
<title>gazebo::physics::World::Models (34,846,184 samples, 0.14%)</title><rect x="653.8" y="901" width="1.7" height="15.0" fill="rgb(217,66,36)" rx="2" ry="2" />
<text  x="656.83" y="911.5" ></text>
</g>
<g >
<title>operator delete (2,231,383 samples, 0.01%)</title><rect x="621.5" y="933" width="0.2" height="15.0" fill="rgb(250,160,42)" rx="2" ry="2" />
<text  x="624.55" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,958,587 samples, 0.02%)</title><rect x="851.4" y="965" width="0.2" height="15.0" fill="rgb(221,9,6)" rx="2" ry="2" />
<text  x="854.38" y="975.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (2,623,097 samples, 0.01%)</title><rect x="780.4" y="933" width="0.1" height="15.0" fill="rgb(227,148,30)" rx="2" ry="2" />
<text  x="783.42" y="943.5" ></text>
</g>
<g >
<title>gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Publisher, unsigned int&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Publisher*&gt;, boost::arg&lt;1&gt; &gt; &gt;, gazebo::transport::Publisher&gt;::WeakBinder (7,002,136 samples, 0.03%)</title><rect x="78.5" y="1061" width="0.3" height="15.0" fill="rgb(228,226,18)" rx="2" ry="2" />
<text  x="81.52" y="1071.5" ></text>
</g>
<g >
<title>sCylinderBoxData::_cldTestSeparatingAxes (20,616,315 samples, 0.08%)</title><rect x="251.7" y="965" width="1.0" height="15.0" fill="rgb(217,111,26)" rx="2" ry="2" />
<text  x="254.70" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,286,132 samples, 0.02%)</title><rect x="927.7" y="1237" width="0.2" height="15.0" fill="rgb(225,185,14)" rx="2" ry="2" />
<text  x="930.67" y="1247.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::~shared_count (2,537,634 samples, 0.01%)</title><rect x="75.8" y="933" width="0.1" height="15.0" fill="rgb(245,137,17)" rx="2" ry="2" />
<text  x="78.76" y="943.5" ></text>
</g>
<g >
<title>gazebo::common::Time::operator- (3,278,943 samples, 0.01%)</title><rect x="788.8" y="997" width="0.2" height="15.0" fill="rgb(251,1,30)" rx="2" ry="2" />
<text  x="791.83" y="1007.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (4,130,287 samples, 0.02%)</title><rect x="543.8" y="693" width="0.2" height="15.0" fill="rgb(230,191,26)" rx="2" ry="2" />
<text  x="546.77" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, sdf::v9::ParamPrivate*, std::default_delete&lt;sdf::v9::ParamPrivate&gt; &gt; (6,729,605 samples, 0.03%)</title><rect x="45.3" y="981" width="0.4" height="15.0" fill="rgb(253,113,13)" rx="2" ry="2" />
<text  x="48.34" y="991.5" ></text>
</g>
<g >
<title>dds_entity_pin (2,794,965 samples, 0.01%)</title><rect x="138.8" y="1269" width="0.1" height="15.0" fill="rgb(212,154,23)" rx="2" ry="2" />
<text  x="141.79" y="1279.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;, geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; (8,167,522 samples, 0.03%)</title><rect x="693.4" y="805" width="0.4" height="15.0" fill="rgb(254,147,30)" rx="2" ry="2" />
<text  x="696.40" y="815.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (987,863,774 samples, 3.90%)</title><rect x="819.3" y="1221" width="46.1" height="15.0" fill="rgb(213,195,5)" rx="2" ry="2" />
<text  x="822.35" y="1231.5" >std:..</text>
</g>
<g >
<title>std::back_insert_iterator&lt;std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;::operator= (8,775,095 samples, 0.03%)</title><rect x="84.5" y="1077" width="0.4" height="15.0" fill="rgb(215,216,33)" rx="2" ry="2" />
<text  x="87.48" y="1087.5" ></text>
</g>
<g >
<title>[[uprobes]] (12,016,738 samples, 0.05%)</title><rect x="796.0" y="981" width="0.6" height="15.0" fill="rgb(240,30,33)" rx="2" ry="2" />
<text  x="799.01" y="991.5" ></text>
</g>
<g >
<title>[librcutils.so] (9,531,286 samples, 0.04%)</title><rect x="192.0" y="1077" width="0.4" height="15.0" fill="rgb(220,12,14)" rx="2" ry="2" />
<text  x="194.95" y="1087.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo::physics::LinkPrivate*, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt; (2,237,807 samples, 0.01%)</title><rect x="594.0" y="709" width="0.1" height="15.0" fill="rgb(213,155,36)" rx="2" ry="2" />
<text  x="597.03" y="719.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::GetParentModel (3,128,536 samples, 0.01%)</title><rect x="781.0" y="1013" width="0.2" height="15.0" fill="rgb(235,76,11)" rx="2" ry="2" />
<text  x="784.04" y="1023.5" ></text>
</g>
<g >
<title>__gthread_active_p (3,781,944 samples, 0.01%)</title><rect x="562.0" y="757" width="0.1" height="15.0" fill="rgb(232,190,45)" rx="2" ry="2" />
<text  x="564.96" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::size (2,982,987 samples, 0.01%)</title><rect x="87.8" y="1189" width="0.1" height="15.0" fill="rgb(239,84,5)" rx="2" ry="2" />
<text  x="90.75" y="1199.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (3,959,860 samples, 0.02%)</title><rect x="528.4" y="741" width="0.1" height="15.0" fill="rgb(244,136,29)" rx="2" ry="2" />
<text  x="531.36" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,111,231 samples, 0.20%)</title><rect x="1171.8" y="1285" width="2.3" height="15.0" fill="rgb(209,190,46)" rx="2" ry="2" />
<text  x="1174.80" y="1295.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (4,557,018 samples, 0.02%)</title><rect x="809.9" y="965" width="0.2" height="15.0" fill="rgb(243,139,10)" rx="2" ry="2" />
<text  x="812.89" y="975.5" ></text>
</g>
<g >
<title>boost::operator!=&lt;gazebo::physics::Inertial&gt; (3,848,886 samples, 0.02%)</title><rect x="443.0" y="917" width="0.1" height="15.0" fill="rgb(221,196,10)" rx="2" ry="2" />
<text  x="445.96" y="927.5" ></text>
</g>
<g >
<title>std::function&lt;void  (60,505,162 samples, 0.24%)</title><rect x="797.2" y="1029" width="2.8" height="15.0" fill="rgb(225,94,31)" rx="2" ry="2" />
<text  x="800.22" y="1039.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::~Quaternion (2,148,331 samples, 0.01%)</title><rect x="665.1" y="901" width="0.1" height="15.0" fill="rgb(248,94,15)" rx="2" ry="2" />
<text  x="668.14" y="911.5" ></text>
</g>
<g >
<title>gazebo::event::EventT&lt;void  (83,512,577 samples, 0.33%)</title><rect x="469.6" y="981" width="3.9" height="15.0" fill="rgb(207,121,6)" rx="2" ry="2" />
<text  x="472.63" y="991.5" ></text>
</g>
<g >
<title>gazebo::event::EventT&lt;void  (5,332,886,618 samples, 21.05%)</title><rect x="483.4" y="1045" width="248.4" height="15.0" fill="rgb(221,103,21)" rx="2" ry="2" />
<text  x="486.43" y="1055.5" >gazebo::event::EventT&lt;void </text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_List_impl::~_List_impl (6,340,348 samples, 0.03%)</title><rect x="84.2" y="1109" width="0.3" height="15.0" fill="rgb(252,173,40)" rx="2" ry="2" />
<text  x="87.19" y="1119.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (13,211,281,702 samples, 52.15%)</title><rect x="204.0" y="1285" width="615.3" height="15.0" fill="rgb(249,81,10)" rx="2" ry="2" />
<text  x="207.03" y="1295.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void </text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_Alloc_node::operator (6,339,691 samples, 0.03%)</title><rect x="546.8" y="709" width="0.3" height="15.0" fill="rgb(235,152,22)" rx="2" ry="2" />
<text  x="549.79" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,515,845 samples, 0.02%)</title><rect x="73.8" y="1013" width="0.2" height="15.0" fill="rgb(247,62,45)" rx="2" ry="2" />
<text  x="76.78" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,245,627 samples, 0.02%)</title><rect x="615.6" y="869" width="0.3" height="15.0" fill="rgb(206,28,38)" rx="2" ry="2" />
<text  x="618.62" y="879.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt; &gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;*&gt; (18,694,813 samples, 0.07%)</title><rect x="654.5" y="837" width="0.9" height="15.0" fill="rgb(213,75,39)" rx="2" ry="2" />
<text  x="657.48" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (227,213,914 samples, 0.90%)</title><rect x="175.7" y="1221" width="10.6" height="15.0" fill="rgb(252,2,25)" rx="2" ry="2" />
<text  x="178.71" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,572,981 samples, 0.05%)</title><rect x="709.8" y="837" width="0.6" height="15.0" fill="rgb(220,12,53)" rx="2" ry="2" />
<text  x="712.80" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,363,069 samples, 0.03%)</title><rect x="40.1" y="997" width="0.3" height="15.0" fill="rgb(210,33,30)" rx="2" ry="2" />
<text  x="43.09" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;rclcpp::node_interfaces::NodeBaseInterface,  (6,010,464 samples, 0.02%)</title><rect x="803.5" y="1013" width="0.3" height="15.0" fill="rgb(236,204,37)" rx="2" ry="2" />
<text  x="806.52" y="1023.5" ></text>
</g>
<g >
<title>[[uprobes]] (1,511,756,374 samples, 5.97%)</title><rect x="626.6" y="933" width="70.4" height="15.0" fill="rgb(242,151,41)" rx="2" ry="2" />
<text  x="629.62" y="943.5" >[[uprob..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,154,483 samples, 0.01%)</title><rect x="724.5" y="853" width="0.1" height="15.0" fill="rgb(218,21,0)" rx="2" ry="2" />
<text  x="727.51" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,515,845 samples, 0.02%)</title><rect x="73.8" y="917" width="0.2" height="15.0" fill="rgb(248,19,33)" rx="2" ry="2" />
<text  x="76.78" y="927.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (10,262,198 samples, 0.04%)</title><rect x="687.3" y="805" width="0.5" height="15.0" fill="rgb(207,113,16)" rx="2" ry="2" />
<text  x="690.29" y="815.5" ></text>
</g>
<g >
<title>[libgazebo_util.so.11.10.1] (4,610,904 samples, 0.02%)</title><rect x="19.5" y="1109" width="0.2" height="15.0" fill="rgb(235,15,46)" rx="2" ry="2" />
<text  x="22.52" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (5,298,369 samples, 0.02%)</title><rect x="45.7" y="1093" width="0.2" height="15.0" fill="rgb(223,61,29)" rx="2" ry="2" />
<text  x="48.66" y="1103.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::msgs::LinkData const&gt;::~shared_ptr (15,510,083 samples, 0.06%)</title><rect x="74.3" y="1029" width="0.7" height="15.0" fill="rgb(205,92,22)" rx="2" ry="2" />
<text  x="77.32" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (12,214,251 samples, 0.05%)</title><rect x="768.1" y="1045" width="0.5" height="15.0" fill="rgb(220,109,17)" rx="2" ry="2" />
<text  x="771.06" y="1055.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEHingeJoint::SetVelocity (5,728,333 samples, 0.02%)</title><rect x="774.5" y="853" width="0.2" height="15.0" fill="rgb(221,167,39)" rx="2" ry="2" />
<text  x="777.45" y="863.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (9,121,137 samples, 0.04%)</title><rect x="836.0" y="1109" width="0.4" height="15.0" fill="rgb(249,228,21)" rx="2" ry="2" />
<text  x="839.01" y="1119.5" ></text>
</g>
<g >
<title>rmw_wait (7,456,202 samples, 0.03%)</title><rect x="140.8" y="1269" width="0.4" height="15.0" fill="rgb(250,97,18)" rx="2" ry="2" />
<text  x="143.84" y="1279.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (214,994,600 samples, 0.85%)</title><rect x="165.7" y="1285" width="10.0" height="15.0" fill="rgb(225,111,32)" rx="2" ry="2" />
<text  x="168.69" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,195,211 samples, 0.02%)</title><rect x="789.3" y="949" width="0.3" height="15.0" fill="rgb(248,44,30)" rx="2" ry="2" />
<text  x="792.28" y="959.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (4,226,680 samples, 0.02%)</title><rect x="221.8" y="1013" width="0.2" height="15.0" fill="rgb(229,205,32)" rx="2" ry="2" />
<text  x="224.78" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,426,497 samples, 0.08%)</title><rect x="379.5" y="901" width="1.0" height="15.0" fill="rgb(232,8,16)" rx="2" ry="2" />
<text  x="382.52" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,180,743 samples, 0.01%)</title><rect x="618.3" y="677" width="0.1" height="15.0" fill="rgb(239,57,43)" rx="2" ry="2" />
<text  x="621.34" y="687.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; &gt; &gt;::operator[] (55,583,782 samples, 0.22%)</title><rect x="500.6" y="885" width="2.6" height="15.0" fill="rgb(211,92,46)" rx="2" ry="2" />
<text  x="503.59" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (168,019,759 samples, 0.66%)</title><rect x="879.3" y="1029" width="7.8" height="15.0" fill="rgb(254,94,31)" rx="2" ry="2" />
<text  x="882.31" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,377,139 samples, 0.03%)</title><rect x="214.4" y="869" width="0.3" height="15.0" fill="rgb(244,177,27)" rx="2" ry="2" />
<text  x="217.43" y="879.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1l&gt;, void&gt; (3,126,781 samples, 0.01%)</title><rect x="859.6" y="1125" width="0.2" height="15.0" fill="rgb(228,192,42)" rx="2" ry="2" />
<text  x="862.64" y="1135.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::shared_ptr (3,933,021 samples, 0.02%)</title><rect x="39.9" y="1109" width="0.2" height="15.0" fill="rgb(228,41,7)" rx="2" ry="2" />
<text  x="42.90" y="1119.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::list&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;::clear (5,434,575 samples, 0.02%)</title><rect x="76.3" y="1157" width="0.2" height="15.0" fill="rgb(231,39,14)" rx="2" ry="2" />
<text  x="79.29" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,245,627 samples, 0.02%)</title><rect x="615.6" y="853" width="0.3" height="15.0" fill="rgb(209,32,7)" rx="2" ry="2" />
<text  x="618.62" y="863.5" ></text>
</g>
<g >
<title>gazebo::common::Time::MSleep (2,576,993 samples, 0.01%)</title><rect x="907.1" y="1269" width="0.1" height="15.0" fill="rgb(246,168,53)" rx="2" ry="2" />
<text  x="910.10" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;1ul, std::__detail::__variant::_Variadic_union&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, unsigned long, unsigned int, double, float, sdf::v9::Time, ignition::math::v6::Angle, ignition::math::v6::Color, ignition::math::v6::Vector2&lt;int&gt;, ignition::math::v6::Vector2&lt;double&gt;, ignition::math::v6::Vector3&lt;double&gt;, ignition::math::v6::Quaternion&lt;double&gt;, ignition::math::v6::Pose3&lt;double&gt; &gt;&amp;&gt; (4,861,997 samples, 0.02%)</title><rect x="19.7" y="1077" width="0.3" height="15.0" fill="rgb(206,84,11)" rx="2" ry="2" />
<text  x="22.73" y="1087.5" ></text>
</g>
<g >
<title>gazebo::transport::Connection::ProcessWriteQueue (153,715,117 samples, 0.61%)</title><rect x="54.3" y="1189" width="7.1" height="15.0" fill="rgb(221,19,16)" rx="2" ry="2" />
<text  x="57.28" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,143,840 samples, 0.05%)</title><rect x="871.4" y="1269" width="0.6" height="15.0" fill="rgb(252,73,10)" rx="2" ry="2" />
<text  x="874.45" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,197,577 samples, 0.09%)</title><rect x="480.0" y="821" width="1.1" height="15.0" fill="rgb(238,171,54)" rx="2" ry="2" />
<text  x="483.05" y="831.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo_ros2_control::GazeboSystemPrivate*, std::default_delete&lt;gazebo_ros2_control::GazeboSystemPrivate&gt; &gt; (6,248,612 samples, 0.02%)</title><rect x="611.8" y="805" width="0.3" height="15.0" fill="rgb(249,207,19)" rx="2" ry="2" />
<text  x="614.79" y="815.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::lock (3,303,114 samples, 0.01%)</title><rect x="62.8" y="1157" width="0.2" height="15.0" fill="rgb(223,37,27)" rx="2" ry="2" />
<text  x="65.82" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,812,785 samples, 0.05%)</title><rect x="63.0" y="1141" width="0.6" height="15.0" fill="rgb(215,154,12)" rx="2" ry="2" />
<text  x="65.97" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,082,184 samples, 0.03%)</title><rect x="520.8" y="837" width="0.4" height="15.0" fill="rgb(212,83,17)" rx="2" ry="2" />
<text  x="523.82" y="847.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1l&gt;, void&gt; (5,210,907 samples, 0.02%)</title><rect x="846.8" y="1125" width="0.2" height="15.0" fill="rgb(246,187,33)" rx="2" ry="2" />
<text  x="849.79" y="1135.5" ></text>
</g>
<g >
<title>[libgazebo.so.11.10.1] (4,988,811 samples, 0.02%)</title><rect x="891.9" y="1237" width="0.3" height="15.0" fill="rgb(241,10,15)" rx="2" ry="2" />
<text  x="894.93" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,488,054 samples, 0.08%)</title><rect x="736.6" y="853" width="1.0" height="15.0" fill="rgb(217,108,36)" rx="2" ry="2" />
<text  x="739.65" y="863.5" ></text>
</g>
<g >
<title>nf_conntrack_in (6,013,373 samples, 0.02%)</title><rect x="57.2" y="149" width="0.3" height="15.0" fill="rgb(238,112,35)" rx="2" ry="2" />
<text  x="60.18" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Pose_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_M_deallocate (4,267,409 samples, 0.02%)</title><rect x="692.9" y="869" width="0.2" height="15.0" fill="rgb(238,8,4)" rx="2" ry="2" />
<text  x="695.92" y="879.5" ></text>
</g>
<g >
<title>ode::quickstep::dot6 (59,937,371 samples, 0.24%)</title><rect x="430.6" y="949" width="2.8" height="15.0" fill="rgb(215,104,49)" rx="2" ry="2" />
<text  x="433.59" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,133,873 samples, 0.02%)</title><rect x="426.9" y="789" width="0.2" height="15.0" fill="rgb(237,204,54)" rx="2" ry="2" />
<text  x="429.89" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (74,559,783 samples, 0.29%)</title><rect x="55.5" y="645" width="3.5" height="15.0" fill="rgb(235,167,4)" rx="2" ry="2" />
<text  x="58.49" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (7,101,875 samples, 0.03%)</title><rect x="195.4" y="997" width="0.4" height="15.0" fill="rgb(246,64,53)" rx="2" ry="2" />
<text  x="198.43" y="1007.5" ></text>
</g>
<g >
<title>sTrimeshBoxColliderData::_cldTestSeparatingAxes (11,854,796 samples, 0.05%)</title><rect x="249.0" y="949" width="0.6" height="15.0" fill="rgb(222,176,8)" rx="2" ry="2" />
<text  x="252.00" y="959.5" ></text>
</g>
<g >
<title>SingletonT&lt;gazebo::util::LogPlay&gt;::Instance (4,003,993 samples, 0.02%)</title><rect x="742.4" y="1029" width="0.2" height="15.0" fill="rgb(220,80,38)" rx="2" ry="2" />
<text  x="745.39" y="1039.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (8,069,732 samples, 0.03%)</title><rect x="794.2" y="917" width="0.3" height="15.0" fill="rgb(218,157,45)" rx="2" ry="2" />
<text  x="797.16" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (229,936,623 samples, 0.91%)</title><rect x="567.8" y="789" width="10.7" height="15.0" fill="rgb(233,194,40)" rx="2" ry="2" />
<text  x="570.83" y="799.5" ></text>
</g>
<g >
<title>operator new (2,196,639 samples, 0.01%)</title><rect x="770.9" y="965" width="0.2" height="15.0" fill="rgb(240,173,34)" rx="2" ry="2" />
<text  x="773.95" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,865,199 samples, 0.01%)</title><rect x="32.8" y="1109" width="0.2" height="15.0" fill="rgb(243,1,13)" rx="2" ry="2" />
<text  x="35.84" y="1119.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_service_t const,  (6,727,611 samples, 0.03%)</title><rect x="816.0" y="981" width="0.3" height="15.0" fill="rgb(216,154,42)" rx="2" ry="2" />
<text  x="818.98" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, std::unique_ptr&lt;gazebo::event::EventT&lt;void  (3,951,446 samples, 0.02%)</title><rect x="470.1" y="965" width="0.2" height="15.0" fill="rgb(210,93,40)" rx="2" ry="2" />
<text  x="473.09" y="975.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Model&gt;::shared_ptr (7,677,951 samples, 0.03%)</title><rect x="768.7" y="965" width="0.4" height="15.0" fill="rgb(222,145,19)" rx="2" ry="2" />
<text  x="771.74" y="975.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (2,457,342 samples, 0.01%)</title><rect x="782.9" y="917" width="0.1" height="15.0" fill="rgb(226,67,18)" rx="2" ry="2" />
<text  x="785.93" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,076,686 samples, 0.02%)</title><rect x="339.4" y="933" width="0.2" height="15.0" fill="rgb(232,139,33)" rx="2" ry="2" />
<text  x="342.38" y="943.5" ></text>
</g>
<g >
<title>gazebo::transport::Publication::GetCallbackCount (31,636,153 samples, 0.12%)</title><rect x="899.3" y="1189" width="1.5" height="15.0" fill="rgb(227,207,13)" rx="2" ry="2" />
<text  x="902.31" y="1199.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::MessageSize&lt;gazebo::msgs::Vector3d&gt; (16,387,131 samples, 0.06%)</title><rect x="163.1" y="1189" width="0.8" height="15.0" fill="rgb(222,83,52)" rx="2" ry="2" />
<text  x="166.13" y="1199.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::FindAllConnectedLinks (322,851,554 samples, 1.27%)</title><rect x="582.8" y="821" width="15.0" height="15.0" fill="rgb(213,221,19)" rx="2" ry="2" />
<text  x="585.80" y="831.5" ></text>
</g>
<g >
<title>malloc (115,209,176 samples, 0.45%)</title><rect x="1159.7" y="1301" width="5.4" height="15.0" fill="rgb(208,110,20)" rx="2" ry="2" />
<text  x="1162.74" y="1311.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;double, std::allocator&lt;double&gt; &gt;::_Vector_base (4,231,571 samples, 0.02%)</title><rect x="643.3" y="885" width="0.2" height="15.0" fill="rgb(222,66,40)" rx="2" ry="2" />
<text  x="646.26" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,119,556 samples, 0.06%)</title><rect x="716.6" y="709" width="0.7" height="15.0" fill="rgb(205,51,48)" rx="2" ry="2" />
<text  x="719.65" y="719.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (5,985,092 samples, 0.02%)</title><rect x="610.5" y="757" width="0.2" height="15.0" fill="rgb(246,183,39)" rx="2" ry="2" />
<text  x="613.46" y="767.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::set&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::emplace_unique&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; const&amp;&gt; (16,270,847 samples, 0.06%)</title><rect x="215.6" y="949" width="0.8" height="15.0" fill="rgb(246,50,35)" rx="2" ry="2" />
<text  x="218.60" y="959.5" ></text>
</g>
<g >
<title>[libgazebo_ros_state.so] (5,862,390 samples, 0.02%)</title><rect x="778.7" y="885" width="0.2" height="15.0" fill="rgb(252,146,27)" rx="2" ry="2" />
<text  x="781.66" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (12,144,775 samples, 0.05%)</title><rect x="592.8" y="773" width="0.6" height="15.0" fill="rgb(231,205,36)" rx="2" ry="2" />
<text  x="595.83" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="1109" width="0.1" height="15.0" fill="rgb(234,210,29)" rx="2" ry="2" />
<text  x="848.06" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (44,060,488 samples, 0.17%)</title><rect x="602.6" y="629" width="2.1" height="15.0" fill="rgb(234,9,15)" rx="2" ry="2" />
<text  x="605.61" y="639.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (81,162,592 samples, 0.32%)</title><rect x="1185.5" y="1205" width="3.8" height="15.0" fill="rgb(242,20,16)" rx="2" ry="2" />
<text  x="1188.51" y="1215.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;gazebo::sensors::SensorNoiseType, std::pair&lt;gazebo::sensors::SensorNoiseType const, std::shared_ptr&lt;gazebo::sensors::Noise&gt; &gt;, std::_Select1st&lt;std::pair&lt;gazebo::sensors::SensorNoiseType const, std::shared_ptr&lt;gazebo::sensors::Noise&gt; &gt; &gt;, std::less&lt;gazebo::sensors::SensorNoiseType&gt;, std::allocator&lt;std::pair&lt;gazebo::sensors::SensorNoiseType const, std::shared_ptr&lt;gazebo::sensors::Noise&gt; &gt; &gt; &gt;::_M_lower_bound (3,282,249 samples, 0.01%)</title><rect x="46.7" y="1125" width="0.2" height="15.0" fill="rgb(232,178,23)" rx="2" ry="2" />
<text  x="49.73" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,434,575 samples, 0.02%)</title><rect x="54.0" y="1045" width="0.3" height="15.0" fill="rgb(228,95,10)" rx="2" ry="2" />
<text  x="57.03" y="1055.5" ></text>
</g>
<g >
<title>sCylinderTrimeshColliderData::_cldTestCircleToEdgeAxis (10,969,877 samples, 0.04%)</title><rect x="254.1" y="933" width="0.5" height="15.0" fill="rgb(232,132,37)" rx="2" ry="2" />
<text  x="257.10" y="943.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;double&gt;::~holder (2,220,792 samples, 0.01%)</title><rect x="642.4" y="901" width="0.1" height="15.0" fill="rgb(251,10,53)" rx="2" ry="2" />
<text  x="645.39" y="911.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMaybeMessage&lt;gazebo::msgs::Time&gt; (6,205,805 samples, 0.02%)</title><rect x="212.9" y="1013" width="0.2" height="15.0" fill="rgb(230,84,21)" rx="2" ry="2" />
<text  x="215.85" y="1023.5" ></text>
</g>
<g >
<title>gzserver (25,004,209,044 samples, 98.69%)</title><rect x="13.5" y="1317" width="1164.5" height="15.0" fill="rgb(222,14,49)" rx="2" ry="2" />
<text  x="16.45" y="1327.5" >gzserver</text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,791,229 samples, 0.03%)</title><rect x="458.4" y="933" width="0.4" height="15.0" fill="rgb(250,180,1)" rx="2" ry="2" />
<text  x="461.44" y="943.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rcl_subscription_t const&gt;::shared_ptr (3,116,103 samples, 0.01%)</title><rect x="195.3" y="1061" width="0.1" height="15.0" fill="rgb(236,177,16)" rx="2" ry="2" />
<text  x="198.28" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,952,087 samples, 0.02%)</title><rect x="487.2" y="853" width="0.2" height="15.0" fill="rgb(207,222,37)" rx="2" ry="2" />
<text  x="490.20" y="863.5" ></text>
</g>
<g >
<title>dWorldQuickStep (114,773,045 samples, 0.45%)</title><rect x="782.7" y="1029" width="5.3" height="15.0" fill="rgb(206,129,11)" rx="2" ry="2" />
<text  x="785.67" y="1039.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (13,571,111 samples, 0.05%)</title><rect x="815.1" y="981" width="0.6" height="15.0" fill="rgb(219,106,5)" rx="2" ry="2" />
<text  x="818.07" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,151,098 samples, 0.12%)</title><rect x="715.9" y="773" width="1.4" height="15.0" fill="rgb(217,148,15)" rx="2" ry="2" />
<text  x="718.90" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (68,638,581 samples, 0.27%)</title><rect x="714.1" y="853" width="3.2" height="15.0" fill="rgb(220,173,13)" rx="2" ry="2" />
<text  x="717.11" y="863.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt;, std::default_delete&lt;realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt;::_M_ptr (10,390,233 samples, 0.04%)</title><rect x="505.0" y="837" width="0.4" height="15.0" fill="rgb(243,61,39)" rx="2" ry="2" />
<text  x="507.97" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,580,330 samples, 0.01%)</title><rect x="675.3" y="741" width="0.2" height="15.0" fill="rgb(240,179,24)" rx="2" ry="2" />
<text  x="678.34" y="751.5" ></text>
</g>
<g >
<title>gazebo::msgs::Vector3d::Vector3d (4,310,267 samples, 0.02%)</title><rect x="753.2" y="869" width="0.2" height="15.0" fill="rgb(215,76,44)" rx="2" ry="2" />
<text  x="756.23" y="879.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Yaw (4,095,138 samples, 0.02%)</title><rect x="642.9" y="885" width="0.2" height="15.0" fill="rgb(209,137,18)" rx="2" ry="2" />
<text  x="645.89" y="895.5" ></text>
</g>
<g >
<title>dQueryCTLPotentialCollisionTriangles (5,749,988 samples, 0.02%)</title><rect x="253.1" y="981" width="0.2" height="15.0" fill="rgb(247,126,26)" rx="2" ry="2" />
<text  x="256.06" y="991.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Inertial&gt;::get (3,302,493 samples, 0.01%)</title><rect x="787.4" y="901" width="0.1" height="15.0" fill="rgb(208,78,9)" rx="2" ry="2" />
<text  x="790.37" y="911.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::ServerPrivate, std::default_delete&lt;gazebo::ServerPrivate&gt; &gt;::operator (11,496,773 samples, 0.05%)</title><rect x="906.5" y="1253" width="0.5" height="15.0" fill="rgb(210,193,41)" rx="2" ry="2" />
<text  x="909.51" y="1263.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_executable (324,660,928 samples, 1.28%)</title><rect x="188.6" y="1109" width="15.2" height="15.0" fill="rgb(225,19,39)" rx="2" ry="2" />
<text  x="191.64" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,152,963 samples, 0.06%)</title><rect x="116.7" y="1141" width="0.7" height="15.0" fill="rgb(219,39,51)" rx="2" ry="2" />
<text  x="119.71" y="1151.5" ></text>
</g>
<g >
<title>boost::detail::get_current_thread_data (6,508,847 samples, 0.03%)</title><rect x="50.5" y="1189" width="0.3" height="15.0" fill="rgb(237,97,51)" rx="2" ry="2" />
<text  x="53.45" y="1199.5" ></text>
</g>
<g >
<title>gazebo::msgs::Quaternion::~Quaternion (5,873,736 samples, 0.02%)</title><rect x="757.1" y="933" width="0.3" height="15.0" fill="rgb(221,184,53)" rx="2" ry="2" />
<text  x="760.14" y="943.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8,226,474 samples, 0.03%)</title><rect x="682.7" y="885" width="0.3" height="15.0" fill="rgb(244,164,41)" rx="2" ry="2" />
<text  x="685.66" y="895.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1l&gt;, void&gt; (3,063,009 samples, 0.01%)</title><rect x="861.2" y="1109" width="0.1" height="15.0" fill="rgb(212,150,19)" rx="2" ry="2" />
<text  x="864.17" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,652,819 samples, 0.07%)</title><rect x="1182.1" y="997" width="0.9" height="15.0" fill="rgb(213,146,18)" rx="2" ry="2" />
<text  x="1185.10" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,182,394 samples, 0.24%)</title><rect x="575.7" y="677" width="2.8" height="15.0" fill="rgb(206,64,47)" rx="2" ry="2" />
<text  x="578.74" y="687.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (3,215,186 samples, 0.01%)</title><rect x="847.5" y="1125" width="0.1" height="15.0" fill="rgb(234,171,41)" rx="2" ry="2" />
<text  x="850.46" y="1135.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::Node&gt;::shared_ptr (6,041,754 samples, 0.02%)</title><rect x="495.1" y="869" width="0.2" height="15.0" fill="rgb(206,128,3)" rx="2" ry="2" />
<text  x="498.05" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,151,257 samples, 0.01%)</title><rect x="864.0" y="1077" width="0.1" height="15.0" fill="rgb(218,101,42)" rx="2" ry="2" />
<text  x="866.98" y="1087.5" ></text>
</g>
<g >
<title>_int_free (2,196,993 samples, 0.01%)</title><rect x="688.7" y="821" width="0.1" height="15.0" fill="rgb(251,128,18)" rx="2" ry="2" />
<text  x="691.72" y="831.5" ></text>
</g>
<g >
<title>dAreConnectedExcluding (6,389,790 samples, 0.03%)</title><rect x="235.8" y="901" width="0.3" height="15.0" fill="rgb(229,184,20)" rx="2" ry="2" />
<text  x="238.77" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,143,840 samples, 0.05%)</title><rect x="871.4" y="1285" width="0.6" height="15.0" fill="rgb(206,155,20)" rx="2" ry="2" />
<text  x="874.45" y="1295.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_service_t const,  (6,390,161 samples, 0.03%)</title><rect x="196.4" y="933" width="0.3" height="15.0" fill="rgb(241,111,30)" rx="2" ry="2" />
<text  x="199.43" y="943.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_subscription (15,194,205 samples, 0.06%)</title><rect x="790.5" y="1029" width="0.7" height="15.0" fill="rgb(212,147,36)" rx="2" ry="2" />
<text  x="793.48" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,157,582 samples, 0.01%)</title><rect x="458.0" y="869" width="0.1" height="15.0" fill="rgb(229,22,16)" rx="2" ry="2" />
<text  x="460.96" y="879.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::operator+ (42,107,272 samples, 0.17%)</title><rect x="604.9" y="805" width="2.0" height="15.0" fill="rgb(208,24,37)" rx="2" ry="2" />
<text  x="607.92" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (81,162,592 samples, 0.32%)</title><rect x="1185.5" y="1189" width="3.8" height="15.0" fill="rgb(245,226,23)" rx="2" ry="2" />
<text  x="1188.51" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,766,416 samples, 0.01%)</title><rect x="856.3" y="885" width="0.1" height="15.0" fill="rgb(228,5,32)" rx="2" ry="2" />
<text  x="859.26" y="895.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,634,787 samples, 0.03%)</title><rect x="792.8" y="949" width="0.3" height="15.0" fill="rgb(216,6,7)" rx="2" ry="2" />
<text  x="795.78" y="959.5" ></text>
</g>
<g >
<title>rclcpp::Subscription&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt;, rclcpp::message_memory_strategy::MessageMemoryStrategy&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;void&gt; &gt; &gt;::handle_message (15,194,205 samples, 0.06%)</title><rect x="790.5" y="949" width="0.7" height="15.0" fill="rgb(209,35,29)" rx="2" ry="2" />
<text  x="793.48" y="959.5" ></text>
</g>
<g >
<title>SingletonT&lt;gazebo::util::LogRecord&gt;::GetInstance (2,180,557 samples, 0.01%)</title><rect x="459.5" y="1029" width="0.1" height="15.0" fill="rgb(225,57,41)" rx="2" ry="2" />
<text  x="462.46" y="1039.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Cross (7,828,066 samples, 0.03%)</title><rect x="528.8" y="789" width="0.4" height="15.0" fill="rgb(213,72,2)" rx="2" ry="2" />
<text  x="531.82" y="799.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (6,248,264 samples, 0.02%)</title><rect x="871.2" y="1301" width="0.2" height="15.0" fill="rgb(239,66,8)" rx="2" ry="2" />
<text  x="874.16" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::end (6,199,261 samples, 0.02%)</title><rect x="595.7" y="789" width="0.3" height="15.0" fill="rgb(249,214,43)" rx="2" ry="2" />
<text  x="598.66" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::vector (7,798,226 samples, 0.03%)</title><rect x="824.5" y="1125" width="0.3" height="15.0" fill="rgb(219,216,51)" rx="2" ry="2" />
<text  x="827.48" y="1135.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::~unique_lock (12,812,785 samples, 0.05%)</title><rect x="63.0" y="1173" width="0.6" height="15.0" fill="rgb(211,187,9)" rx="2" ry="2" />
<text  x="65.97" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,001,113 samples, 0.02%)</title><rect x="211.2" y="965" width="0.2" height="15.0" fill="rgb(207,216,13)" rx="2" ry="2" />
<text  x="214.24" y="975.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::do_run_one (94,393,818 samples, 0.37%)</title><rect x="13.6" y="1189" width="4.3" height="15.0" fill="rgb(212,15,43)" rx="2" ry="2" />
<text  x="16.55" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,426,742 samples, 0.03%)</title><rect x="618.1" y="821" width="0.3" height="15.0" fill="rgb(254,184,52)" rx="2" ry="2" />
<text  x="621.14" y="831.5" ></text>
</g>
<g >
<title>boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (20,830,968 samples, 0.08%)</title><rect x="13.6" y="1061" width="0.9" height="15.0" fill="rgb(219,1,54)" rx="2" ry="2" />
<text  x="16.55" y="1071.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (9,818,000 samples, 0.04%)</title><rect x="801.6" y="949" width="0.4" height="15.0" fill="rgb(246,67,49)" rx="2" ry="2" />
<text  x="804.59" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19,439,574 samples, 0.08%)</title><rect x="1182.1" y="1157" width="0.9" height="15.0" fill="rgb(210,203,50)" rx="2" ry="2" />
<text  x="1185.06" y="1167.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (6,101,434 samples, 0.02%)</title><rect x="815.7" y="981" width="0.3" height="15.0" fill="rgb(208,92,12)" rx="2" ry="2" />
<text  x="818.70" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;sensor_msgs::msg::Imu_&lt;std::allocator&lt;void&gt; &gt;,  (4,861,997 samples, 0.02%)</title><rect x="24.0" y="1013" width="0.2" height="15.0" fill="rgb(219,120,21)" rx="2" ry="2" />
<text  x="26.99" y="1023.5" ></text>
</g>
<g >
<title>boost::date_time::int_adapter&lt;long&gt;::is_pos_infinity (8,547,278 samples, 0.03%)</title><rect x="50.1" y="1173" width="0.4" height="15.0" fill="rgb(247,225,51)" rx="2" ry="2" />
<text  x="53.05" y="1183.5" ></text>
</g>
<g >
<title>gazebo::msgs::Vector3d::MergeFrom (4,970,357 samples, 0.02%)</title><rect x="31.1" y="1077" width="0.3" height="15.0" fill="rgb(235,213,8)" rx="2" ry="2" />
<text  x="34.12" y="1087.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (8,818,437 samples, 0.03%)</title><rect x="840.5" y="1061" width="0.4" height="15.0" fill="rgb(238,201,12)" rx="2" ry="2" />
<text  x="843.51" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,829,890 samples, 0.02%)</title><rect x="854.8" y="997" width="0.2" height="15.0" fill="rgb(205,7,13)" rx="2" ry="2" />
<text  x="857.78" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,318,465 samples, 0.02%)</title><rect x="457.9" y="1013" width="0.2" height="15.0" fill="rgb(218,82,15)" rx="2" ry="2" />
<text  x="460.86" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="965" width="0.2" height="15.0" fill="rgb(254,227,2)" rx="2" ry="2" />
<text  x="823.95" y="975.5" ></text>
</g>
<g >
<title>[libgazebo_transport.so.11.10.1] (4,080,171 samples, 0.02%)</title><rect x="83.9" y="1125" width="0.2" height="15.0" fill="rgb(248,144,1)" rx="2" ry="2" />
<text  x="86.87" y="1135.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (2,199,164 samples, 0.01%)</title><rect x="584.2" y="757" width="0.1" height="15.0" fill="rgb(247,46,28)" rx="2" ry="2" />
<text  x="587.18" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,634,833 samples, 0.03%)</title><rect x="796.3" y="853" width="0.3" height="15.0" fill="rgb(224,205,16)" rx="2" ry="2" />
<text  x="799.26" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (65,478,742 samples, 0.26%)</title><rect x="14.9" y="1141" width="3.0" height="15.0" fill="rgb(230,222,51)" rx="2" ry="2" />
<text  x="17.90" y="1151.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::CopyFrom (2,213,490 samples, 0.01%)</title><rect x="763.7" y="1029" width="0.1" height="15.0" fill="rgb(251,103,12)" rx="2" ry="2" />
<text  x="766.73" y="1039.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, hardware_interface::SystemInterface*, std::default_delete&lt;hardware_interface::SystemInterface&gt; &gt; (3,852,327 samples, 0.02%)</title><rect x="613.3" y="805" width="0.1" height="15.0" fill="rgb(215,67,38)" rx="2" ry="2" />
<text  x="616.27" y="815.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (4,242,033 samples, 0.02%)</title><rect x="609.1" y="757" width="0.2" height="15.0" fill="rgb(244,106,35)" rx="2" ry="2" />
<text  x="612.14" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,291,598 samples, 0.04%)</title><rect x="789.1" y="1029" width="0.5" height="15.0" fill="rgb(227,63,26)" rx="2" ry="2" />
<text  x="792.09" y="1039.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (21,898,407 samples, 0.09%)</title><rect x="42.0" y="1109" width="1.0" height="15.0" fill="rgb(222,128,23)" rx="2" ry="2" />
<text  x="44.95" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,574 samples, 0.12%)</title><rect x="145.5" y="1253" width="1.4" height="15.0" fill="rgb(244,42,28)" rx="2" ry="2" />
<text  x="148.53" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,334,647 samples, 0.01%)</title><rect x="150.1" y="1141" width="0.1" height="15.0" fill="rgb(212,125,41)" rx="2" ry="2" />
<text  x="153.06" y="1151.5" ></text>
</g>
<g >
<title>google::protobuf::internal::UTF8GenericScanFastAscii (3,946,163 samples, 0.02%)</title><rect x="164.0" y="1285" width="0.2" height="15.0" fill="rgb(243,82,15)" rx="2" ry="2" />
<text  x="167.02" y="1295.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; (2,190,823 samples, 0.01%)</title><rect x="678.6" y="837" width="0.1" height="15.0" fill="rgb(254,47,35)" rx="2" ry="2" />
<text  x="681.57" y="847.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEHingeJoint::SetVelocity (117,897,358 samples, 0.47%)</title><rect x="525.8" y="853" width="5.5" height="15.0" fill="rgb(231,74,31)" rx="2" ry="2" />
<text  x="528.80" y="863.5" ></text>
</g>
<g >
<title>dJointGetType (2,245,503 samples, 0.01%)</title><rect x="235.9" y="885" width="0.1" height="15.0" fill="rgb(254,47,30)" rx="2" ry="2" />
<text  x="238.87" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,839,100 samples, 0.05%)</title><rect x="17.3" y="885" width="0.6" height="15.0" fill="rgb(215,162,34)" rx="2" ry="2" />
<text  x="20.35" y="895.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::ServiceBase,  (8,332,306 samples, 0.03%)</title><rect x="810.6" y="965" width="0.4" height="15.0" fill="rgb(211,68,41)" rx="2" ry="2" />
<text  x="813.61" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,416,692 samples, 0.02%)</title><rect x="886.3" y="517" width="0.3" height="15.0" fill="rgb(248,143,31)" rx="2" ry="2" />
<text  x="889.32" y="527.5" ></text>
</g>
<g >
<title>gazebo::physics::ODESurfaceParams::FrictionPyramid (4,947,258 samples, 0.02%)</title><rect x="782.4" y="1013" width="0.3" height="15.0" fill="rgb(240,200,50)" rx="2" ry="2" />
<text  x="785.44" y="1023.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::operator- (144,416,105 samples, 0.57%)</title><rect x="658.2" y="901" width="6.7" height="15.0" fill="rgb(241,88,41)" rx="2" ry="2" />
<text  x="661.21" y="911.5" ></text>
</g>
<g >
<title>collideAABBs (4,175,437 samples, 0.02%)</title><rect x="781.4" y="933" width="0.2" height="15.0" fill="rgb(225,208,52)" rx="2" ry="2" />
<text  x="784.37" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,318,465 samples, 0.02%)</title><rect x="457.9" y="981" width="0.2" height="15.0" fill="rgb(234,187,11)" rx="2" ry="2" />
<text  x="460.86" y="991.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, boost::shared_ptr&lt;google::protobuf::Message&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;::operator[] (2,865,199 samples, 0.01%)</title><rect x="32.0" y="1109" width="0.1" height="15.0" fill="rgb(212,64,33)" rx="2" ry="2" />
<text  x="35.00" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator= (15,869,083 samples, 0.06%)</title><rect x="856.6" y="1125" width="0.8" height="15.0" fill="rgb(234,16,4)" rx="2" ry="2" />
<text  x="859.61" y="1135.5" ></text>
</g>
<g >
<title>__libc_recvmsg (5,484,890 samples, 0.02%)</title><rect x="1178.0" y="1285" width="0.3" height="15.0" fill="rgb(231,126,9)" rx="2" ry="2" />
<text  x="1181.02" y="1295.5" ></text>
</g>
<g >
<title>ddsrt_avl_iter_next (22,125,349 samples, 0.09%)</title><rect x="1157.7" y="1301" width="1.1" height="15.0" fill="rgb(208,75,28)" rx="2" ry="2" />
<text  x="1160.74" y="1311.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo_ros::GazeboRosStatePrivate*, std::_Placeholder&lt;1&gt; &gt; (4,178,638 samples, 0.02%)</title><rect x="726.4" y="949" width="0.2" height="15.0" fill="rgb(213,120,11)" rx="2" ry="2" />
<text  x="729.36" y="959.5" ></text>
</g>
<g >
<title>nf_conntrack_in (12,339,554 samples, 0.05%)</title><rect x="58.1" y="581" width="0.6" height="15.0" fill="rgb(241,212,14)" rx="2" ry="2" />
<text  x="61.08" y="591.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,762,331 samples, 0.01%)</title><rect x="1174.1" y="1157" width="0.2" height="15.0" fill="rgb(210,71,21)" rx="2" ry="2" />
<text  x="1177.14" y="1167.5" ></text>
</g>
<g >
<title>__gthread_active_p (2,249,199 samples, 0.01%)</title><rect x="229.0" y="997" width="0.1" height="15.0" fill="rgb(241,229,12)" rx="2" ry="2" />
<text  x="232.02" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (5,998,723 samples, 0.02%)</title><rect x="586.5" y="709" width="0.2" height="15.0" fill="rgb(205,208,33)" rx="2" ry="2" />
<text  x="589.47" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,334,647 samples, 0.01%)</title><rect x="150.1" y="1221" width="0.1" height="15.0" fill="rgb(215,70,30)" rx="2" ry="2" />
<text  x="153.06" y="1231.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::InertialPrivate, std::default_delete&lt;gazebo::physics::InertialPrivate&gt; &gt;::get (4,199,602 samples, 0.02%)</title><rect x="684.4" y="837" width="0.2" height="15.0" fill="rgb(249,96,20)" rx="2" ry="2" />
<text  x="687.38" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,127,417 samples, 0.07%)</title><rect x="146.1" y="1045" width="0.8" height="15.0" fill="rgb(241,188,29)" rx="2" ry="2" />
<text  x="149.09" y="1055.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (6,957,270 samples, 0.03%)</title><rect x="856.1" y="1045" width="0.4" height="15.0" fill="rgb(231,77,51)" rx="2" ry="2" />
<text  x="859.13" y="1055.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, std::shared_ptr&lt;rcl_subscription_t const&gt;*, std::shared_ptr&lt;rcl_subscription_t const&gt;*&gt; (6,573,743 samples, 0.03%)</title><rect x="805.6" y="965" width="0.3" height="15.0" fill="rgb(208,195,23)" rx="2" ry="2" />
<text  x="808.60" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,624,031 samples, 0.01%)</title><rect x="22.7" y="917" width="0.2" height="15.0" fill="rgb(208,66,37)" rx="2" ry="2" />
<text  x="25.74" y="927.5" ></text>
</g>
<g >
<title>rclcpp::allocator::retyped_reallocate&lt;void*, std::allocator&lt;void*&gt; &gt; (7,330,535 samples, 0.03%)</title><rect x="192.8" y="1061" width="0.4" height="15.0" fill="rgb(220,225,37)" rx="2" ry="2" />
<text  x="195.82" y="1071.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (12,516,779,584 samples, 49.40%)</title><rect x="206.7" y="1125" width="583.0" height="15.0" fill="rgb(220,211,45)" rx="2" ry="2" />
<text  x="209.69" y="1135.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>std::map&lt;int, std::unique_ptr&lt;gazebo::event::EventT&lt;void  (6,129,740 samples, 0.02%)</title><rect x="730.2" y="1013" width="0.3" height="15.0" fill="rgb(240,8,11)" rx="2" ry="2" />
<text  x="733.17" y="1023.5" ></text>
</g>
<g >
<title>trajectory_msgs::msg::JointTrajectoryPoint_&lt;std::allocator&lt;void&gt; &gt;::JointTrajectoryPoint_ (10,981,516 samples, 0.04%)</title><rect x="848.6" y="1141" width="0.5" height="15.0" fill="rgb(207,98,16)" rx="2" ry="2" />
<text  x="851.58" y="1151.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (6,377,139 samples, 0.03%)</title><rect x="214.4" y="949" width="0.3" height="15.0" fill="rgb(239,145,34)" rx="2" ry="2" />
<text  x="217.43" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,910,423 samples, 0.01%)</title><rect x="779.1" y="789" width="0.1" height="15.0" fill="rgb(210,40,46)" rx="2" ry="2" />
<text  x="782.11" y="799.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (12,736,439 samples, 0.05%)</title><rect x="654.8" y="757" width="0.6" height="15.0" fill="rgb(219,91,12)" rx="2" ry="2" />
<text  x="657.76" y="767.5" ></text>
</g>
<g >
<title>rcl_timer_get_guard_condition (5,315,760 samples, 0.02%)</title><rect x="194.3" y="1045" width="0.2" height="15.0" fill="rgb(244,46,7)" rx="2" ry="2" />
<text  x="197.28" y="1055.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Joint&gt;::operator (4,129,511 samples, 0.02%)</title><rect x="481.2" y="1013" width="0.2" height="15.0" fill="rgb(221,213,7)" rx="2" ry="2" />
<text  x="484.16" y="1023.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::Publish&lt;gazebo::msgs::IMU&gt; (49,342,544 samples, 0.19%)</title><rect x="30.4" y="1157" width="2.3" height="15.0" fill="rgb(229,158,50)" rx="2" ry="2" />
<text  x="33.39" y="1167.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::UpdatePhysicsPose (4,116,544 samples, 0.02%)</title><rect x="774.8" y="773" width="0.2" height="15.0" fill="rgb(223,3,26)" rx="2" ry="2" />
<text  x="777.81" y="783.5" ></text>
</g>
<g >
<title>[librcl_action.so] (7,141,100 samples, 0.03%)</title><rect x="136.8" y="1253" width="0.4" height="15.0" fill="rgb(231,213,25)" rx="2" ry="2" />
<text  x="139.85" y="1263.5" ></text>
</g>
<g >
<title>dMultiply0_331 (16,438,007 samples, 0.06%)</title><rect x="241.8" y="917" width="0.8" height="15.0" fill="rgb(215,163,21)" rx="2" ry="2" />
<text  x="244.83" y="927.5" ></text>
</g>
<g >
<title>std::remove&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_timer_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_timer_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_timer_t const&gt; &gt; &gt; &gt;, decltype (6,005,596 samples, 0.02%)</title><rect x="201.3" y="1061" width="0.3" height="15.0" fill="rgb(229,147,45)" rx="2" ry="2" />
<text  x="204.34" y="1071.5" ></text>
</g>
<g >
<title>trajectory_msgs::msg::JointTrajectoryPoint_&lt;std::allocator&lt;void&gt; &gt;::operator= (24,040,410 samples, 0.09%)</title><rect x="512.1" y="869" width="1.1" height="15.0" fill="rgb(211,37,54)" rx="2" ry="2" />
<text  x="515.12" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;::max_size (6,736,317 samples, 0.03%)</title><rect x="84.6" y="981" width="0.3" height="15.0" fill="rgb(231,183,14)" rx="2" ry="2" />
<text  x="87.58" y="991.5" ></text>
</g>
<g >
<title>std::operator!=&lt;gazebo::event::EventT&lt;void  (12,180,292 samples, 0.05%)</title><rect x="730.6" y="1013" width="0.5" height="15.0" fill="rgb(220,34,46)" rx="2" ry="2" />
<text  x="733.55" y="1023.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::~shared_ptr (13,766,475 samples, 0.05%)</title><rect x="542.9" y="757" width="0.6" height="15.0" fill="rgb(211,211,30)" rx="2" ry="2" />
<text  x="545.85" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,243,763 samples, 0.02%)</title><rect x="666.7" y="773" width="0.2" height="15.0" fill="rgb(223,120,49)" rx="2" ry="2" />
<text  x="669.74" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (155,512,942 samples, 0.61%)</title><rect x="879.9" y="1013" width="7.2" height="15.0" fill="rgb(247,123,38)" rx="2" ry="2" />
<text  x="882.90" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_realloc_insert&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; const&amp;&gt; (8,082,420 samples, 0.03%)</title><rect x="596.0" y="773" width="0.3" height="15.0" fill="rgb(226,132,39)" rx="2" ry="2" />
<text  x="598.95" y="783.5" ></text>
</g>
<g >
<title>[[uprobes]] (5,257,480,260 samples, 20.75%)</title><rect x="207.3" y="1061" width="244.8" height="15.0" fill="rgb(239,205,39)" rx="2" ry="2" />
<text  x="210.26" y="1071.5" >[[uprobes]]</text>
</g>
<g >
<title>std::__shared_ptr_access&lt;rclcpp::ServiceBase,  (3,044,413 samples, 0.01%)</title><rect x="809.4" y="981" width="0.1" height="15.0" fill="rgb(246,218,51)" rx="2" ry="2" />
<text  x="812.39" y="991.5" ></text>
</g>
<g >
<title>dMultiply0_331 (6,216,133 samples, 0.02%)</title><rect x="528.3" y="789" width="0.2" height="15.0" fill="rgb(220,36,47)" rx="2" ry="2" />
<text  x="531.26" y="799.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::set&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::node_alloc (3,076,936 samples, 0.01%)</title><rect x="63.8" y="1141" width="0.2" height="15.0" fill="rgb(226,197,19)" rx="2" ry="2" />
<text  x="66.81" y="1151.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (3,134,847 samples, 0.01%)</title><rect x="81.2" y="1077" width="0.2" height="15.0" fill="rgb(223,64,54)" rx="2" ry="2" />
<text  x="84.24" y="1087.5" ></text>
</g>
<g >
<title>[libgazebo_ros_imu_sensor.so] (3,442,044 samples, 0.01%)</title><rect x="21.0" y="1109" width="0.1" height="15.0" fill="rgb(217,214,17)" rx="2" ry="2" />
<text  x="23.99" y="1119.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::Publish&lt;gazebo::msgs::WorldStatistics&gt; (5,831,893 samples, 0.02%)</title><rect x="772.8" y="1045" width="0.2" height="15.0" fill="rgb(236,97,4)" rx="2" ry="2" />
<text  x="775.76" y="1055.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_create_storage (4,094,029 samples, 0.02%)</title><rect x="671.2" y="869" width="0.2" height="15.0" fill="rgb(247,133,54)" rx="2" ry="2" />
<text  x="674.19" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,150,356 samples, 0.02%)</title><rect x="616.1" y="837" width="0.3" height="15.0" fill="rgb(237,95,41)" rx="2" ry="2" />
<text  x="619.10" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,381,905 samples, 0.02%)</title><rect x="796.0" y="869" width="0.3" height="15.0" fill="rgb(250,99,35)" rx="2" ry="2" />
<text  x="799.01" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt;::_M_erase (24,906,178 samples, 0.10%)</title><rect x="804.7" y="1013" width="1.2" height="15.0" fill="rgb(245,71,11)" rx="2" ry="2" />
<text  x="807.75" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (92,542,284 samples, 0.37%)</title><rect x="54.7" y="757" width="4.3" height="15.0" fill="rgb(216,27,53)" rx="2" ry="2" />
<text  x="57.65" y="767.5" ></text>
</g>
<g >
<title>gazebo_msgs::msg::ModelStates_&lt;std::allocator&lt;void&gt; &gt;::ModelStates_ (6,038,878 samples, 0.02%)</title><rect x="689.2" y="901" width="0.3" height="15.0" fill="rgb(230,15,53)" rx="2" ry="2" />
<text  x="692.20" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,812,785 samples, 0.05%)</title><rect x="63.0" y="1029" width="0.6" height="15.0" fill="rgb(253,50,6)" rx="2" ry="2" />
<text  x="65.97" y="1039.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*, double&gt; (5,687,656 samples, 0.02%)</title><rect x="512.9" y="821" width="0.2" height="15.0" fill="rgb(223,174,44)" rx="2" ry="2" />
<text  x="515.88" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,225,905 samples, 0.01%)</title><rect x="829.7" y="981" width="0.1" height="15.0" fill="rgb(217,214,34)" rx="2" ry="2" />
<text  x="832.69" y="991.5" ></text>
</g>
<g >
<title>gazebo::physics::PhysicsEngine::GetContactManager (2,209,448 samples, 0.01%)</title><rect x="458.8" y="1061" width="0.1" height="15.0" fill="rgb(238,130,25)" rx="2" ry="2" />
<text  x="461.80" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1045" width="0.1" height="15.0" fill="rgb(231,115,15)" rx="2" ry="2" />
<text  x="135.18" y="1055.5" ></text>
</g>
<g >
<title>gazebo::physics::Collision::GetLink (3,933,021 samples, 0.02%)</title><rect x="39.9" y="1125" width="0.2" height="15.0" fill="rgb(224,98,22)" rx="2" ry="2" />
<text  x="42.90" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,411,266 samples, 0.01%)</title><rect x="830.2" y="933" width="0.1" height="15.0" fill="rgb(246,203,42)" rx="2" ry="2" />
<text  x="833.18" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (305,497,082 samples, 1.21%)</title><rect x="875.0" y="1109" width="14.2" height="15.0" fill="rgb(248,133,44)" rx="2" ry="2" />
<text  x="878.02" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,754,759 samples, 0.02%)</title><rect x="73.4" y="1013" width="0.3" height="15.0" fill="rgb(216,118,0)" rx="2" ry="2" />
<text  x="76.45" y="1023.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rcl_service_t&gt;::shared_ptr (4,495,038 samples, 0.02%)</title><rect x="794.5" y="933" width="0.2" height="15.0" fill="rgb(221,144,52)" rx="2" ry="2" />
<text  x="797.53" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,221,319 samples, 0.04%)</title><rect x="842.1" y="1077" width="0.4" height="15.0" fill="rgb(225,135,16)" rx="2" ry="2" />
<text  x="845.05" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,928,290 samples, 0.01%)</title><rect x="1185.4" y="1221" width="0.1" height="15.0" fill="rgb(214,201,32)" rx="2" ry="2" />
<text  x="1188.38" y="1231.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::ServiceBase,  (4,795,289 samples, 0.02%)</title><rect x="810.1" y="981" width="0.2" height="15.0" fill="rgb(216,208,17)" rx="2" ry="2" />
<text  x="813.10" y="991.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::AddCollider (4,067,477 samples, 0.02%)</title><rect x="239.9" y="885" width="0.2" height="15.0" fill="rgb(220,98,18)" rx="2" ry="2" />
<text  x="242.87" y="895.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Joint&gt;::operator (4,187,149 samples, 0.02%)</title><rect x="585.6" y="677" width="0.2" height="15.0" fill="rgb(219,109,32)" rx="2" ry="2" />
<text  x="588.64" y="687.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (2,160,822 samples, 0.01%)</title><rect x="775.4" y="693" width="0.1" height="15.0" fill="rgb(231,80,29)" rx="2" ry="2" />
<text  x="778.44" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, int&gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned int const&amp;&gt;, std::tuple&lt;&gt; &gt; (23,485,824 samples, 0.09%)</title><rect x="85.0" y="1125" width="1.1" height="15.0" fill="rgb(229,127,30)" rx="2" ry="2" />
<text  x="88.00" y="1135.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (5,774,411 samples, 0.02%)</title><rect x="657.6" y="837" width="0.3" height="15.0" fill="rgb(221,63,2)" rx="2" ry="2" />
<text  x="660.58" y="847.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::operator= (8,452,448 samples, 0.03%)</title><rect x="219.4" y="997" width="0.4" height="15.0" fill="rgb(227,22,38)" rx="2" ry="2" />
<text  x="222.45" y="1007.5" ></text>
</g>
<g >
<title>__sqrt_finite@GLIBC_2.15 (4,185,425 samples, 0.02%)</title><rect x="660.5" y="869" width="0.2" height="15.0" fill="rgb(243,109,48)" rx="2" ry="2" />
<text  x="663.50" y="879.5" ></text>
</g>
<g >
<title>dJointGetHingeAngle (15,902,358 samples, 0.06%)</title><rect x="471.4" y="821" width="0.7" height="15.0" fill="rgb(251,3,25)" rx="2" ry="2" />
<text  x="474.38" y="831.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (7,857,844 samples, 0.03%)</title><rect x="856.1" y="1061" width="0.4" height="15.0" fill="rgb(245,50,30)" rx="2" ry="2" />
<text  x="859.09" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,873,086 samples, 0.03%)</title><rect x="13.1" y="1061" width="0.4" height="15.0" fill="rgb(219,1,49)" rx="2" ry="2" />
<text  x="16.13" y="1071.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;void  (82,914,669 samples, 0.33%)</title><rect x="789.7" y="1189" width="3.8" height="15.0" fill="rgb(230,113,37)" rx="2" ry="2" />
<text  x="792.65" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (43,104,486 samples, 0.17%)</title><rect x="1172.1" y="1141" width="2.0" height="15.0" fill="rgb(236,89,26)" rx="2" ry="2" />
<text  x="1175.13" y="1151.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::SetWorldPoseDefault (263,867,084 samples, 1.04%)</title><rect x="548.5" y="789" width="12.3" height="15.0" fill="rgb(252,91,21)" rx="2" ry="2" />
<text  x="551.50" y="799.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (16,489,789 samples, 0.07%)</title><rect x="662.6" y="853" width="0.8" height="15.0" fill="rgb(216,146,51)" rx="2" ry="2" />
<text  x="665.61" y="863.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::GetChildJointsLinks (3,766,232 samples, 0.01%)</title><rect x="585.5" y="693" width="0.1" height="15.0" fill="rgb(239,133,1)" rx="2" ry="2" />
<text  x="588.47" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,192,124 samples, 0.02%)</title><rect x="616.7" y="917" width="0.3" height="15.0" fill="rgb(237,103,24)" rx="2" ry="2" />
<text  x="619.67" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,515,845 samples, 0.02%)</title><rect x="73.8" y="885" width="0.2" height="15.0" fill="rgb(211,104,2)" rx="2" ry="2" />
<text  x="76.78" y="895.5" ></text>
</g>
<g >
<title>rcl_publish (12,177,345 samples, 0.05%)</title><rect x="851.9" y="1109" width="0.6" height="15.0" fill="rgb(205,53,2)" rx="2" ry="2" />
<text  x="854.95" y="1119.5" ></text>
</g>
<g >
<title>std::_Rb_tree_rebalance_for_erase (3,402,041 samples, 0.01%)</title><rect x="13.7" y="741" width="0.2" height="15.0" fill="rgb(243,73,47)" rx="2" ry="2" />
<text  x="16.71" y="751.5" ></text>
</g>
<g >
<title>Opcode::SphereCollider::_CollideNoPrimitiveTest (5,962,857 samples, 0.02%)</title><rect x="121.4" y="1285" width="0.3" height="15.0" fill="rgb(231,152,16)" rx="2" ry="2" />
<text  x="124.43" y="1295.5" ></text>
</g>
<g >
<title>std::operator&amp; (7,316,408 samples, 0.03%)</title><rect x="858.8" y="1141" width="0.4" height="15.0" fill="rgb(247,159,5)" rx="2" ry="2" />
<text  x="861.84" y="1151.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (2,225,454 samples, 0.01%)</title><rect x="610.3" y="773" width="0.1" height="15.0" fill="rgb(215,46,8)" rx="2" ry="2" />
<text  x="613.26" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::_M_inc_size (14,541,086 samples, 0.06%)</title><rect x="82.9" y="1125" width="0.7" height="15.0" fill="rgb(251,198,52)" rx="2" ry="2" />
<text  x="85.93" y="1135.5" ></text>
</g>
<g >
<title>[libgazebo_msgs.so.11.10.1] (4,317,985 samples, 0.02%)</title><rect x="721.7" y="869" width="0.2" height="15.0" fill="rgb(224,150,48)" rx="2" ry="2" />
<text  x="724.66" y="879.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (29,457,368 samples, 0.12%)</title><rect x="501.0" y="853" width="1.3" height="15.0" fill="rgb(253,36,29)" rx="2" ry="2" />
<text  x="503.96" y="863.5" ></text>
</g>
<g >
<title>gazebo_plugins::GazeboRosImuSensorPrivate::OnUpdate (65,895,588 samples, 0.26%)</title><rect x="21.1" y="1045" width="3.1" height="15.0" fill="rgb(236,68,47)" rx="2" ry="2" />
<text  x="24.15" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (48,773,746 samples, 0.19%)</title><rect x="1169.5" y="1221" width="2.3" height="15.0" fill="rgb(237,166,28)" rx="2" ry="2" />
<text  x="1172.53" y="1231.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::CoordRotationSub (31,302,262 samples, 0.12%)</title><rect x="660.3" y="885" width="1.5" height="15.0" fill="rgb(246,110,22)" rx="2" ry="2" />
<text  x="663.32" y="895.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::SetPositionMaximal (37,143,312 samples, 0.15%)</title><rect x="774.7" y="837" width="1.7" height="15.0" fill="rgb(205,167,31)" rx="2" ry="2" />
<text  x="777.72" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,425,938 samples, 0.03%)</title><rect x="666.5" y="789" width="0.4" height="15.0" fill="rgb(209,135,30)" rx="2" ry="2" />
<text  x="669.54" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (17,799,797 samples, 0.07%)</title><rect x="521.7" y="869" width="0.8" height="15.0" fill="rgb(208,95,43)" rx="2" ry="2" />
<text  x="524.67" y="879.5" ></text>
</g>
<g >
<title>std::make_shared&lt;builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt;, builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt;&amp;&gt; (12,884,002 samples, 0.05%)</title><rect x="798.3" y="837" width="0.6" height="15.0" fill="rgb(230,157,9)" rx="2" ry="2" />
<text  x="801.26" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,172,459 samples, 0.01%)</title><rect x="690.6" y="805" width="0.1" height="15.0" fill="rgb(212,34,14)" rx="2" ry="2" />
<text  x="693.63" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (49,349,414 samples, 0.19%)</title><rect x="460.9" y="949" width="2.3" height="15.0" fill="rgb(246,107,47)" rx="2" ry="2" />
<text  x="463.89" y="959.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (987,863,774 samples, 3.90%)</title><rect x="819.3" y="1205" width="46.1" height="15.0" fill="rgb(233,98,48)" rx="2" ry="2" />
<text  x="822.35" y="1215.5" >std:..</text>
</g>
<g >
<title>boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Publisher, unsigned int&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Publisher*&gt;, boost::arg&lt;1&gt; &gt; &gt;::operator (13,929,078 samples, 0.05%)</title><rect x="13.7" y="837" width="0.7" height="15.0" fill="rgb(229,225,41)" rx="2" ry="2" />
<text  x="16.71" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (326,654,553 samples, 1.29%)</title><rect x="874.0" y="1125" width="15.2" height="15.0" fill="rgb(254,133,35)" rx="2" ry="2" />
<text  x="877.03" y="1135.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::Publish&lt;gazebo::msgs::PosesStamped&gt; (80,505,636 samples, 0.32%)</title><rect x="763.4" y="1045" width="3.8" height="15.0" fill="rgb(210,82,23)" rx="2" ry="2" />
<text  x="766.43" y="1055.5" ></text>
</g>
<g >
<title>dCopyVector4 (2,147,439 samples, 0.01%)</title><rect x="248.2" y="965" width="0.1" height="15.0" fill="rgb(246,126,7)" rx="2" ry="2" />
<text  x="251.16" y="975.5" ></text>
</g>
<g >
<title>hardware_interface::ResourceManager::read (64,543,690 samples, 0.25%)</title><rect x="517.5" y="901" width="3.0" height="15.0" fill="rgb(249,221,49)" rx="2" ry="2" />
<text  x="520.54" y="911.5" ></text>
</g>
<g >
<title>_dSetZero (38,529,577 samples, 0.15%)</title><rect x="264.9" y="965" width="1.8" height="15.0" fill="rgb(229,127,41)" rx="2" ry="2" />
<text  x="267.89" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,504,496 samples, 0.04%)</title><rect x="426.8" y="837" width="0.5" height="15.0" fill="rgb(235,116,53)" rx="2" ry="2" />
<text  x="429.80" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (227,213,914 samples, 0.90%)</title><rect x="175.7" y="1205" width="10.6" height="15.0" fill="rgb(206,187,24)" rx="2" ry="2" />
<text  x="178.71" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,377,139 samples, 0.03%)</title><rect x="214.4" y="885" width="0.3" height="15.0" fill="rgb(252,155,53)" rx="2" ry="2" />
<text  x="217.43" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,847,722 samples, 0.03%)</title><rect x="931.5" y="1173" width="0.4" height="15.0" fill="rgb(221,101,4)" rx="2" ry="2" />
<text  x="934.53" y="1183.5" ></text>
</g>
<g >
<title>boost::asio::detail::start_write_buffer_sequence_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (100,583,021 samples, 0.40%)</title><rect x="54.3" y="1109" width="4.7" height="15.0" fill="rgb(252,82,28)" rx="2" ry="2" />
<text  x="57.28" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,958,587 samples, 0.02%)</title><rect x="851.4" y="997" width="0.2" height="15.0" fill="rgb(212,171,51)" rx="2" ry="2" />
<text  x="854.38" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,810,692 samples, 0.10%)</title><rect x="477.2" y="885" width="1.2" height="15.0" fill="rgb(242,16,28)" rx="2" ry="2" />
<text  x="480.20" y="895.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::operator (6,271,662 samples, 0.02%)</title><rect x="640.2" y="901" width="0.3" height="15.0" fill="rgb(250,49,38)" rx="2" ry="2" />
<text  x="643.17" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::Collide (358,309,301 samples, 1.41%)</title><rect x="245.0" y="1029" width="16.7" height="15.0" fill="rgb(232,209,46)" rx="2" ry="2" />
<text  x="247.97" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,697,692 samples, 0.04%)</title><rect x="853.8" y="965" width="0.5" height="15.0" fill="rgb(245,24,23)" rx="2" ry="2" />
<text  x="856.77" y="975.5" ></text>
</g>
<g >
<title>controller_interface::ControllerInterface::get_node (6,041,754 samples, 0.02%)</title><rect x="495.1" y="885" width="0.2" height="15.0" fill="rgb(226,199,32)" rx="2" ry="2" />
<text  x="498.05" y="895.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (4,205,366 samples, 0.02%)</title><rect x="253.9" y="901" width="0.2" height="15.0" fill="rgb(231,186,36)" rx="2" ry="2" />
<text  x="256.90" y="911.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;__gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (2,227,751 samples, 0.01%)</title><rect x="512.7" y="821" width="0.1" height="15.0" fill="rgb(205,107,32)" rx="2" ry="2" />
<text  x="515.67" y="831.5" ></text>
</g>
<g >
<title>boost::detail::sp_assert_convertible&lt;gazebo::physics::Base, gazebo::physics::Base&gt; (4,283,058 samples, 0.02%)</title><rect x="223.7" y="965" width="0.2" height="15.0" fill="rgb(245,48,10)" rx="2" ry="2" />
<text  x="226.68" y="975.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (3,128,536 samples, 0.01%)</title><rect x="781.0" y="933" width="0.2" height="15.0" fill="rgb(215,112,14)" rx="2" ry="2" />
<text  x="784.04" y="943.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (15,594,792 samples, 0.06%)</title><rect x="887.9" y="1029" width="0.8" height="15.0" fill="rgb(236,42,39)" rx="2" ry="2" />
<text  x="890.93" y="1039.5" ></text>
</g>
<g >
<title>rcl_subscription_is_valid (10,595,523 samples, 0.04%)</title><rect x="193.8" y="1029" width="0.5" height="15.0" fill="rgb(210,38,27)" rx="2" ry="2" />
<text  x="196.79" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,829,890 samples, 0.02%)</title><rect x="854.8" y="965" width="0.2" height="15.0" fill="rgb(230,182,51)" rx="2" ry="2" />
<text  x="857.78" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,628,552 samples, 0.03%)</title><rect x="138.3" y="1205" width="0.3" height="15.0" fill="rgb(212,127,52)" rx="2" ry="2" />
<text  x="141.29" y="1215.5" ></text>
</g>
<g >
<title>gazebo_plugins::GazeboRosDiffDrivePrivate::OnUpdate (10,083,673 samples, 0.04%)</title><rect x="706.8" y="933" width="0.5" height="15.0" fill="rgb(241,125,40)" rx="2" ry="2" />
<text  x="709.82" y="943.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::get (6,006,086 samples, 0.02%)</title><rect x="591.2" y="741" width="0.3" height="15.0" fill="rgb(230,98,54)" rx="2" ry="2" />
<text  x="594.19" y="751.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::ChildLinkPose (89,156,675 samples, 0.35%)</title><rect x="578.6" y="821" width="4.2" height="15.0" fill="rgb(218,3,40)" rx="2" ry="2" />
<text  x="581.64" y="831.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (8,304,082 samples, 0.03%)</title><rect x="803.8" y="965" width="0.4" height="15.0" fill="rgb(239,112,44)" rx="2" ry="2" />
<text  x="806.80" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,318,641 samples, 0.01%)</title><rect x="272.5" y="853" width="0.1" height="15.0" fill="rgb(212,192,43)" rx="2" ry="2" />
<text  x="275.50" y="863.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::set&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::resize_and_add_node_unique (3,979,292 samples, 0.02%)</title><rect x="216.2" y="933" width="0.2" height="15.0" fill="rgb(222,156,54)" rx="2" ry="2" />
<text  x="219.17" y="943.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;::initiate_async_send::operator (100,583,021 samples, 0.40%)</title><rect x="54.3" y="1029" width="4.7" height="15.0" fill="rgb(235,148,35)" rx="2" ry="2" />
<text  x="57.28" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,154,483 samples, 0.01%)</title><rect x="724.5" y="837" width="0.1" height="15.0" fill="rgb(251,188,37)" rx="2" ry="2" />
<text  x="727.51" y="847.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::MergeFrom (24,404,641 samples, 0.10%)</title><rect x="764.0" y="997" width="1.2" height="15.0" fill="rgb(205,63,33)" rx="2" ry="2" />
<text  x="767.03" y="1007.5" ></text>
</g>
<g >
<title>[libgazebo_ros_state.so] (10,222,482 samples, 0.04%)</title><rect x="636.6" y="917" width="0.5" height="15.0" fill="rgb(249,90,36)" rx="2" ry="2" />
<text  x="639.62" y="927.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetByName (8,069,732 samples, 0.03%)</title><rect x="794.2" y="773" width="0.3" height="15.0" fill="rgb(232,41,50)" rx="2" ry="2" />
<text  x="797.16" y="783.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::GetChildJointsLinks (5,998,723 samples, 0.02%)</title><rect x="586.5" y="725" width="0.2" height="15.0" fill="rgb(229,122,38)" rx="2" ry="2" />
<text  x="589.47" y="735.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Model&gt;::shared_ptr&lt;gazebo::physics::Base&gt; (3,931,963 samples, 0.02%)</title><rect x="219.2" y="981" width="0.1" height="15.0" fill="rgb(236,114,36)" rx="2" ry="2" />
<text  x="222.16" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,415,848 samples, 0.03%)</title><rect x="145.2" y="1221" width="0.3" height="15.0" fill="rgb(249,128,14)" rx="2" ry="2" />
<text  x="148.23" y="1231.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (5,561,468 samples, 0.02%)</title><rect x="220.2" y="965" width="0.3" height="15.0" fill="rgb(206,36,6)" rx="2" ry="2" />
<text  x="223.22" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,928,290 samples, 0.01%)</title><rect x="1185.4" y="1269" width="0.1" height="15.0" fill="rgb(237,183,50)" rx="2" ry="2" />
<text  x="1188.38" y="1279.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;joint_trajectory_controller::Trajectory,  (2,156,282 samples, 0.01%)</title><rect x="514.1" y="869" width="0.1" height="15.0" fill="rgb(250,118,24)" rx="2" ry="2" />
<text  x="517.05" y="879.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (2,249,199 samples, 0.01%)</title><rect x="229.0" y="1029" width="0.1" height="15.0" fill="rgb(245,152,19)" rx="2" ry="2" />
<text  x="232.02" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,635,319 samples, 0.12%)</title><rect x="740.1" y="885" width="1.4" height="15.0" fill="rgb(223,68,20)" rx="2" ry="2" />
<text  x="743.07" y="895.5" ></text>
</g>
<g >
<title>std::this_thread::sleep_for&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (17,100,577 samples, 0.07%)</title><rect x="864.6" y="1157" width="0.8" height="15.0" fill="rgb(246,23,46)" rx="2" ry="2" />
<text  x="867.56" y="1167.5" ></text>
</g>
<g >
<title>ros_trace_callback_end (7,769,011 samples, 0.03%)</title><rect x="798.9" y="965" width="0.4" height="15.0" fill="rgb(242,187,51)" rx="2" ry="2" />
<text  x="801.94" y="975.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Vector3 (2,598,823 samples, 0.01%)</title><rect x="642.8" y="869" width="0.1" height="15.0" fill="rgb(238,135,44)" rx="2" ry="2" />
<text  x="645.77" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,411,266 samples, 0.01%)</title><rect x="830.2" y="885" width="0.1" height="15.0" fill="rgb(222,62,46)" rx="2" ry="2" />
<text  x="833.18" y="895.5" ></text>
</g>
<g >
<title>protobuf_imu_2eproto::protobuf_AssignDescriptorsOnce (4,660,333 samples, 0.02%)</title><rect x="32.5" y="1109" width="0.2" height="15.0" fill="rgb(209,35,22)" rx="2" ry="2" />
<text  x="35.47" y="1119.5" ></text>
</g>
<g >
<title>[librclcpp.so] (8,176,813 samples, 0.03%)</title><rect x="793.1" y="981" width="0.4" height="15.0" fill="rgb(205,180,48)" rx="2" ry="2" />
<text  x="796.13" y="991.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_subscription (113,734,741 samples, 0.45%)</title><rect x="794.7" y="1061" width="5.3" height="15.0" fill="rgb(215,118,13)" rx="2" ry="2" />
<text  x="797.74" y="1071.5" ></text>
</g>
<g >
<title>boost::detail::interruption_checker::unlock_if_locked (6,951,744 samples, 0.03%)</title><rect x="18.4" y="1189" width="0.4" height="15.0" fill="rgb(232,206,38)" rx="2" ry="2" />
<text  x="21.45" y="1199.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::GetParentModel (30,155,332 samples, 0.12%)</title><rect x="219.1" y="1013" width="1.4" height="15.0" fill="rgb(241,209,4)" rx="2" ry="2" />
<text  x="222.07" y="1023.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::set&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::next_node (2,529,277 samples, 0.01%)</title><rect x="63.6" y="1141" width="0.1" height="15.0" fill="rgb(205,77,22)" rx="2" ry="2" />
<text  x="66.57" y="1151.5" ></text>
</g>
<g >
<title>dxProcessIslands (104,334,220 samples, 0.41%)</title><rect x="782.7" y="1013" width="4.8" height="15.0" fill="rgb(245,14,27)" rx="2" ry="2" />
<text  x="785.67" y="1023.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::FindAllConnectedLinksHelper (292,518,511 samples, 1.15%)</title><rect x="583.1" y="805" width="13.6" height="15.0" fill="rgb(241,23,54)" rx="2" ry="2" />
<text  x="586.07" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,053,890 samples, 0.02%)</title><rect x="462.9" y="773" width="0.2" height="15.0" fill="rgb(208,94,7)" rx="2" ry="2" />
<text  x="465.90" y="783.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_lock (5,195,452 samples, 0.02%)</title><rect x="77.9" y="1093" width="0.2" height="15.0" fill="rgb(210,198,23)" rx="2" ry="2" />
<text  x="80.87" y="1103.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::event::EventT&lt;void  (2,296,960 samples, 0.01%)</title><rect x="731.2" y="997" width="0.1" height="15.0" fill="rgb(251,151,32)" rx="2" ry="2" />
<text  x="734.21" y="1007.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMaybeMessage&lt;gazebo::msgs::Pose&gt; (8,128,910 samples, 0.03%)</title><rect x="764.8" y="869" width="0.4" height="15.0" fill="rgb(244,115,40)" rx="2" ry="2" />
<text  x="767.79" y="879.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator- (6,623,057 samples, 0.03%)</title><rect x="33.0" y="1157" width="0.3" height="15.0" fill="rgb(223,135,30)" rx="2" ry="2" />
<text  x="35.97" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,646 samples, 0.01%)</title><rect x="724.0" y="709" width="0.1" height="15.0" fill="rgb(218,3,23)" rx="2" ry="2" />
<text  x="727.02" y="719.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;std::_Rb_tree_const_iterator&lt;std::pair&lt;int const, std::unique_ptr&lt;gazebo::event::EventT&lt;void  (2,166,867 samples, 0.01%)</title><rect x="484.0" y="997" width="0.1" height="15.0" fill="rgb(216,179,43)" rx="2" ry="2" />
<text  x="487.03" y="1007.5" ></text>
</g>
<g >
<title>collideAABBs (41,446,364 samples, 0.16%)</title><rect x="236.3" y="869" width="2.0" height="15.0" fill="rgb(225,190,43)" rx="2" ry="2" />
<text  x="239.34" y="879.5" ></text>
</g>
<g >
<title>iptable_filter_hook (4,208,334 samples, 0.02%)</title><rect x="887.4" y="1061" width="0.2" height="15.0" fill="rgb(226,63,31)" rx="2" ry="2" />
<text  x="890.44" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_Vector_impl::_Vector_impl (3,990,438 samples, 0.02%)</title><rect x="671.4" y="885" width="0.2" height="15.0" fill="rgb(225,65,33)" rx="2" ry="2" />
<text  x="674.38" y="895.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rcl_service_t const,  (13,571,111 samples, 0.05%)</title><rect x="815.1" y="1013" width="0.6" height="15.0" fill="rgb(241,209,46)" rx="2" ry="2" />
<text  x="818.07" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,281,711 samples, 0.01%)</title><rect x="841.9" y="1029" width="0.2" height="15.0" fill="rgb(212,91,23)" rx="2" ry="2" />
<text  x="844.95" y="1039.5" ></text>
</g>
<g >
<title>gazebo::physics::World::SimTime (4,203,159 samples, 0.02%)</title><rect x="43.7" y="1157" width="0.2" height="15.0" fill="rgb(241,208,9)" rx="2" ry="2" />
<text  x="46.66" y="1167.5" ></text>
</g>
<g >
<title>SingletonT&lt;gazebo::transport::TopicManager&gt;::Instance (2,182,631 samples, 0.01%)</title><rect x="213.2" y="1013" width="0.1" height="15.0" fill="rgb(245,144,19)" rx="2" ry="2" />
<text  x="216.22" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (3,859,857 samples, 0.02%)</title><rect x="496.3" y="789" width="0.2" height="15.0" fill="rgb(237,179,53)" rx="2" ry="2" />
<text  x="499.34" y="799.5" ></text>
</g>
<g >
<title>gazebo::msgs::Quaternion::InternalSerializeWithCachedSizesToArray (2,734,777 samples, 0.01%)</title><rect x="1159.5" y="1221" width="0.1" height="15.0" fill="rgb(230,44,26)" rx="2" ry="2" />
<text  x="1162.50" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Joint&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Joint&gt; &gt; &gt;::begin (3,927,043 samples, 0.02%)</title><rect x="590.0" y="741" width="0.1" height="15.0" fill="rgb(234,202,31)" rx="2" ry="2" />
<text  x="592.97" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,838,386 samples, 0.02%)</title><rect x="765.5" y="821" width="0.3" height="15.0" fill="rgb(248,189,47)" rx="2" ry="2" />
<text  x="768.53" y="831.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena (4,788,510 samples, 0.02%)</title><rect x="27.3" y="1093" width="0.3" height="15.0" fill="rgb(243,209,1)" rx="2" ry="2" />
<text  x="30.34" y="1103.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (3,936,376 samples, 0.02%)</title><rect x="272.9" y="917" width="0.2" height="15.0" fill="rgb(215,63,49)" rx="2" ry="2" />
<text  x="275.88" y="927.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::event::EventT&lt;void  (6,197,676 samples, 0.02%)</title><rect x="788.5" y="917" width="0.3" height="15.0" fill="rgb(205,217,46)" rx="2" ry="2" />
<text  x="791.55" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,723,714 samples, 0.01%)</title><rect x="845.1" y="933" width="0.1" height="15.0" fill="rgb(230,44,25)" rx="2" ry="2" />
<text  x="848.06" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,918,687 samples, 0.02%)</title><rect x="620.7" y="821" width="0.2" height="15.0" fill="rgb(208,130,46)" rx="2" ry="2" />
<text  x="623.69" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt;, std::default_delete&lt;realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt;::get (12,322,813 samples, 0.05%)</title><rect x="504.9" y="853" width="0.5" height="15.0" fill="rgb(251,7,17)" rx="2" ry="2" />
<text  x="507.88" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (87,697,037 samples, 0.35%)</title><rect x="54.9" y="725" width="4.1" height="15.0" fill="rgb(216,191,54)" rx="2" ry="2" />
<text  x="57.88" y="735.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;google::protobuf::Message&gt;::shared_ptr&lt;google::protobuf::Message&gt; (4,147,631 samples, 0.02%)</title><rect x="213.8" y="997" width="0.2" height="15.0" fill="rgb(247,167,30)" rx="2" ry="2" />
<text  x="216.80" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (48,773,746 samples, 0.19%)</title><rect x="1169.5" y="1205" width="2.3" height="15.0" fill="rgb(219,155,42)" rx="2" ry="2" />
<text  x="1172.53" y="1215.5" ></text>
</g>
<g >
<title>gazebo::msgs::IMU::MergeFrom (12,506,984 samples, 0.05%)</title><rect x="30.8" y="1093" width="0.6" height="15.0" fill="rgb(215,102,25)" rx="2" ry="2" />
<text  x="33.77" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,151,902 samples, 0.02%)</title><rect x="741.2" y="773" width="0.3" height="15.0" fill="rgb(220,202,43)" rx="2" ry="2" />
<text  x="744.17" y="783.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (24,285,945 samples, 0.10%)</title><rect x="490.3" y="997" width="1.2" height="15.0" fill="rgb(230,159,31)" rx="2" ry="2" />
<text  x="493.33" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (15,194,205 samples, 0.06%)</title><rect x="790.5" y="837" width="0.7" height="15.0" fill="rgb(246,103,11)" rx="2" ry="2" />
<text  x="793.48" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_insert_unique&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const&amp;&gt; (8,193,841 samples, 0.03%)</title><rect x="224.4" y="965" width="0.4" height="15.0" fill="rgb(235,206,32)" rx="2" ry="2" />
<text  x="227.38" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (57,608,920 samples, 0.23%)</title><rect x="15.3" y="965" width="2.6" height="15.0" fill="rgb(212,175,12)" rx="2" ry="2" />
<text  x="18.26" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;double&gt;, double&gt;::_S_select_on_copy (6,130,929 samples, 0.02%)</title><rect x="826.0" y="1013" width="0.2" height="15.0" fill="rgb(205,7,11)" rx="2" ry="2" />
<text  x="828.96" y="1023.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (4,345,558 samples, 0.02%)</title><rect x="812.0" y="933" width="0.2" height="15.0" fill="rgb(225,105,40)" rx="2" ry="2" />
<text  x="814.98" y="943.5" ></text>
</g>
<g >
<title>dAddVectorCross3 (2,189,777 samples, 0.01%)</title><rect x="683.5" y="853" width="0.1" height="15.0" fill="rgb(247,194,7)" rx="2" ry="2" />
<text  x="686.52" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (194,351,074 samples, 0.77%)</title><rect x="166.7" y="1173" width="9.0" height="15.0" fill="rgb(216,118,2)" rx="2" ry="2" />
<text  x="169.65" y="1183.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_insert_&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const&amp;, std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_Alloc_node&gt; (6,339,691 samples, 0.03%)</title><rect x="546.8" y="725" width="0.3" height="15.0" fill="rgb(220,118,7)" rx="2" ry="2" />
<text  x="549.79" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,154,483 samples, 0.01%)</title><rect x="724.5" y="757" width="0.1" height="15.0" fill="rgb(220,174,3)" rx="2" ry="2" />
<text  x="727.51" y="767.5" ></text>
</g>
<g >
<title>boost::function1&lt;void, boost::shared_ptr&lt;gazebo::msgs::LinkData const&gt; const&amp;&gt;::operator (29,322,656 samples, 0.12%)</title><rect x="74.2" y="1141" width="1.4" height="15.0" fill="rgb(227,53,1)" rx="2" ry="2" />
<text  x="77.22" y="1151.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::operator (3,933,452 samples, 0.02%)</title><rect x="221.6" y="997" width="0.2" height="15.0" fill="rgb(247,105,27)" rx="2" ry="2" />
<text  x="224.59" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,644,693 samples, 0.05%)</title><rect x="426.7" y="901" width="0.6" height="15.0" fill="rgb(252,32,33)" rx="2" ry="2" />
<text  x="429.70" y="911.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (6,052,277 samples, 0.02%)</title><rect x="802.0" y="901" width="0.3" height="15.0" fill="rgb(242,37,39)" rx="2" ry="2" />
<text  x="805.05" y="911.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (554,651,533 samples, 2.19%)</title><rect x="793.5" y="1109" width="25.8" height="15.0" fill="rgb(214,38,37)" rx="2" ry="2" />
<text  x="796.52" y="1119.5" >s..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,225,905 samples, 0.01%)</title><rect x="829.7" y="1077" width="0.1" height="15.0" fill="rgb(213,28,45)" rx="2" ry="2" />
<text  x="832.69" y="1087.5" ></text>
</g>
<g >
<title>realtime_tools::RealtimePublisher&lt;control_msgs::msg::DynamicJointState_&lt;std::allocator&lt;void&gt; &gt; &gt;::unlock (6,794,869 samples, 0.03%)</title><rect x="836.8" y="1157" width="0.3" height="15.0" fill="rgb(219,15,39)" rx="2" ry="2" />
<text  x="839.76" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;gazebo::msgs::ServerControl, std::allocator&lt;gazebo::msgs::ServerControl&gt; &gt;::begin (5,001,329 samples, 0.02%)</title><rect x="892.5" y="1237" width="0.2" height="15.0" fill="rgb(216,226,27)" rx="2" ry="2" />
<text  x="895.48" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1173" width="0.1" height="15.0" fill="rgb(250,160,17)" rx="2" ry="2" />
<text  x="135.18" y="1183.5" ></text>
</g>
<g >
<title>std::make_pair&lt;boost::function&lt;void  (2,485,233 samples, 0.01%)</title><rect x="81.4" y="1093" width="0.1" height="15.0" fill="rgb(228,112,20)" rx="2" ry="2" />
<text  x="84.38" y="1103.5" ></text>
</g>
<g >
<title>dxSimpleSpace::cleanGeoms (4,727,184 samples, 0.02%)</title><rect x="781.6" y="981" width="0.2" height="15.0" fill="rgb(231,109,25)" rx="2" ry="2" />
<text  x="784.57" y="991.5" ></text>
</g>
<g >
<title>Opcode::AABBTreeCollider::~AABBTreeCollider (299,662,593 samples, 1.18%)</title><rect x="103.5" y="1285" width="13.9" height="15.0" fill="rgb(230,220,9)" rx="2" ry="2" />
<text  x="106.46" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_S_relocate (8,452,734 samples, 0.03%)</title><rect x="588.3" y="709" width="0.3" height="15.0" fill="rgb(244,52,21)" rx="2" ry="2" />
<text  x="591.25" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator- (2,282,674 samples, 0.01%)</title><rect x="694.9" y="869" width="0.1" height="15.0" fill="rgb(217,212,14)" rx="2" ry="2" />
<text  x="697.90" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,141,612 samples, 0.02%)</title><rect x="1177.0" y="1285" width="0.2" height="15.0" fill="rgb(220,46,2)" rx="2" ry="2" />
<text  x="1180.00" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::World&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::World&gt; &gt; &gt;::empty (7,718,103 samples, 0.03%)</title><rect x="47.3" y="1173" width="0.4" height="15.0" fill="rgb(248,192,6)" rx="2" ry="2" />
<text  x="50.30" y="1183.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Collision&gt;::~shared_ptr (6,024,988 samples, 0.02%)</title><rect x="226.8" y="1013" width="0.3" height="15.0" fill="rgb(244,14,14)" rx="2" ry="2" />
<text  x="229.77" y="1023.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::async_send&lt;boost::asio::const_buffers_1, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (100,583,021 samples, 0.40%)</title><rect x="54.3" y="1013" width="4.7" height="15.0" fill="rgb(241,196,37)" rx="2" ry="2" />
<text  x="57.28" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,652,014 samples, 0.04%)</title><rect x="722.4" y="693" width="0.5" height="15.0" fill="rgb(241,180,12)" rx="2" ry="2" />
<text  x="725.45" y="703.5" ></text>
</g>
<g >
<title>gazebo::physics::World::RealTime (4,100,764 samples, 0.02%)</title><rect x="772.6" y="1045" width="0.2" height="15.0" fill="rgb(253,27,54)" rx="2" ry="2" />
<text  x="775.57" y="1055.5" ></text>
</g>
<g >
<title>[[uprobes]] (60,610,871 samples, 0.24%)</title><rect x="746.1" y="1061" width="2.8" height="15.0" fill="rgb(214,77,35)" rx="2" ry="2" />
<text  x="749.09" y="1071.5" ></text>
</g>
<g >
<title>realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt;::lock (8,751,336 samples, 0.03%)</title><rect x="837.1" y="1157" width="0.4" height="15.0" fill="rgb(231,213,33)" rx="2" ry="2" />
<text  x="840.07" y="1167.5" ></text>
</g>
<g >
<title>BuildIslandsAndEstimateStepperMemoryRequirements (10,438,825 samples, 0.04%)</title><rect x="787.5" y="997" width="0.5" height="15.0" fill="rgb(236,216,42)" rx="2" ry="2" />
<text  x="790.53" y="1007.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::FindAllConnectedLinksHelper (3,787,419 samples, 0.01%)</title><rect x="775.3" y="741" width="0.1" height="15.0" fill="rgb(228,54,47)" rx="2" ry="2" />
<text  x="778.26" y="751.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (5,655,085 samples, 0.02%)</title><rect x="78.8" y="1125" width="0.3" height="15.0" fill="rgb(250,150,53)" rx="2" ry="2" />
<text  x="81.84" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6,392,627 samples, 0.03%)</title><rect x="691.8" y="901" width="0.3" height="15.0" fill="rgb(248,63,38)" rx="2" ry="2" />
<text  x="694.77" y="911.5" ></text>
</g>
<g >
<title>[[uprobes]] (23,996,137 samples, 0.09%)</title><rect x="829.2" y="1125" width="1.1" height="15.0" fill="rgb(207,30,6)" rx="2" ry="2" />
<text  x="832.17" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (3,859,857 samples, 0.02%)</title><rect x="496.3" y="805" width="0.2" height="15.0" fill="rgb(239,54,5)" rx="2" ry="2" />
<text  x="499.34" y="815.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (8,332,306 samples, 0.03%)</title><rect x="810.6" y="949" width="0.4" height="15.0" fill="rgb(246,153,45)" rx="2" ry="2" />
<text  x="813.61" y="959.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::transport::Publication&gt;::operator (4,378,697 samples, 0.02%)</title><rect x="899.0" y="1189" width="0.2" height="15.0" fill="rgb(209,16,24)" rx="2" ry="2" />
<text  x="901.98" y="1199.5" ></text>
</g>
<g >
<title>google::protobuf::Arena::CreateMaybeMessage&lt;gazebo::msgs::Pose&gt; (6,964,964 samples, 0.03%)</title><rect x="754.8" y="965" width="0.3" height="15.0" fill="rgb(237,38,12)" rx="2" ry="2" />
<text  x="757.77" y="975.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (16,867,056 samples, 0.07%)</title><rect x="749.2" y="1061" width="0.8" height="15.0" fill="rgb(238,171,13)" rx="2" ry="2" />
<text  x="752.25" y="1071.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (4,828,765 samples, 0.02%)</title><rect x="857.6" y="1109" width="0.2" height="15.0" fill="rgb(212,118,39)" rx="2" ry="2" />
<text  x="860.56" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,918,687 samples, 0.02%)</title><rect x="620.7" y="789" width="0.2" height="15.0" fill="rgb(219,86,50)" rx="2" ry="2" />
<text  x="623.69" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,152,963 samples, 0.06%)</title><rect x="116.7" y="1125" width="0.7" height="15.0" fill="rgb(224,110,47)" rx="2" ry="2" />
<text  x="119.71" y="1135.5" ></text>
</g>
<g >
<title>update_get_addr (3,583,042 samples, 0.01%)</title><rect x="865.4" y="1285" width="0.1" height="15.0" fill="rgb(235,6,17)" rx="2" ry="2" />
<text  x="868.36" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,579,944 samples, 0.03%)</title><rect x="75.2" y="1013" width="0.4" height="15.0" fill="rgb(241,153,22)" rx="2" ry="2" />
<text  x="78.18" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,368,669 samples, 0.03%)</title><rect x="833.6" y="981" width="0.3" height="15.0" fill="rgb(225,4,32)" rx="2" ry="2" />
<text  x="836.60" y="991.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (8,379,359 samples, 0.03%)</title><rect x="688.6" y="853" width="0.4" height="15.0" fill="rgb(225,170,4)" rx="2" ry="2" />
<text  x="691.62" y="863.5" ></text>
</g>
<g >
<title>std::swap&lt;google::protobuf::Message*&gt; (5,230,087 samples, 0.02%)</title><rect x="31.8" y="1093" width="0.2" height="15.0" fill="rgb(211,183,17)" rx="2" ry="2" />
<text  x="34.76" y="1103.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_op (92,542,284 samples, 0.37%)</title><rect x="54.7" y="997" width="4.3" height="15.0" fill="rgb(208,154,45)" rx="2" ry="2" />
<text  x="57.65" y="1007.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::operator= (6,092,557 samples, 0.02%)</title><rect x="226.1" y="1013" width="0.3" height="15.0" fill="rgb(206,112,23)" rx="2" ry="2" />
<text  x="229.11" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,766,416 samples, 0.01%)</title><rect x="856.3" y="949" width="0.1" height="15.0" fill="rgb(208,8,38)" rx="2" ry="2" />
<text  x="859.26" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3,692,364 samples, 0.01%)</title><rect x="653.5" y="885" width="0.2" height="15.0" fill="rgb(251,174,43)" rx="2" ry="2" />
<text  x="656.48" y="895.5" ></text>
</g>
<g >
<title>rclcpp::GenericTimer&lt;std::_Bind&lt;void  (21,253,786 samples, 0.08%)</title><rect x="187.3" y="1061" width="1.0" height="15.0" fill="rgb(233,48,40)" rx="2" ry="2" />
<text  x="190.28" y="1071.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::ServerPrivate, std::default_delete&lt;gazebo::ServerPrivate&gt; &gt;::_M_ptr (8,039,077 samples, 0.03%)</title><rect x="906.5" y="1221" width="0.4" height="15.0" fill="rgb(234,87,50)" rx="2" ry="2" />
<text  x="909.51" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,865,199 samples, 0.01%)</title><rect x="32.8" y="1061" width="0.2" height="15.0" fill="rgb(214,144,23)" rx="2" ry="2" />
<text  x="35.84" y="1071.5" ></text>
</g>
<g >
<title>ddsrt_avl_lookup (4,658,989 samples, 0.02%)</title><rect x="1183.5" y="1285" width="0.2" height="15.0" fill="rgb(248,47,31)" rx="2" ry="2" />
<text  x="1186.48" y="1295.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (7,857,844 samples, 0.03%)</title><rect x="856.1" y="1077" width="0.4" height="15.0" fill="rgb(253,50,19)" rx="2" ry="2" />
<text  x="859.09" y="1087.5" ></text>
</g>
<g >
<title>control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;::InterfaceValue_ (33,556,224 samples, 0.13%)</title><rect x="826.0" y="1029" width="1.5" height="15.0" fill="rgb(253,113,24)" rx="2" ry="2" />
<text  x="828.96" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,844,476 samples, 0.03%)</title><rect x="493.3" y="901" width="0.4" height="15.0" fill="rgb(237,92,13)" rx="2" ry="2" />
<text  x="496.31" y="911.5" ></text>
</g>
<g >
<title>nn_xpack_send (7,602,522 samples, 0.03%)</title><rect x="165.2" y="1285" width="0.4" height="15.0" fill="rgb(231,23,38)" rx="2" ry="2" />
<text  x="168.24" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,039,873 samples, 0.03%)</title><rect x="379.9" y="693" width="0.4" height="15.0" fill="rgb(206,169,47)" rx="2" ry="2" />
<text  x="382.91" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,624,031 samples, 0.01%)</title><rect x="22.7" y="965" width="0.2" height="15.0" fill="rgb(212,185,6)" rx="2" ry="2" />
<text  x="25.74" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const,  (4,224,317 samples, 0.02%)</title><rect x="496.9" y="853" width="0.2" height="15.0" fill="rgb(214,78,24)" rx="2" ry="2" />
<text  x="499.89" y="863.5" ></text>
</g>
<g >
<title>sdf::v9::Element::Get&lt;unsigned int&gt; (19,426,309 samples, 0.08%)</title><rect x="44.8" y="1077" width="0.9" height="15.0" fill="rgb(241,206,50)" rx="2" ry="2" />
<text  x="47.75" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19,439,574 samples, 0.08%)</title><rect x="1182.1" y="1125" width="0.9" height="15.0" fill="rgb(221,195,31)" rx="2" ry="2" />
<text  x="1185.06" y="1135.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Model&gt;::shared_ptr&lt;gazebo::physics::Base&gt; (8,350,344 samples, 0.03%)</title><rect x="541.3" y="741" width="0.4" height="15.0" fill="rgb(219,189,42)" rx="2" ry="2" />
<text  x="544.28" y="751.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::lock (4,133,986 samples, 0.02%)</title><rect x="214.9" y="965" width="0.2" height="15.0" fill="rgb(213,169,3)" rx="2" ry="2" />
<text  x="217.92" y="975.5" ></text>
</g>
<g >
<title>google::protobuf::internal::AllAreInitialized&lt;google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt; &gt; (7,824,932 samples, 0.03%)</title><rect x="765.2" y="997" width="0.3" height="15.0" fill="rgb(228,146,8)" rx="2" ry="2" />
<text  x="768.17" y="1007.5" ></text>
</g>
<g >
<title>gazebo::physics::World::Running (23,727,723 samples, 0.09%)</title><rect x="894.9" y="1237" width="1.1" height="15.0" fill="rgb(224,154,39)" rx="2" ry="2" />
<text  x="897.93" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,515,845 samples, 0.02%)</title><rect x="73.8" y="933" width="0.2" height="15.0" fill="rgb(227,211,36)" rx="2" ry="2" />
<text  x="76.78" y="943.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (24,356,493 samples, 0.10%)</title><rect x="142.7" y="1253" width="1.2" height="15.0" fill="rgb(242,224,45)" rx="2" ry="2" />
<text  x="145.73" y="1263.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; &gt;::construct&lt;std::shared_ptr&lt;rcl_service_t const&gt;, std::shared_ptr&lt;rcl_service_t const&gt; &gt; (6,390,161 samples, 0.03%)</title><rect x="196.4" y="981" width="0.3" height="15.0" fill="rgb(254,181,2)" rx="2" ry="2" />
<text  x="199.43" y="991.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::HasType (17,921,321 samples, 0.07%)</title><rect x="551.4" y="757" width="0.9" height="15.0" fill="rgb(251,12,22)" rx="2" ry="2" />
<text  x="554.42" y="767.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (7,843,523 samples, 0.03%)</title><rect x="803.1" y="901" width="0.3" height="15.0" fill="rgb(207,150,13)" rx="2" ry="2" />
<text  x="806.08" y="911.5" ></text>
</g>
<g >
<title>[[uprobes]] (7,027,385 samples, 0.03%)</title><rect x="73.4" y="1029" width="0.4" height="15.0" fill="rgb(240,228,41)" rx="2" ry="2" />
<text  x="76.45" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (57,608,920 samples, 0.23%)</title><rect x="15.3" y="1013" width="2.6" height="15.0" fill="rgb(224,181,29)" rx="2" ry="2" />
<text  x="18.26" y="1023.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (5,003,063 samples, 0.02%)</title><rect x="804.5" y="981" width="0.2" height="15.0" fill="rgb(231,90,7)" rx="2" ry="2" />
<text  x="807.51" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,440,838 samples, 0.02%)</title><rect x="510.9" y="677" width="0.3" height="15.0" fill="rgb(236,8,47)" rx="2" ry="2" />
<text  x="513.91" y="687.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,210,290 samples, 0.01%)</title><rect x="855.7" y="1029" width="0.1" height="15.0" fill="rgb(217,223,34)" rx="2" ry="2" />
<text  x="858.73" y="1039.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (5,937,575 samples, 0.02%)</title><rect x="812.6" y="981" width="0.3" height="15.0" fill="rgb(229,169,31)" rx="2" ry="2" />
<text  x="815.58" y="991.5" ></text>
</g>
<g >
<title>gazebo::sensors::SimTimeEventHandler::OnUpdate (31,015,526 samples, 0.12%)</title><rect x="620.1" y="933" width="1.4" height="15.0" fill="rgb(223,147,52)" rx="2" ry="2" />
<text  x="623.10" y="943.5" ></text>
</g>
<g >
<title>std::mutex::lock (13,198,950 samples, 0.05%)</title><rect x="561.9" y="773" width="0.6" height="15.0" fill="rgb(248,24,12)" rx="2" ry="2" />
<text  x="564.88" y="783.5" ></text>
</g>
<g >
<title>joint_trajectory_controller::JointTrajectoryController::update (11,301,501 samples, 0.04%)</title><rect x="614.4" y="917" width="0.5" height="15.0" fill="rgb(248,82,49)" rx="2" ry="2" />
<text  x="617.36" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,644,693 samples, 0.05%)</title><rect x="426.7" y="853" width="0.6" height="15.0" fill="rgb(238,16,6)" rx="2" ry="2" />
<text  x="429.70" y="863.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;*&gt; (8,321,030 samples, 0.03%)</title><rect x="828.6" y="1077" width="0.3" height="15.0" fill="rgb(230,122,20)" rx="2" ry="2" />
<text  x="831.56" y="1087.5" ></text>
</g>
<g >
<title>gazebo_ros::GazeboRosInitPrivate::PublishSimTime (16,142,211 samples, 0.06%)</title><rect x="708.9" y="933" width="0.8" height="15.0" fill="rgb(224,30,52)" rx="2" ry="2" />
<text  x="711.94" y="943.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::SubscriptionBase&gt;::shared_ptr (4,345,558 samples, 0.02%)</title><rect x="812.0" y="981" width="0.2" height="15.0" fill="rgb(213,103,44)" rx="2" ry="2" />
<text  x="814.98" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;::lower_bound (4,203,405 samples, 0.02%)</title><rect x="215.3" y="949" width="0.2" height="15.0" fill="rgb(225,38,24)" rx="2" ry="2" />
<text  x="218.31" y="959.5" ></text>
</g>
<g >
<title>[libgazebo_ros_state.so] (3,591,232 samples, 0.01%)</title><rect x="680.8" y="885" width="0.2" height="15.0" fill="rgb(226,73,48)" rx="2" ry="2" />
<text  x="683.81" y="895.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (2,598,823 samples, 0.01%)</title><rect x="642.8" y="853" width="0.1" height="15.0" fill="rgb(253,117,25)" rx="2" ry="2" />
<text  x="645.77" y="863.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::SetWorldPose (9,924,703 samples, 0.04%)</title><rect x="776.0" y="805" width="0.4" height="15.0" fill="rgb(212,185,36)" rx="2" ry="2" />
<text  x="778.99" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,071,908 samples, 0.06%)</title><rect x="709.0" y="917" width="0.7" height="15.0" fill="rgb(208,156,4)" rx="2" ry="2" />
<text  x="712.04" y="927.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Model&gt;::operator (3,941,027 samples, 0.02%)</title><rect x="524.5" y="869" width="0.2" height="15.0" fill="rgb(207,185,34)" rx="2" ry="2" />
<text  x="527.49" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,085,775 samples, 0.03%)</title><rect x="492.9" y="917" width="0.4" height="15.0" fill="rgb(224,203,20)" rx="2" ry="2" />
<text  x="495.93" y="927.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo::physics::LinkPrivate*, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt; (6,006,086 samples, 0.02%)</title><rect x="591.2" y="693" width="0.3" height="15.0" fill="rgb(227,197,3)" rx="2" ry="2" />
<text  x="594.19" y="703.5" ></text>
</g>
<g >
<title>gazebo::msgs::Time::~Time (5,496,168 samples, 0.02%)</title><rect x="772.2" y="997" width="0.3" height="15.0" fill="rgb(207,190,38)" rx="2" ry="2" />
<text  x="775.21" y="1007.5" ></text>
</g>
<g >
<title>dSpaceCollide2 (47,275,610 samples, 0.19%)</title><rect x="236.2" y="901" width="2.2" height="15.0" fill="rgb(251,166,19)" rx="2" ry="2" />
<text  x="239.16" y="911.5" ></text>
</g>
<g >
<title>gazebo_plugins::GazeboRosJointStatePublisherPrivate::OnUpdate (5,992,783 samples, 0.02%)</title><rect x="707.3" y="933" width="0.3" height="15.0" fill="rgb(223,155,51)" rx="2" ry="2" />
<text  x="710.29" y="943.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::CollisionCallback (8,088,297 samples, 0.03%)</title><rect x="781.2" y="981" width="0.4" height="15.0" fill="rgb(244,167,3)" rx="2" ry="2" />
<text  x="784.19" y="991.5" ></text>
</g>
<g >
<title>_dSetValue (3,894,387 samples, 0.02%)</title><rect x="264.7" y="965" width="0.2" height="15.0" fill="rgb(243,79,21)" rx="2" ry="2" />
<text  x="267.71" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,305,043 samples, 0.10%)</title><rect x="22.9" y="933" width="1.1" height="15.0" fill="rgb(226,111,28)" rx="2" ry="2" />
<text  x="25.86" y="943.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_impl_p&lt;google::protobuf::Message&gt;::dispose (3,325,405 samples, 0.01%)</title><rect x="31.6" y="1061" width="0.2" height="15.0" fill="rgb(210,57,32)" rx="2" ry="2" />
<text  x="34.60" y="1071.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (2,280,260,306 samples, 9.00%)</title><rect x="622.5" y="981" width="106.2" height="15.0" fill="rgb(235,80,27)" rx="2" ry="2" />
<text  x="625.50" y="991.5" >std::_Bind&lt;vo..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,579,944 samples, 0.03%)</title><rect x="75.2" y="1029" width="0.4" height="15.0" fill="rgb(213,55,18)" rx="2" ry="2" />
<text  x="78.18" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (196,264,744 samples, 0.77%)</title><rect x="177.1" y="1077" width="9.2" height="15.0" fill="rgb(211,25,24)" rx="2" ry="2" />
<text  x="180.15" y="1087.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt;*, std::default_delete&lt;realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt; (6,111,107 samples, 0.02%)</title><rect x="505.2" y="805" width="0.2" height="15.0" fill="rgb(222,120,10)" rx="2" ry="2" />
<text  x="508.16" y="815.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rcl_service_t const&gt;::~shared_ptr (4,016,876 samples, 0.02%)</title><rect x="202.0" y="949" width="0.2" height="15.0" fill="rgb(252,74,48)" rx="2" ry="2" />
<text  x="204.99" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,156,643 samples, 0.01%)</title><rect x="689.4" y="773" width="0.1" height="15.0" fill="rgb(213,41,6)" rx="2" ry="2" />
<text  x="692.38" y="783.5" ></text>
</g>
<g >
<title>gazebo::transport::Connection::EnqueueMsg (18,750,765 samples, 0.07%)</title><rect x="80.6" y="1109" width="0.9" height="15.0" fill="rgb(254,116,5)" rx="2" ry="2" />
<text  x="83.63" y="1119.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::physics::LinkPrivate*, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt; (4,192,898 samples, 0.02%)</title><rect x="723.6" y="853" width="0.2" height="15.0" fill="rgb(218,120,27)" rx="2" ry="2" />
<text  x="726.63" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,624,031 samples, 0.01%)</title><rect x="22.7" y="981" width="0.2" height="15.0" fill="rgb(218,5,23)" rx="2" ry="2" />
<text  x="25.74" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,579,944 samples, 0.03%)</title><rect x="75.2" y="965" width="0.4" height="15.0" fill="rgb(208,38,45)" rx="2" ry="2" />
<text  x="78.18" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11,304,682 samples, 0.04%)</title><rect x="23.5" y="917" width="0.5" height="15.0" fill="rgb(212,176,18)" rx="2" ry="2" />
<text  x="26.46" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,124,346 samples, 0.02%)</title><rect x="380.1" y="677" width="0.2" height="15.0" fill="rgb(222,131,39)" rx="2" ry="2" />
<text  x="383.09" y="687.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::~shared_ptr (4,184,204 samples, 0.02%)</title><rect x="681.3" y="901" width="0.1" height="15.0" fill="rgb(223,65,36)" rx="2" ry="2" />
<text  x="684.25" y="911.5" ></text>
</g>
<g >
<title>ode::quickstep::dot6 (5,451,284 samples, 0.02%)</title><rect x="784.6" y="933" width="0.3" height="15.0" fill="rgb(236,180,41)" rx="2" ry="2" />
<text  x="787.60" y="943.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEHingeJoint::GlobalAxis (2,237,572 samples, 0.01%)</title><rect x="527.9" y="821" width="0.1" height="15.0" fill="rgb(231,138,45)" rx="2" ry="2" />
<text  x="530.89" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;gazebo::physics::Entity*, std::allocator&lt;gazebo::physics::Entity*&gt; &gt;::_M_create_node&lt;gazebo::physics::Entity* const&amp;&gt; (20,720,463 samples, 0.08%)</title><rect x="444.9" y="869" width="1.0" height="15.0" fill="rgb(234,160,8)" rx="2" ry="2" />
<text  x="447.94" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,157,037 samples, 0.01%)</title><rect x="746.1" y="1013" width="0.1" height="15.0" fill="rgb(254,201,54)" rx="2" ry="2" />
<text  x="749.09" y="1023.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Quaternion (2,149,091 samples, 0.01%)</title><rect x="761.8" y="1013" width="0.1" height="15.0" fill="rgb(215,25,29)" rx="2" ry="2" />
<text  x="764.78" y="1023.5" ></text>
</g>
<g >
<title>rclcpp::Time::Time (18,123,075 samples, 0.07%)</title><rect x="510.0" y="853" width="0.8" height="15.0" fill="rgb(232,137,54)" rx="2" ry="2" />
<text  x="512.97" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (357,839,622 samples, 1.41%)</title><rect x="872.6" y="1205" width="16.6" height="15.0" fill="rgb(254,79,4)" rx="2" ry="2" />
<text  x="875.58" y="1215.5" ></text>
</g>
<g >
<title>gazebo::physics::ODELink::MoveCallback (114,764,774 samples, 0.45%)</title><rect x="442.9" y="933" width="5.3" height="15.0" fill="rgb(234,46,6)" rx="2" ry="2" />
<text  x="445.86" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,652,819 samples, 0.07%)</title><rect x="1182.1" y="1045" width="0.9" height="15.0" fill="rgb(231,95,5)" rx="2" ry="2" />
<text  x="1185.10" y="1055.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (57,702,662 samples, 0.23%)</title><rect x="470.5" y="949" width="2.6" height="15.0" fill="rgb(218,5,7)" rx="2" ry="2" />
<text  x="473.46" y="959.5" ></text>
</g>
<g >
<title>[libgazebo_common.so.11.10.1] (14,226,163 samples, 0.06%)</title><rect x="890.8" y="1253" width="0.7" height="15.0" fill="rgb(231,162,45)" rx="2" ry="2" />
<text  x="893.83" y="1263.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::operator (7,630,911 samples, 0.03%)</title><rect x="547.7" y="757" width="0.3" height="15.0" fill="rgb(212,220,18)" rx="2" ry="2" />
<text  x="550.66" y="767.5" ></text>
</g>
<g >
<title>dCalcVectorDot3_41 (6,337,944 samples, 0.03%)</title><rect x="242.6" y="869" width="0.3" height="15.0" fill="rgb(254,71,11)" rx="2" ry="2" />
<text  x="245.59" y="879.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (3,916,316 samples, 0.02%)</title><rect x="606.4" y="757" width="0.2" height="15.0" fill="rgb(242,127,29)" rx="2" ry="2" />
<text  x="609.42" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,157,582 samples, 0.01%)</title><rect x="458.0" y="933" width="0.1" height="15.0" fill="rgb(245,4,37)" rx="2" ry="2" />
<text  x="460.96" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (64,860,192 samples, 0.26%)</title><rect x="475.3" y="933" width="3.1" height="15.0" fill="rgb(213,168,3)" rx="2" ry="2" />
<text  x="478.34" y="943.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_331 (6,057,794 samples, 0.02%)</title><rect x="243.8" y="901" width="0.3" height="15.0" fill="rgb(246,63,7)" rx="2" ry="2" />
<text  x="246.82" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (43,104,486 samples, 0.17%)</title><rect x="1172.1" y="1173" width="2.0" height="15.0" fill="rgb(214,100,25)" rx="2" ry="2" />
<text  x="1175.13" y="1183.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::get (2,167,427 samples, 0.01%)</title><rect x="592.3" y="757" width="0.1" height="15.0" fill="rgb(211,225,9)" rx="2" ry="2" />
<text  x="595.26" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (54,239,562 samples, 0.21%)</title><rect x="576.0" y="661" width="2.5" height="15.0" fill="rgb(243,189,28)" rx="2" ry="2" />
<text  x="579.02" y="671.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_331 (4,166,231 samples, 0.02%)</title><rect x="274.3" y="917" width="0.2" height="15.0" fill="rgb(237,25,47)" rx="2" ry="2" />
<text  x="277.34" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::construct&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt; const&amp;&gt; (7,677,951 samples, 0.03%)</title><rect x="768.7" y="981" width="0.4" height="15.0" fill="rgb(252,92,6)" rx="2" ry="2" />
<text  x="771.74" y="991.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::operator- (20,879,835 samples, 0.08%)</title><rect x="762.1" y="1029" width="0.9" height="15.0" fill="rgb(219,132,12)" rx="2" ry="2" />
<text  x="765.06" y="1039.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, hardware_interface::SystemInterface*, std::default_delete&lt;hardware_interface::SystemInterface&gt; &gt; (3,852,327 samples, 0.02%)</title><rect x="613.3" y="821" width="0.1" height="15.0" fill="rgb(249,93,6)" rx="2" ry="2" />
<text  x="616.27" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (137,859,228 samples, 0.54%)</title><rect x="880.7" y="901" width="6.4" height="15.0" fill="rgb(222,26,21)" rx="2" ry="2" />
<text  x="883.72" y="911.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (7,652,301 samples, 0.03%)</title><rect x="681.8" y="837" width="0.4" height="15.0" fill="rgb(207,8,28)" rx="2" ry="2" />
<text  x="684.84" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (34,769,553 samples, 0.14%)</title><rect x="1172.5" y="1093" width="1.6" height="15.0" fill="rgb(237,216,26)" rx="2" ry="2" />
<text  x="1175.52" y="1103.5" ></text>
</g>
<g >
<title>std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;::operator (14,093,760 samples, 0.06%)</title><rect x="546.1" y="709" width="0.7" height="15.0" fill="rgb(228,226,22)" rx="2" ry="2" />
<text  x="549.14" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,958,587 samples, 0.02%)</title><rect x="851.4" y="1093" width="0.2" height="15.0" fill="rgb(224,157,35)" rx="2" ry="2" />
<text  x="854.38" y="1103.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::InertialPrivate, std::default_delete&lt;gazebo::physics::InertialPrivate&gt; &gt;::_M_ptr (12,233,963 samples, 0.05%)</title><rect x="443.5" y="869" width="0.6" height="15.0" fill="rgb(225,27,6)" rx="2" ry="2" />
<text  x="446.52" y="879.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::~Pose (18,294,950 samples, 0.07%)</title><rect x="766.0" y="821" width="0.9" height="15.0" fill="rgb(252,213,29)" rx="2" ry="2" />
<text  x="769.03" y="831.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (4,236,775 samples, 0.02%)</title><rect x="725.7" y="917" width="0.2" height="15.0" fill="rgb(239,151,17)" rx="2" ry="2" />
<text  x="728.69" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1237" width="0.4" height="15.0" fill="rgb(235,72,16)" rx="2" ry="2" />
<text  x="1181.27" y="1247.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Quaternion (7,997,532 samples, 0.03%)</title><rect x="40.9" y="1125" width="0.4" height="15.0" fill="rgb(212,111,54)" rx="2" ry="2" />
<text  x="43.93" y="1135.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::WorldLinearVel (14,685,924 samples, 0.06%)</title><rect x="720.6" y="901" width="0.7" height="15.0" fill="rgb(248,205,35)" rx="2" ry="2" />
<text  x="723.60" y="911.5" ></text>
</g>
<g >
<title>gazebo::sensors::RaySensor::VerticalAngleResolution (3,143,021 samples, 0.01%)</title><rect x="46.6" y="1157" width="0.1" height="15.0" fill="rgb(219,151,5)" rx="2" ry="2" />
<text  x="49.58" y="1167.5" ></text>
</g>
<g >
<title>ipt_do_table (4,144,990 samples, 0.02%)</title><rect x="57.5" y="357" width="0.2" height="15.0" fill="rgb(227,60,7)" rx="2" ry="2" />
<text  x="60.46" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,850,278 samples, 0.02%)</title><rect x="832.5" y="1013" width="0.2" height="15.0" fill="rgb(231,55,13)" rx="2" ry="2" />
<text  x="835.51" y="1023.5" ></text>
</g>
<g >
<title>[libgazebo_common.so.11.10.1] (2,982,987 samples, 0.01%)</title><rect x="87.8" y="1173" width="0.1" height="15.0" fill="rgb(211,177,42)" rx="2" ry="2" />
<text  x="90.75" y="1183.5" ></text>
</g>
<g >
<title>gazebo::physics::World::Step (925,295,863 samples, 3.65%)</title><rect x="746.0" y="1077" width="43.1" height="15.0" fill="rgb(211,40,8)" rx="2" ry="2" />
<text  x="748.99" y="1087.5" >gaze..</text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::physics::WorldPrivate*, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt; (3,599,293 samples, 0.01%)</title><rect x="547.9" y="709" width="0.1" height="15.0" fill="rgb(239,124,21)" rx="2" ry="2" />
<text  x="550.85" y="719.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt; &gt; &gt; (6,573,743 samples, 0.03%)</title><rect x="805.6" y="981" width="0.3" height="15.0" fill="rgb(218,23,9)" rx="2" ry="2" />
<text  x="808.60" y="991.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::sensors::RaySensorPrivate, std::default_delete&lt;gazebo::sensors::RaySensorPrivate&gt; &gt;::get (3,143,021 samples, 0.01%)</title><rect x="46.6" y="1109" width="0.1" height="15.0" fill="rgb(253,55,32)" rx="2" ry="2" />
<text  x="49.58" y="1119.5" ></text>
</g>
<g >
<title>dSubtractVectorCross3 (3,599,267 samples, 0.01%)</title><rect x="268.9" y="965" width="0.2" height="15.0" fill="rgb(233,118,21)" rx="2" ry="2" />
<text  x="271.90" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::weak_ptr&lt;rclcpp::ServiceBase&gt; const*, std::vector&lt;std::weak_ptr&lt;rclcpp::ServiceBase&gt;, std::allocator&lt;std::weak_ptr&lt;rclcpp::ServiceBase&gt; &gt; &gt; &gt;::operator* (6,466,558 samples, 0.03%)</title><rect x="809.1" y="1013" width="0.3" height="15.0" fill="rgb(207,155,14)" rx="2" ry="2" />
<text  x="812.09" y="1023.5" ></text>
</g>
<g >
<title>gazebo::physics::RayShape::SetCollisionName (4,429,492 samples, 0.02%)</title><rect x="37.9" y="901" width="0.2" height="15.0" fill="rgb(212,197,52)" rx="2" ry="2" />
<text  x="40.93" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (27,926,932 samples, 0.11%)</title><rect x="916.4" y="1045" width="1.3" height="15.0" fill="rgb(222,88,54)" rx="2" ry="2" />
<text  x="919.43" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,377,139 samples, 0.03%)</title><rect x="214.4" y="933" width="0.3" height="15.0" fill="rgb(215,136,29)" rx="2" ry="2" />
<text  x="217.43" y="943.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (12,564,770 samples, 0.05%)</title><rect x="794.2" y="1013" width="0.5" height="15.0" fill="rgb(247,136,51)" rx="2" ry="2" />
<text  x="797.16" y="1023.5" ></text>
</g>
<g >
<title>_int_malloc (168,008,803 samples, 0.66%)</title><rect x="920.0" y="1301" width="7.9" height="15.0" fill="rgb(252,179,31)" rx="2" ry="2" />
<text  x="923.04" y="1311.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InternalMetadataWithArena::InternalMetadataWithArena (3,325,405 samples, 0.01%)</title><rect x="27.2" y="1061" width="0.1" height="15.0" fill="rgb(247,15,42)" rx="2" ry="2" />
<text  x="30.19" y="1071.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*&gt; (3,587,396 samples, 0.01%)</title><rect x="588.6" y="693" width="0.2" height="15.0" fill="rgb(227,187,12)" rx="2" ry="2" />
<text  x="591.64" y="703.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::MergeFrom (24,404,641 samples, 0.10%)</title><rect x="764.0" y="981" width="1.2" height="15.0" fill="rgb(245,229,22)" rx="2" ry="2" />
<text  x="767.03" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (223,974,861 samples, 0.88%)</title><rect x="568.1" y="757" width="10.4" height="15.0" fill="rgb(212,115,5)" rx="2" ry="2" />
<text  x="571.11" y="767.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::Waitable&gt;::shared_ptr (7,011,260 samples, 0.03%)</title><rect x="813.2" y="1029" width="0.3" height="15.0" fill="rgb(217,172,46)" rx="2" ry="2" />
<text  x="816.19" y="1039.5" ></text>
</g>
<g >
<title>dCollide (15,888,881 samples, 0.06%)</title><rect x="36.1" y="981" width="0.7" height="15.0" fill="rgb(222,188,44)" rx="2" ry="2" />
<text  x="39.05" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_realloc_insert&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (4,157,420 samples, 0.02%)</title><rect x="587.7" y="693" width="0.2" height="15.0" fill="rgb(219,152,15)" rx="2" ry="2" />
<text  x="590.67" y="703.5" ></text>
</g>
<g >
<title>dWorldQuickStep (47,300,937 samples, 0.19%)</title><rect x="746.7" y="1029" width="2.2" height="15.0" fill="rgb(243,84,28)" rx="2" ry="2" />
<text  x="749.71" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1077" width="0.4" height="15.0" fill="rgb(206,126,39)" rx="2" ry="2" />
<text  x="1181.27" y="1087.5" ></text>
</g>
<g >
<title>controller_manager::ControllerManager::update (6,245,627 samples, 0.02%)</title><rect x="615.6" y="933" width="0.3" height="15.0" fill="rgb(224,137,0)" rx="2" ry="2" />
<text  x="618.62" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,305,043 samples, 0.10%)</title><rect x="22.9" y="949" width="1.1" height="15.0" fill="rgb(220,91,8)" rx="2" ry="2" />
<text  x="25.86" y="959.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (13,198,950 samples, 0.05%)</title><rect x="561.9" y="789" width="0.6" height="15.0" fill="rgb(245,171,12)" rx="2" ry="2" />
<text  x="564.88" y="799.5" ></text>
</g>
<g >
<title>[libgazebo_ros_factory.so] (2,249,513 samples, 0.01%)</title><rect x="660.3" y="869" width="0.1" height="15.0" fill="rgb(242,96,44)" rx="2" ry="2" />
<text  x="663.32" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,918,687 samples, 0.02%)</title><rect x="620.7" y="741" width="0.2" height="15.0" fill="rgb(242,40,12)" rx="2" ry="2" />
<text  x="623.69" y="751.5" ></text>
</g>
<g >
<title>gazebo::physics::ODELink::OnPoseChange (6,019,191 samples, 0.02%)</title><rect x="776.1" y="757" width="0.3" height="15.0" fill="rgb(237,146,14)" rx="2" ry="2" />
<text  x="779.08" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,133,873 samples, 0.02%)</title><rect x="426.9" y="805" width="0.2" height="15.0" fill="rgb(220,149,29)" rx="2" ry="2" />
<text  x="429.89" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (81,162,592 samples, 0.32%)</title><rect x="1185.5" y="1157" width="3.8" height="15.0" fill="rgb(247,42,34)" rx="2" ry="2" />
<text  x="1188.51" y="1167.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (5,123,219,671 samples, 20.22%)</title><rect x="491.5" y="997" width="238.6" height="15.0" fill="rgb(230,35,52)" rx="2" ry="2" />
<text  x="494.46" y="1007.5" >std::_Function_handler&lt;void </text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,628,552 samples, 0.03%)</title><rect x="138.3" y="1237" width="0.3" height="15.0" fill="rgb(253,216,13)" rx="2" ry="2" />
<text  x="141.29" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1109" width="0.1" height="15.0" fill="rgb(207,120,2)" rx="2" ry="2" />
<text  x="135.18" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,652,819 samples, 0.07%)</title><rect x="1182.1" y="1093" width="0.9" height="15.0" fill="rgb(212,142,19)" rx="2" ry="2" />
<text  x="1185.10" y="1103.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::physics::Link*, std::_Placeholder&lt;1&gt; &gt; (6,346,628 samples, 0.03%)</title><rect x="725.3" y="949" width="0.3" height="15.0" fill="rgb(211,182,48)" rx="2" ry="2" />
<text  x="728.30" y="959.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (12,516,779,584 samples, 49.40%)</title><rect x="206.7" y="1205" width="583.0" height="15.0" fill="rgb(253,26,13)" rx="2" ry="2" />
<text  x="209.69" y="1215.5" >std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void </text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,141,612 samples, 0.02%)</title><rect x="1177.0" y="1269" width="0.2" height="15.0" fill="rgb(218,209,34)" rx="2" ry="2" />
<text  x="1180.00" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,126,400 samples, 0.02%)</title><rect x="708.7" y="789" width="0.2" height="15.0" fill="rgb(228,78,35)" rx="2" ry="2" />
<text  x="711.66" y="799.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_allocate (4,146,277 samples, 0.02%)</title><rect x="671.0" y="869" width="0.2" height="15.0" fill="rgb(220,87,2)" rx="2" ry="2" />
<text  x="674.00" y="879.5" ></text>
</g>
<g >
<title>sdf::v9::Element::Get&lt;ignition::math::v6::Vector3&lt;double&gt; &gt; (37,012,210 samples, 0.15%)</title><rect x="28.7" y="1141" width="1.7" height="15.0" fill="rgb(232,23,31)" rx="2" ry="2" />
<text  x="31.66" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,415,848 samples, 0.03%)</title><rect x="145.2" y="1269" width="0.3" height="15.0" fill="rgb(233,37,42)" rx="2" ry="2" />
<text  x="148.23" y="1279.5" ></text>
</g>
<g >
<title>controller_interface::ControllerInterface::get_current_state (4,187,661 samples, 0.02%)</title><rect x="494.1" y="901" width="0.2" height="15.0" fill="rgb(242,97,17)" rx="2" ry="2" />
<text  x="497.13" y="911.5" ></text>
</g>
<g >
<title>gazebo::event::EventT&lt;void  (5,324,378,263 samples, 21.02%)</title><rect x="483.7" y="1029" width="248.0" height="15.0" fill="rgb(236,109,38)" rx="2" ry="2" />
<text  x="486.72" y="1039.5" >gazebo::event::EventT&lt;void </text>
</g>
<g >
<title>std::_List_iterator&lt;gazebo::msgs::ServerControl&gt;::_List_iterator (3,208,204 samples, 0.01%)</title><rect x="904.9" y="1253" width="0.1" height="15.0" fill="rgb(227,14,42)" rx="2" ry="2" />
<text  x="907.87" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,305,251 samples, 0.01%)</title><rect x="126.3" y="1157" width="0.1" height="15.0" fill="rgb(213,185,31)" rx="2" ry="2" />
<text  x="129.28" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,334,647 samples, 0.01%)</title><rect x="150.1" y="1237" width="0.1" height="15.0" fill="rgb(225,78,6)" rx="2" ry="2" />
<text  x="153.06" y="1247.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::Pose3 (2,598,823 samples, 0.01%)</title><rect x="642.8" y="885" width="0.1" height="15.0" fill="rgb(211,210,0)" rx="2" ry="2" />
<text  x="645.77" y="895.5" ></text>
</g>
<g >
<title>realtime_tools::RealtimePublisher&lt;sensor_msgs::msg::JointState_&lt;std::allocator&lt;void&gt; &gt; &gt;::publishingLoop (264,188,383 samples, 1.04%)</title><rect x="849.6" y="1157" width="12.3" height="15.0" fill="rgb(219,14,32)" rx="2" ry="2" />
<text  x="852.59" y="1167.5" ></text>
</g>
<g >
<title>[libgazebo_ros_init.so] (2,152,722 samples, 0.01%)</title><rect x="624.3" y="949" width="0.1" height="15.0" fill="rgb(245,140,12)" rx="2" ry="2" />
<text  x="627.33" y="959.5" ></text>
</g>
<g >
<title>gazebo::physics::JointController::Update (14,371,581 samples, 0.06%)</title><rect x="482.0" y="1013" width="0.7" height="15.0" fill="rgb(238,19,45)" rx="2" ry="2" />
<text  x="485.01" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,414,948 samples, 0.03%)</title><rect x="146.6" y="1013" width="0.3" height="15.0" fill="rgb(220,119,50)" rx="2" ry="2" />
<text  x="149.59" y="1023.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::~_Vector_base (3,951,241 samples, 0.02%)</title><rect x="588.8" y="725" width="0.2" height="15.0" fill="rgb(254,167,53)" rx="2" ry="2" />
<text  x="591.81" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::operator (2,213,315 samples, 0.01%)</title><rect x="590.4" y="757" width="0.1" height="15.0" fill="rgb(246,116,22)" rx="2" ry="2" />
<text  x="593.44" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,447,210 samples, 0.07%)</title><rect x="736.7" y="821" width="0.9" height="15.0" fill="rgb(223,227,27)" rx="2" ry="2" />
<text  x="739.74" y="831.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Inverse (3,683,584 samples, 0.01%)</title><rect x="663.7" y="885" width="0.1" height="15.0" fill="rgb(230,100,28)" rx="2" ry="2" />
<text  x="666.65" y="895.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Inverse (12,248,768 samples, 0.05%)</title><rect x="608.1" y="773" width="0.6" height="15.0" fill="rgb(242,148,33)" rx="2" ry="2" />
<text  x="611.12" y="783.5" ></text>
</g>
<g >
<title>gazebo::transport::ConnectionManager::Run (854,284,415 samples, 3.37%)</title><rect x="48.8" y="1221" width="39.7" height="15.0" fill="rgb(246,219,42)" rx="2" ry="2" />
<text  x="51.76" y="1231.5" >gaz..</text>
</g>
<g >
<title>_dCalcVectorDot3 (2,258,540 samples, 0.01%)</title><rect x="440.1" y="917" width="0.1" height="15.0" fill="rgb(222,15,49)" rx="2" ry="2" />
<text  x="443.08" y="927.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::_find_ptrs_if_impl&lt;rclcpp::TimerBase, rclcpp::memory_strategy::MemoryStrategy::get_timer_by_handle (16,395,720 samples, 0.06%)</title><rect x="189.7" y="1029" width="0.8" height="15.0" fill="rgb(207,132,5)" rx="2" ry="2" />
<text  x="192.71" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt;::construct&lt;std::shared_ptr&lt;rcl_service_t const&gt;, std::shared_ptr&lt;rcl_service_t const&gt; &gt; (6,390,161 samples, 0.03%)</title><rect x="196.4" y="965" width="0.3" height="15.0" fill="rgb(243,81,27)" rx="2" ry="2" />
<text  x="199.43" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,381,905 samples, 0.02%)</title><rect x="796.0" y="901" width="0.3" height="15.0" fill="rgb(227,83,0)" rx="2" ry="2" />
<text  x="799.01" y="911.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (9,518,500 samples, 0.04%)</title><rect x="899.6" y="1141" width="0.5" height="15.0" fill="rgb(214,94,32)" rx="2" ry="2" />
<text  x="902.65" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,377,139 samples, 0.03%)</title><rect x="214.4" y="917" width="0.3" height="15.0" fill="rgb(209,157,4)" rx="2" ry="2" />
<text  x="217.43" y="927.5" ></text>
</g>
<g >
<title>[[uprobes]] (64,140,289 samples, 0.25%)</title><rect x="773.6" y="933" width="2.9" height="15.0" fill="rgb(250,139,2)" rx="2" ry="2" />
<text  x="776.55" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,710,963 samples, 0.02%)</title><rect x="58.1" y="565" width="0.2" height="15.0" fill="rgb(209,26,23)" rx="2" ry="2" />
<text  x="61.08" y="575.5" ></text>
</g>
<g >
<title>[libcontroller_manager.so] (8,676,504 samples, 0.03%)</title><rect x="835.4" y="1109" width="0.4" height="15.0" fill="rgb(223,212,17)" rx="2" ry="2" />
<text  x="838.44" y="1119.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_impl_p&lt;google::protobuf::Message&gt;::dispose (15,510,083 samples, 0.06%)</title><rect x="74.3" y="981" width="0.7" height="15.0" fill="rgb(209,209,47)" rx="2" ry="2" />
<text  x="77.32" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::Waitable,  (7,011,260 samples, 0.03%)</title><rect x="813.2" y="1013" width="0.3" height="15.0" fill="rgb(213,138,53)" rx="2" ry="2" />
<text  x="816.19" y="1023.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::set&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::find_node (2,172,463 samples, 0.01%)</title><rect x="722.9" y="805" width="0.1" height="15.0" fill="rgb(211,1,46)" rx="2" ry="2" />
<text  x="725.94" y="815.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (987,863,774 samples, 3.90%)</title><rect x="819.3" y="1253" width="46.1" height="15.0" fill="rgb(249,200,15)" rx="2" ry="2" />
<text  x="822.35" y="1263.5" >[lib..</text>
</g>
<g >
<title>gazebo::transport::Publisher::PublishImpl (69,343,737 samples, 0.27%)</title><rect x="213.5" y="1013" width="3.2" height="15.0" fill="rgb(221,17,50)" rx="2" ry="2" />
<text  x="216.51" y="1023.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;controller_manager::ControllerManager,  (2,652,862 samples, 0.01%)</title><rect x="776.8" y="917" width="0.1" height="15.0" fill="rgb(229,131,19)" rx="2" ry="2" />
<text  x="779.80" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,597,363 samples, 0.01%)</title><rect x="86.1" y="1061" width="0.2" height="15.0" fill="rgb(250,160,35)" rx="2" ry="2" />
<text  x="89.09" y="1071.5" ></text>
</g>
<g >
<title>dxBox::computeAABB (3,950,301 samples, 0.02%)</title><rect x="241.4" y="949" width="0.2" height="15.0" fill="rgb(208,138,5)" rx="2" ry="2" />
<text  x="244.37" y="959.5" ></text>
</g>
<g >
<title>realtime_tools::RealtimePublisher&lt;control_msgs::msg::DynamicJointState_&lt;std::allocator&lt;void&gt; &gt; &gt;::lock (16,183,643 samples, 0.06%)</title><rect x="831.1" y="1141" width="0.7" height="15.0" fill="rgb(227,2,26)" rx="2" ry="2" />
<text  x="834.09" y="1151.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (3,239,927 samples, 0.01%)</title><rect x="141.8" y="1269" width="0.1" height="15.0" fill="rgb(253,66,42)" rx="2" ry="2" />
<text  x="144.75" y="1279.5" ></text>
</g>
<g >
<title>boost::_bi::list1&lt;boost::_bi::value&lt;gazebo_ros2_control::GazeboRosControlPrivate*&gt; &gt;::operator (2,729,748,397 samples, 10.77%)</title><rect x="492.4" y="965" width="127.1" height="15.0" fill="rgb(211,94,24)" rx="2" ry="2" />
<text  x="495.38" y="975.5" >boost::_bi::lis..</text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; &gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt;*, boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (88,190,905 samples, 0.35%)</title><rect x="671.6" y="885" width="4.1" height="15.0" fill="rgb(206,100,37)" rx="2" ry="2" />
<text  x="674.57" y="895.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::PublishPose (40,055,184 samples, 0.16%)</title><rect x="223.2" y="1013" width="1.9" height="15.0" fill="rgb(217,33,25)" rx="2" ry="2" />
<text  x="226.20" y="1023.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (4,242,033 samples, 0.02%)</title><rect x="609.1" y="741" width="0.2" height="15.0" fill="rgb(216,113,8)" rx="2" ry="2" />
<text  x="612.14" y="751.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (8,694,057 samples, 0.03%)</title><rect x="919.4" y="1301" width="0.4" height="15.0" fill="rgb(239,44,29)" rx="2" ry="2" />
<text  x="922.45" y="1311.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (3,860,642 samples, 0.02%)</title><rect x="562.3" y="757" width="0.2" height="15.0" fill="rgb(226,163,13)" rx="2" ry="2" />
<text  x="565.32" y="767.5" ></text>
</g>
<g >
<title>rcutils_find_lastn (3,949,319 samples, 0.02%)</title><rect x="515.9" y="901" width="0.2" height="15.0" fill="rgb(244,136,21)" rx="2" ry="2" />
<text  x="518.93" y="911.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_subscription (15,194,205 samples, 0.06%)</title><rect x="790.5" y="965" width="0.7" height="15.0" fill="rgb(252,226,54)" rx="2" ry="2" />
<text  x="793.48" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,766,416 samples, 0.01%)</title><rect x="856.3" y="933" width="0.1" height="15.0" fill="rgb(249,156,42)" rx="2" ry="2" />
<text  x="859.26" y="943.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (3,540,426 samples, 0.01%)</title><rect x="14.4" y="869" width="0.1" height="15.0" fill="rgb(226,80,48)" rx="2" ry="2" />
<text  x="17.36" y="879.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt; &gt;,  (4,531,445 samples, 0.02%)</title><rect x="798.6" y="741" width="0.2" height="15.0" fill="rgb(235,6,12)" rx="2" ry="2" />
<text  x="801.59" y="751.5" ></text>
</g>
<g >
<title>std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;::operator (6,040,204 samples, 0.02%)</title><rect x="544.7" y="741" width="0.3" height="15.0" fill="rgb(253,133,48)" rx="2" ry="2" />
<text  x="547.73" y="751.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (5,003,063 samples, 0.02%)</title><rect x="804.5" y="997" width="0.2" height="15.0" fill="rgb(225,75,38)" rx="2" ry="2" />
<text  x="807.51" y="1007.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (2,216,506 samples, 0.01%)</title><rect x="447.7" y="885" width="0.1" height="15.0" fill="rgb(250,192,45)" rx="2" ry="2" />
<text  x="450.67" y="895.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned int const, int&gt;::pair&lt;unsigned int const&amp;&gt; (5,518,575 samples, 0.02%)</title><rect x="85.3" y="1045" width="0.2" height="15.0" fill="rgb(253,149,8)" rx="2" ry="2" />
<text  x="88.26" y="1055.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_subscription (9,205,660 samples, 0.04%)</title><rect x="192.4" y="1077" width="0.4" height="15.0" fill="rgb(225,99,48)" rx="2" ry="2" />
<text  x="195.40" y="1087.5" ></text>
</g>
<g >
<title>joint_trajectory_controller::JointTrajectoryController::publish_state (24,317,910 samples, 0.10%)</title><rect x="504.3" y="885" width="1.1" height="15.0" fill="rgb(242,63,3)" rx="2" ry="2" />
<text  x="507.32" y="895.5" ></text>
</g>
<g >
<title>hardware_interface::LoanedStateInterface::get_interface_name[abi:cxx11] (3,934,835 samples, 0.02%)</title><rect x="495.3" y="885" width="0.2" height="15.0" fill="rgb(240,68,31)" rx="2" ry="2" />
<text  x="498.33" y="895.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;::destroy&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; (2,537,634 samples, 0.01%)</title><rect x="75.8" y="981" width="0.1" height="15.0" fill="rgb(232,147,22)" rx="2" ry="2" />
<text  x="78.76" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (44,060,488 samples, 0.17%)</title><rect x="602.6" y="645" width="2.1" height="15.0" fill="rgb(210,36,37)" rx="2" ry="2" />
<text  x="605.61" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,212,574 samples, 0.12%)</title><rect x="145.5" y="1221" width="1.4" height="15.0" fill="rgb(247,211,33)" rx="2" ry="2" />
<text  x="148.53" y="1231.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (6,157,580 samples, 0.02%)</title><rect x="724.6" y="949" width="0.3" height="15.0" fill="rgb(249,34,24)" rx="2" ry="2" />
<text  x="727.61" y="959.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (5,727,014 samples, 0.02%)</title><rect x="495.7" y="821" width="0.3" height="15.0" fill="rgb(207,49,22)" rx="2" ry="2" />
<text  x="498.70" y="831.5" ></text>
</g>
<g >
<title>protobuf_contacts_2eproto::protobuf_AssignDescriptorsOnce (4,215,270 samples, 0.02%)</title><rect x="216.8" y="981" width="0.2" height="15.0" fill="rgb(209,115,26)" rx="2" ry="2" />
<text  x="219.83" y="991.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::ContainsLink (4,068,091 samples, 0.02%)</title><rect x="584.7" y="741" width="0.2" height="15.0" fill="rgb(233,32,45)" rx="2" ry="2" />
<text  x="587.74" y="751.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::select_on_container_copy_construction (2,241,455 samples, 0.01%)</title><rect x="769.6" y="1013" width="0.1" height="15.0" fill="rgb(216,11,28)" rx="2" ry="2" />
<text  x="772.61" y="1023.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (20,830,968 samples, 0.08%)</title><rect x="13.6" y="1141" width="0.9" height="15.0" fill="rgb(229,42,42)" rx="2" ry="2" />
<text  x="16.55" y="1151.5" ></text>
</g>
<g >
<title>boost::condition_variable::timed_wait&lt;boost::date_time::subsecond_duration&lt;boost::posix_time::time_duration, 1000l&gt; &gt; (41,628,137 samples, 0.16%)</title><rect x="48.9" y="1205" width="1.9" height="15.0" fill="rgb(239,119,45)" rx="2" ry="2" />
<text  x="51.91" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,865,199 samples, 0.01%)</title><rect x="32.8" y="1029" width="0.2" height="15.0" fill="rgb(215,138,24)" rx="2" ry="2" />
<text  x="35.84" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,528,212 samples, 0.02%)</title><rect x="851.6" y="1109" width="0.2" height="15.0" fill="rgb(243,57,41)" rx="2" ry="2" />
<text  x="854.56" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,281,711 samples, 0.01%)</title><rect x="841.9" y="965" width="0.2" height="15.0" fill="rgb(248,13,6)" rx="2" ry="2" />
<text  x="844.95" y="975.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (5,049,834 samples, 0.02%)</title><rect x="42.7" y="1093" width="0.3" height="15.0" fill="rgb(221,63,34)" rx="2" ry="2" />
<text  x="45.74" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,303,114 samples, 0.01%)</title><rect x="62.8" y="1109" width="0.2" height="15.0" fill="rgb(246,130,45)" rx="2" ry="2" />
<text  x="65.82" y="1119.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::run (94,393,818 samples, 0.37%)</title><rect x="13.6" y="1205" width="4.3" height="15.0" fill="rgb(211,65,33)" rx="2" ry="2" />
<text  x="16.55" y="1215.5" ></text>
</g>
<g >
<title>boost::unordered::detail::table&lt;boost::unordered::detail::set&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, boost::shared_ptr&lt;gazebo::transport::Node&gt;, boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt; &gt;::emplace_unique&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; const&amp;&gt; (4,234,238 samples, 0.02%)</title><rect x="722.9" y="821" width="0.2" height="15.0" fill="rgb(226,186,9)" rx="2" ry="2" />
<text  x="725.94" y="831.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt; &gt;, builtin_interfaces::msg::Time_&lt;std::allocator&lt;void&gt; &gt;&amp;&gt; (12,884,002 samples, 0.05%)</title><rect x="798.3" y="805" width="0.6" height="15.0" fill="rgb(224,7,3)" rx="2" ry="2" />
<text  x="801.26" y="815.5" ></text>
</g>
<g >
<title>malloc (6,549,720 samples, 0.03%)</title><rect x="12.6" y="1301" width="0.3" height="15.0" fill="rgb(250,225,52)" rx="2" ry="2" />
<text  x="15.58" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="917" width="0.2" height="15.0" fill="rgb(216,144,43)" rx="2" ry="2" />
<text  x="849.22" y="927.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::find_subscription_ptrs_if&lt;rclcpp::memory_strategy::MemoryStrategy::get_group_by_subscription (22,104,295 samples, 0.09%)</title><rect x="801.3" y="1013" width="1.0" height="15.0" fill="rgb(224,100,24)" rx="2" ry="2" />
<text  x="804.30" y="1023.5" ></text>
</g>
<g >
<title>rcl_publish (2,172,459 samples, 0.01%)</title><rect x="690.6" y="885" width="0.1" height="15.0" fill="rgb(212,111,2)" rx="2" ry="2" />
<text  x="693.63" y="895.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (2,234,945 samples, 0.01%)</title><rect x="238.6" y="901" width="0.1" height="15.0" fill="rgb(237,164,43)" rx="2" ry="2" />
<text  x="241.55" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt;, std::default_delete&lt;realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt; &gt;::_M_ptr (4,149,122 samples, 0.02%)</title><rect x="504.7" y="853" width="0.2" height="15.0" fill="rgb(251,31,51)" rx="2" ry="2" />
<text  x="507.68" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,010,599,475 samples, 15.83%)</title><rect x="968.3" y="1109" width="186.8" height="15.0" fill="rgb(235,72,23)" rx="2" ry="2" />
<text  x="971.35" y="1119.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,647,282 samples, 0.02%)</title><rect x="691.3" y="853" width="0.3" height="15.0" fill="rgb(253,46,50)" rx="2" ry="2" />
<text  x="694.31" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,180,743 samples, 0.01%)</title><rect x="618.3" y="693" width="0.1" height="15.0" fill="rgb(232,2,30)" rx="2" ry="2" />
<text  x="621.34" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::clear (7,442,632 samples, 0.03%)</title><rect x="75.8" y="1141" width="0.3" height="15.0" fill="rgb(238,216,36)" rx="2" ry="2" />
<text  x="78.76" y="1151.5" ></text>
</g>
<g >
<title>ignition::math::v6::equal&lt;double&gt; (2,265,757 samples, 0.01%)</title><rect x="261.6" y="965" width="0.1" height="15.0" fill="rgb(253,132,22)" rx="2" ry="2" />
<text  x="264.55" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (368,099,078 samples, 1.45%)</title><rect x="872.1" y="1285" width="17.1" height="15.0" fill="rgb(205,227,35)" rx="2" ry="2" />
<text  x="875.10" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,525,761 samples, 0.03%)</title><rect x="478.0" y="757" width="0.4" height="15.0" fill="rgb(233,153,17)" rx="2" ry="2" />
<text  x="480.96" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;hardware_interface::Actuator*, std::vector&lt;hardware_interface::Actuator, std::allocator&lt;hardware_interface::Actuator&gt; &gt; &gt;::__normal_iterator (3,724,146 samples, 0.01%)</title><rect x="517.6" y="885" width="0.2" height="15.0" fill="rgb(231,65,44)" rx="2" ry="2" />
<text  x="520.63" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,850,278 samples, 0.02%)</title><rect x="832.5" y="965" width="0.2" height="15.0" fill="rgb(240,202,23)" rx="2" ry="2" />
<text  x="835.51" y="975.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::GetName[abi:cxx11] (37,949,722 samples, 0.15%)</title><rect x="651.9" y="901" width="1.8" height="15.0" fill="rgb(215,15,31)" rx="2" ry="2" />
<text  x="654.88" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,096,580 samples, 0.02%)</title><rect x="615.7" y="821" width="0.2" height="15.0" fill="rgb(245,21,1)" rx="2" ry="2" />
<text  x="618.72" y="831.5" ></text>
</g>
<g >
<title>ignition::math::v6::equal&lt;double&gt; (6,886,038 samples, 0.03%)</title><rect x="41.5" y="1109" width="0.3" height="15.0" fill="rgb(242,199,26)" rx="2" ry="2" />
<text  x="44.49" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,172,459 samples, 0.01%)</title><rect x="690.6" y="789" width="0.1" height="15.0" fill="rgb(224,95,9)" rx="2" ry="2" />
<text  x="693.63" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt;::_S_select_on_copy (2,241,455 samples, 0.01%)</title><rect x="769.6" y="1029" width="0.1" height="15.0" fill="rgb(249,86,11)" rx="2" ry="2" />
<text  x="772.61" y="1039.5" ></text>
</g>
<g >
<title>std::less&lt;unsigned int&gt;::operator (10,527,037 samples, 0.04%)</title><rect x="13.9" y="741" width="0.5" height="15.0" fill="rgb(224,90,5)" rx="2" ry="2" />
<text  x="16.87" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (91,486,155 samples, 0.36%)</title><rect x="713.0" y="917" width="4.3" height="15.0" fill="rgb(253,103,47)" rx="2" ry="2" />
<text  x="716.04" y="927.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (2,148,594 samples, 0.01%)</title><rect x="273.6" y="933" width="0.1" height="15.0" fill="rgb(227,188,32)" rx="2" ry="2" />
<text  x="276.55" y="943.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt; &gt;::deallocate (4,904,998 samples, 0.02%)</title><rect x="75.9" y="1077" width="0.2" height="15.0" fill="rgb(236,137,15)" rx="2" ry="2" />
<text  x="78.87" y="1087.5" ></text>
</g>
<g >
<title>dMultiply0_331 (12,064,126 samples, 0.05%)</title><rect x="683.6" y="853" width="0.6" height="15.0" fill="rgb(216,33,27)" rx="2" ry="2" />
<text  x="686.62" y="863.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::_M_ptr (8,385,512 samples, 0.03%)</title><rect x="723.4" y="869" width="0.4" height="15.0" fill="rgb(209,110,28)" rx="2" ry="2" />
<text  x="726.44" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,762,331 samples, 0.01%)</title><rect x="1174.1" y="1205" width="0.2" height="15.0" fill="rgb(232,115,31)" rx="2" ry="2" />
<text  x="1177.14" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt; &gt;::_M_ptr (2,168,549 samples, 0.01%)</title><rect x="503.1" y="821" width="0.1" height="15.0" fill="rgb(252,190,30)" rx="2" ry="2" />
<text  x="506.07" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_List_node&lt;gazebo::physics::Entity*&gt; &gt;::max_size (6,201,211 samples, 0.02%)</title><rect x="445.3" y="821" width="0.3" height="15.0" fill="rgb(241,55,40)" rx="2" ry="2" />
<text  x="448.33" y="831.5" ></text>
</g>
<g >
<title>std::allocator&lt;gazebo::physics::ContactPublisher*&gt;::allocator (2,233,036 samples, 0.01%)</title><rect x="259.6" y="965" width="0.1" height="15.0" fill="rgb(205,152,0)" rx="2" ry="2" />
<text  x="262.58" y="975.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, sdf::v9::ParamPrivate*, false&gt;::_M_head (6,729,605 samples, 0.03%)</title><rect x="45.3" y="949" width="0.4" height="15.0" fill="rgb(243,69,30)" rx="2" ry="2" />
<text  x="48.34" y="959.5" ></text>
</g>
<g >
<title>nf_ct_acct_add (2,637,486 samples, 0.01%)</title><rect x="58.5" y="549" width="0.2" height="15.0" fill="rgb(224,15,46)" rx="2" ry="2" />
<text  x="61.53" y="559.5" ></text>
</g>
<g >
<title>gazebo::msgs::Time::~Time (3,644,236 samples, 0.01%)</title><rect x="74.4" y="885" width="0.2" height="15.0" fill="rgb(208,194,46)" rx="2" ry="2" />
<text  x="77.43" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="1109" width="0.2" height="15.0" fill="rgb(252,162,27)" rx="2" ry="2" />
<text  x="849.22" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,243,735 samples, 0.01%)</title><rect x="266.8" y="693" width="0.1" height="15.0" fill="rgb(235,205,3)" rx="2" ry="2" />
<text  x="269.79" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::operator= (14,095,140 samples, 0.06%)</title><rect x="512.6" y="853" width="0.6" height="15.0" fill="rgb(211,123,54)" rx="2" ry="2" />
<text  x="515.58" y="863.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (13,571,111 samples, 0.05%)</title><rect x="815.1" y="997" width="0.6" height="15.0" fill="rgb(249,167,20)" rx="2" ry="2" />
<text  x="818.07" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,850,278 samples, 0.02%)</title><rect x="832.5" y="1077" width="0.2" height="15.0" fill="rgb(246,165,47)" rx="2" ry="2" />
<text  x="835.51" y="1087.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::get (4,103,928 samples, 0.02%)</title><rect x="587.5" y="709" width="0.2" height="15.0" fill="rgb(218,12,50)" rx="2" ry="2" />
<text  x="590.48" y="719.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (44,081,065 samples, 0.17%)</title><rect x="673.4" y="805" width="2.1" height="15.0" fill="rgb(218,64,6)" rx="2" ry="2" />
<text  x="676.45" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,866,251 samples, 0.03%)</title><rect x="604.3" y="581" width="0.4" height="15.0" fill="rgb(232,155,41)" rx="2" ry="2" />
<text  x="607.30" y="591.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (6,052,277 samples, 0.02%)</title><rect x="802.0" y="933" width="0.3" height="15.0" fill="rgb(228,177,28)" rx="2" ry="2" />
<text  x="805.05" y="943.5" ></text>
</g>
<g >
<title>control_msgs::msg::DynamicJointState_&lt;std::allocator&lt;void&gt; &gt;::operator= (79,658,735 samples, 0.31%)</title><rect x="824.8" y="1141" width="3.8" height="15.0" fill="rgb(252,30,34)" rx="2" ry="2" />
<text  x="827.84" y="1151.5" ></text>
</g>
<g >
<title>ode::quickstep::multiply_J (20,712,532 samples, 0.08%)</title><rect x="448.6" y="965" width="1.0" height="15.0" fill="rgb(231,157,37)" rx="2" ry="2" />
<text  x="451.59" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,652,014 samples, 0.04%)</title><rect x="722.4" y="677" width="0.5" height="15.0" fill="rgb(212,208,27)" rx="2" ry="2" />
<text  x="725.45" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::operator (2,181,135 samples, 0.01%)</title><rect x="611.3" y="837" width="0.1" height="15.0" fill="rgb(207,38,23)" rx="2" ry="2" />
<text  x="614.31" y="847.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (3,918,687 samples, 0.02%)</title><rect x="620.7" y="901" width="0.2" height="15.0" fill="rgb(248,199,7)" rx="2" ry="2" />
<text  x="623.69" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (2,179,997 samples, 0.01%)</title><rect x="780.0" y="885" width="0.1" height="15.0" fill="rgb(229,170,41)" rx="2" ry="2" />
<text  x="783.03" y="895.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Entity&gt;::~shared_ptr (2,170,463 samples, 0.01%)</title><rect x="222.5" y="1013" width="0.1" height="15.0" fill="rgb(205,149,6)" rx="2" ry="2" />
<text  x="225.52" y="1023.5" ></text>
</g>
<g >
<title>rclcpp::AnyServiceCallback&lt;gazebo_msgs::srv::GetEntityState&gt;::dispatch (8,069,732 samples, 0.03%)</title><rect x="794.2" y="965" width="0.3" height="15.0" fill="rgb(229,108,3)" rx="2" ry="2" />
<text  x="797.16" y="975.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (8,069,732 samples, 0.03%)</title><rect x="794.2" y="725" width="0.3" height="15.0" fill="rgb(221,48,52)" rx="2" ry="2" />
<text  x="797.16" y="735.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::X (4,310,505 samples, 0.02%)</title><rect x="689.8" y="869" width="0.2" height="15.0" fill="rgb(236,205,6)" rx="2" ry="2" />
<text  x="692.76" y="879.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;boost::shared_ptr&lt;gazebo::transport::Connection&gt; &gt;::operator* (2,605,039 samples, 0.01%)</title><rect x="87.5" y="1189" width="0.1" height="15.0" fill="rgb(247,68,20)" rx="2" ry="2" />
<text  x="90.52" y="1199.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (6,141,059 samples, 0.02%)</title><rect x="847.2" y="1125" width="0.3" height="15.0" fill="rgb(243,55,49)" rx="2" ry="2" />
<text  x="850.17" y="1135.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (71,625,986 samples, 0.28%)</title><rect x="21.1" y="1077" width="3.4" height="15.0" fill="rgb(209,176,50)" rx="2" ry="2" />
<text  x="24.15" y="1087.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::get (2,181,135 samples, 0.01%)</title><rect x="611.3" y="821" width="0.1" height="15.0" fill="rgb(248,31,51)" rx="2" ry="2" />
<text  x="614.31" y="831.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt;, std::allocator&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (2,156,643 samples, 0.01%)</title><rect x="689.4" y="869" width="0.1" height="15.0" fill="rgb(207,84,1)" rx="2" ry="2" />
<text  x="692.38" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,151,257 samples, 0.01%)</title><rect x="864.0" y="1013" width="0.1" height="15.0" fill="rgb(214,120,21)" rx="2" ry="2" />
<text  x="866.98" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt;::push_back (3,586,923 samples, 0.01%)</title><rect x="197.7" y="1013" width="0.2" height="15.0" fill="rgb(211,157,20)" rx="2" ry="2" />
<text  x="200.72" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (2,416,687 samples, 0.01%)</title><rect x="828.3" y="1109" width="0.1" height="15.0" fill="rgb(206,73,7)" rx="2" ry="2" />
<text  x="831.27" y="1119.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::_M_ptr (5,596,400 samples, 0.02%)</title><rect x="547.8" y="725" width="0.2" height="15.0" fill="rgb(228,51,19)" rx="2" ry="2" />
<text  x="550.76" y="735.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::number_of_ready_clients (9,524,456 samples, 0.04%)</title><rect x="199.2" y="1077" width="0.4" height="15.0" fill="rgb(223,70,53)" rx="2" ry="2" />
<text  x="202.19" y="1087.5" ></text>
</g>
<g >
<title>gazebo::sensors::SensorManager::Update (7,379,813 samples, 0.03%)</title><rect x="896.2" y="1253" width="0.3" height="15.0" fill="rgb(236,106,22)" rx="2" ry="2" />
<text  x="899.18" y="1263.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,111,231 samples, 0.20%)</title><rect x="1171.8" y="1237" width="2.3" height="15.0" fill="rgb(238,156,47)" rx="2" ry="2" />
<text  x="1174.80" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, true&gt;::_Node_iterator_base (4,386,787 samples, 0.02%)</title><rect x="496.0" y="837" width="0.2" height="15.0" fill="rgb(236,229,24)" rx="2" ry="2" />
<text  x="498.96" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_client_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_client_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_client_t const&gt; &gt; &gt; &gt;::operator+ (6,421,514 samples, 0.03%)</title><rect x="814.1" y="1029" width="0.3" height="15.0" fill="rgb(244,102,48)" rx="2" ry="2" />
<text  x="817.09" y="1039.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (3,851,484 samples, 0.02%)</title><rect x="541.9" y="693" width="0.2" height="15.0" fill="rgb(249,199,18)" rx="2" ry="2" />
<text  x="544.92" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (73,108,482 samples, 0.29%)</title><rect x="914.3" y="1173" width="3.4" height="15.0" fill="rgb(217,62,41)" rx="2" ry="2" />
<text  x="917.33" y="1183.5" ></text>
</g>
<g >
<title>__lll_lock_wait (12,733,516 samples, 0.05%)</title><rect x="722.4" y="821" width="0.5" height="15.0" fill="rgb(218,139,31)" rx="2" ry="2" />
<text  x="725.35" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,286,132 samples, 0.02%)</title><rect x="927.7" y="1221" width="0.2" height="15.0" fill="rgb(228,160,52)" rx="2" ry="2" />
<text  x="930.67" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,272,626 samples, 0.01%)</title><rect x="57.1" y="53" width="0.1" height="15.0" fill="rgb(221,137,31)" rx="2" ry="2" />
<text  x="60.07" y="63.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::shared_ptr (5,561,468 samples, 0.02%)</title><rect x="220.2" y="981" width="0.3" height="15.0" fill="rgb(207,163,38)" rx="2" ry="2" />
<text  x="223.22" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (65,478,742 samples, 0.26%)</title><rect x="14.9" y="1093" width="3.0" height="15.0" fill="rgb(212,184,36)" rx="2" ry="2" />
<text  x="17.90" y="1103.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp_action::ServerGoalHandle&lt;control_msgs::action::FollowJointTrajectory&gt;,  (8,358,513 samples, 0.03%)</title><rect x="187.4" y="965" width="0.4" height="15.0" fill="rgb(254,223,28)" rx="2" ry="2" />
<text  x="190.42" y="975.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;long, void&gt; (3,728,354 samples, 0.01%)</title><rect x="859.8" y="1125" width="0.2" height="15.0" fill="rgb(239,40,29)" rx="2" ry="2" />
<text  x="862.79" y="1135.5" ></text>
</g>
<g >
<title>gazebo::event::EventT&lt;void  (162,178,884 samples, 0.64%)</title><rect x="773.2" y="1029" width="7.6" height="15.0" fill="rgb(208,53,38)" rx="2" ry="2" />
<text  x="776.22" y="1039.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::~shared_ptr (6,321,005 samples, 0.02%)</title><rect x="39.3" y="1125" width="0.3" height="15.0" fill="rgb(229,122,4)" rx="2" ry="2" />
<text  x="42.26" y="1135.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::SubscriptionBase,  (9,818,000 samples, 0.04%)</title><rect x="801.6" y="965" width="0.4" height="15.0" fill="rgb(206,20,35)" rx="2" ry="2" />
<text  x="804.59" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,652,014 samples, 0.04%)</title><rect x="722.4" y="645" width="0.5" height="15.0" fill="rgb(216,25,32)" rx="2" ry="2" />
<text  x="725.45" y="655.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::release (15,510,083 samples, 0.06%)</title><rect x="74.3" y="997" width="0.7" height="15.0" fill="rgb(216,164,49)" rx="2" ry="2" />
<text  x="77.32" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,575,197 samples, 0.01%)</title><rect x="776.5" y="869" width="0.2" height="15.0" fill="rgb(219,39,23)" rx="2" ry="2" />
<text  x="779.54" y="879.5" ></text>
</g>
<g >
<title>rclcpp_lifecycle::State::id (3,976,510 samples, 0.02%)</title><rect x="523.2" y="901" width="0.2" height="15.0" fill="rgb(237,84,40)" rx="2" ry="2" />
<text  x="526.24" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,602,555 samples, 0.01%)</title><rect x="49.3" y="1125" width="0.1" height="15.0" fill="rgb(239,95,2)" rx="2" ry="2" />
<text  x="52.27" y="1135.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Base&gt;::shared_ptr (3,128,536 samples, 0.01%)</title><rect x="781.0" y="981" width="0.2" height="15.0" fill="rgb(220,77,15)" rx="2" ry="2" />
<text  x="784.04" y="991.5" ></text>
</g>
<g >
<title>_dCalcVectorDot3 (4,141,830 samples, 0.02%)</title><rect x="243.9" y="869" width="0.2" height="15.0" fill="rgb(205,125,12)" rx="2" ry="2" />
<text  x="246.91" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,596,349 samples, 0.01%)</title><rect x="220.3" y="901" width="0.2" height="15.0" fill="rgb(235,15,12)" rx="2" ry="2" />
<text  x="223.31" y="911.5" ></text>
</g>
<g >
<title>__ieee754_atan2_fma (3,694,771 samples, 0.01%)</title><rect x="471.8" y="789" width="0.1" height="15.0" fill="rgb(217,183,53)" rx="2" ry="2" />
<text  x="474.77" y="799.5" ></text>
</g>
<g >
<title>gazebo::msgs::Quaternion::set_has_x (3,972,644 samples, 0.02%)</title><rect x="759.4" y="1013" width="0.2" height="15.0" fill="rgb(253,170,21)" rx="2" ry="2" />
<text  x="762.37" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_realloc_insert&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (4,256,050 samples, 0.02%)</title><rect x="586.1" y="661" width="0.2" height="15.0" fill="rgb(237,181,24)" rx="2" ry="2" />
<text  x="589.09" y="671.5" ></text>
</g>
<g >
<title>dds_entity_observer_unregister (12,010,565 samples, 0.05%)</title><rect x="1155.7" y="1301" width="0.6" height="15.0" fill="rgb(234,205,54)" rx="2" ry="2" />
<text  x="1158.72" y="1311.5" ></text>
</g>
<g >
<title>std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;::operator (4,076,742 samples, 0.02%)</title><rect x="221.0" y="949" width="0.2" height="15.0" fill="rgb(220,203,29)" rx="2" ry="2" />
<text  x="224.04" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,744,160 samples, 0.03%)</title><rect x="852.0" y="1077" width="0.4" height="15.0" fill="rgb(254,67,26)" rx="2" ry="2" />
<text  x="854.99" y="1087.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::operator (4,103,928 samples, 0.02%)</title><rect x="587.5" y="725" width="0.2" height="15.0" fill="rgb(225,88,2)" rx="2" ry="2" />
<text  x="590.48" y="735.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,865,199 samples, 0.01%)</title><rect x="32.8" y="1045" width="0.2" height="15.0" fill="rgb(232,24,42)" rx="2" ry="2" />
<text  x="35.84" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,157,037 samples, 0.01%)</title><rect x="746.1" y="1045" width="0.1" height="15.0" fill="rgb(236,219,31)" rx="2" ry="2" />
<text  x="749.09" y="1055.5" ></text>
</g>
<g >
<title>ddsrt_avl_walk (2,843,495 samples, 0.01%)</title><rect x="159.0" y="1285" width="0.1" height="15.0" fill="rgb(234,75,49)" rx="2" ry="2" />
<text  x="162.00" y="1295.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*, boost::shared_ptr&lt;gazebo::physics::Link&gt;*, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt; (2,346,889 samples, 0.01%)</title><rect x="597.5" y="741" width="0.2" height="15.0" fill="rgb(252,26,9)" rx="2" ry="2" />
<text  x="600.55" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,918,687 samples, 0.02%)</title><rect x="620.7" y="885" width="0.2" height="15.0" fill="rgb(226,0,35)" rx="2" ry="2" />
<text  x="623.69" y="895.5" ></text>
</g>
<g >
<title>boost::_mfi::mf1&lt;void, gazebo::sensors::ImuSensor, boost::shared_ptr&lt;gazebo::msgs::LinkData const&gt; const&amp;&gt;::operator (17,782,709 samples, 0.07%)</title><rect x="74.2" y="1077" width="0.8" height="15.0" fill="rgb(225,197,12)" rx="2" ry="2" />
<text  x="77.22" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::emplace_back&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (3,828,230 samples, 0.02%)</title><rect x="589.5" y="725" width="0.2" height="15.0" fill="rgb(254,108,20)" rx="2" ry="2" />
<text  x="592.52" y="735.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;*&gt; (10,357,145 samples, 0.04%)</title><rect x="610.3" y="789" width="0.4" height="15.0" fill="rgb(253,183,44)" rx="2" ry="2" />
<text  x="613.26" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,150,199 samples, 0.01%)</title><rect x="13.5" y="1221" width="0.1" height="15.0" fill="rgb(219,163,28)" rx="2" ry="2" />
<text  x="16.45" y="1231.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_any_executable (15,194,205 samples, 0.06%)</title><rect x="790.5" y="1045" width="0.7" height="15.0" fill="rgb(230,128,19)" rx="2" ry="2" />
<text  x="793.48" y="1055.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator* (4,056,903 samples, 0.02%)</title><rect x="527.1" y="773" width="0.2" height="15.0" fill="rgb(233,168,3)" rx="2" ry="2" />
<text  x="530.14" y="783.5" ></text>
</g>
<g >
<title>gazebo::physics::ContactManager::SubscribersConnected (9,915,925 samples, 0.04%)</title><rect x="239.4" y="885" width="0.5" height="15.0" fill="rgb(218,141,18)" rx="2" ry="2" />
<text  x="242.40" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,368,105 samples, 0.02%)</title><rect x="1154.8" y="949" width="0.2" height="15.0" fill="rgb(243,25,19)" rx="2" ry="2" />
<text  x="1157.79" y="959.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator= (4,207,983 samples, 0.02%)</title><rect x="607.6" y="773" width="0.2" height="15.0" fill="rgb(229,228,35)" rx="2" ry="2" />
<text  x="610.65" y="783.5" ></text>
</g>
<g >
<title>gazebo::common::Time::operator- (4,109,589 samples, 0.02%)</title><rect x="742.8" y="1029" width="0.1" height="15.0" fill="rgb(224,111,25)" rx="2" ry="2" />
<text  x="745.76" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (2,320,116 samples, 0.01%)</title><rect x="904.6" y="1237" width="0.1" height="15.0" fill="rgb(226,126,11)" rx="2" ry="2" />
<text  x="907.58" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,076,686 samples, 0.02%)</title><rect x="339.4" y="853" width="0.2" height="15.0" fill="rgb(232,66,50)" rx="2" ry="2" />
<text  x="342.38" y="863.5" ></text>
</g>
<g >
<title>dxJoint::isEnabled (3,939,547 samples, 0.02%)</title><rect x="451.3" y="981" width="0.2" height="15.0" fill="rgb(211,78,1)" rx="2" ry="2" />
<text  x="454.31" y="991.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;gazebo_ros2_control::GazeboRosControlPlugin::Load (368,172,242 samples, 1.45%)</title><rect x="186.9" y="1285" width="17.1" height="15.0" fill="rgb(205,27,15)" rx="2" ry="2" />
<text  x="189.89" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,100,153 samples, 0.10%)</title><rect x="705.7" y="757" width="1.1" height="15.0" fill="rgb(254,36,40)" rx="2" ry="2" />
<text  x="708.65" y="767.5" ></text>
</g>
<g >
<title>google::protobuf::internal::GenericTypeHandler&lt;gazebo::msgs::Pose&gt;::NewFromPrototype (6,964,964 samples, 0.03%)</title><rect x="754.8" y="997" width="0.3" height="15.0" fill="rgb(236,45,20)" rx="2" ry="2" />
<text  x="757.77" y="1007.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;*&gt; (10,301,662 samples, 0.04%)</title><rect x="678.2" y="853" width="0.5" height="15.0" fill="rgb(217,185,30)" rx="2" ry="2" />
<text  x="681.19" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (120,467,517 samples, 0.48%)</title><rect x="881.3" y="885" width="5.7" height="15.0" fill="rgb(209,17,21)" rx="2" ry="2" />
<text  x="884.34" y="895.5" ></text>
</g>
<g >
<title>boost::static_pointer_cast&lt;gazebo::physics::Collision, gazebo::physics::Base&gt; (24,612,268 samples, 0.10%)</title><rect x="549.1" y="773" width="1.1" height="15.0" fill="rgb(222,174,6)" rx="2" ry="2" />
<text  x="552.06" y="783.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (18,070,980 samples, 0.07%)</title><rect x="860.3" y="1125" width="0.9" height="15.0" fill="rgb(211,36,19)" rx="2" ry="2" />
<text  x="863.33" y="1135.5" ></text>
</g>
<g >
<title>gazebo_plugins::GazeboRosRaySensorPrivate::PublishLaserScan (16,489,393 samples, 0.07%)</title><rect x="73.3" y="1061" width="0.7" height="15.0" fill="rgb(206,133,1)" rx="2" ry="2" />
<text  x="76.27" y="1071.5" ></text>
</g>
<g >
<title>take_and_do_error_handling (15,194,205 samples, 0.06%)</title><rect x="790.5" y="1013" width="0.7" height="15.0" fill="rgb(251,131,0)" rx="2" ry="2" />
<text  x="793.48" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::vector (35,338,312 samples, 0.14%)</title><rect x="769.6" y="1045" width="1.7" height="15.0" fill="rgb(244,126,45)" rx="2" ry="2" />
<text  x="772.61" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (40,768,002 samples, 0.16%)</title><rect x="10.6" y="1301" width="1.9" height="15.0" fill="rgb(223,222,43)" rx="2" ry="2" />
<text  x="13.64" y="1311.5" ></text>
</g>
<g >
<title>dxSimpleSpace::cleanGeoms (6,270,924 samples, 0.02%)</title><rect x="238.9" y="853" width="0.3" height="15.0" fill="rgb(208,92,42)" rx="2" ry="2" />
<text  x="241.93" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,197,577 samples, 0.09%)</title><rect x="480.0" y="837" width="1.1" height="15.0" fill="rgb(220,98,21)" rx="2" ry="2" />
<text  x="483.05" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (4,157,420 samples, 0.02%)</title><rect x="587.7" y="725" width="0.2" height="15.0" fill="rgb(231,198,25)" rx="2" ry="2" />
<text  x="590.67" y="735.5" ></text>
</g>
<g >
<title>trajectory_msgs::msg::JointTrajectoryPoint_&lt;std::allocator&lt;void&gt; &gt;::JointTrajectoryPoint_ (10,115,714 samples, 0.04%)</title><rect x="514.5" y="885" width="0.5" height="15.0" fill="rgb(221,196,45)" rx="2" ry="2" />
<text  x="517.51" y="895.5" ></text>
</g>
<g >
<title>[libjoint_state_broadcaster.so] (6,662,906 samples, 0.03%)</title><rect x="854.3" y="1109" width="0.4" height="15.0" fill="rgb(252,33,8)" rx="2" ry="2" />
<text  x="857.34" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (34,769,553 samples, 0.14%)</title><rect x="1172.5" y="1125" width="1.6" height="15.0" fill="rgb(219,108,27)" rx="2" ry="2" />
<text  x="1175.52" y="1135.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (4,100,578 samples, 0.02%)</title><rect x="270.4" y="949" width="0.2" height="15.0" fill="rgb(227,174,35)" rx="2" ry="2" />
<text  x="273.36" y="959.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_impl_p&lt;google::protobuf::Message&gt;::dispose (24,252,778 samples, 0.10%)</title><rect x="765.8" y="933" width="1.1" height="15.0" fill="rgb(207,221,30)" rx="2" ry="2" />
<text  x="768.76" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,032,103 samples, 0.02%)</title><rect x="831.1" y="981" width="0.3" height="15.0" fill="rgb(240,2,52)" rx="2" ry="2" />
<text  x="834.09" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="965" width="0.1" height="15.0" fill="rgb(229,14,49)" rx="2" ry="2" />
<text  x="839.31" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (138,009,216 samples, 0.54%)</title><rect x="700.4" y="837" width="6.4" height="15.0" fill="rgb(213,210,15)" rx="2" ry="2" />
<text  x="703.39" y="847.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Quaternion (3,683,294 samples, 0.01%)</title><rect x="606.1" y="773" width="0.1" height="15.0" fill="rgb(209,41,23)" rx="2" ry="2" />
<text  x="609.06" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,634,785 samples, 0.09%)</title><rect x="736.5" y="869" width="1.1" height="15.0" fill="rgb(213,199,20)" rx="2" ry="2" />
<text  x="739.55" y="879.5" ></text>
</g>
<g >
<title>rcl_publish (10,221,319 samples, 0.04%)</title><rect x="842.1" y="1125" width="0.4" height="15.0" fill="rgb(244,142,0)" rx="2" ry="2" />
<text  x="845.05" y="1135.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::CopyFrom (6,466,880 samples, 0.03%)</title><rect x="722.0" y="869" width="0.3" height="15.0" fill="rgb(240,76,5)" rx="2" ry="2" />
<text  x="724.96" y="879.5" ></text>
</g>
<g >
<title>dxReallocateWorldProcessContext (45,283,020 samples, 0.18%)</title><rect x="449.7" y="1013" width="2.1" height="15.0" fill="rgb(249,121,0)" rx="2" ry="2" />
<text  x="452.73" y="1023.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::WorldPrivate, std::default_delete&lt;gazebo::physics::WorldPrivate&gt; &gt;::_M_ptr (8,473,753 samples, 0.03%)</title><rect x="561.4" y="741" width="0.4" height="15.0" fill="rgb(247,226,17)" rx="2" ry="2" />
<text  x="564.39" y="751.5" ></text>
</g>
<g >
<title>gazebo::sensors::SensorManager::SensorContainer::RunLoop (650,406,174 samples, 2.57%)</title><rect x="18.3" y="1221" width="30.3" height="15.0" fill="rgb(229,140,32)" rx="2" ry="2" />
<text  x="21.29" y="1231.5" >ga..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,649,095 samples, 0.07%)</title><rect x="853.5" y="997" width="0.8" height="15.0" fill="rgb(248,90,13)" rx="2" ry="2" />
<text  x="856.49" y="1007.5" ></text>
</g>
<g >
<title>gazebo::physics::ContactManager::SubscribersConnected (11,357,324 samples, 0.04%)</title><rect x="237.7" y="821" width="0.6" height="15.0" fill="rgb(208,54,32)" rx="2" ry="2" />
<text  x="240.74" y="831.5" ></text>
</g>
<g >
<title>controller_manager::ControllerManager::write (44,871,004 samples, 0.18%)</title><rect x="774.5" y="917" width="2.0" height="15.0" fill="rgb(230,227,32)" rx="2" ry="2" />
<text  x="777.45" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,029,167 samples, 0.02%)</title><rect x="886.4" y="501" width="0.2" height="15.0" fill="rgb(227,207,25)" rx="2" ry="2" />
<text  x="889.38" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::World&gt;*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::World&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::World&gt; &gt; &gt; &gt;::__normal_iterator (2,722,358 samples, 0.01%)</title><rect x="896.1" y="1221" width="0.1" height="15.0" fill="rgb(227,106,14)" rx="2" ry="2" />
<text  x="899.05" y="1231.5" ></text>
</g>
<g >
<title>dxHashSpace::collide2 (80,172,377 samples, 0.32%)</title><rect x="35.3" y="1109" width="3.7" height="15.0" fill="rgb(229,122,17)" rx="2" ry="2" />
<text  x="38.26" y="1119.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Vector3 (4,125,960 samples, 0.02%)</title><rect x="580.9" y="789" width="0.2" height="15.0" fill="rgb(238,41,25)" rx="2" ry="2" />
<text  x="583.86" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (32,970,899 samples, 0.13%)</title><rect x="633.5" y="869" width="1.6" height="15.0" fill="rgb(218,119,45)" rx="2" ry="2" />
<text  x="636.53" y="879.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (3,932,805 samples, 0.02%)</title><rect x="596.4" y="725" width="0.2" height="15.0" fill="rgb(211,174,38)" rx="2" ry="2" />
<text  x="599.42" y="735.5" ></text>
</g>
<g >
<title>boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (17,469,504 samples, 0.07%)</title><rect x="13.7" y="949" width="0.8" height="15.0" fill="rgb(229,25,45)" rx="2" ry="2" />
<text  x="16.71" y="959.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::Position (17,952,494 samples, 0.07%)</title><rect x="578.9" y="805" width="0.8" height="15.0" fill="rgb(218,175,27)" rx="2" ry="2" />
<text  x="581.91" y="815.5" ></text>
</g>
<g >
<title>dAddVectors3 (2,189,777 samples, 0.01%)</title><rect x="683.5" y="837" width="0.1" height="15.0" fill="rgb(226,173,35)" rx="2" ry="2" />
<text  x="686.52" y="847.5" ></text>
</g>
<g >
<title>dMultiply0_331 (4,166,231 samples, 0.02%)</title><rect x="274.3" y="933" width="0.2" height="15.0" fill="rgb(222,128,54)" rx="2" ry="2" />
<text  x="277.34" y="943.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (3,115,757 samples, 0.01%)</title><rect x="861.7" y="1125" width="0.1" height="15.0" fill="rgb(240,101,1)" rx="2" ry="2" />
<text  x="864.68" y="1135.5" ></text>
</g>
<g >
<title>std::_Mu&lt;std::_Placeholder&lt;1&gt;, false, true&gt;::operator (3,719,459 samples, 0.01%)</title><rect x="727.2" y="965" width="0.2" height="15.0" fill="rgb(228,156,40)" rx="2" ry="2" />
<text  x="730.19" y="975.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (7,281,247 samples, 0.03%)</title><rect x="791.2" y="933" width="0.3" height="15.0" fill="rgb(229,76,41)" rx="2" ry="2" />
<text  x="794.19" y="943.5" ></text>
</g>
<g >
<title>realtime_tools::RealtimePublisher&lt;control_msgs::msg::JointTrajectoryControllerState_&lt;std::allocator&lt;void&gt; &gt; &gt;::unlock (8,261,869 samples, 0.03%)</title><rect x="843.2" y="1141" width="0.3" height="15.0" fill="rgb(239,157,51)" rx="2" ry="2" />
<text  x="846.16" y="1151.5" ></text>
</g>
<g >
<title>rcl_publisher_is_valid (2,585,181 samples, 0.01%)</title><rect x="852.4" y="1093" width="0.1" height="15.0" fill="rgb(244,17,52)" rx="2" ry="2" />
<text  x="855.39" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,368,669 samples, 0.03%)</title><rect x="833.6" y="965" width="0.3" height="15.0" fill="rgb(248,6,1)" rx="2" ry="2" />
<text  x="836.60" y="975.5" ></text>
</g>
<g >
<title>boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo_plugins::GazeboRosRaySensorPrivate, boost::shared_ptr&lt;gazebo::msgs::LaserScanStamped const&gt; const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo_plugins::GazeboRosRaySensorPrivate*&gt;, boost::arg&lt;1&gt; &gt; &gt;::operator (16,489,393 samples, 0.07%)</title><rect x="73.3" y="1109" width="0.7" height="15.0" fill="rgb(240,181,39)" rx="2" ry="2" />
<text  x="76.27" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (13,876,801 samples, 0.05%)</title><rect x="501.7" y="805" width="0.6" height="15.0" fill="rgb(218,165,43)" rx="2" ry="2" />
<text  x="504.69" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,952,087 samples, 0.02%)</title><rect x="487.2" y="837" width="0.2" height="15.0" fill="rgb(216,85,4)" rx="2" ry="2" />
<text  x="490.20" y="847.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::MessageLite (4,744,901 samples, 0.02%)</title><rect x="754.9" y="933" width="0.2" height="15.0" fill="rgb(242,10,50)" rx="2" ry="2" />
<text  x="757.88" y="943.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::CreateMaybeMessage&lt;gazebo::msgs::Vector3d&gt; (4,277,851 samples, 0.02%)</title><rect x="759.1" y="1013" width="0.2" height="15.0" fill="rgb(214,202,30)" rx="2" ry="2" />
<text  x="762.07" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::begin (3,847,801 samples, 0.02%)</title><rect x="696.5" y="917" width="0.2" height="15.0" fill="rgb(219,137,19)" rx="2" ry="2" />
<text  x="699.49" y="927.5" ></text>
</g>
<g >
<title>gazebo::transport::Publication::GetCallbackCount (3,923,638 samples, 0.02%)</title><rect x="721.5" y="885" width="0.2" height="15.0" fill="rgb(246,124,45)" rx="2" ry="2" />
<text  x="724.48" y="895.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (3,673,663 samples, 0.01%)</title><rect x="512.9" y="757" width="0.1" height="15.0" fill="rgb(231,176,25)" rx="2" ry="2" />
<text  x="515.88" y="767.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (9,121,137 samples, 0.04%)</title><rect x="836.0" y="1125" width="0.4" height="15.0" fill="rgb(235,53,1)" rx="2" ry="2" />
<text  x="839.01" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (7,504,807 samples, 0.03%)</title><rect x="33.3" y="1157" width="0.3" height="15.0" fill="rgb(228,24,34)" rx="2" ry="2" />
<text  x="36.28" y="1167.5" ></text>
</g>
<g >
<title>std::function&lt;void  (6,421,514 samples, 0.03%)</title><rect x="799.3" y="965" width="0.3" height="15.0" fill="rgb(246,176,43)" rx="2" ry="2" />
<text  x="802.30" y="975.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::_Bind&lt;void  (82,914,669 samples, 0.33%)</title><rect x="789.7" y="1237" width="3.8" height="15.0" fill="rgb(217,38,32)" rx="2" ry="2" />
<text  x="792.65" y="1247.5" ></text>
</g>
<g >
<title>dds_entity_in_scope (12,458,433 samples, 0.05%)</title><rect x="1155.1" y="1301" width="0.6" height="15.0" fill="rgb(212,211,33)" rx="2" ry="2" />
<text  x="1158.14" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1 (6,643,672 samples, 0.03%)</title><rect x="500.0" y="853" width="0.3" height="15.0" fill="rgb(228,15,24)" rx="2" ry="2" />
<text  x="503.01" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,305,251 samples, 0.01%)</title><rect x="126.3" y="1221" width="0.1" height="15.0" fill="rgb(217,118,29)" rx="2" ry="2" />
<text  x="129.28" y="1231.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt; &gt; &gt;::construct&lt;geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt;, geometry_msgs::msg::Twist_&lt;std::allocator&lt;void&gt; &gt; const&amp;&gt; (6,062,007 samples, 0.02%)</title><rect x="694.0" y="885" width="0.2" height="15.0" fill="rgb(219,93,47)" rx="2" ry="2" />
<text  x="696.96" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,980,230 samples, 0.02%)</title><rect x="788.2" y="1013" width="0.2" height="15.0" fill="rgb(247,89,0)" rx="2" ry="2" />
<text  x="791.18" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1141" width="0.4" height="15.0" fill="rgb(250,80,0)" rx="2" ry="2" />
<text  x="1181.27" y="1151.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;::_List_iterator (2,272,626 samples, 0.01%)</title><rect x="81.9" y="1141" width="0.1" height="15.0" fill="rgb(215,141,17)" rx="2" ry="2" />
<text  x="84.86" y="1151.5" ></text>
</g>
<g >
<title>gazebo::physics::Model::WorldAngularVel (7,158,836 samples, 0.03%)</title><rect x="779.7" y="901" width="0.3" height="15.0" fill="rgb(241,28,34)" rx="2" ry="2" />
<text  x="782.70" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::World::SimTime (6,244,107 samples, 0.02%)</title><rect x="260.7" y="1013" width="0.3" height="15.0" fill="rgb(211,7,44)" rx="2" ry="2" />
<text  x="263.71" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,305,251 samples, 0.01%)</title><rect x="126.3" y="1141" width="0.1" height="15.0" fill="rgb(220,214,26)" rx="2" ry="2" />
<text  x="129.28" y="1151.5" ></text>
</g>
<g >
<title>[libhardware_interface.so] (3,852,327 samples, 0.02%)</title><rect x="613.3" y="789" width="0.1" height="15.0" fill="rgb(222,200,18)" rx="2" ry="2" />
<text  x="616.27" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::get (3,766,232 samples, 0.01%)</title><rect x="585.5" y="661" width="0.1" height="15.0" fill="rgb(248,160,14)" rx="2" ry="2" />
<text  x="588.47" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,243,735 samples, 0.01%)</title><rect x="266.8" y="853" width="0.1" height="15.0" fill="rgb(219,108,30)" rx="2" ry="2" />
<text  x="269.79" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,463,925 samples, 0.03%)</title><rect x="13.1" y="1093" width="0.4" height="15.0" fill="rgb(223,31,0)" rx="2" ry="2" />
<text  x="16.10" y="1103.5" ></text>
</g>
<g >
<title>gazebo::physics::Base::HasType (6,143,484 samples, 0.02%)</title><rect x="236.5" y="837" width="0.3" height="15.0" fill="rgb(213,33,52)" rx="2" ry="2" />
<text  x="239.53" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,032,103 samples, 0.02%)</title><rect x="831.1" y="933" width="0.3" height="15.0" fill="rgb(234,19,35)" rx="2" ry="2" />
<text  x="834.09" y="943.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_executable (392,175,781 samples, 1.55%)</title><rect x="800.0" y="1077" width="18.3" height="15.0" fill="rgb(218,159,3)" rx="2" ry="2" />
<text  x="803.04" y="1087.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Z (3,274,399 samples, 0.01%)</title><rect x="32.7" y="1125" width="0.1" height="15.0" fill="rgb(226,66,46)" rx="2" ry="2" />
<text  x="35.68" y="1135.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rcl_subscription_t&gt;::shared_ptr (6,778,683 samples, 0.03%)</title><rect x="811.4" y="965" width="0.3" height="15.0" fill="rgb(225,90,13)" rx="2" ry="2" />
<text  x="814.38" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt; &gt;::new_allocator (7,368,669 samples, 0.03%)</title><rect x="824.5" y="1077" width="0.3" height="15.0" fill="rgb(248,146,41)" rx="2" ry="2" />
<text  x="827.48" y="1087.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::_find_ptrs_if_impl&lt;rclcpp::SubscriptionBase, rclcpp::memory_strategy::MemoryStrategy::get_subscription_by_handle (7,843,523 samples, 0.03%)</title><rect x="803.1" y="997" width="0.3" height="15.0" fill="rgb(217,96,40)" rx="2" ry="2" />
<text  x="806.08" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,150,356 samples, 0.02%)</title><rect x="616.1" y="869" width="0.3" height="15.0" fill="rgb(224,155,25)" rx="2" ry="2" />
<text  x="619.10" y="879.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategy::MemoryStrategy::get_subscription_by_handle (7,843,523 samples, 0.03%)</title><rect x="803.1" y="981" width="0.3" height="15.0" fill="rgb(251,113,5)" rx="2" ry="2" />
<text  x="806.08" y="991.5" ></text>
</g>
<g >
<title>rcl_service_get_rmw_handle (6,809,922 samples, 0.03%)</title><rect x="792.5" y="981" width="0.3" height="15.0" fill="rgb(213,163,12)" rx="2" ry="2" />
<text  x="795.46" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::construct&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt; const&amp;&gt; (2,416,283 samples, 0.01%)</title><rect x="592.9" y="757" width="0.1" height="15.0" fill="rgb(227,35,32)" rx="2" ry="2" />
<text  x="595.93" y="767.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::lock (4,117,398 samples, 0.02%)</title><rect x="563.8" y="805" width="0.2" height="15.0" fill="rgb(217,49,0)" rx="2" ry="2" />
<text  x="566.84" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (57,608,920 samples, 0.23%)</title><rect x="15.3" y="1029" width="2.6" height="15.0" fill="rgb(219,76,23)" rx="2" ry="2" />
<text  x="18.26" y="1039.5" ></text>
</g>
<g >
<title>boost::detail::atomic_decrement (7,567,775 samples, 0.03%)</title><rect x="246.3" y="965" width="0.4" height="15.0" fill="rgb(237,30,36)" rx="2" ry="2" />
<text  x="249.30" y="975.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::Inverse (4,111,290 samples, 0.02%)</title><rect x="557.3" y="725" width="0.2" height="15.0" fill="rgb(208,0,25)" rx="2" ry="2" />
<text  x="560.32" y="735.5" ></text>
</g>
<g >
<title>__dynamic_cast (2,840,225 samples, 0.01%)</title><rect x="138.2" y="1269" width="0.1" height="15.0" fill="rgb(249,49,5)" rx="2" ry="2" />
<text  x="141.16" y="1279.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;gazebo::physics::LinkPrivate, std::default_delete&lt;gazebo::physics::LinkPrivate&gt; &gt;::_M_ptr (3,766,232 samples, 0.01%)</title><rect x="585.5" y="645" width="0.1" height="15.0" fill="rgb(230,35,35)" rx="2" ry="2" />
<text  x="588.47" y="655.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,082,184 samples, 0.03%)</title><rect x="520.8" y="885" width="0.4" height="15.0" fill="rgb(211,3,53)" rx="2" ry="2" />
<text  x="523.82" y="895.5" ></text>
</g>
<g >
<title>dMultiply0_331 (2,330,391 samples, 0.01%)</title><rect x="262.4" y="981" width="0.1" height="15.0" fill="rgb(232,163,29)" rx="2" ry="2" />
<text  x="265.38" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,368,669 samples, 0.03%)</title><rect x="833.6" y="1029" width="0.3" height="15.0" fill="rgb(208,216,16)" rx="2" ry="2" />
<text  x="836.60" y="1039.5" ></text>
</g>
<g >
<title>std::copy&lt;std::_List_iterator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt;, std::back_insert_iterator&lt;std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; (8,775,095 samples, 0.03%)</title><rect x="84.5" y="1141" width="0.4" height="15.0" fill="rgb(205,16,14)" rx="2" ry="2" />
<text  x="87.48" y="1151.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::_M_get_Tp_allocator (2,215,611 samples, 0.01%)</title><rect x="590.3" y="757" width="0.1" height="15.0" fill="rgb(252,88,42)" rx="2" ry="2" />
<text  x="593.33" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,195,211 samples, 0.02%)</title><rect x="789.3" y="981" width="0.3" height="15.0" fill="rgb(223,133,38)" rx="2" ry="2" />
<text  x="792.28" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="901" width="0.2" height="15.0" fill="rgb(222,158,10)" rx="2" ry="2" />
<text  x="849.22" y="911.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (9,319,109 samples, 0.04%)</title><rect x="153.0" y="1285" width="0.4" height="15.0" fill="rgb(238,128,54)" rx="2" ry="2" />
<text  x="155.97" y="1295.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::util::LogPlayPrivate, std::default_delete&lt;gazebo::util::LogPlayPrivate&gt; &gt;::get (4,100,764 samples, 0.02%)</title><rect x="772.6" y="1013" width="0.2" height="15.0" fill="rgb(212,223,17)" rx="2" ry="2" />
<text  x="775.57" y="1023.5" ></text>
</g>
<g >
<title>boost::_bi::bind_t&lt;unsigned long, boost::_mfi::mf0&lt;unsigned long, boost::asio::io_context&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;boost::asio::io_context*&gt; &gt; &gt;::operator (94,393,818 samples, 0.37%)</title><rect x="13.6" y="1269" width="4.3" height="15.0" fill="rgb(238,78,50)" rx="2" ry="2" />
<text  x="16.55" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,597,363 samples, 0.01%)</title><rect x="86.1" y="1077" width="0.2" height="15.0" fill="rgb(208,33,33)" rx="2" ry="2" />
<text  x="89.09" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,744,160 samples, 0.03%)</title><rect x="852.0" y="1045" width="0.4" height="15.0" fill="rgb(229,92,7)" rx="2" ry="2" />
<text  x="854.99" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator= (5,701,013 samples, 0.02%)</title><rect x="839.8" y="1125" width="0.3" height="15.0" fill="rgb(205,68,46)" rx="2" ry="2" />
<text  x="842.82" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,210,290 samples, 0.01%)</title><rect x="855.7" y="1093" width="0.1" height="15.0" fill="rgb(247,53,28)" rx="2" ry="2" />
<text  x="858.73" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,368,669 samples, 0.03%)</title><rect x="833.6" y="1125" width="0.3" height="15.0" fill="rgb(229,145,12)" rx="2" ry="2" />
<text  x="836.60" y="1135.5" ></text>
</g>
<g >
<title>[librmw_cyclonedds_cpp.so] (139,933,581 samples, 0.55%)</title><rect x="127.3" y="1285" width="6.6" height="15.0" fill="rgb(220,171,49)" rx="2" ry="2" />
<text  x="130.33" y="1295.5" ></text>
</g>
<g >
<title>sdf::v9::Param::Get&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (9,472,901 samples, 0.04%)</title><rect x="19.5" y="1141" width="0.5" height="15.0" fill="rgb(208,158,52)" rx="2" ry="2" />
<text  x="22.52" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (56,680,756 samples, 0.22%)</title><rect x="883.9" y="581" width="2.7" height="15.0" fill="rgb(215,64,5)" rx="2" ry="2" />
<text  x="886.93" y="591.5" ></text>
</g>
<g >
<title>gazebo::transport::Publication::SetPrevMsg (24,252,778 samples, 0.10%)</title><rect x="765.8" y="1013" width="1.1" height="15.0" fill="rgb(220,111,18)" rx="2" ry="2" />
<text  x="768.76" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,463,925 samples, 0.03%)</title><rect x="13.1" y="1077" width="0.4" height="15.0" fill="rgb(227,229,17)" rx="2" ry="2" />
<text  x="16.10" y="1087.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, gazebo::ServerPrivate*, false&gt;::_M_head (2,168,010 samples, 0.01%)</title><rect x="906.8" y="1173" width="0.1" height="15.0" fill="rgb(233,118,46)" rx="2" ry="2" />
<text  x="909.78" y="1183.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo_ros2_control::GazeboSystemPrivate*, std::default_delete&lt;gazebo_ros2_control::GazeboSystemPrivate&gt; &gt; (6,002,028 samples, 0.02%)</title><rect x="612.1" y="789" width="0.3" height="15.0" fill="rgb(241,168,37)" rx="2" ry="2" />
<text  x="615.08" y="799.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;rclcpp::Waitable&gt;::lock (9,247,408 samples, 0.04%)</title><rect x="198.6" y="1029" width="0.4" height="15.0" fill="rgb(209,172,19)" rx="2" ry="2" />
<text  x="201.58" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,838,386 samples, 0.02%)</title><rect x="765.5" y="805" width="0.3" height="15.0" fill="rgb(207,203,17)" rx="2" ry="2" />
<text  x="768.53" y="815.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (7,017,392 samples, 0.03%)</title><rect x="790.9" y="757" width="0.3" height="15.0" fill="rgb(244,39,37)" rx="2" ry="2" />
<text  x="793.86" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,334,647 samples, 0.01%)</title><rect x="150.1" y="1189" width="0.1" height="15.0" fill="rgb(235,41,28)" rx="2" ry="2" />
<text  x="153.06" y="1199.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::list&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; &gt;::empty (3,104,227 samples, 0.01%)</title><rect x="76.5" y="1157" width="0.2" height="15.0" fill="rgb(222,199,11)" rx="2" ry="2" />
<text  x="79.54" y="1167.5" ></text>
</g>
<g >
<title>rclcpp::Executor::wait_for_work (266,168,196 samples, 1.05%)</title><rect x="805.9" y="1061" width="12.4" height="15.0" fill="rgb(248,186,52)" rx="2" ry="2" />
<text  x="808.91" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,111,231 samples, 0.20%)</title><rect x="1171.8" y="1205" width="2.3" height="15.0" fill="rgb(213,171,20)" rx="2" ry="2" />
<text  x="1174.80" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13,596,597 samples, 0.05%)</title><rect x="146.3" y="1029" width="0.6" height="15.0" fill="rgb(210,189,37)" rx="2" ry="2" />
<text  x="149.25" y="1039.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (2,498,873 samples, 0.01%)</title><rect x="126.4" y="1253" width="0.1" height="15.0" fill="rgb(234,227,35)" rx="2" ry="2" />
<text  x="129.38" y="1263.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::node_interfaces::NodeBaseInterface&gt;::shared_ptr (5,355,349 samples, 0.02%)</title><rect x="789.7" y="1029" width="0.2" height="15.0" fill="rgb(240,4,49)" rx="2" ry="2" />
<text  x="792.65" y="1039.5" ></text>
</g>
<g >
<title>gazebo::transport::Node::ProcessIncoming (273,316,248 samples, 1.08%)</title><rect x="64.0" y="1173" width="12.7" height="15.0" fill="rgb(250,28,10)" rx="2" ry="2" />
<text  x="66.96" y="1183.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;rclcpp::memory_strategy::MemoryStrategy,  (8,705,551 samples, 0.03%)</title><rect x="202.9" y="1077" width="0.4" height="15.0" fill="rgb(246,179,44)" rx="2" ry="2" />
<text  x="205.92" y="1087.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt; &gt;&gt; (12,939,044 samples, 0.05%)</title><rect x="794.7" y="997" width="0.6" height="15.0" fill="rgb(247,174,8)" rx="2" ry="2" />
<text  x="797.74" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,597,363 samples, 0.01%)</title><rect x="86.1" y="1045" width="0.2" height="15.0" fill="rgb(219,59,5)" rx="2" ry="2" />
<text  x="89.09" y="1055.5" ></text>
</g>
<g >
<title>boost::detail::function::void_function_obj_invoker1&lt;gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Publisher, unsigned int&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Publisher*&gt;, boost::arg&lt;1&gt; &gt; &gt;, gazebo::transport::Publisher&gt;, void, unsigned int&gt;::invoke (5,433,391 samples, 0.02%)</title><rect x="79.9" y="1109" width="0.2" height="15.0" fill="rgb(205,90,21)" rx="2" ry="2" />
<text  x="82.88" y="1119.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::CoordRotationSub (5,523,232 samples, 0.02%)</title><rect x="604.7" y="805" width="0.2" height="15.0" fill="rgb(208,173,0)" rx="2" ry="2" />
<text  x="607.67" y="815.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::ServiceBase&gt;::~shared_ptr (5,896,096 samples, 0.02%)</title><rect x="203.8" y="1109" width="0.2" height="15.0" fill="rgb(241,164,37)" rx="2" ry="2" />
<text  x="206.76" y="1119.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::CollisionCallback (17,482,886 samples, 0.07%)</title><rect x="237.5" y="837" width="0.8" height="15.0" fill="rgb(222,132,3)" rx="2" ry="2" />
<text  x="240.45" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,624,239 samples, 0.09%)</title><rect x="145.8" y="1093" width="1.1" height="15.0" fill="rgb(251,110,53)" rx="2" ry="2" />
<text  x="148.83" y="1103.5" ></text>
</g>
<g >
<title>gazebo::physics::ContactManager::PublishContacts (110,625,989 samples, 0.44%)</title><rect x="212.0" y="1045" width="5.1" height="15.0" fill="rgb(218,205,42)" rx="2" ry="2" />
<text  x="214.98" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, double, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (16,138,590 samples, 0.06%)</title><rect x="501.6" y="821" width="0.7" height="15.0" fill="rgb(247,156,8)" rx="2" ry="2" />
<text  x="504.58" y="831.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,032,103 samples, 0.02%)</title><rect x="831.1" y="1077" width="0.3" height="15.0" fill="rgb(229,124,17)" rx="2" ry="2" />
<text  x="834.09" y="1087.5" ></text>
</g>
<g >
<title>gazebo::sensors::Sensor::Update (558,803,775 samples, 2.21%)</title><rect x="20.9" y="1189" width="26.0" height="15.0" fill="rgb(220,129,43)" rx="2" ry="2" />
<text  x="23.85" y="1199.5" >g..</text>
</g>
<g >
<title>[unknown] (368,172,242 samples, 1.45%)</title><rect x="186.9" y="1269" width="17.1" height="15.0" fill="rgb(235,171,2)" rx="2" ry="2" />
<text  x="189.89" y="1279.5" ></text>
</g>
<g >
<title>tev (131,029,534 samples, 0.52%)</title><rect x="1183.9" y="1317" width="6.1" height="15.0" fill="rgb(248,125,37)" rx="2" ry="2" />
<text  x="1186.90" y="1327.5" ></text>
</g>
<g >
<title>_dNormalize4 (8,051,647 samples, 0.03%)</title><rect x="554.0" y="725" width="0.4" height="15.0" fill="rgb(251,195,34)" rx="2" ry="2" />
<text  x="557.00" y="735.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::operator[] (10,659,712 samples, 0.04%)</title><rect x="80.1" y="1109" width="0.5" height="15.0" fill="rgb(243,156,15)" rx="2" ry="2" />
<text  x="83.13" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,225,905 samples, 0.01%)</title><rect x="829.7" y="965" width="0.1" height="15.0" fill="rgb(226,65,36)" rx="2" ry="2" />
<text  x="832.69" y="975.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (6,539,071 samples, 0.03%)</title><rect x="224.8" y="965" width="0.3" height="15.0" fill="rgb(227,83,54)" rx="2" ry="2" />
<text  x="227.76" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (360,752,850 samples, 1.42%)</title><rect x="872.4" y="1253" width="16.8" height="15.0" fill="rgb(231,153,10)" rx="2" ry="2" />
<text  x="875.44" y="1263.5" ></text>
</g>
<g >
<title>rclcpp::executors::MultiThreadedExecutor::spin (82,914,669 samples, 0.33%)</title><rect x="789.7" y="1077" width="3.8" height="15.0" fill="rgb(231,153,27)" rx="2" ry="2" />
<text  x="792.65" y="1087.5" ></text>
</g>
<g >
<title>gazebo::physics::ContactManager::NeverDropContacts (4,148,331 samples, 0.02%)</title><rect x="238.7" y="901" width="0.2" height="15.0" fill="rgb(250,28,20)" rx="2" ry="2" />
<text  x="241.66" y="911.5" ></text>
</g>
<g >
<title>gazebo::transport::ConnectionManager::TriggerUpdate (4,838,386 samples, 0.02%)</title><rect x="765.5" y="1013" width="0.3" height="15.0" fill="rgb(241,95,12)" rx="2" ry="2" />
<text  x="768.53" y="1023.5" ></text>
</g>
<g >
<title>std::recursive_mutex::unlock (5,985,797 samples, 0.02%)</title><rect x="544.5" y="741" width="0.2" height="15.0" fill="rgb(218,33,50)" rx="2" ry="2" />
<text  x="547.45" y="751.5" ></text>
</g>
<g >
<title>ode::quickstep::compute_invM_JT (28,351,435 samples, 0.11%)</title><rect x="429.3" y="949" width="1.3" height="15.0" fill="rgb(221,190,28)" rx="2" ry="2" />
<text  x="432.27" y="959.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, gazebo::physics::LinkPrivate*, false&gt;::_M_head (2,363,247 samples, 0.01%)</title><rect x="723.7" y="821" width="0.1" height="15.0" fill="rgb(244,169,4)" rx="2" ry="2" />
<text  x="726.72" y="831.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::~unique_lock (2,688,672 samples, 0.01%)</title><rect x="903.3" y="1221" width="0.1" height="15.0" fill="rgb(210,37,31)" rx="2" ry="2" />
<text  x="906.27" y="1231.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (3,116,103 samples, 0.01%)</title><rect x="195.3" y="1013" width="0.1" height="15.0" fill="rgb(234,105,8)" rx="2" ry="2" />
<text  x="198.28" y="1023.5" ></text>
</g>
<g >
<title>std::mutex::lock (2,249,199 samples, 0.01%)</title><rect x="229.0" y="1013" width="0.1" height="15.0" fill="rgb(229,213,15)" rx="2" ry="2" />
<text  x="232.02" y="1023.5" ></text>
</g>
<g >
<title>std::_Construct&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt; const&amp;&gt; (12,736,439 samples, 0.05%)</title><rect x="654.8" y="821" width="0.6" height="15.0" fill="rgb(233,79,5)" rx="2" ry="2" />
<text  x="657.76" y="831.5" ></text>
</g>
<g >
<title>writer_must_have_hb_scheduled (5,263,099 samples, 0.02%)</title><rect x="1189.4" y="1285" width="0.2" height="15.0" fill="rgb(212,228,50)" rx="2" ry="2" />
<text  x="1192.38" y="1295.5" ></text>
</g>
<g >
<title>dxJoint::dxJoint (3,921,366 samples, 0.02%)</title><rect x="256.9" y="965" width="0.2" height="15.0" fill="rgb(249,4,4)" rx="2" ry="2" />
<text  x="259.92" y="975.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (3,933,021 samples, 0.02%)</title><rect x="39.9" y="1093" width="0.2" height="15.0" fill="rgb(209,50,54)" rx="2" ry="2" />
<text  x="42.90" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,958,587 samples, 0.02%)</title><rect x="851.4" y="981" width="0.2" height="15.0" fill="rgb(238,229,32)" rx="2" ry="2" />
<text  x="854.38" y="991.5" ></text>
</g>
<g >
<title>gazebo::physics::World::PublishWorldStats (32,032,074 samples, 0.13%)</title><rect x="771.5" y="1061" width="1.5" height="15.0" fill="rgb(220,64,13)" rx="2" ry="2" />
<text  x="774.54" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,628,552 samples, 0.03%)</title><rect x="138.3" y="1157" width="0.3" height="15.0" fill="rgb(206,47,39)" rx="2" ry="2" />
<text  x="141.29" y="1167.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (12,204,091 samples, 0.05%)</title><rect x="770.4" y="949" width="0.5" height="15.0" fill="rgb(239,37,3)" rx="2" ry="2" />
<text  x="773.38" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,280,761 samples, 0.02%)</title><rect x="207.1" y="997" width="0.2" height="15.0" fill="rgb(221,199,0)" rx="2" ry="2" />
<text  x="210.06" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,305,251 samples, 0.01%)</title><rect x="126.3" y="1109" width="0.1" height="15.0" fill="rgb(207,219,45)" rx="2" ry="2" />
<text  x="129.28" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,661,915 samples, 0.06%)</title><rect x="11.8" y="1045" width="0.7" height="15.0" fill="rgb(236,162,12)" rx="2" ry="2" />
<text  x="14.81" y="1055.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (3,604,577 samples, 0.01%)</title><rect x="840.5" y="1029" width="0.2" height="15.0" fill="rgb(212,167,19)" rx="2" ry="2" />
<text  x="843.51" y="1039.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2,536,199 samples, 0.01%)</title><rect x="828.7" y="997" width="0.2" height="15.0" fill="rgb(214,161,9)" rx="2" ry="2" />
<text  x="831.74" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,126,400 samples, 0.02%)</title><rect x="708.7" y="805" width="0.2" height="15.0" fill="rgb(253,174,25)" rx="2" ry="2" />
<text  x="711.66" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;hardware_interface::SystemInterface, std::default_delete&lt;hardware_interface::SystemInterface&gt; &gt;::_M_ptr (5,965,849 samples, 0.02%)</title><rect x="613.2" y="837" width="0.2" height="15.0" fill="rgb(252,128,23)" rx="2" ry="2" />
<text  x="616.17" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::sensors::RaySensorPrivate, std::default_delete&lt;gazebo::sensors::RaySensorPrivate&gt; &gt;::operator (9,291,533 samples, 0.04%)</title><rect x="45.9" y="1141" width="0.4" height="15.0" fill="rgb(205,52,37)" rx="2" ry="2" />
<text  x="48.90" y="1151.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::~Vector3 (5,816,086 samples, 0.02%)</title><rect x="43.4" y="1141" width="0.3" height="15.0" fill="rgb(240,1,5)" rx="2" ry="2" />
<text  x="46.39" y="1151.5" ></text>
</g>
<g >
<title>rclcpp::SubscriptionBase::get_subscription_handle (7,843,523 samples, 0.03%)</title><rect x="803.1" y="965" width="0.3" height="15.0" fill="rgb(248,140,6)" rx="2" ry="2" />
<text  x="806.08" y="975.5" ></text>
</g>
<g >
<title>ode::quickstep::dxUpdateBodies (6,044,363 samples, 0.02%)</title><rect x="787.2" y="965" width="0.3" height="15.0" fill="rgb(250,216,27)" rx="2" ry="2" />
<text  x="790.25" y="975.5" ></text>
</g>
<g >
<title>rcl_publish (15,878,910 samples, 0.06%)</title><rect x="830.3" y="1125" width="0.7" height="15.0" fill="rgb(208,196,26)" rx="2" ry="2" />
<text  x="833.29" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,310,964 samples, 0.03%)</title><rect x="426.8" y="821" width="0.4" height="15.0" fill="rgb(235,120,34)" rx="2" ry="2" />
<text  x="429.80" y="831.5" ></text>
</g>
<g >
<title>google::protobuf::internal::InternalMetadataWithArenaBase&lt;google::protobuf::UnknownFieldSet, google::protobuf::internal::InternalMetadataWithArena&gt;::InternalMetadataWithArenaBase (3,325,405 samples, 0.01%)</title><rect x="27.2" y="1045" width="0.1" height="15.0" fill="rgb(249,134,53)" rx="2" ry="2" />
<text  x="30.19" y="1055.5" ></text>
</g>
<g >
<title>[[uprobes]] (508,461,083 samples, 2.01%)</title><rect x="493.3" y="917" width="23.7" height="15.0" fill="rgb(221,192,28)" rx="2" ry="2" />
<text  x="496.31" y="927.5" >[..</text>
</g>
<g >
<title>ignition::math::v6::equal&lt;double&gt; (2,151,610 samples, 0.01%)</title><rect x="559.2" y="741" width="0.1" height="15.0" fill="rgb(245,127,30)" rx="2" ry="2" />
<text  x="562.18" y="751.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::add_handles_to_wait_set (43,497,568 samples, 0.17%)</title><rect x="807.1" y="1045" width="2.0" height="15.0" fill="rgb(225,85,23)" rx="2" ry="2" />
<text  x="810.06" y="1055.5" ></text>
</g>
<g >
<title>sdf::v9::Element::Get&lt;ignition::math::v6::Vector3&lt;double&gt; &gt; (7,752,141 samples, 0.03%)</title><rect x="29.6" y="1093" width="0.4" height="15.0" fill="rgb(206,58,29)" rx="2" ry="2" />
<text  x="32.63" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,282,220 samples, 0.03%)</title><rect x="618.1" y="933" width="0.3" height="15.0" fill="rgb(230,225,43)" rx="2" ry="2" />
<text  x="621.05" y="943.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::util::LogRecordPrivate, std::default_delete&lt;gazebo::util::LogRecordPrivate&gt; &gt;::get (3,976,905 samples, 0.02%)</title><rect x="743.6" y="1029" width="0.2" height="15.0" fill="rgb(226,32,29)" rx="2" ry="2" />
<text  x="746.62" y="1039.5" ></text>
</g>
<g >
<title>[libgazebo_msgs.so.11.10.1] (2,147,423 samples, 0.01%)</title><rect x="759.3" y="1013" width="0.1" height="15.0" fill="rgb(214,173,21)" rx="2" ry="2" />
<text  x="762.27" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::~vector (17,235,758 samples, 0.07%)</title><rect x="677.2" y="901" width="0.8" height="15.0" fill="rgb(246,72,40)" rx="2" ry="2" />
<text  x="680.20" y="911.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::IsInitialized (4,021,069 samples, 0.02%)</title><rect x="765.2" y="981" width="0.2" height="15.0" fill="rgb(205,215,51)" rx="2" ry="2" />
<text  x="768.25" y="991.5" ></text>
</g>
<g >
<title>[libgazebo_ros_joint_state_publisher.so] (3,839,630 samples, 0.02%)</title><rect x="636.4" y="917" width="0.2" height="15.0" fill="rgb(250,21,3)" rx="2" ry="2" />
<text  x="639.44" y="927.5" ></text>
</g>
<g >
<title>[libgazebo_hardware_plugins.so] (3,880,660 samples, 0.02%)</title><rect x="518.0" y="869" width="0.2" height="15.0" fill="rgb(230,45,21)" rx="2" ry="2" />
<text  x="520.98" y="879.5" ></text>
</g>
<g >
<title>dGeomRayGet (8,230,872 samples, 0.03%)</title><rect x="37.1" y="869" width="0.4" height="15.0" fill="rgb(233,213,3)" rx="2" ry="2" />
<text  x="40.10" y="879.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (8,069,732 samples, 0.03%)</title><rect x="794.2" y="901" width="0.3" height="15.0" fill="rgb(252,22,13)" rx="2" ry="2" />
<text  x="797.16" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,580,330 samples, 0.01%)</title><rect x="675.3" y="709" width="0.2" height="15.0" fill="rgb(235,229,32)" rx="2" ry="2" />
<text  x="678.34" y="719.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,766,416 samples, 0.01%)</title><rect x="856.3" y="869" width="0.1" height="15.0" fill="rgb(246,110,21)" rx="2" ry="2" />
<text  x="859.26" y="879.5" ></text>
</g>
<g >
<title>gazebo::msgs::WorldStatistics::~WorldStatistics (7,490,463 samples, 0.03%)</title><rect x="772.1" y="1045" width="0.4" height="15.0" fill="rgb(238,33,9)" rx="2" ry="2" />
<text  x="775.12" y="1055.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator[] (3,821,967 samples, 0.02%)</title><rect x="261.0" y="997" width="0.2" height="15.0" fill="rgb(251,227,43)" rx="2" ry="2" />
<text  x="264.00" y="1007.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (26,254,078 samples, 0.10%)</title><rect x="498.8" y="837" width="1.2" height="15.0" fill="rgb(230,220,29)" rx="2" ry="2" />
<text  x="501.78" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (74,559,783 samples, 0.29%)</title><rect x="55.5" y="629" width="3.5" height="15.0" fill="rgb(225,49,19)" rx="2" ry="2" />
<text  x="58.49" y="639.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;google::protobuf::Message&gt;::~shared_ptr (24,252,778 samples, 0.10%)</title><rect x="765.8" y="981" width="1.1" height="15.0" fill="rgb(252,166,48)" rx="2" ry="2" />
<text  x="768.76" y="991.5" ></text>
</g>
<g >
<title>[libhardware_interface.so] (3,857,175 samples, 0.02%)</title><rect x="517.2" y="901" width="0.2" height="15.0" fill="rgb(240,130,39)" rx="2" ry="2" />
<text  x="520.17" y="911.5" ></text>
</g>
<g >
<title>dCalcVectorCross3 (2,263,206 samples, 0.01%)</title><rect x="266.7" y="965" width="0.1" height="15.0" fill="rgb(212,159,47)" rx="2" ry="2" />
<text  x="269.68" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (65,478,742 samples, 0.26%)</title><rect x="14.9" y="1157" width="3.0" height="15.0" fill="rgb(250,37,14)" rx="2" ry="2" />
<text  x="17.90" y="1167.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;sdf::v9::ParamPrivate, std::default_delete&lt;sdf::v9::ParamPrivate&gt; &gt;::_M_ptr (6,729,605 samples, 0.03%)</title><rect x="45.3" y="1013" width="0.4" height="15.0" fill="rgb(252,15,54)" rx="2" ry="2" />
<text  x="48.34" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,141,612 samples, 0.02%)</title><rect x="1177.0" y="1173" width="0.2" height="15.0" fill="rgb(251,209,3)" rx="2" ry="2" />
<text  x="1180.00" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,411,266 samples, 0.01%)</title><rect x="830.2" y="997" width="0.1" height="15.0" fill="rgb(246,12,36)" rx="2" ry="2" />
<text  x="833.18" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,895,902 samples, 0.02%)</title><rect x="492.6" y="933" width="0.2" height="15.0" fill="rgb(239,7,33)" rx="2" ry="2" />
<text  x="495.56" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (168,663,434 samples, 0.67%)</title><rect x="909.9" y="1269" width="7.8" height="15.0" fill="rgb(246,93,17)" rx="2" ry="2" />
<text  x="912.88" y="1279.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::MultiRayShape&gt;::operator bool (6,814,207 samples, 0.03%)</title><rect x="44.2" y="1141" width="0.3" height="15.0" fill="rgb(226,172,52)" rx="2" ry="2" />
<text  x="47.23" y="1151.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_Vector_impl::_Vector_impl (2,347,907 samples, 0.01%)</title><rect x="654.3" y="853" width="0.1" height="15.0" fill="rgb(213,153,2)" rx="2" ry="2" />
<text  x="657.28" y="863.5" ></text>
</g>
<g >
<title>rclcpp::Time::operator+ (44,478,888 samples, 0.18%)</title><rect x="509.4" y="869" width="2.1" height="15.0" fill="rgb(221,222,52)" rx="2" ry="2" />
<text  x="512.44" y="879.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (5,302,263 samples, 0.02%)</title><rect x="846.4" y="1125" width="0.3" height="15.0" fill="rgb(253,148,48)" rx="2" ry="2" />
<text  x="849.42" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,762,010 samples, 0.02%)</title><rect x="72.1" y="1077" width="0.2" height="15.0" fill="rgb(242,59,20)" rx="2" ry="2" />
<text  x="75.06" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,307,932 samples, 0.03%)</title><rect x="12.2" y="1029" width="0.3" height="15.0" fill="rgb(220,138,0)" rx="2" ry="2" />
<text  x="15.16" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,426,497 samples, 0.08%)</title><rect x="379.5" y="885" width="1.0" height="15.0" fill="rgb(205,1,5)" rx="2" ry="2" />
<text  x="382.52" y="895.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (8,198,888 samples, 0.03%)</title><rect x="227.1" y="981" width="0.3" height="15.0" fill="rgb(242,22,21)" rx="2" ry="2" />
<text  x="230.05" y="991.5" ></text>
</g>
<g >
<title>gazebo::transport::ConnectionManager::TriggerUpdate (6,377,139 samples, 0.03%)</title><rect x="214.4" y="997" width="0.3" height="15.0" fill="rgb(231,0,3)" rx="2" ry="2" />
<text  x="217.43" y="1007.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::AssignWithDefault (4,788,510 samples, 0.02%)</title><rect x="27.3" y="1125" width="0.3" height="15.0" fill="rgb(242,202,50)" rx="2" ry="2" />
<text  x="30.34" y="1135.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::get_next_service (7,029,780 samples, 0.03%)</title><rect x="800.4" y="1045" width="0.3" height="15.0" fill="rgb(217,146,54)" rx="2" ry="2" />
<text  x="803.41" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="933" width="0.2" height="15.0" fill="rgb(216,8,1)" rx="2" ry="2" />
<text  x="849.22" y="943.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (56,935,916 samples, 0.22%)</title><rect x="204.0" y="1173" width="2.7" height="15.0" fill="rgb(225,229,7)" rx="2" ry="2" />
<text  x="207.03" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,340,721 samples, 0.01%)</title><rect x="820.9" y="1141" width="0.2" height="15.0" fill="rgb(213,152,48)" rx="2" ry="2" />
<text  x="823.95" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,355,277 samples, 0.03%)</title><rect x="207.0" y="1045" width="0.3" height="15.0" fill="rgb(243,137,18)" rx="2" ry="2" />
<text  x="209.97" y="1055.5" ></text>
</g>
<g >
<title>dGeomRaySet (7,467,840 samples, 0.03%)</title><rect x="39.6" y="1125" width="0.3" height="15.0" fill="rgb(227,177,38)" rx="2" ry="2" />
<text  x="42.56" y="1135.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo::common::UpdateInfo const&amp;&gt; (3,992,455 samples, 0.02%)</title><rect x="625.4" y="917" width="0.1" height="15.0" fill="rgb(241,139,28)" rx="2" ry="2" />
<text  x="628.36" y="927.5" ></text>
</g>
<g >
<title>boost::unique_lock&lt;boost::recursive_mutex&gt;::unique_lock (30,570,218 samples, 0.12%)</title><rect x="901.8" y="1221" width="1.5" height="15.0" fill="rgb(211,65,26)" rx="2" ry="2" />
<text  x="904.85" y="1231.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, std::unique_ptr&lt;gazebo::event::EventT&lt;void  (4,294,443 samples, 0.02%)</title><rect x="473.1" y="949" width="0.2" height="15.0" fill="rgb(247,201,18)" rx="2" ry="2" />
<text  x="476.14" y="959.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, gazebo::ServerPrivate*, std::default_delete&lt;gazebo::ServerPrivate&gt; &gt;::_M_head (2,153,860 samples, 0.01%)</title><rect x="906.7" y="1189" width="0.1" height="15.0" fill="rgb(221,84,44)" rx="2" ry="2" />
<text  x="909.68" y="1199.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::recursive_mutex&gt;::lock_guard (10,300,099 samples, 0.04%)</title><rect x="548.0" y="773" width="0.5" height="15.0" fill="rgb(220,30,1)" rx="2" ry="2" />
<text  x="551.02" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::push_back (24,483,823 samples, 0.10%)</title><rect x="596.7" y="805" width="1.1" height="15.0" fill="rgb(205,44,15)" rx="2" ry="2" />
<text  x="599.69" y="815.5" ></text>
</g>
<g >
<title>[[uprobes]] (2,694,320,712 samples, 10.63%)</title><rect x="492.5" y="949" width="125.5" height="15.0" fill="rgb(217,204,54)" rx="2" ry="2" />
<text  x="495.48" y="959.5" >[[uprobes]]</text>
</g>
<g >
<title>boost::unique_lock&lt;boost::mutex&gt;::~unique_lock (2,439,912 samples, 0.01%)</title><rect x="553.8" y="693" width="0.1" height="15.0" fill="rgb(252,173,4)" rx="2" ry="2" />
<text  x="556.79" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (100,330,797 samples, 0.40%)</title><rect x="881.9" y="789" width="4.7" height="15.0" fill="rgb(221,126,31)" rx="2" ry="2" />
<text  x="884.90" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (38,032,107 samples, 0.15%)</title><rect x="1170.0" y="1173" width="1.8" height="15.0" fill="rgb(226,12,25)" rx="2" ry="2" />
<text  x="1173.03" y="1183.5" ></text>
</g>
<g >
<title>joint_state_broadcaster::JointStateBroadcaster::update (194,101,674 samples, 0.77%)</title><rect x="494.3" y="901" width="9.1" height="15.0" fill="rgb(227,75,14)" rx="2" ry="2" />
<text  x="497.33" y="911.5" ></text>
</g>
<g >
<title>rmw_publish (5,616,035 samples, 0.02%)</title><rect x="852.7" y="1109" width="0.2" height="15.0" fill="rgb(218,206,10)" rx="2" ry="2" />
<text  x="855.66" y="1119.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::construct&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, boost::shared_ptr&lt;gazebo::physics::Link&gt; const&amp;&gt; (2,251,837 samples, 0.01%)</title><rect x="597.0" y="773" width="0.1" height="15.0" fill="rgb(252,148,34)" rx="2" ry="2" />
<text  x="599.96" y="783.5" ></text>
</g>
<g >
<title>std::this_thread::sleep_for&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (56,830,154 samples, 0.22%)</title><rect x="859.2" y="1141" width="2.6" height="15.0" fill="rgb(213,64,27)" rx="2" ry="2" />
<text  x="862.18" y="1151.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::RepeatedPtrField (2,214,005 samples, 0.01%)</title><rect x="767.2" y="1045" width="0.1" height="15.0" fill="rgb(210,166,31)" rx="2" ry="2" />
<text  x="770.18" y="1055.5" ></text>
</g>
<g >
<title>nn_xmsg_free (6,138,503 samples, 0.02%)</title><rect x="139.8" y="1269" width="0.3" height="15.0" fill="rgb(246,211,3)" rx="2" ry="2" />
<text  x="142.79" y="1279.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::_find_ptrs_if_impl&lt;rclcpp::Waitable, rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (7,634,787 samples, 0.03%)</title><rect x="792.8" y="981" width="0.3" height="15.0" fill="rgb(249,105,40)" rx="2" ry="2" />
<text  x="795.78" y="991.5" ></text>
</g>
<g >
<title>google::protobuf::internal::WireFormatLite::WriteDoubleNoTagToArray (2,734,777 samples, 0.01%)</title><rect x="1159.5" y="1189" width="0.1" height="15.0" fill="rgb(216,89,23)" rx="2" ry="2" />
<text  x="1162.50" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,426,497 samples, 0.08%)</title><rect x="379.5" y="837" width="1.0" height="15.0" fill="rgb(229,30,53)" rx="2" ry="2" />
<text  x="382.52" y="847.5" ></text>
</g>
<g >
<title>gazebo::ConveyorBeltPlugin::OnUpdate (23,495,364 samples, 0.09%)</title><rect x="717.4" y="917" width="1.1" height="15.0" fill="rgb(236,117,13)" rx="2" ry="2" />
<text  x="720.39" y="927.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::operator* (6,212,966 samples, 0.02%)</title><rect x="608.7" y="773" width="0.3" height="15.0" fill="rgb(252,167,27)" rx="2" ry="2" />
<text  x="611.69" y="783.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_service (8,198,767 samples, 0.03%)</title><rect x="807.7" y="1029" width="0.4" height="15.0" fill="rgb(253,166,41)" rx="2" ry="2" />
<text  x="810.72" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,987,034 samples, 0.02%)</title><rect x="1182.7" y="933" width="0.3" height="15.0" fill="rgb(225,50,26)" rx="2" ry="2" />
<text  x="1185.69" y="943.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::FindAllConnectedLinksHelper (144,550,778 samples, 0.57%)</title><rect x="584.2" y="773" width="6.7" height="15.0" fill="rgb(238,7,43)" rx="2" ry="2" />
<text  x="587.18" y="783.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;gazebo::physics::Entity*&gt; &gt; &gt;::destroy&lt;gazebo::physics::Entity*&gt; (2,292,941 samples, 0.01%)</title><rect x="745.0" y="1029" width="0.1" height="15.0" fill="rgb(216,173,6)" rx="2" ry="2" />
<text  x="747.96" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,151,098 samples, 0.12%)</title><rect x="715.9" y="757" width="1.4" height="15.0" fill="rgb(232,74,26)" rx="2" ry="2" />
<text  x="718.90" y="767.5" ></text>
</g>
<g >
<title>rcl_publish (24,305,043 samples, 0.10%)</title><rect x="22.9" y="1013" width="1.1" height="15.0" fill="rgb(210,202,3)" rx="2" ry="2" />
<text  x="25.86" y="1023.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (12,064,126 samples, 0.05%)</title><rect x="683.6" y="821" width="0.6" height="15.0" fill="rgb(231,169,2)" rx="2" ry="2" />
<text  x="686.62" y="831.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (2,318,641 samples, 0.01%)</title><rect x="272.5" y="933" width="0.1" height="15.0" fill="rgb(254,191,18)" rx="2" ry="2" />
<text  x="275.50" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (9,593,221 samples, 0.04%)</title><rect x="74.6" y="901" width="0.4" height="15.0" fill="rgb(249,210,24)" rx="2" ry="2" />
<text  x="77.60" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,694,278 samples, 0.06%)</title><rect x="709.7" y="853" width="0.7" height="15.0" fill="rgb(205,203,0)" rx="2" ry="2" />
<text  x="712.70" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,318,465 samples, 0.02%)</title><rect x="457.9" y="997" width="0.2" height="15.0" fill="rgb(205,152,19)" rx="2" ry="2" />
<text  x="460.86" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::list (4,607,868 samples, 0.02%)</title><rect x="82.7" y="1141" width="0.2" height="15.0" fill="rgb(221,229,49)" rx="2" ry="2" />
<text  x="85.72" y="1151.5" ></text>
</g>
<g >
<title>gen11_irq_handler (2,205,749 samples, 0.01%)</title><rect x="1155.0" y="1029" width="0.1" height="15.0" fill="rgb(236,8,39)" rx="2" ry="2" />
<text  x="1157.99" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,281,711 samples, 0.01%)</title><rect x="841.9" y="949" width="0.2" height="15.0" fill="rgb(231,55,29)" rx="2" ry="2" />
<text  x="844.95" y="959.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*, double&gt; (5,426,780 samples, 0.02%)</title><rect x="826.7" y="997" width="0.2" height="15.0" fill="rgb(240,7,26)" rx="2" ry="2" />
<text  x="829.66" y="1007.5" ></text>
</g>
<g >
<title>dSpaceCollide2 (4,175,437 samples, 0.02%)</title><rect x="781.4" y="901" width="0.2" height="15.0" fill="rgb(247,212,13)" rx="2" ry="2" />
<text  x="784.37" y="911.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (25,708,827 samples, 0.10%)</title><rect x="258.0" y="965" width="1.2" height="15.0" fill="rgb(231,170,51)" rx="2" ry="2" />
<text  x="261.01" y="975.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (12,652,778 samples, 0.05%)</title><rect x="856.8" y="1077" width="0.6" height="15.0" fill="rgb(223,121,44)" rx="2" ry="2" />
<text  x="859.76" y="1087.5" ></text>
</g>
<g >
<title>boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (17,469,504 samples, 0.07%)</title><rect x="13.7" y="965" width="0.8" height="15.0" fill="rgb(226,101,21)" rx="2" ry="2" />
<text  x="16.71" y="975.5" ></text>
</g>
<g >
<title>rcl_publish (5,647,282 samples, 0.02%)</title><rect x="691.3" y="885" width="0.3" height="15.0" fill="rgb(254,25,22)" rx="2" ry="2" />
<text  x="694.31" y="895.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_any_executable (126,299,511 samples, 0.50%)</title><rect x="794.2" y="1077" width="5.8" height="15.0" fill="rgb(245,156,26)" rx="2" ry="2" />
<text  x="797.16" y="1087.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::node_interfaces::NodeBaseInterface,  (7,281,247 samples, 0.03%)</title><rect x="791.2" y="949" width="0.3" height="15.0" fill="rgb(229,40,3)" rx="2" ry="2" />
<text  x="794.19" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (23,675,630 samples, 0.09%)</title><rect x="707.8" y="837" width="1.1" height="15.0" fill="rgb(244,64,2)" rx="2" ry="2" />
<text  x="710.84" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,829,890 samples, 0.02%)</title><rect x="854.8" y="1077" width="0.2" height="15.0" fill="rgb(253,14,10)" rx="2" ry="2" />
<text  x="857.78" y="1087.5" ></text>
</g>
<g >
<title>gazebo::msgs::Vector3d::Vector3d (2,245,988 samples, 0.01%)</title><rect x="759.2" y="981" width="0.1" height="15.0" fill="rgb(238,167,49)" rx="2" ry="2" />
<text  x="762.17" y="991.5" ></text>
</g>
<g >
<title>geometry_msgs::msg::Quaternion_&lt;std::allocator&lt;void&gt; &gt;::Quaternion_ (2,171,248 samples, 0.01%)</title><rect x="690.0" y="869" width="0.1" height="15.0" fill="rgb(228,101,5)" rx="2" ry="2" />
<text  x="693.05" y="879.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (2,762,331 samples, 0.01%)</title><rect x="1174.1" y="1301" width="0.2" height="15.0" fill="rgb(237,141,22)" rx="2" ry="2" />
<text  x="1177.14" y="1311.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;gazebo::common::UpdateInfo const&amp;&gt; (10,318,219 samples, 0.04%)</title><rect x="727.9" y="965" width="0.4" height="15.0" fill="rgb(217,69,24)" rx="2" ry="2" />
<text  x="730.86" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (92,542,284 samples, 0.37%)</title><rect x="54.7" y="789" width="4.3" height="15.0" fill="rgb(221,187,50)" rx="2" ry="2" />
<text  x="57.65" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (215,253,085 samples, 0.85%)</title><rect x="176.3" y="1125" width="10.0" height="15.0" fill="rgb(215,189,38)" rx="2" ry="2" />
<text  x="179.26" y="1135.5" ></text>
</g>
<g >
<title>_dequal (31,933,794 samples, 0.13%)</title><rect x="427.7" y="949" width="1.5" height="15.0" fill="rgb(246,56,44)" rx="2" ry="2" />
<text  x="430.68" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,766,416 samples, 0.01%)</title><rect x="856.3" y="853" width="0.1" height="15.0" fill="rgb(207,80,5)" rx="2" ry="2" />
<text  x="859.26" y="863.5" ></text>
</g>
<g >
<title>rclcpp::GenericTimer&lt;std::_Bind&lt;void  (21,253,786 samples, 0.08%)</title><rect x="187.3" y="1077" width="1.0" height="15.0" fill="rgb(238,84,43)" rx="2" ry="2" />
<text  x="190.28" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,484,890 samples, 0.02%)</title><rect x="1178.0" y="1269" width="0.3" height="15.0" fill="rgb(237,190,35)" rx="2" ry="2" />
<text  x="1181.02" y="1279.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::Z (4,227,307 samples, 0.02%)</title><rect x="558.2" y="725" width="0.2" height="15.0" fill="rgb(207,169,22)" rx="2" ry="2" />
<text  x="561.22" y="735.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (6,040,420 samples, 0.02%)</title><rect x="856.2" y="1029" width="0.3" height="15.0" fill="rgb(206,125,2)" rx="2" ry="2" />
<text  x="859.17" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_create_node&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const&amp;&gt; (7,677,951 samples, 0.03%)</title><rect x="768.7" y="1013" width="0.4" height="15.0" fill="rgb(218,217,37)" rx="2" ry="2" />
<text  x="771.74" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (7,101,875 samples, 0.03%)</title><rect x="195.4" y="981" width="0.4" height="15.0" fill="rgb(206,82,30)" rx="2" ry="2" />
<text  x="198.43" y="991.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (2,929,018 samples, 0.01%)</title><rect x="847.0" y="1109" width="0.2" height="15.0" fill="rgb(242,116,16)" rx="2" ry="2" />
<text  x="850.03" y="1119.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,179,357 samples, 0.02%)</title><rect x="889.2" y="1221" width="0.3" height="15.0" fill="rgb(213,77,25)" rx="2" ry="2" />
<text  x="892.25" y="1231.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::SetWorldPose (104,548,918 samples, 0.41%)</title><rect x="452.8" y="1061" width="4.9" height="15.0" fill="rgb(233,45,7)" rx="2" ry="2" />
<text  x="455.82" y="1071.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (2,383,998 samples, 0.01%)</title><rect x="826.8" y="933" width="0.1" height="15.0" fill="rgb(250,105,24)" rx="2" ry="2" />
<text  x="829.80" y="943.5" ></text>
</g>
<g >
<title>gazebo::sensors::GaussianNoiseModel::ApplyImpl (7,987,079 samples, 0.03%)</title><rect x="43.9" y="1141" width="0.3" height="15.0" fill="rgb(250,9,44)" rx="2" ry="2" />
<text  x="46.86" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,150,199 samples, 0.01%)</title><rect x="13.5" y="1253" width="0.1" height="15.0" fill="rgb(213,160,25)" rx="2" ry="2" />
<text  x="16.45" y="1263.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::operator- (5,804,164 samples, 0.02%)</title><rect x="225.8" y="1013" width="0.3" height="15.0" fill="rgb(250,156,35)" rx="2" ry="2" />
<text  x="228.84" y="1023.5" ></text>
</g>
<g >
<title>Opcode::AABBTreeCollider::Collide (4,149,228 samples, 0.02%)</title><rect x="102.7" y="1285" width="0.2" height="15.0" fill="rgb(234,229,3)" rx="2" ry="2" />
<text  x="105.72" y="1295.5" ></text>
</g>
<g >
<title>boost::detail::sp_counted_base::add_ref_copy (3,933,021 samples, 0.02%)</title><rect x="39.9" y="1077" width="0.2" height="15.0" fill="rgb(207,156,48)" rx="2" ry="2" />
<text  x="42.90" y="1087.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (4,338,718 samples, 0.02%)</title><rect x="688.2" y="789" width="0.2" height="15.0" fill="rgb(226,11,54)" rx="2" ry="2" />
<text  x="691.23" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,748,402 samples, 0.02%)</title><rect x="493.4" y="885" width="0.3" height="15.0" fill="rgb(254,135,46)" rx="2" ry="2" />
<text  x="496.40" y="895.5" ></text>
</g>
<g >
<title>gazebo::msgs::LinkData::SharedDtor (2,537,634 samples, 0.01%)</title><rect x="75.8" y="837" width="0.1" height="15.0" fill="rgb(207,192,51)" rx="2" ry="2" />
<text  x="78.76" y="847.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (46,425,499 samples, 0.18%)</title><rect x="704.7" y="789" width="2.1" height="15.0" fill="rgb(211,47,33)" rx="2" ry="2" />
<text  x="707.66" y="799.5" ></text>
</g>
<g >
<title>nn_freelist_pop (6,854,470 samples, 0.03%)</title><rect x="164.9" y="1285" width="0.3" height="15.0" fill="rgb(252,106,11)" rx="2" ry="2" />
<text  x="167.92" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,067,708 samples, 0.05%)</title><rect x="12.9" y="1269" width="0.6" height="15.0" fill="rgb(217,86,14)" rx="2" ry="2" />
<text  x="15.89" y="1279.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_get_Tp_allocator (6,308,187 samples, 0.02%)</title><rect x="767.7" y="1045" width="0.3" height="15.0" fill="rgb(222,77,31)" rx="2" ry="2" />
<text  x="770.67" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (27,964,729 samples, 0.11%)</title><rect x="740.2" y="837" width="1.3" height="15.0" fill="rgb(243,162,21)" rx="2" ry="2" />
<text  x="743.15" y="847.5" ></text>
</g>
<g >
<title>[libgazebo_sensors.so.11.10.1] (8,126,554 samples, 0.03%)</title><rect x="19.0" y="1189" width="0.4" height="15.0" fill="rgb(212,4,28)" rx="2" ry="2" />
<text  x="21.99" y="1199.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op&lt;boost::asio::const_buffers_1, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::executor&gt;, boost::asio::const_buffers_1, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (8,084,108 samples, 0.03%)</title><rect x="14.5" y="1141" width="0.4" height="15.0" fill="rgb(220,229,45)" rx="2" ry="2" />
<text  x="17.52" y="1151.5" ></text>
</g>
<g >
<title>boost::unordered::detail::functions&lt;boost::hash&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt;, std::equal_to&lt;boost::shared_ptr&lt;gazebo::transport::Node&gt; &gt; &gt;::hash_function (2,184,044 samples, 0.01%)</title><rect x="215.9" y="917" width="0.1" height="15.0" fill="rgb(252,160,43)" rx="2" ry="2" />
<text  x="218.88" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,762,331 samples, 0.01%)</title><rect x="1174.1" y="1253" width="0.2" height="15.0" fill="rgb(222,112,34)" rx="2" ry="2" />
<text  x="1177.14" y="1263.5" ></text>
</g>
<g >
<title>[[uprobes]] (13,092,629 samples, 0.05%)</title><rect x="773.6" y="917" width="0.6" height="15.0" fill="rgb(251,10,52)" rx="2" ry="2" />
<text  x="776.55" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,143,840 samples, 0.05%)</title><rect x="871.4" y="1205" width="0.6" height="15.0" fill="rgb(218,24,16)" rx="2" ry="2" />
<text  x="874.45" y="1215.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; (2,537,634 samples, 0.01%)</title><rect x="75.8" y="1061" width="0.1" height="15.0" fill="rgb(243,164,28)" rx="2" ry="2" />
<text  x="78.76" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,816,086 samples, 0.02%)</title><rect x="43.4" y="1029" width="0.3" height="15.0" fill="rgb(231,227,11)" rx="2" ry="2" />
<text  x="46.39" y="1039.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (2,598,823 samples, 0.01%)</title><rect x="642.8" y="837" width="0.1" height="15.0" fill="rgb(233,208,54)" rx="2" ry="2" />
<text  x="645.77" y="847.5" ></text>
</g>
<g >
<title>std::operator==&lt;rclcpp::CallbackGroup, rclcpp::CallbackGroup&gt; (7,030,135 samples, 0.03%)</title><rect x="804.2" y="1029" width="0.3" height="15.0" fill="rgb(208,137,43)" rx="2" ry="2" />
<text  x="807.19" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="1013" width="0.2" height="15.0" fill="rgb(229,167,52)" rx="2" ry="2" />
<text  x="849.22" y="1023.5" ></text>
</g>
<g >
<title>boost::detail::shared_count::shared_count (12,736,439 samples, 0.05%)</title><rect x="654.8" y="789" width="0.6" height="15.0" fill="rgb(227,168,22)" rx="2" ry="2" />
<text  x="657.76" y="799.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (3,381,009 samples, 0.01%)</title><rect x="47.9" y="1173" width="0.1" height="15.0" fill="rgb(207,113,27)" rx="2" ry="2" />
<text  x="50.88" y="1183.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,376,006 samples, 0.06%)</title><rect x="210.8" y="981" width="0.6" height="15.0" fill="rgb(233,8,53)" rx="2" ry="2" />
<text  x="213.76" y="991.5" ></text>
</g>
<g >
<title>dQMultiply2 (5,792,171 samples, 0.02%)</title><rect x="272.6" y="933" width="0.3" height="15.0" fill="rgb(213,198,17)" rx="2" ry="2" />
<text  x="275.61" y="943.5" ></text>
</g>
<g >
<title>g4x_get_vblank_counter (2,205,749 samples, 0.01%)</title><rect x="1155.0" y="933" width="0.1" height="15.0" fill="rgb(232,98,48)" rx="2" ry="2" />
<text  x="1157.99" y="943.5" ></text>
</g>
<g >
<title>std::recursive_mutex::lock (3,952,588 samples, 0.02%)</title><rect x="220.5" y="981" width="0.2" height="15.0" fill="rgb(254,197,14)" rx="2" ry="2" />
<text  x="223.48" y="991.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Model&gt;::shared_ptr (12,736,439 samples, 0.05%)</title><rect x="654.8" y="805" width="0.6" height="15.0" fill="rgb(219,11,30)" rx="2" ry="2" />
<text  x="657.76" y="815.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (6,052,277 samples, 0.02%)</title><rect x="802.0" y="917" width="0.3" height="15.0" fill="rgb(246,146,43)" rx="2" ry="2" />
<text  x="805.05" y="927.5" ></text>
</g>
<g >
<title>[libgazebo.so.11.10.1] (15,901,118 samples, 0.06%)</title><rect x="889.5" y="1269" width="0.7" height="15.0" fill="rgb(237,110,3)" rx="2" ry="2" />
<text  x="892.49" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,878,910 samples, 0.06%)</title><rect x="830.3" y="1109" width="0.7" height="15.0" fill="rgb(249,131,43)" rx="2" ry="2" />
<text  x="833.29" y="1119.5" ></text>
</g>
<g >
<title>gazebo_ros::GazeboRosInitPrivate::PublishSimTime (10,145,023 samples, 0.04%)</title><rect x="679.3" y="917" width="0.5" height="15.0" fill="rgb(225,59,54)" rx="2" ry="2" />
<text  x="682.30" y="927.5" ></text>
</g>
<g >
<title>__libc_sendmsg (92,542,284 samples, 0.37%)</title><rect x="54.7" y="917" width="4.3" height="15.0" fill="rgb(216,119,6)" rx="2" ry="2" />
<text  x="57.65" y="927.5" ></text>
</g>
<g >
<title>std::move&lt;gazebo::physics::Base*&amp;&gt; (4,078,957 samples, 0.02%)</title><rect x="542.5" y="725" width="0.2" height="15.0" fill="rgb(242,187,49)" rx="2" ry="2" />
<text  x="545.46" y="735.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2,241,233 samples, 0.01%)</title><rect x="840.7" y="981" width="0.1" height="15.0" fill="rgb(241,7,54)" rx="2" ry="2" />
<text  x="843.68" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,894,582 samples, 0.07%)</title><rect x="538.2" y="773" width="0.9" height="15.0" fill="rgb(239,48,39)" rx="2" ry="2" />
<text  x="541.24" y="783.5" ></text>
</g>
<g >
<title>dJointCreateContact (5,931,875 samples, 0.02%)</title><rect x="256.8" y="1013" width="0.3" height="15.0" fill="rgb(232,92,6)" rx="2" ry="2" />
<text  x="259.83" y="1023.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (71,480,882 samples, 0.28%)</title><rect x="454.4" y="997" width="3.3" height="15.0" fill="rgb(226,99,20)" rx="2" ry="2" />
<text  x="457.36" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::sensors::RaySensorPrivate, std::default_delete&lt;gazebo::sensors::RaySensorPrivate&gt; &gt;::operator (3,143,021 samples, 0.01%)</title><rect x="46.6" y="1125" width="0.1" height="15.0" fill="rgb(244,82,22)" rx="2" ry="2" />
<text  x="49.58" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,601,541,548 samples, 18.16%)</title><rect x="940.8" y="1205" width="214.3" height="15.0" fill="rgb(252,60,31)" rx="2" ry="2" />
<text  x="943.83" y="1215.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[libcontroller_manager.so] (3,063,009 samples, 0.01%)</title><rect x="861.2" y="1077" width="0.1" height="15.0" fill="rgb(252,185,50)" rx="2" ry="2" />
<text  x="864.17" y="1087.5" ></text>
</g>
<g >
<title>[libgazebo_hardware_plugins.so] (2,300,694 samples, 0.01%)</title><rect x="611.5" y="837" width="0.1" height="15.0" fill="rgb(220,201,4)" rx="2" ry="2" />
<text  x="614.50" y="847.5" ></text>
</g>
<g >
<title>dxProcessOneIsland (104,334,220 samples, 0.41%)</title><rect x="782.7" y="997" width="4.8" height="15.0" fill="rgb(233,99,2)" rx="2" ry="2" />
<text  x="785.67" y="1007.5" ></text>
</g>
<g >
<title>boost::mutex::lock (6,951,744 samples, 0.03%)</title><rect x="18.4" y="1173" width="0.4" height="15.0" fill="rgb(249,87,38)" rx="2" ry="2" />
<text  x="21.45" y="1183.5" ></text>
</g>
<g >
<title>[libgazebo_ros_state.so] (24,491,794 samples, 0.10%)</title><rect x="648.1" y="901" width="1.2" height="15.0" fill="rgb(226,122,17)" rx="2" ry="2" />
<text  x="651.14" y="911.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (5,355,349 samples, 0.02%)</title><rect x="789.7" y="997" width="0.2" height="15.0" fill="rgb(225,139,19)" rx="2" ry="2" />
<text  x="792.65" y="1007.5" ></text>
</g>
<g >
<title>google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::MergeFrom (24,404,641 samples, 0.10%)</title><rect x="764.0" y="965" width="1.2" height="15.0" fill="rgb(221,195,0)" rx="2" ry="2" />
<text  x="767.03" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,759,600 samples, 0.03%)</title><rect x="796.9" y="901" width="0.3" height="15.0" fill="rgb(228,34,5)" rx="2" ry="2" />
<text  x="799.86" y="911.5" ></text>
</g>
<g >
<title>gazebo::physics::World::PublishModelPose (4,656,440 samples, 0.02%)</title><rect x="561.0" y="789" width="0.2" height="15.0" fill="rgb(205,62,36)" rx="2" ry="2" />
<text  x="563.97" y="799.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,744,160 samples, 0.03%)</title><rect x="852.0" y="1013" width="0.4" height="15.0" fill="rgb(212,216,36)" rx="2" ry="2" />
<text  x="854.99" y="1023.5" ></text>
</g>
<g >
<title>[libgazebo_ros_vacuum_gripper.so] (3,765,688 samples, 0.01%)</title><rect x="670.6" y="885" width="0.2" height="15.0" fill="rgb(230,176,28)" rx="2" ry="2" />
<text  x="673.63" y="895.5" ></text>
</g>
<g >
<title>gazebo::physics::ODELink::MoveCallback (3,302,493 samples, 0.01%)</title><rect x="787.4" y="933" width="0.1" height="15.0" fill="rgb(212,151,2)" rx="2" ry="2" />
<text  x="790.37" y="943.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (16,839,185 samples, 0.07%)</title><rect x="1183.9" y="1301" width="0.8" height="15.0" fill="rgb(244,103,16)" rx="2" ry="2" />
<text  x="1186.90" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,653,457 samples, 0.06%)</title><rect x="56.5" y="149" width="0.7" height="15.0" fill="rgb(248,215,53)" rx="2" ry="2" />
<text  x="59.49" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1221" width="0.4" height="15.0" fill="rgb(217,78,50)" rx="2" ry="2" />
<text  x="1181.27" y="1231.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo_ros2_control::GazeboSystemPrivate*, std::default_delete&lt;gazebo_ros2_control::GazeboSystemPrivate&gt; &gt; (4,069,602 samples, 0.02%)</title><rect x="519.2" y="805" width="0.2" height="15.0" fill="rgb(221,182,52)" rx="2" ry="2" />
<text  x="522.22" y="815.5" ></text>
</g>
<g >
<title>std::map&lt;gazebo::sensors::SensorNoiseType, std::shared_ptr&lt;gazebo::sensors::Noise&gt;, std::less&lt;gazebo::sensors::SensorNoiseType&gt;, std::allocator&lt;std::pair&lt;gazebo::sensors::SensorNoiseType const, std::shared_ptr&lt;gazebo::sensors::Noise&gt; &gt; &gt; &gt;::find (3,282,249 samples, 0.01%)</title><rect x="46.7" y="1157" width="0.2" height="15.0" fill="rgb(214,81,19)" rx="2" ry="2" />
<text  x="49.73" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,647,282 samples, 0.02%)</title><rect x="691.3" y="805" width="0.3" height="15.0" fill="rgb(213,151,10)" rx="2" ry="2" />
<text  x="694.31" y="815.5" ></text>
</g>
<g >
<title>gazebo::common::Time::operator&gt;= (5,286,243 samples, 0.02%)</title><rect x="894.4" y="1237" width="0.3" height="15.0" fill="rgb(237,196,32)" rx="2" ry="2" />
<text  x="897.42" y="1247.5" ></text>
</g>
<g >
<title>google::protobuf::internal::RepeatedPtrFieldBase::Destroy&lt;google::protobuf::RepeatedPtrField&lt;gazebo::msgs::Pose&gt;::TypeHandler&gt; (22,510,268 samples, 0.09%)</title><rect x="765.8" y="853" width="1.1" height="15.0" fill="rgb(208,162,3)" rx="2" ry="2" />
<text  x="768.84" y="863.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*&gt; (12,627,182 samples, 0.05%)</title><rect x="816.8" y="965" width="0.6" height="15.0" fill="rgb(235,209,53)" rx="2" ry="2" />
<text  x="819.83" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,646 samples, 0.01%)</title><rect x="724.0" y="869" width="0.1" height="15.0" fill="rgb(205,184,8)" rx="2" ry="2" />
<text  x="727.02" y="879.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, gazebo::sensors::RaySensorPrivate*, std::default_delete&lt;gazebo::sensors::RaySensorPrivate&gt; &gt; (3,941,521 samples, 0.02%)</title><rect x="46.2" y="1077" width="0.1" height="15.0" fill="rgb(254,126,38)" rx="2" ry="2" />
<text  x="49.15" y="1087.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::ServiceBase&gt;::shared_ptr (7,011,260 samples, 0.03%)</title><rect x="818.4" y="1077" width="0.3" height="15.0" fill="rgb(250,219,29)" rx="2" ry="2" />
<text  x="821.39" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,308,143 samples, 0.02%)</title><rect x="846.2" y="885" width="0.2" height="15.0" fill="rgb(246,183,49)" rx="2" ry="2" />
<text  x="849.22" y="895.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (3,849,942 samples, 0.02%)</title><rect x="540.1" y="773" width="0.2" height="15.0" fill="rgb(233,37,19)" rx="2" ry="2" />
<text  x="543.10" y="783.5" ></text>
</g>
<g >
<title>__libc_sendmsg (369,968,685 samples, 1.46%)</title><rect x="872.0" y="1301" width="17.2" height="15.0" fill="rgb(207,227,13)" rx="2" ry="2" />
<text  x="875.01" y="1311.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::Link&gt;::~shared_ptr (3,924,570 samples, 0.02%)</title><rect x="590.9" y="757" width="0.2" height="15.0" fill="rgb(221,51,32)" rx="2" ry="2" />
<text  x="593.91" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,334,647 samples, 0.01%)</title><rect x="150.1" y="1125" width="0.1" height="15.0" fill="rgb(247,67,32)" rx="2" ry="2" />
<text  x="153.06" y="1135.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, double*&gt; (3,673,663 samples, 0.01%)</title><rect x="512.9" y="789" width="0.1" height="15.0" fill="rgb(212,134,28)" rx="2" ry="2" />
<text  x="515.88" y="799.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;rclcpp::node_interfaces::NodeBaseInterface&gt;::lock (7,281,247 samples, 0.03%)</title><rect x="791.2" y="981" width="0.3" height="15.0" fill="rgb(243,77,50)" rx="2" ry="2" />
<text  x="794.19" y="991.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,226,698 samples, 0.03%)</title><rect x="616.0" y="917" width="0.4" height="15.0" fill="rgb(218,99,47)" rx="2" ry="2" />
<text  x="619.00" y="927.5" ></text>
</g>
<g >
<title>[libcontroller_manager.so] (2,288,267 samples, 0.01%)</title><rect x="850.1" y="1141" width="0.1" height="15.0" fill="rgb(232,25,8)" rx="2" ry="2" />
<text  x="853.14" y="1151.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_service_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; &gt;::emplace_back&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; (6,390,161 samples, 0.03%)</title><rect x="196.4" y="997" width="0.3" height="15.0" fill="rgb(238,1,47)" rx="2" ry="2" />
<text  x="199.43" y="1007.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::SetWorldPoseDefault (4,116,544 samples, 0.02%)</title><rect x="774.8" y="789" width="0.2" height="15.0" fill="rgb(235,113,12)" rx="2" ry="2" />
<text  x="777.81" y="799.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (3,959,413 samples, 0.02%)</title><rect x="1178.7" y="1301" width="0.2" height="15.0" fill="rgb(250,199,38)" rx="2" ry="2" />
<text  x="1181.68" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,847,722 samples, 0.03%)</title><rect x="931.5" y="1205" width="0.4" height="15.0" fill="rgb(226,7,9)" rx="2" ry="2" />
<text  x="934.53" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,663,952 samples, 0.03%)</title><rect x="1178.3" y="1061" width="0.4" height="15.0" fill="rgb(222,147,31)" rx="2" ry="2" />
<text  x="1181.27" y="1071.5" ></text>
</g>
<g >
<title>Opcode::OBBCollider::~OBBCollider (47,584,213 samples, 0.19%)</title><rect x="117.8" y="1285" width="2.2" height="15.0" fill="rgb(239,3,41)" rx="2" ry="2" />
<text  x="120.77" y="1295.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::set_id (2,333,585 samples, 0.01%)</title><rect x="750.3" y="1061" width="0.1" height="15.0" fill="rgb(217,11,40)" rx="2" ry="2" />
<text  x="753.31" y="1071.5" ></text>
</g>
<g >
<title>std::remove&lt;__gnu_cxx::__normal_iterator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;*, std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt; &gt;, decltype (5,350,596 samples, 0.02%)</title><rect x="816.3" y="1029" width="0.2" height="15.0" fill="rgb(240,126,8)" rx="2" ry="2" />
<text  x="819.30" y="1039.5" ></text>
</g>
<g >
<title>gazebo::transport::Publisher::HasConnections (7,807,129 samples, 0.03%)</title><rect x="239.5" y="869" width="0.4" height="15.0" fill="rgb(233,159,51)" rx="2" ry="2" />
<text  x="242.50" y="879.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::ServiceBase&gt;::shared_ptr (8,332,306 samples, 0.03%)</title><rect x="810.6" y="981" width="0.4" height="15.0" fill="rgb(223,198,27)" rx="2" ry="2" />
<text  x="813.61" y="991.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (25,544,252 samples, 0.10%)</title><rect x="143.9" y="1253" width="1.2" height="15.0" fill="rgb(234,135,41)" rx="2" ry="2" />
<text  x="146.86" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (2,265,552 samples, 0.01%)</title><rect x="904.8" y="1237" width="0.1" height="15.0" fill="rgb(251,40,36)" rx="2" ry="2" />
<text  x="907.76" y="1247.5" ></text>
</g>
<g >
<title>gazebo_plugins::GazeboRosVacuumGripperPrivate::OnUpdate (746,713,461 samples, 2.95%)</title><rect x="644.4" y="917" width="34.8" height="15.0" fill="rgb(233,35,46)" rx="2" ry="2" />
<text  x="647.43" y="927.5" >ga..</text>
</g>
<g >
<title>__gthread_mutex_trylock (6,032,103 samples, 0.02%)</title><rect x="831.1" y="1125" width="0.3" height="15.0" fill="rgb(228,117,20)" rx="2" ry="2" />
<text  x="834.09" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::list&lt;boost::shared_ptr&lt;google::protobuf::Message&gt;, std::allocator&lt;boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt; &gt; &gt;::empty (3,962,572 samples, 0.02%)</title><rect x="76.1" y="1141" width="0.2" height="15.0" fill="rgb(215,78,45)" rx="2" ry="2" />
<text  x="79.10" y="1151.5" ></text>
</g>
<g >
<title>dxGeom::recomputePosr (26,822,136 samples, 0.11%)</title><rect x="241.6" y="949" width="1.3" height="15.0" fill="rgb(224,100,54)" rx="2" ry="2" />
<text  x="244.64" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, std::unique_ptr&lt;gazebo::event::EventT&lt;void  (3,986,135 samples, 0.02%)</title><rect x="730.2" y="997" width="0.2" height="15.0" fill="rgb(249,190,35)" rx="2" ry="2" />
<text  x="733.17" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,766,416 samples, 0.01%)</title><rect x="856.3" y="965" width="0.1" height="15.0" fill="rgb(209,1,36)" rx="2" ry="2" />
<text  x="859.26" y="975.5" ></text>
</g>
<g >
<title>boost::detail::thread_data&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf0&lt;void, gazebo::sensors::SensorManager::SensorContainer&gt;, boost::_bi::list1&lt;boost::_bi::value&lt;gazebo::sensors::SensorManager::SensorContainer*&gt; &gt; &gt; &gt;::run (657,730,845 samples, 2.60%)</title><rect x="17.9" y="1285" width="30.7" height="15.0" fill="rgb(252,120,54)" rx="2" ry="2" />
<text  x="20.95" y="1295.5" >bo..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,368,669 samples, 0.03%)</title><rect x="833.6" y="949" width="0.3" height="15.0" fill="rgb(246,28,34)" rx="2" ry="2" />
<text  x="836.60" y="959.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, boost::shared_ptr&lt;google::protobuf::Message&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt; &gt;::lower_bound (6,283,738 samples, 0.02%)</title><rect x="215.2" y="965" width="0.3" height="15.0" fill="rgb(205,211,25)" rx="2" ry="2" />
<text  x="218.21" y="975.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, gazebo::physics::InertialPrivate*, std::default_delete&lt;gazebo::physics::InertialPrivate&gt; &gt; (2,189,005 samples, 0.01%)</title><rect x="555.7" y="693" width="0.1" height="15.0" fill="rgb(216,197,18)" rx="2" ry="2" />
<text  x="558.66" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,363,069 samples, 0.03%)</title><rect x="40.1" y="1045" width="0.3" height="15.0" fill="rgb(237,88,5)" rx="2" ry="2" />
<text  x="43.09" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,596,349 samples, 0.01%)</title><rect x="220.3" y="757" width="0.2" height="15.0" fill="rgb(224,161,25)" rx="2" ry="2" />
<text  x="223.31" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; &gt;::emplace_back&lt;boost::shared_ptr&lt;gazebo::physics::Link&gt; &gt; (4,157,420 samples, 0.02%)</title><rect x="587.7" y="709" width="0.2" height="15.0" fill="rgb(222,6,45)" rx="2" ry="2" />
<text  x="590.67" y="719.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::find_timer_ptrs_if&lt;rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::collect_entities (6,912,390 samples, 0.03%)</title><rect x="198.3" y="1061" width="0.3" height="15.0" fill="rgb(248,52,2)" rx="2" ry="2" />
<text  x="201.26" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (218,199,797 samples, 0.86%)</title><rect x="568.4" y="741" width="10.1" height="15.0" fill="rgb(248,187,29)" rx="2" ry="2" />
<text  x="571.38" y="751.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEMultiRayShape::UpdateCallback (61,580,894 samples, 0.24%)</title><rect x="35.3" y="1061" width="2.8" height="15.0" fill="rgb(211,217,13)" rx="2" ry="2" />
<text  x="38.26" y="1071.5" ></text>
</g>
<g >
<title>gazebo::msgs::Pose::~Pose (18,294,950 samples, 0.07%)</title><rect x="766.0" y="805" width="0.9" height="15.0" fill="rgb(206,200,10)" rx="2" ry="2" />
<text  x="769.03" y="815.5" ></text>
</g>
<g >
<title>dMultiplyHelper0_331 (4,381,989 samples, 0.02%)</title><rect x="266.8" y="949" width="0.2" height="15.0" fill="rgb(235,220,38)" rx="2" ry="2" />
<text  x="269.79" y="959.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;hardware_interface::ResourceStorage, std::default_delete&lt;hardware_interface::ResourceStorage&gt; &gt;::get (6,240,700 samples, 0.02%)</title><rect x="520.1" y="869" width="0.2" height="15.0" fill="rgb(241,59,20)" rx="2" ry="2" />
<text  x="523.06" y="879.5" ></text>
</g>
<g >
<title>std::_List_iterator&lt;boost::shared_ptr&lt;gazebo::transport::Connection&gt; &gt;::operator++ (2,286,334 samples, 0.01%)</title><rect x="87.6" y="1189" width="0.2" height="15.0" fill="rgb(226,104,9)" rx="2" ry="2" />
<text  x="90.64" y="1199.5" ></text>
</g>
<g >
<title>[librclcpp.so] (7,017,048 samples, 0.03%)</title><rect x="793.5" y="1077" width="0.3" height="15.0" fill="rgb(249,48,6)" rx="2" ry="2" />
<text  x="796.52" y="1087.5" ></text>
</g>
<g >
<title>gazebo::transport::CallbackHelperT&lt;gazebo::msgs::LinkData&gt;::HandleMessage (36,991,616 samples, 0.15%)</title><rect x="74.0" y="1157" width="1.8" height="15.0" fill="rgb(227,10,38)" rx="2" ry="2" />
<text  x="77.03" y="1167.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;double const*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;double*, std::vector&lt;double, std::allocator&lt;double&gt; &gt; &gt; &gt; (2,740,093 samples, 0.01%)</title><rect x="840.2" y="1093" width="0.1" height="15.0" fill="rgb(251,186,2)" rx="2" ry="2" />
<text  x="843.20" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (191,276,728 samples, 0.75%)</title><rect x="908.8" y="1285" width="8.9" height="15.0" fill="rgb(215,122,32)" rx="2" ry="2" />
<text  x="911.83" y="1295.5" ></text>
</g>
<g >
<title>std::static_pointer_cast&lt;rosgraph_msgs::msg::Clock_&lt;std::allocator&lt;void&gt; &gt;, void&gt; (9,378,217 samples, 0.04%)</title><rect x="799.6" y="981" width="0.4" height="15.0" fill="rgb(248,205,34)" rx="2" ry="2" />
<text  x="802.60" y="991.5" ></text>
</g>
<g >
<title>boost::function1&lt;void, unsigned int&gt;::function1&lt;gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Publisher, unsigned int&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Publisher*&gt;, boost::arg&lt;1&gt; &gt; &gt;, gazebo::transport::Publisher&gt; &gt; (7,002,136 samples, 0.03%)</title><rect x="78.5" y="1125" width="0.3" height="15.0" fill="rgb(244,16,24)" rx="2" ry="2" />
<text  x="81.52" y="1135.5" ></text>
</g>
<g >
<title>zmq_poll (17,715,522 samples, 0.07%)</title><rect x="1177.2" y="1301" width="0.8" height="15.0" fill="rgb(234,43,1)" rx="2" ry="2" />
<text  x="1180.19" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,243,735 samples, 0.01%)</title><rect x="266.8" y="805" width="0.1" height="15.0" fill="rgb(235,67,40)" rx="2" ry="2" />
<text  x="269.79" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,803,424 samples, 0.09%)</title><rect x="462.1" y="885" width="1.1" height="15.0" fill="rgb(217,126,16)" rx="2" ry="2" />
<text  x="465.13" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,368,669 samples, 0.03%)</title><rect x="833.6" y="997" width="0.3" height="15.0" fill="rgb(234,60,9)" rx="2" ry="2" />
<text  x="836.60" y="1007.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, double const*, double*&gt; (2,241,233 samples, 0.01%)</title><rect x="840.7" y="997" width="0.1" height="15.0" fill="rgb(248,80,42)" rx="2" ry="2" />
<text  x="843.68" y="1007.5" ></text>
</g>
<g >
<title>rcutils_fault_injection_get_count (3,219,745 samples, 0.01%)</title><rect x="852.5" y="1109" width="0.2" height="15.0" fill="rgb(246,196,26)" rx="2" ry="2" />
<text  x="855.51" y="1119.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (8,069,732 samples, 0.03%)</title><rect x="794.2" y="885" width="0.3" height="15.0" fill="rgb(244,193,24)" rx="2" ry="2" />
<text  x="797.16" y="895.5" ></text>
</g>
<g >
<title>gazebo::physics::Link::MoveFrame (9,924,703 samples, 0.04%)</title><rect x="776.0" y="821" width="0.4" height="15.0" fill="rgb(225,217,30)" rx="2" ry="2" />
<text  x="778.99" y="831.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (81,162,592 samples, 0.32%)</title><rect x="1185.5" y="1285" width="3.8" height="15.0" fill="rgb(215,61,40)" rx="2" ry="2" />
<text  x="1188.51" y="1295.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (21,253,786 samples, 0.08%)</title><rect x="187.3" y="1029" width="1.0" height="15.0" fill="rgb(228,127,5)" rx="2" ry="2" />
<text  x="190.28" y="1039.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (30,060,062 samples, 0.12%)</title><rect x="479.7" y="965" width="1.4" height="15.0" fill="rgb(235,58,29)" rx="2" ry="2" />
<text  x="482.68" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,157,582 samples, 0.01%)</title><rect x="458.0" y="853" width="0.1" height="15.0" fill="rgb(237,62,3)" rx="2" ry="2" />
<text  x="460.96" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,195,446 samples, 0.01%)</title><rect x="681.0" y="869" width="0.1" height="15.0" fill="rgb(240,175,32)" rx="2" ry="2" />
<text  x="683.97" y="879.5" ></text>
</g>
<g >
<title>dxSpace::dirty (18,381,649 samples, 0.07%)</title><rect x="442.0" y="917" width="0.9" height="15.0" fill="rgb(223,9,40)" rx="2" ry="2" />
<text  x="445.01" y="927.5" ></text>
</g>
<g >
<title>dCalcVectorCross3 (2,211,726 samples, 0.01%)</title><rect x="252.4" y="917" width="0.1" height="15.0" fill="rgb(245,207,1)" rx="2" ry="2" />
<text  x="255.37" y="927.5" ></text>
</g>
<g >
<title>[libddsc.so.0.7.0] (198,658,626 samples, 0.78%)</title><rect x="88.5" y="1301" width="9.3" height="15.0" fill="rgb(251,87,24)" rx="2" ry="2" />
<text  x="91.55" y="1311.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::CallbackGroup,  (7,029,780 samples, 0.03%)</title><rect x="800.4" y="1029" width="0.3" height="15.0" fill="rgb(215,64,2)" rx="2" ry="2" />
<text  x="803.41" y="1039.5" ></text>
</g>
<g >
<title>gazebo::msgs::PosesStamped::~PosesStamped (35,163,670 samples, 0.14%)</title><rect x="162.4" y="1285" width="1.6" height="15.0" fill="rgb(222,77,23)" rx="2" ry="2" />
<text  x="165.38" y="1295.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;rclcpp::Waitable&gt;::~shared_ptr (8,556,546 samples, 0.03%)</title><rect x="812.2" y="997" width="0.4" height="15.0" fill="rgb(234,89,0)" rx="2" ry="2" />
<text  x="815.18" y="1007.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::msgs::LinkData const&gt;::operator= (17,782,709 samples, 0.07%)</title><rect x="74.2" y="1045" width="0.8" height="15.0" fill="rgb(240,30,27)" rx="2" ry="2" />
<text  x="77.22" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,574,391 samples, 0.04%)</title><rect x="666.4" y="805" width="0.5" height="15.0" fill="rgb(235,104,54)" rx="2" ry="2" />
<text  x="669.44" y="815.5" ></text>
</g>
<g >
<title>gen11_irq_handler (2,200,088 samples, 0.01%)</title><rect x="427.1" y="805" width="0.1" height="15.0" fill="rgb(249,188,4)" rx="2" ry="2" />
<text  x="430.08" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26,223,569 samples, 0.10%)</title><rect x="11.3" y="1269" width="1.2" height="15.0" fill="rgb(253,16,24)" rx="2" ry="2" />
<text  x="14.32" y="1279.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (82,914,669 samples, 0.33%)</title><rect x="789.7" y="1141" width="3.8" height="15.0" fill="rgb(218,137,5)" rx="2" ry="2" />
<text  x="792.65" y="1151.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform (92,542,284 samples, 0.37%)</title><rect x="54.7" y="965" width="4.3" height="15.0" fill="rgb(248,219,49)" rx="2" ry="2" />
<text  x="57.65" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,865,199 samples, 0.01%)</title><rect x="32.8" y="949" width="0.2" height="15.0" fill="rgb(224,81,48)" rx="2" ry="2" />
<text  x="35.84" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,636,810 samples, 0.03%)</title><rect x="615.3" y="901" width="0.3" height="15.0" fill="rgb(211,87,18)" rx="2" ry="2" />
<text  x="618.27" y="911.5" ></text>
</g>
<g >
<title>ode::quickstep::dot6 (8,414,857 samples, 0.03%)</title><rect x="747.7" y="933" width="0.4" height="15.0" fill="rgb(208,157,48)" rx="2" ry="2" />
<text  x="750.74" y="943.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (4,200,934 samples, 0.02%)</title><rect x="556.9" y="709" width="0.2" height="15.0" fill="rgb(218,173,13)" rx="2" ry="2" />
<text  x="559.94" y="719.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::IsStatic (6,099,889 samples, 0.02%)</title><rect x="481.7" y="1013" width="0.3" height="15.0" fill="rgb(246,221,45)" rx="2" ry="2" />
<text  x="484.72" y="1023.5" ></text>
</g>
<g >
<title>gazebo::physics::ODEPhysics::CollisionCallback (61,742,690 samples, 0.24%)</title><rect x="235.7" y="917" width="2.9" height="15.0" fill="rgb(228,65,9)" rx="2" ry="2" />
<text  x="238.68" y="927.5" ></text>
</g>
<g >
<title>sCylinderBoxData::_cldTestEdgeCircleAxis (10,289,966 samples, 0.04%)</title><rect x="252.2" y="949" width="0.5" height="15.0" fill="rgb(245,183,2)" rx="2" ry="2" />
<text  x="255.18" y="959.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (554,651,533 samples, 2.19%)</title><rect x="793.5" y="1173" width="25.8" height="15.0" fill="rgb(212,80,39)" rx="2" ry="2" />
<text  x="796.52" y="1183.5" >s..</text>
</g>
<g >
<title>recv (14,148,842 samples, 0.06%)</title><rect x="1178.0" y="1317" width="0.7" height="15.0" fill="rgb(216,217,53)" rx="2" ry="2" />
<text  x="1181.02" y="1327.5" ></text>
</g>
<g >
<title>rclcpp::memory_strategies::allocator_memory_strategy::AllocatorMemoryStrategy&lt;std::allocator&lt;void&gt; &gt;::get_next_timer (48,917,587 samples, 0.19%)</title><rect x="189.0" y="1077" width="2.3" height="15.0" fill="rgb(223,53,52)" rx="2" ry="2" />
<text  x="191.98" y="1087.5" ></text>
</g>
<g >
<title>ignition::math::v6::Pose3&lt;double&gt;::Pose3 (11,594,897 samples, 0.05%)</title><rect x="556.7" y="741" width="0.5" height="15.0" fill="rgb(253,172,13)" rx="2" ry="2" />
<text  x="559.69" y="751.5" ></text>
</g>
<g >
<title>controller_manager::ControllerManager::write (10,092,690 samples, 0.04%)</title><rect x="615.9" y="933" width="0.5" height="15.0" fill="rgb(222,222,35)" rx="2" ry="2" />
<text  x="618.92" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (2,283,546 samples, 0.01%)</title><rect x="521.6" y="869" width="0.1" height="15.0" fill="rgb(226,185,20)" rx="2" ry="2" />
<text  x="524.56" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (198,471,849 samples, 0.78%)</title><rect x="166.5" y="1189" width="9.2" height="15.0" fill="rgb(224,188,13)" rx="2" ry="2" />
<text  x="169.46" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,434,575 samples, 0.02%)</title><rect x="54.0" y="1093" width="0.3" height="15.0" fill="rgb(225,37,23)" rx="2" ry="2" />
<text  x="57.03" y="1103.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26,619,222 samples, 0.11%)</title><rect x="210.2" y="1013" width="1.2" height="15.0" fill="rgb(234,9,17)" rx="2" ry="2" />
<text  x="213.19" y="1023.5" ></text>
</g>
<g >
<title>ode::quickstep::sum6 (12,590,054 samples, 0.05%)</title><rect x="748.1" y="933" width="0.6" height="15.0" fill="rgb(254,96,25)" rx="2" ry="2" />
<text  x="751.13" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,338,911 samples, 0.02%)</title><rect x="690.7" y="869" width="0.2" height="15.0" fill="rgb(208,95,40)" rx="2" ry="2" />
<text  x="693.73" y="879.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (61,416,541 samples, 0.24%)</title><rect x="929.0" y="1285" width="2.9" height="15.0" fill="rgb(253,82,41)" rx="2" ry="2" />
<text  x="932.04" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (44,344,149 samples, 0.18%)</title><rect x="576.5" y="597" width="2.0" height="15.0" fill="rgb(217,67,41)" rx="2" ry="2" />
<text  x="579.48" y="607.5" ></text>
</g>
<g >
<title>ddsrt_avl_is_empty (8,220,264 samples, 0.03%)</title><rect x="158.6" y="1285" width="0.4" height="15.0" fill="rgb(215,194,25)" rx="2" ry="2" />
<text  x="161.61" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,628,552 samples, 0.03%)</title><rect x="138.3" y="1221" width="0.3" height="15.0" fill="rgb(220,179,18)" rx="2" ry="2" />
<text  x="141.29" y="1231.5" ></text>
</g>
<g >
<title>rclcpp::Executor::wait_for_work (264,585,149 samples, 1.04%)</title><rect x="191.3" y="1093" width="12.3" height="15.0" fill="rgb(253,152,10)" rx="2" ry="2" />
<text  x="194.26" y="1103.5" ></text>
</g>
<g >
<title>gazebo::physics::ContactManager::PublishContacts (4,013,105 samples, 0.02%)</title><rect x="452.5" y="1061" width="0.2" height="15.0" fill="rgb(246,227,10)" rx="2" ry="2" />
<text  x="455.54" y="1071.5" ></text>
</g>
<g >
<title>operator new (4,724,974 samples, 0.02%)</title><rect x="825.7" y="1045" width="0.3" height="15.0" fill="rgb(253,3,33)" rx="2" ry="2" />
<text  x="828.74" y="1055.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const*, std::vector&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt; &gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;*, boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; (8,433,096 samples, 0.03%)</title><rect x="688.0" y="869" width="0.4" height="15.0" fill="rgb(236,31,25)" rx="2" ry="2" />
<text  x="691.04" y="879.5" ></text>
</g>
<g >
<title>malloc_consolidate (86,853,163 samples, 0.34%)</title><rect x="1165.1" y="1301" width="4.0" height="15.0" fill="rgb(225,199,52)" rx="2" ry="2" />
<text  x="1168.10" y="1311.5" ></text>
</g>
<g >
<title>entidx_lookup_proxy_reader_guid (8,425,435 samples, 0.03%)</title><rect x="1159.1" y="1301" width="0.4" height="15.0" fill="rgb(212,77,42)" rx="2" ry="2" />
<text  x="1162.11" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,434,575 samples, 0.02%)</title><rect x="54.0" y="1125" width="0.3" height="15.0" fill="rgb(244,83,1)" rx="2" ry="2" />
<text  x="57.03" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,152,963 samples, 0.06%)</title><rect x="116.7" y="1077" width="0.7" height="15.0" fill="rgb(238,214,29)" rx="2" ry="2" />
<text  x="119.71" y="1087.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (6,041,754 samples, 0.02%)</title><rect x="495.1" y="837" width="0.2" height="15.0" fill="rgb(209,38,39)" rx="2" ry="2" />
<text  x="498.05" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, boost::shared_ptr&lt;google::protobuf::Message&gt; &gt; &gt;::_M_valptr (4,203,405 samples, 0.02%)</title><rect x="215.3" y="901" width="0.2" height="15.0" fill="rgb(220,185,38)" rx="2" ry="2" />
<text  x="218.31" y="911.5" ></text>
</g>
<g >
<title>control_msgs::msg::InterfaceValue_&lt;std::allocator&lt;void&gt; &gt;::~InterfaceValue_ (5,053,957 samples, 0.02%)</title><rect x="828.6" y="1045" width="0.3" height="15.0" fill="rgb(217,52,32)" rx="2" ry="2" />
<text  x="831.63" y="1055.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;*, boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; (4,431,080 samples, 0.02%)</title><rect x="692.1" y="885" width="0.2" height="15.0" fill="rgb(233,38,19)" rx="2" ry="2" />
<text  x="695.14" y="895.5" ></text>
</g>
<g >
<title>gazebo::msgs::Time::~Time (5,496,168 samples, 0.02%)</title><rect x="772.2" y="1013" width="0.3" height="15.0" fill="rgb(227,5,19)" rx="2" ry="2" />
<text  x="775.21" y="1023.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;trajectory_msgs::msg::JointTrajectory_&lt;std::allocator&lt;void&gt; &gt;,  (5,455,126 samples, 0.02%)</title><rect x="511.7" y="853" width="0.2" height="15.0" fill="rgb(216,198,26)" rx="2" ry="2" />
<text  x="514.68" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,087,283 samples, 0.03%)</title><rect x="578.2" y="549" width="0.3" height="15.0" fill="rgb(225,192,24)" rx="2" ry="2" />
<text  x="581.17" y="559.5" ></text>
</g>
<g >
<title>__ieee754_atan2_fma (36,755,000 samples, 0.15%)</title><rect x="868.4" y="1301" width="1.7" height="15.0" fill="rgb(239,198,9)" rx="2" ry="2" />
<text  x="871.36" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,286,132 samples, 0.02%)</title><rect x="927.7" y="1253" width="0.2" height="15.0" fill="rgb(208,134,3)" rx="2" ry="2" />
<text  x="930.67" y="1263.5" ></text>
</g>
<g >
<title>rclcpp::Time::nanoseconds (7,358,731 samples, 0.03%)</title><rect x="510.8" y="853" width="0.4" height="15.0" fill="rgb(237,101,26)" rx="2" ry="2" />
<text  x="513.82" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,812,785 samples, 0.05%)</title><rect x="63.0" y="997" width="0.6" height="15.0" fill="rgb(222,215,27)" rx="2" ry="2" />
<text  x="65.97" y="1007.5" ></text>
</g>
<g >
<title>[[uprobes]] (661,848,871 samples, 2.61%)</title><rect x="532.2" y="821" width="30.9" height="15.0" fill="rgb(244,123,9)" rx="2" ry="2" />
<text  x="535.24" y="831.5" >[[..</text>
</g>
<g >
<title>gazebo::msgs::Quaternion::set_has_x (3,325,405 samples, 0.01%)</title><rect x="28.2" y="1125" width="0.2" height="15.0" fill="rgb(239,11,35)" rx="2" ry="2" />
<text  x="31.21" y="1135.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,368,669 samples, 0.03%)</title><rect x="833.6" y="1109" width="0.3" height="15.0" fill="rgb(251,46,7)" rx="2" ry="2" />
<text  x="836.60" y="1119.5" ></text>
</g>
<g >
<title>ignition::math::v6::clamp&lt;unsigned long&gt; (2,745,270 samples, 0.01%)</title><rect x="777.2" y="757" width="0.1" height="15.0" fill="rgb(229,91,39)" rx="2" ry="2" />
<text  x="780.22" y="767.5" ></text>
</g>
<g >
<title>ignition::math::v6::Quaternion&lt;double&gt;::X (4,087,073 samples, 0.02%)</title><rect x="663.8" y="885" width="0.2" height="15.0" fill="rgb(232,70,27)" rx="2" ry="2" />
<text  x="666.82" y="895.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;gazebo_ros2_control::GazeboRosControlPlugin::Load (368,172,242 samples, 1.45%)</title><rect x="186.9" y="1221" width="17.1" height="15.0" fill="rgb(222,21,10)" rx="2" ry="2" />
<text  x="189.89" y="1231.5" ></text>
</g>
<g >
<title>[libgazebo_physics.so.11.10.1] (10,298,293 samples, 0.04%)</title><rect x="623.9" y="949" width="0.4" height="15.0" fill="rgb(249,217,7)" rx="2" ry="2" />
<text  x="626.85" y="959.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (35,246,178 samples, 0.14%)</title><rect x="633.4" y="885" width="1.7" height="15.0" fill="rgb(221,33,47)" rx="2" ry="2" />
<text  x="636.43" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,415,848 samples, 0.03%)</title><rect x="145.2" y="1237" width="0.3" height="15.0" fill="rgb(207,62,36)" rx="2" ry="2" />
<text  x="148.23" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_service_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_service_t const&gt; &gt; &gt;::push_back (7,561,150 samples, 0.03%)</title><rect x="809.5" y="981" width="0.4" height="15.0" fill="rgb(245,42,42)" rx="2" ry="2" />
<text  x="812.53" y="991.5" ></text>
</g>
<g >
<title>ignition::math::v6::Vector3&lt;double&gt;::operator= (4,026,760 samples, 0.02%)</title><rect x="527.4" y="789" width="0.2" height="15.0" fill="rgb(240,155,27)" rx="2" ry="2" />
<text  x="530.41" y="799.5" ></text>
</g>
<g >
<title>gazebo::msgs::Contacts::Contacts (2,183,638 samples, 0.01%)</title><rect x="212.6" y="1029" width="0.1" height="15.0" fill="rgb(233,9,41)" rx="2" ry="2" />
<text  x="215.56" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (12,379,229 samples, 0.05%)</title><rect x="694.8" y="901" width="0.6" height="15.0" fill="rgb(232,145,0)" rx="2" ry="2" />
<text  x="697.81" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;rclcpp::Waitable,  (9,247,408 samples, 0.04%)</title><rect x="198.6" y="997" width="0.4" height="15.0" fill="rgb(226,10,48)" rx="2" ry="2" />
<text  x="201.58" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,622,062 samples, 0.01%)</title><rect x="156.8" y="1253" width="0.2" height="15.0" fill="rgb(233,59,8)" rx="2" ry="2" />
<text  x="159.84" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (31,056,180 samples, 0.12%)</title><rect x="120.0" y="1269" width="1.4" height="15.0" fill="rgb(215,74,26)" rx="2" ry="2" />
<text  x="122.99" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rcl_subscription_t const&gt;, std::allocator&lt;std::shared_ptr&lt;rcl_subscription_t const&gt; &gt; &gt;::cbegin (6,169,434 samples, 0.02%)</title><rect x="816.5" y="1029" width="0.3" height="15.0" fill="rgb(239,229,43)" rx="2" ry="2" />
<text  x="819.55" y="1039.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::SetWorldPose (511,255,965 samples, 2.02%)</title><rect x="539.1" y="805" width="23.8" height="15.0" fill="rgb(210,96,5)" rx="2" ry="2" />
<text  x="542.07" y="815.5" >g..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,660,286 samples, 0.05%)</title><rect x="1154.4" y="965" width="0.6" height="15.0" fill="rgb(235,31,29)" rx="2" ry="2" />
<text  x="1157.40" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (5,003,063 samples, 0.02%)</title><rect x="804.5" y="965" width="0.2" height="15.0" fill="rgb(218,172,8)" rx="2" ry="2" />
<text  x="807.51" y="975.5" ></text>
</g>
<g >
<title>dCalcVectorDot3 (4,166,231 samples, 0.02%)</title><rect x="274.3" y="901" width="0.2" height="15.0" fill="rgb(215,170,40)" rx="2" ry="2" />
<text  x="277.34" y="911.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,663,455 samples, 0.01%)</title><rect x="836.3" y="981" width="0.1" height="15.0" fill="rgb(241,97,9)" rx="2" ry="2" />
<text  x="839.31" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;unsigned int const, int&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned int const, int&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned int const&amp;&gt;, std::tuple&lt;&gt; &gt; (13,726,977 samples, 0.05%)</title><rect x="85.0" y="1077" width="0.6" height="15.0" fill="rgb(231,145,44)" rx="2" ry="2" />
<text  x="88.00" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt;, boost::shared_ptr&lt;gazebo::physics::Model&gt;, std::_Identity&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::less&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; &gt; &gt;::_M_insert_unique&lt;boost::shared_ptr&lt;gazebo::physics::Model&gt; const&amp;&gt; (50,802,210 samples, 0.20%)</title><rect x="545.0" y="741" width="2.4" height="15.0" fill="rgb(254,104,48)" rx="2" ry="2" />
<text  x="548.01" y="751.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (8,069,732 samples, 0.03%)</title><rect x="794.2" y="933" width="0.3" height="15.0" fill="rgb(247,114,27)" rx="2" ry="2" />
<text  x="797.16" y="943.5" ></text>
</g>
<g >
<title>gazebo::physics::Entity::SetWorldPoseDefault (9,924,703 samples, 0.04%)</title><rect x="776.0" y="789" width="0.4" height="15.0" fill="rgb(219,152,33)" rx="2" ry="2" />
<text  x="778.99" y="799.5" ></text>
</g>
<g >
<title>boost_asio_handler_alloc_helpers::allocate&lt;gazebo::common::details::WeakBinder&lt;boost::_bi::bind_t&lt;void, boost::_mfi::mf1&lt;void, gazebo::transport::Connection, boost::system::error_code const&amp;&gt;, boost::_bi::list2&lt;boost::_bi::value&lt;gazebo::transport::Connection*&gt;, boost::arg&lt;1&gt;  (2,286,334 samples, 0.01%)</title><rect x="54.3" y="933" width="0.1" height="15.0" fill="rgb(239,124,39)" rx="2" ry="2" />
<text  x="57.28" y="943.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;gazebo::physics::InertialPrivate, std::default_delete&lt;gazebo::physics::InertialPrivate&gt; &gt;::operator (6,279,760 samples, 0.02%)</title><rect x="684.3" y="853" width="0.3" height="15.0" fill="rgb(221,104,0)" rx="2" ry="2" />
<text  x="687.28" y="863.5" ></text>
</g>
<g >
<title>sdf::v9::Element::Get&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (18,803,346 samples, 0.07%)</title><rect x="19.5" y="1173" width="0.9" height="15.0" fill="rgb(245,67,38)" rx="2" ry="2" />
<text  x="22.52" y="1183.5" ></text>
</g>
<g >
<title>rclcpp::Duration::nanoseconds (2,170,863 samples, 0.01%)</title><rect x="509.9" y="853" width="0.1" height="15.0" fill="rgb(207,156,14)" rx="2" ry="2" />
<text  x="512.87" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,520,020 samples, 0.01%)</title><rect x="132.2" y="1157" width="0.1" height="15.0" fill="rgb(244,72,41)" rx="2" ry="2" />
<text  x="135.18" y="1167.5" ></text>
</g>
<g >
<title>std::mutex::lock (7,916,740 samples, 0.03%)</title><rect x="469.6" y="933" width="0.4" height="15.0" fill="rgb(228,201,25)" rx="2" ry="2" />
<text  x="472.63" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,227,017 samples, 0.02%)</title><rect x="478.2" y="709" width="0.2" height="15.0" fill="rgb(207,92,7)" rx="2" ry="2" />
<text  x="481.16" y="719.5" ></text>
</g>
<g >
<title>gazebo::physics::Joint::GetChild (3,498,724 samples, 0.01%)</title><rect x="593.8" y="773" width="0.1" height="15.0" fill="rgb(208,10,36)" rx="2" ry="2" />
<text  x="596.78" y="783.5" ></text>
</g>
<g >
<title>swap_callback (22,258,059 samples, 0.09%)</title><rect x="37.1" y="933" width="1.0" height="15.0" fill="rgb(241,49,49)" rx="2" ry="2" />
<text  x="40.10" y="943.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;gazebo::common::UpdateInfo const&amp;&gt; (8,499,948 samples, 0.03%)</title><rect x="729.7" y="981" width="0.4" height="15.0" fill="rgb(254,48,22)" rx="2" ry="2" />
<text  x="732.68" y="991.5" ></text>
</g>
<g >
<title>boost::shared_ptr&lt;gazebo::physics::FrictionPyramid&gt;::shared_ptr (4,947,258 samples, 0.02%)</title><rect x="782.4" y="997" width="0.3" height="15.0" fill="rgb(251,184,15)" rx="2" ry="2" />
<text  x="785.44" y="1007.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,882,600 samples, 0.02%)</title><rect x="666.3" y="757" width="0.1" height="15.0" fill="rgb(214,37,38)" rx="2" ry="2" />
<text  x="669.26" y="767.5" ></text>
</g>
<g >
<title>ignition::math::v6::equal&lt;double&gt; (4,111,290 samples, 0.02%)</title><rect x="557.3" y="709" width="0.2" height="15.0" fill="rgb(226,216,25)" rx="2" ry="2" />
<text  x="560.32" y="719.5" ></text>
</g>
<g >
<title>rclcpp::Executor::execute_subscription (26,065,827 samples, 0.10%)</title><rect x="796.0" y="997" width="1.2" height="15.0" fill="rgb(227,143,28)" rx="2" ry="2" />
<text  x="799.01" y="1007.5" ></text>
</g>
<g >
<title>__tls_get_addr_slow (10,591,451 samples, 0.04%)</title><rect x="161.0" y="1269" width="0.5" height="15.0" fill="rgb(215,196,4)" rx="2" ry="2" />
<text  x="163.99" y="1279.5" ></text>
</g>
<g >
<title>boost::detail::atomic_increment (4,338,718 samples, 0.02%)</title><rect x="688.2" y="757" width="0.2" height="15.0" fill="rgb(206,170,50)" rx="2" ry="2" />
<text  x="691.23" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,403,070 samples, 0.05%)</title><rect x="206.7" y="1061" width="0.6" height="15.0" fill="rgb(215,39,8)" rx="2" ry="2" />
<text  x="209.69" y="1071.5" ></text>
</g>
</g>
</svg>
